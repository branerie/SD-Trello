{"version":3,"sources":["components/Card/index.module.css","pages/Welcome/index.module.css","components/ToggleSwitch/index.module.css","components/HeaderDropdowns/index.module.css","pages/Profile/index.module.css","components/ButtonHideList/index.module.css","components/PageLayout/index.module.css","components/Attachment/index.module.css","pages/Error/index.module.css","pages/ProjectList/index.module.css","components/FilterWrapper/index.module.css","components/CalendarData/index.module.css","components/FilterDueDate/index.module.css","pages/MyTasks/index.module.css","components/EditCardOptions/index.module.css","components/EditTeam/index.module.css","components/SignupForm/index.module.css","components/AddProjectMember/index.module.css","components/ListColor/index.module.css","components/SearchResults/index.module.css","components/TeamMembers/index.module.css","components/ProgressBar/index.module.css","components/AttachmentsLink/index.module.css","pages/GetStarted/index.module.css","components/CreateTeam/index.module.css","components/FormForgotPassword/index.module.css","components/LoginForm/index.module.css","components/ButtonClean/index.module.css","components/AvatarUser/index.module.css","components/ButtonGrey/index.module.css","components/Link/index.module.css","components/Transparent/index.module.css","components/CreateProject/index.module.css","components/LinkTitle/index.module.css","components/ButtonCleanTitle/index.module.css","components/Title/index.module.css","components/ButtonGreyTitle/index.module.css","components/Alert/index.module.css","pages/Inbox/index.module.css","pages/Confirmation/index.module.css","components/Button/index.module.css","components/Aside/index.module.css","components/EditCard/index.module.css","components/FormAddPassword/index.module.css","components/List/index.module.css","pages/Home/index.module.css","components/EditProject/index.module.css","pages/Team/index.module.css","components/MyTasksTask/index.module.css","components/EditList/index.module.css","components/TableDateNavigation/index.module.css","utils/cookie.js","utils/userObject.js","contexts/UserContext.js","contexts/UserProvider.js","App.js","contexts/TeamContext.js","components/ButtonClean/index.js","contexts/SocketProvider.js","components/AvatarUser/index.js","components/ButtonGrey/index.js","components/CreateTeam/index.js","components/Link/index.js","images/logo.svg","images/aside/menu.svg","images/aside/home.svg","images/aside/tasks.svg","images/aside/inbox.svg","images/aside/inbox-bell.svg","images/aside/project-info.svg","contexts/ProjectContext.js","components/ListColor/index.js","components/ButtonHideList/index.js","components/Transparent/index.js","utils/useDetectOutsideClick.js","components/ConfirmationDialog/index.js","components/AddProjectMember/index.js","utils/isUserAdmin.js","components/EditProject/index.js","components/Aside/index.js","components/SearchResults/index.js","images/search.svg","components/SearchField/index.js","components/LinkTitle/index.js","components/ButtonCleanTitle/index.js","components/HeaderDropdowns/TeamDropdown.js","components/CreateProject/index.js","components/HeaderDropdowns/ProjectDropdown.js","components/HeaderDropdowns/ViewDropdown.js","components/HeaderDropdowns/ProfileDropdown.js","components/Header/index.js","components/PageLayout/index.js","components/Title/index.js","images/home-page-pic.svg","components/ButtonGreyTitle/index.js","pages/Home/index.js","images/welcome-page/welcome-page-1.svg","images/welcome-page/welcome-page-2.svg","images/welcome-page/welcome-page-3.svg","images/welcome-page/welcome-page-4.svg","images/welcome-page/welcome-page-5.svg","images/welcome-page/welcome-page-6.svg","images/welcome-page/instagram-icon.svg","images/welcome-page/twitter-icon.svg","images/welcome-page/facebook-icon.svg","utils/authenticate.js","utils/responseGoogle.js","components/Alert/index.js","utils/authenticate-update.js","components/FormAddPassword/index.js","images/welcome-page/google.svg","components/LoginForm/index.js","components/SignupForm/index.js","components/FormForgotPassword/index.js","pages/Welcome/index.js","images/profile-page-pic.svg","images/pen.svg","pages/Profile/index.js","components/TeamMembers/index.js","components/EditTeam/index.js","components/Inbox/useInboxUtils.js","components/Inbox/TeamInvitationInbox.js","components/Inbox/TeamInvitationHistory.js","components/Inbox/TeamInvitationResponse.js","components/Inbox/TaskAssignment.js","components/Inbox/TeamDeleted.js","components/Inbox/ProjectDeleted.js","components/Inbox/TeamInvitationCanceled.js","pages/Inbox/index.js","images/my-tasks/my-tasks.svg","images/edit-card/pic1.svg","images/edit-card/pic12.svg","images/edit-card/pic10.svg","components/ShowAllTaskMembers/index.js","components/MembersList/index.js","components/EditCardOptions/TaskMembers.js","utils/date.js","images/edit-card/pic5.svg","components/EditCardOptions/TaskDueDate.js","components/EditCardOptions/TaskHistory.js","images/edit-card/pic2.svg","components/ProgressBar/index.js","components/EditCardOptions/TaskProgress.js","images/edit-card/pic6.svg","images/edit-card/download.svg","images/edit-card/remove.svg","components/AttachmentList/index.js","components/Attachment/index.js","components/EditCardOptions/TaskAttach.js","components/EditCard/index.js","components/AttachmentsLink/index.js","components/MyTasksTask/index.js","pages/MyTasks/index.js","images/error-page.svg","pages/Error/index.js","images/get-started/pic1.svg","images/get-started/pic2.svg","images/get-started/pic3.svg","images/get-started/pic4.svg","pages/GetStarted/index.js","components/Card/index.js","images/dots.svg","components/List/index.js","images/pic.svg","components/EditList/index.js","utils/useUpdateUserLastTeam.js","pages/ProjectBoard/index.js","components/ResponsiveTextarea/index.js","components/CalendarData/TaskName.js","components/CalendarData/TaskProgress.js","components/CalendarData/TaskDueDate.js","components/CalendarData/AddProjectElement.js","components/CalendarData/AddTask.js","components/CalendarData/AddList.js","components/CalendarData/columnData.js","components/FilterWrapper/index.js","components/FilterMembers/index.js","components/FilterDueDate/index.js","components/ToggleSwitch/index.js","components/FilterProgress/index.js","components/CalendarData/TaskFilters.js","images/project-list/previous-day.svg","images/project-list/next-day.svg","components/TableDateNavigation/index.js","components/CalendarTable/utils.js","components/CalendarTable/index.js","pages/ProjectList/index.js","contexts/ProjectProvider.js","contexts/TeamProvider.js","components/Project/index.js","images/team-page/pic1.svg","pages/Team/index.js","components/Button/index.js","pages/Confirmation/index.js","navigation.js","index.js","components/SearchField/index.module.css","components/CalendarTable/index.module.css","components/Project/index.module.css","components/Inbox/index.module.css","components/ConfirmationDialog/index.module.css","pages/ProjectBoard/index.module.css","components/FilterMembers/index.module.css","components/FilterProgress/index.module.css","components/ShowAllTaskMembers/index.module.css","components/Header/index.module.css","components/MembersList/index.module.css","components/AttachmentList/index.module.css"],"names":["module","exports","getCookie","name","cookieValue","document","cookie","match","userObject","response","username","user","id","_id","teams","inbox","confirmed","newPasswordConfirmed","recentProjects","image","lastTeamSelected","UserContext","React","createContext","logIn","logOut","UserProvider","props","useState","setUser","loading","setLoading","history","useHistory","loggedIn","useCallback","token","fetch","method","headers","then","ok","push","verifyLogin","promise","json","status","useEffect","type","color","height","width","timeout","Provider","value","children","App","TeamContext","setTeams","selectedTeam","setSelectedTeam","getCurrentTeam","currentTeam","setCurrentTeam","getTeams","ButtonClean","title","onClick","className","style","styles","clean","SocketContext","useSocket","useContext","SocketProvider","socket","setSocket","url","window","location","href","includes","userId","teamsId","map","t","teamsStr","JSON","stringify","newSocket","io","query","transports","close","AvatarUser","size","publicId","gravity","crop","round","maxInitials","ButtonGrey","button","CreateTeam","setName","description","setDescription","member","setMember","members","setMembers","showMembers","setShowMembers","allUsers","setAllUsers","teamContext","userContext","inputMembers","event","a","target","length","users","handleSubmit","preventDefault","body","requests","team","arr","hideForm","emit","container","onChange","e","label","placeholder","autocomplete","spellCheck","autoComplete","onBlur","setTimeout","filter","u","toLowerCase","find","element","sort","b","localeCompare","input","addMember","email","m","removeMember","LinkComponent","to","link","ProjectContext","lists","setLists","hiddenLists","setHiddenLists","project","setProject","ListColor","xmlns","viewBox","data-name","transform","d","fill","ButtonHideList","list","projectContext","newHiddenLists","index","indexOf","splice","submit","opacity","Transparent","transparent","useDetectOutsideClick","el","isActive","setIsActive","current","contains","addEventListener","removeEventListener","ConfirmDialog","content","logo","src","alt","buttons","hideConfirm","onConfirm","AddMember","setUsers","context","dropdownRef","useRef","membersRoles","isAdmin","admin","projectId","params","useParams","confirmOpen","setConfirmOpen","confirmTitle","setConfirmTitle","currElement","setCurrElement","updateProjectSocket","teamid","result","destination","console","log","memberRoleId","draggableId","memberAdmin","droppableId","newArr","updatedUser","userRole","deleteMember","memberId","handleAdd","memberRole","onFocus","currentTeamId","projects","p","data","teamUsers","filtered","confirmationObjectFunctions","onDragEnd","provided","droppable","ref","innerRef","droppableProps","dragHandleProps","draggableProps","isUserAdmin","EditProject","isFinished","setIsFinished","setIsAdmin","obj","teamId","form","deleteProject","Aside","asideOn","setAsideOn","listVisibility","setListVisibility","editProjectVisibility","setEditProjectVisibility","editProjectButtonVisibility","setEditProjectButtonVisibility","updateUser","on","off","aside","hamburger","options","menu","Link","home","tasks","settings","projectInfo","bell","SearchResults","searchInput","resultArr","updateSelectedTeam","gotToPage","SearchField","dropdownRefSearch","setSearchInput","showSearchForm","setShowSearchForm","showSearchInput","setShowSearchInput","searchImg","LinkComponentTitle","ButtonCleanTitle","TeamDropdown","teamRef","showTeamForm","setShowTeamForm","isTeamActive","setIsTeamActive","dropdown","teamName","getCurrentProjects","CreateProject","ProjectDropdown","projectRef","showProjectForm","setShowProjectForm","showOldProjects","setShowOldProjects","isProjectActive","setIsProjectActive","currentProjects","undefined","reverse","ViewDropdown","viewRef","isViewActive","setIsViewActive","viewState","setViewState","ProfileDropdown","profileRef","isProfileActive","setIsProfileActive","avatar","profile","Header","isProjectVisibble","setIsProjectVisibble","isViewVisibble","setIsViewVisibble","getData","projectid","goToHomePage","deletedTeamId","goToTeamPage","deletedProjectId","navigation","small","links","font","PageLayout","contentClassName","app","Title","ButtonGreyTitle","Home","showTeamsVisibleForm","setShowTeamsVisibleForm","userName","userTeams","pic1","slice","forEach","authenticate","onSuccess","onFailure","authToken","get","needPassword","wrongPassword","wrongUser","exist","responseGoogle","googleResponse","tokenId","Alert","alert","message","authenticateUpdate","AddPassword","password","setPassword","rePassword","setRePassword","setAlert","fillAlert","setFillAlert","alerts","LoginForm","setEmail","showForm","setShowForm","setUserId","wrongPassAllert","setWrongPassAllert","wrongUserAllert","setWrongUserAllert","onSubmit","goToForgotPassword","goToSignUp","render","renderProps","google","clientId","buttonText","cookiePolicy","SignupForm","setUsername","userExist","setUserExist","validEmailAlert","setValidEmailAlert","validateEmail","test","goToLogin","ForgotPasswordForm","emailInput","passInput","buttonDivLogin","loginButton","textDiv","newToSmM","signUpBtn","buttonDivGoogleLogin","googleLoginBtn","WelcomePage","isVisible","setIsVisible","isVisibleSignUp","setIsVisibleSignUp","isVisibleForgot","setIsVisibleForgot","pic2","lucida","paragraph","picture","pic3","pic4","pic5","pic6","footer","instagram","twitter","facebook","sd2006","ProfilePage","userEmail","setUserEmail","passwordActive","setPaswordActive","userNameActive","setUserNameActive","isEditListActive","setIsEditListActive","userid","changeProfilePicture","cloudinary","createUploadWidget","cloudName","process","uploadPreset","error","newImage","path","info","public_id","oldImage","open","deletePic","focus","disabled","myTeamsContainer","relative","edit","delete","pen","TeamMembers","invited","EditTeam","currTeam","setCurrTeam","setInvited","forInvite","setForInvite","teamAuthor","author","removeInvited","removeInvitation","confirm","deletedTeam","recievers","membersAvatars","isMessage","useInboxUtils","isMoveActive","setIsMoveActive","moveToHistory","deleteMessage","setInboxHistory","inboxHistory","viewTeam","setShowEditTeamForm","TeamInvitationInbox","setInbox","showEditTeamForm","utils","acceptInvitation","accepted","sendFrom","bold","subject","Date","createdAt","toLocaleDateString","inline","isDeleted","TeamInvitationHistory","TeamInvitationResponse","isInbox","TaskAssignment","margin","card","TeamDeleted","ProjectDeleted","TeamInvitationCanceled","InboxPage","weekday","year","month","day","getInbox","inboxUser","ShowAllTaskMembers","deleteMemberOption","deleteMemberObj","updateSocket","cardMembers","setCardMembers","cardId","listId","updatedCard","setCurrCard","MembersList","maxLength","Math","min","split","join","TaskMembers","getTeamUsers","handleSelect","selectedUser","newMember","pics","pic10","select","FORMAT_REGEX","MONTHS","WEEKDAYS","MILLISECONDS_IN_DAY","FORMAT_OPTIONS","date","getUTCFullYear","toString","getMonth","getDate","getDay","getWeekNumber","getDateWithOffset","initialDate","daysOffset","getTime","getMonday","dateDay","monday","setDate","currWeekThursday","week1","getFullYear","week1Thursday","formatDate","formatString","replace","substr","formatType","checkDateEquality","firstDate","secondDate","getYear","compareDates","firstDateYear","secondDateYear","firstDateMonth","secondDateMonth","firstDateDay","secondDateDay","TaskDueDate","dueDate","cardDueDate","setCardDueDate","taskDueDate","setTaskDueDate","setWindowWidth","today","updateDimensions","innerWidth","w","editCardDueDate","customInput","selected","popperPlacement","TaskHistory","taskHistory","i","showDate","currDate","currDay","ProgressBar","progress","bar","backgroundColor","Number","TaskProgress","setTaskHistory","setProgress","currInput","setCurrInput","isInputOk","setIsInputOk","isInputActive","setIsInputActive","isInputVisible","setIsInputVisible","useMemo","changeProgress","max","onKeyDown","keyCode","onKeyUp","AttachmentList","attachments","listRef","attachmentsArr","setAttachmentsArr","att","deteleAttachment","attachment","format","download","getFullDocumentUrl","remove","Attachment","isListVisible","setIsListVisible","TaskAttach","setAttachments","resourceType","original_filename","remaining","EditCard","initialCard","nameRef","descriptionRef","setCard","nameHeight","setNameHeight","deleteCard","onEscPressed","setElement","blur","scrollHeight","text","pic12","AttachmentsLink","attPic","MyTasksTask","inputRef","showEditCard","setShowEditCard","days","ceil","parse","now","task","isNaN","deadline","MyTasksPage","setProjects","selectTeam","taskTeamUpdate","box","header","raw","cards","pic","myTasks","ErrorPage","GetStarted","greeting","Card","showCurrentCard","List","showEditList","cardRef","cardName","setCardName","addCard","deleteList","row","dots","flexend","autoFocus","EditList","isColorActive","setIsColorActive","setColor","background","onChangeComplete","hex","useUpdateUserLastTeam","ProjectBoard","isVisibleEditList","setIsVisibleEditList","listName","setListName","currCard","currList","setCurrList","dndActive","setDndActive","projectUpdate","memberArr","updateUserRecentProjects","oldArr","shift","position","filteredList","previousId","newListsArr","source","reorderedList","updatedProject","oldPosition","sourcePosition","destinationPosition","addList","direction","addlist","ResponsiveTextArea","setValue","toggleActive","areaHeight","setAreaHeight","currValue","setCurrValue","TaskName","editCardName","nameContainer","inputElementName","tableText","UTC","taskprogress","cardProgress","setCardProgress","editCardProgress","cardProgressNum","newCardProgress","newTaskHistory","getBackGroundColor","currColor","taskProgress","taskProgressButtonInput","padding","border","borderRadius","minHeight","textAlign","display","alignItems","justifyContent","showTaskProgress","dueDateField","dueDateFieldInput","closeOnScroll","getElementsByClassName","AddProjectElement","handleInputRemove","elementName","setElementName","AddTask","taskName","setTaskName","AddList","CELL_COLORS","assembleColumnData","startDate","currentDate","cardData","getWeekdayCellHtml","messageColor","progressStyle","daylyProgress","getWeekdayCellData","dataString","numDaysOffset","cellDate","eventInCell","events","isAfterDueDate","isBeforeToday","eventType","eventValue","cellBackgroundColor","isMonday","eventsInWeek","hasEventsInWeek","finishedDate","taskStartDate","getHeaderDateHtml","headerDate","displayedDate","displayedDayOfWeek","fontWeight","fontSize","wrapCellData","cellData","whiteSpace","overflowWrap","accessor","minWidth","Cell","sortable","resizable","maxWidth","sortMethod","getProps","state","rowInfo","column","overflow","FilterWrapper","legendContent","legend","MembersFilter","membersFilter","setMembersFilter","handleFilterClear","buttonStyle","mr","displayValue","option","optionValue","optionDisplay","DueDateFilter","dueBefore","showWeekNumbers","ToggleSwitch","toggleStatus","containerStyle","ProgressFilters","filters","toggleFilter","notStarted","inProgress","done","TaskFilters","setFilter","filterName","currentFilterValue","TableDateNavigation","changeStartDate","setStartDate","navigateButtons","picContainer","buttonPreviousDay","previous","centeredText","next","sortByTask","cardOne","cardTwo","sortByProgress","firstValue","secondValue","sortByDueDate","parsedDateOne","parsedDateTwo","createTableEntry","entryData","assigned","tuesday","wednesday","thursday","friday","saturday","sunday","TableDndApp","tableData","setTableData","newEntries","setNewEntries","columnName","isDescending","sortCriteria","setSortCriteria","isUsed","onListClick","updateTableData","cardsSortMethod","sortingFunc","sortingEvaluation","getCardsSortMethod","histIndex","listNameContainer","listNameText","newTask","addTask","listCards","isCardFilterPassed","isUserFilterPassed","some","isDueDateFilterPassed","applyCardFilters","historyByDate","elementDate","lastHistoryEvent","parseCardHistory","weekdayData","newList","pageContainer","buttoDiv","dayDiff","newStartDate","addListButton","columns","defaultPageSize","pageSize","showPagination","reactTable","getTbodyProps","reactTableBody","getTrGroupProps","reactTableTrGroup","onSortedChange","sortInfo","desc","ProjectList","calendarPageContainer","ProjectProvider","projectName","setProjectName","TeamProvider","setCurrentProjects","teamUpdate","Project","key","TeamPage","Button","ConfirmationPage","success","setSuccess","firstRegistration","confirmToken","cheers","Navigation","Confirmation","exact","Welcome","Profile","Inbox","MyTasks","Team","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b1c94fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2wryr\",\"container\":\"Card_container__17BOn\",\"card-name\":\"Card_card-name__11O5X\",\"button\":\"Card_button__32j4l\",\"attachments\":\"Card_attachments__3Mfta\",\"progress\":\"Card_progress__yqPpD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Welcome_container__3aVyE\",\"top-container\":\"Welcome_top-container__1vctf\",\"top-div-container\":\"Welcome_top-div-container__133MB\",\"header-nav\":\"Welcome_header-nav__2BtFC\",\"logo\":\"Welcome_logo__1nTsR\",\"first-buttons\":\"Welcome_first-buttons__IEy0f\",\"pic1\":\"Welcome_pic1__1Z1ML\",\"pic2\":\"Welcome_pic2__1M0dP\",\"lower-div-container\":\"Welcome_lower-div-container__quYO1\",\"first-text\":\"Welcome_first-text__2o6Zf\",\"login-button\":\"Welcome_login-button__1V7ED\",\"sign-up-button\":\"Welcome_sign-up-button__2r2Rr\",\"headers\":\"Welcome_headers__1dNb9\",\"lucida\":\"Welcome_lucida__3Qt7a\",\"paragraph\":\"Welcome_paragraph__6Wq61\",\"second-sign-up-button\":\"Welcome_second-sign-up-button__2muT8\",\"second-container\":\"Welcome_second-container__1lbTy\",\"first-row\":\"Welcome_first-row__3iLV9\",\"second-text\":\"Welcome_second-text__1VmgO\",\"third-sign-up-button\":\"Welcome_third-sign-up-button__17UKB\",\"pic3-container\":\"Welcome_pic3-container__3SINx\",\"picture\":\"Welcome_picture__1bpYd\",\"second-row\":\"Welcome_second-row__3Y0-V\",\"second-row-colum\":\"Welcome_second-row-colum__jSWZv\",\"second-row-pic\":\"Welcome_second-row-pic__1TOvE\",\"pic4-container\":\"Welcome_pic4-container__3drT2\",\"third-row\":\"Welcome_third-row__1QdoU\",\"pic6-container\":\"Welcome_pic6-container__Yo9ca\",\"content-wrap\":\"Welcome_content-wrap__3n_D0\",\"footer\":\"Welcome_footer__1K8q6\",\"footer-column\":\"Welcome_footer-column__2zlFR\",\"footer-headers\":\"Welcome_footer-headers__1qGHy\",\"footer-info\":\"Welcome_footer-info__2zj49\",\"last-column\":\"Welcome_last-column__2GWXC\",\"social-media-container\":\"Welcome_social-media-container__2PDHU\",\"social-media\":\"Welcome_social-media__3Ai_d\",\"sd2006\":\"Welcome_sd2006__scGtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ToggleSwitch_container__CShBI\",\"switch-container\":\"ToggleSwitch_switch-container__1gCoH\",\"container-active\":\"ToggleSwitch_container-active__1bFp2\",\"state-circle\":\"ToggleSwitch_state-circle__y4Y6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HeaderDropdowns_container__3Rowp\",\"dropdown-container\":\"HeaderDropdowns_dropdown-container__mPKZc\",\"button\":\"HeaderDropdowns_button__1rIB9\",\"title\":\"HeaderDropdowns_title__2Sbjf\",\"dropdown\":\"HeaderDropdowns_dropdown__22dGB\",\"options-container\":\"HeaderDropdowns_options-container__2kw4H\",\"options\":\"HeaderDropdowns_options__1RyqI\",\"last-option\":\"HeaderDropdowns_last-option__118o9\",\"avatar\":\"HeaderDropdowns_avatar__11cvY\",\"profile\":\"HeaderDropdowns_profile__tYFmD\",\"team-media\":\"HeaderDropdowns_team-media__mV30K\",\"project-media\":\"HeaderDropdowns_project-media__2dcVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2_bln\",\"left-container\":\"Profile_left-container__3EzVY\",\"pic-container\":\"Profile_pic-container__1KiVC\",\"pic1\":\"Profile_pic1__27dC-\",\"teams\":\"Profile_teams__1yxA-\",\"navigate-buttons\":\"Profile_navigate-buttons__2VI_l\",\"button-input-div\":\"Profile_button-input-div__2juSF\",\"button-input-div-tasks\":\"Profile_button-input-div-tasks__3bt1d\",\"input-fields-tasks\":\"Profile_input-fields-tasks__2yguI\",\"input-fields-profile\":\"Profile_input-fields-profile__2lWMK\",\"profile-pic\":\"Profile_profile-pic__13Fvm\",\"load-pic-text\":\"Profile_load-pic-text__1JpOJ\",\"pen\":\"Profile_pen__2WQ5-\",\"profile-pic-container\":\"Profile_profile-pic-container__1HQOB\",\"profile-picture\":\"Profile_profile-picture__sAxVT\",\"save-button\":\"Profile_save-button__37oIL\",\"button-div-save\":\"Profile_button-div-save__RvRwF\",\"alerts\":\"Profile_alerts__2SMyv\",\"new-pass-alert\":\"Profile_new-pass-alert__1p0Lx\",\"select-team-container\":\"Profile_select-team-container__3kdM2\",\"teams-home\":\"Profile_teams-home__HOieV\",\"navigate-buttons-teams\":\"Profile_navigate-buttons-teams__2zGFt\",\"edit\":\"Profile_edit__2fq2S\",\"delete\":\"Profile_delete__2ntEi\",\"relative\":\"Profile_relative__1HV1n\",\"menu\":\"Profile_menu__1dfDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"ButtonHideList_submit__W6w8Y\",\"name\":\"ButtonHideList_name__3gpfK\",\"opacity\":\"ButtonHideList_opacity__EL9EW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"PageLayout_app__PbBpH\",\"content\":\"PageLayout_content__be6z1\",\"small\":\"PageLayout_small__1w2o1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attachment\":\"Attachment_attachment__3P_hI\",\"att-picture\":\"Attachment_att-picture__2MIm5\",\"format\":\"Attachment_format__339RG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Error_title__2WZV6\",\"pic1\":\"Error_pic1__3MAMn\",\"text\":\"Error_text__11nr2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectInfoContainer\":\"ProjectList_projectInfoContainer___JPIk\",\"calendar-container\":\"ProjectList_calendar-container__31JJo\",\"layout-container\":\"ProjectList_layout-container__2ri49\",\"table\":\"ProjectList_table__rXHWT\",\"column\":\"ProjectList_column__3b3Zi\",\"columnChild\":\"ProjectList_columnChild__2bTD-\",\"daylyElement\":\"ProjectList_daylyElement__vRfK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterWrapper_container__1fxwd\",\"legend-wrapper\":\"FilterWrapper_legend-wrapper__3aU1b\",\"legend\":\"FilterWrapper_legend__3aeUJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columns\":\"CalendarData_columns__YlRHo\",\"task\":\"CalendarData_task__Hfm29\",\"buttoDiv\":\"CalendarData_buttoDiv__1YQg_\",\"listName\":\"CalendarData_listName__2Z3jJ\",\"container\":\"CalendarData_container__3hblu\",\"nameContainer\":\"CalendarData_nameContainer__sEalr\",\"input\":\"CalendarData_input__3_Vk8\",\"inputList\":\"CalendarData_inputList__3a_h-\",\"addlist\":\"CalendarData_addlist__fycWL\",\"dueDateField\":\"CalendarData_dueDateField__Iwqrz\",\"dueDateFieldInput\":\"CalendarData_dueDateFieldInput__3QyQM\",\"inputElementName\":\"CalendarData_inputElementName__2nDCy\",\"clean\":\"CalendarData_clean__3sQne\",\"taskProgress\":\"CalendarData_taskProgress__2RSpB\",\"taskProgressButton\":\"CalendarData_taskProgressButton__2aH4c\",\"taskProgressButtonInput\":\"CalendarData_taskProgressButtonInput__35Z0M\",\"tableText\":\"CalendarData_tableText__26nZx\",\"select\":\"CalendarData_select__D5plg\",\"pen\":\"CalendarData_pen__2XFiF\",\"membersDiv\":\"CalendarData_membersDiv__NOzbS\",\"membersContainer\":\"CalendarData_membersContainer__2Zp-r\",\"daylyProgress\":\"CalendarData_daylyProgress__Yx7tF\",\"header\":\"CalendarData_header__a1Dan\",\"cursorPointer\":\"CalendarData_cursorPointer__oBigv\",\"filter\":\"CalendarData_filter__28XwX\",\"filters\":\"CalendarData_filters__9tIbf\",\"filters-container\":\"CalendarData_filters-container__Nqs5V\",\"filters-clicked\":\"CalendarData_filters-clicked__mKOwE\",\"list\":\"CalendarData_list__1YGyp\",\"attachments-container\":\"CalendarData_attachments-container__1NuS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter-used\":\"FilterDueDate_filter-used__RByog\",\"filter-blank\":\"FilterDueDate_filter-blank__2o62s\",\"filter-clear\":\"FilterDueDate_filter-clear__2ApBs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyTasks_title__16WZ8\",\"button-container\":\"MyTasks_button-container__Fe820\",\"team-buttons\":\"MyTasks_team-buttons__2oxYw\",\"teams\":\"MyTasks_teams__AfCrV\",\"projects-button\":\"MyTasks_projects-button__1uZ1V\",\"selected\":\"MyTasks_selected__2OE3n\",\"pic\":\"MyTasks_pic__3vqRD\",\"box\":\"MyTasks_box__1CQmR\",\"project\":\"MyTasks_project__1LwAB\",\"project-name\":\"MyTasks_project-name__2Poeb\",\"link\":\"MyTasks_link__VwafM\",\"bold\":\"MyTasks_bold__1Zldg\",\"header\":\"MyTasks_header__3W3dl\",\"raw\":\"MyTasks_raw__1JzAV\",\"container\":\"MyTasks_container__1NsHR\",\"task-container\":\"MyTasks_task-container__2yiWX\",\"list\":\"MyTasks_list__pp8Hc\",\"task\":\"MyTasks_task__3SYix\",\"progress\":\"MyTasks_progress__1gomp\",\"days\":\"MyTasks_days__1ikHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small-buttons\":\"EditCardOptions_small-buttons__2CeGN\",\"pics\":\"EditCardOptions_pics__3Kxqq\",\"date\":\"EditCardOptions_date__3c7Lj\",\"select\":\"EditCardOptions_select__sv7jR\",\"members\":\"EditCardOptions_members__JR4_2\",\"history\":\"EditCardOptions_history__3hfVJ\",\"progress-input\":\"EditCardOptions_progress-input__1vPfr\",\"progress-input-container\":\"EditCardOptions_progress-input-container__2CR5J\",\"progress-bar\":\"EditCardOptions_progress-bar__1sgjP\",\"bad-input\":\"EditCardOptions_bad-input__2eoZ3\",\"progress\":\"EditCardOptions_progress__1FGRJ\",\"att-container\":\"EditCardOptions_att-container__1q6XF\",\"attachment\":\"EditCardOptions_attachment__13Bn4\",\"att-picture\":\"EditCardOptions_att-picture__2Zhgp\",\"format\":\"EditCardOptions_format__2-NOL\",\"remaining\":\"EditCardOptions_remaining__1xdsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditTeam_container__3fkXI\",\"title\":\"EditTeam_title__k2PEs\",\"input-container\":\"EditTeam_input-container__iVY1G\",\"input-container-invite\":\"EditTeam_input-container-invite__OIrUr\",\"input-name\":\"EditTeam_input-name__1XBuS\",\"text-invite\":\"EditTeam_text-invite__1NYQW\",\"input-invite\":\"EditTeam_input-invite__1Fi4b\",\"input-container-descr\":\"EditTeam_input-container-descr__3gk04\",\"text-area-descr\":\"EditTeam_text-area-descr__3P02a\",\"button-div\":\"EditTeam_button-div__jSDt2\",\"create-button\":\"EditTeam_create-button__3KPih\",\"members-div\":\"EditTeam_members-div__bPEH6\",\"invite-input\":\"EditTeam_invite-input__28xnZ\",\"select-for-invite\":\"EditTeam_select-for-invite__3y18R\",\"members\":\"EditTeam_members__gzHuV\",\"user\":\"EditTeam_user__3lVrf\",\"email\":\"EditTeam_email__2lokP\",\"leave-team-btn-div\":\"EditTeam_leave-team-btn-div__2-5Ya\",\"leave-team-btn\":\"EditTeam_leave-team-btn__nMfc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignupForm_container__-3lzw\",\"alerts\":\"SignupForm_alerts__2ia9C\",\"inner-container\":\"SignupForm_inner-container__1O7Hl\",\"logo\":\"SignupForm_logo__Pc9nD\",\"right-side\":\"SignupForm_right-side__3Km6j\",\"title\":\"SignupForm_title__3eX3-\",\"input-container\":\"SignupForm_input-container__sqz8H\",\"sign-up-input\":\"SignupForm_sign-up-input__2Qd4o\",\"pass-instructions\":\"SignupForm_pass-instructions__HxcJy\",\"sign-up-button\":\"SignupForm_sign-up-button__2B6BP\",\"button-div-login\":\"SignupForm_button-div-login__2lBHC\",\"text-div\":\"SignupForm_text-div__27hsT\",\"already-sign-up\":\"SignupForm_already-sign-up__2s11B\",\"sign-up-btn\":\"SignupForm_sign-up-btn__hU6CD\",\"button-div-google-login\":\"SignupForm_button-div-google-login__LooWW\",\"google-login-btn\":\"SignupForm_google-login-btn__N6rbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddProjectMember_container__NbbzZ\",\"form\":\"AddProjectMember_form__FwmbP\",\"current-members\":\"AddProjectMember_current-members__1gByw\",\"admins-container\":\"AddProjectMember_admins-container__wQf5p\",\"admins\":\"AddProjectMember_admins__3SS5y\",\"big-container\":\"AddProjectMember_big-container__2hZVD\",\"members-container\":\"AddProjectMember_members-container__2zjbg\",\"title\":\"AddProjectMember_title__3nvT1\",\"select-for-invite\":\"AddProjectMember_select-for-invite__3nA7j\",\"members\":\"AddProjectMember_members__1Rcch\",\"member-select\":\"AddProjectMember_member-select__MYt8_\",\"add-button\":\"AddProjectMember_add-button__1wIma\",\"draggable\":\"AddProjectMember_draggable__rx6yO\",\"droppable\":\"AddProjectMember_droppable__koyY5\",\"droppable-members\":\"AddProjectMember_droppable-members__3K9kn\",\"input-container\":\"AddProjectMember_input-container__1KvEk\",\"text-invite\":\"AddProjectMember_text-invite__1rErB\",\"invite-input\":\"AddProjectMember_invite-input__2ptJf\",\"members-input\":\"AddProjectMember_members-input__fSTHa\",\"user\":\"AddProjectMember_user__1tu3u\",\"email\":\"AddProjectMember_email__SGl6t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"ListColor_aside__1aP5Q\",\"list\":\"ListColor_list__zFsBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-container\":\"SearchResults_search-container__3HU-h\",\"result\":\"SearchResults_result__4N0uy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members-avatars\":\"TeamMembers_members-avatars__3kcQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"ProgressBar_bar__3PSen\",\"progress\":\"ProgressBar_progress__3wHZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AttachmentsLink_button__20418\",\"attachments\":\"AttachmentsLink_attachments__1Tb_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GetStarted_container__1PEOA\",\"title\":\"GetStarted_title__3dpGQ\",\"paragraph\":\"GetStarted_paragraph__3MZJh\",\"logo-div\":\"GetStarted_logo-div__1Pw8G\",\"logo\":\"GetStarted_logo__3fjSH\",\"pic-div\":\"GetStarted_pic-div__2k-nG\",\"navigate-buttons\":\"GetStarted_navigate-buttons__22HoS\",\"pic\":\"GetStarted_pic__2fjhj\",\"pic3\":\"GetStarted_pic3__1iygO\",\"greeting\":\"GetStarted_greeting__1HPij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateTeam_container__1q8QK\",\"form\":\"CreateTeam_form__1zpyZ\",\"title\":\"CreateTeam_title__2II3u\",\"input-container\":\"CreateTeam_input-container__1fvzs\",\"input-name\":\"CreateTeam_input-name__34I-d\",\"input-container-descr\":\"CreateTeam_input-container-descr__tRATc\",\"input-container-members\":\"CreateTeam_input-container-members__2uLtn\",\"description-text\":\"CreateTeam_description-text__1QUSa\",\"text-area-descr\":\"CreateTeam_text-area-descr__355Nw\",\"members-text\":\"CreateTeam_members-text__4AWwG\",\"input-members\":\"CreateTeam_input-members__UjV18\",\"button-div\":\"CreateTeam_button-div__3_hmI\",\"create-button\":\"CreateTeam_create-button__1_pFc\",\"members-avatars\":\"CreateTeam_members-avatars__RRFUP\",\"invite-input\":\"CreateTeam_invite-input__ldb4b\",\"select-for-invite\":\"CreateTeam_select-for-invite__17Mr3\",\"members-pop-up\":\"CreateTeam_members-pop-up__30TDT\",\"members\":\"CreateTeam_members__1HzOZ\",\"user\":\"CreateTeam_user__JEnPd\",\"email\":\"CreateTeam_email__2al5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormForgotPassword_container__3JhAH\",\"alerts\":\"FormForgotPassword_alerts__1ejfx\",\"inner-container\":\"FormForgotPassword_inner-container__3sFfM\",\"logo\":\"FormForgotPassword_logo__3uQ0a\",\"right-side\":\"FormForgotPassword_right-side__UltC7\",\"title\":\"FormForgotPassword_title__1UMA1\",\"input-container\":\"FormForgotPassword_input-container__2jmKC\",\"emailInput\":\"FormForgotPassword_emailInput__-Kb8j\",\"passInput\":\"FormForgotPassword_passInput__3MXOO\",\"loginButton\":\"FormForgotPassword_loginButton__20M3i\",\"buttonDivLogin\":\"FormForgotPassword_buttonDivLogin__10x7Z\",\"textDiv\":\"FormForgotPassword_textDiv__2ysYn\",\"buttonDivGoogleLogin\":\"FormForgotPassword_buttonDivGoogleLogin__3wNSP\",\"forgotPass\":\"FormForgotPassword_forgotPass__1ExC6\",\"newToSmM\":\"FormForgotPassword_newToSmM__2_UCj\",\"signUpBtn\":\"FormForgotPassword_signUpBtn__3M0dB\",\"googleLoginBtn\":\"FormForgotPassword_googleLoginBtn__12lvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginForm_container__1qca-\",\"alerts\":\"LoginForm_alerts__2PnWl\",\"inner-container\":\"LoginForm_inner-container__yZCm3\",\"logo\":\"LoginForm_logo__1GhUW\",\"right-side\":\"LoginForm_right-side__2SLww\",\"title\":\"LoginForm_title__3lVNO\",\"input-container\":\"LoginForm_input-container__2Imu6\",\"email-input\":\"LoginForm_email-input__21PIN\",\"pass-input\":\"LoginForm_pass-input__p4Hl6\",\"login-button\":\"LoginForm_login-button__1CLXl\",\"button-div-login\":\"LoginForm_button-div-login__3G_hG\",\"text-div\":\"LoginForm_text-div__17yhY\",\"button-div-google-login\":\"LoginForm_button-div-google-login__31VAI\",\"forgot-pass\":\"LoginForm_forgot-pass__374cc\",\"new-to-sm\":\"LoginForm_new-to-sm__1_kQy\",\"sign-up-btn\":\"LoginForm_sign-up-btn__3SRVM\",\"google-login-btn\":\"LoginForm_google-login-btn__t8x_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"ButtonClean_clean__2P6oS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-picture\":\"AvatarUser_profile-picture__3aZpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonGrey_button__BUVkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__3YrNv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"Transparent_transparent__2cdHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateProject_container__1FtDt\",\"title\":\"CreateProject_title__2f6wZ\",\"input-container\":\"CreateProject_input-container__35h6R\",\"input-name\":\"CreateProject_input-name__3ikZb\",\"invite-input\":\"CreateProject_invite-input__3-ioT\",\"select-for-invite\":\"CreateProject_select-for-invite__3Q5C8\",\"members-input\":\"CreateProject_members-input__3-8Sj\",\"input-container-descr\":\"CreateProject_input-container-descr__1RU_G\",\"text-area-descr\":\"CreateProject_text-area-descr__3Zc-q\",\"text-invite\":\"CreateProject_text-invite__2R7br\",\"button-div\":\"CreateProject_button-div__3wYu1\",\"create-button\":\"CreateProject_create-button__xSgsw\",\"members-avatars\":\"CreateProject_members-avatars__1Y1v5\",\"members\":\"CreateProject_members__3mIt9\",\"user\":\"CreateProject_user__iWzuH\",\"email\":\"CreateProject_email__2vvHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkTitle_link__14fDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"ButtonCleanTitle_clean__Hpqbf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__NjNO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonGreyTitle_button__2Ba3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1h5sl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Inbox_title__S6KO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Confirmation_container__3okUe\",\"logo\":\"Confirmation_logo__2c0K4\",\"title\":\"Confirmation_title__2Rkbz\",\"text\":\"Confirmation_text__15X40\",\"cheers\":\"Confirmation_cheers__tQb9G\",\"team\":\"Confirmation_team__2jasi\",\"proceed-button\":\"Confirmation_proceed-button__1PemK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1hvn7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Aside_aside__Jc6hf\",\"container\":\"Aside_container__1LMrp\",\"button\":\"Aside_button__3aSma\",\"logo\":\"Aside_logo__AmHpx\",\"top-left\":\"Aside_top-left__Kd6c_\",\"menu\":\"Aside_menu__1GLYw\",\"top-right\":\"Aside_top-right__16z2J\",\"link\":\"Aside_link__lCI11\",\"bottom-right\":\"Aside_bottom-right__2Fo-_\",\"bell\":\"Aside_bell__3nxlW\",\"hamburger\":\"Aside_hamburger__2Dll8\",\"settings\":\"Aside_settings__2VupA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditCard_container__3wT1d\",\"task-name\":\"EditCard_task-name__2hgOz\",\"name-input\":\"EditCard_name-input__Csb4M\",\"task-body\":\"EditCard_task-body__3Ch0r\",\"text\":\"EditCard_text__sn6Ga\",\"left-side\":\"EditCard_left-side__3kVVi\",\"right-side\":\"EditCard_right-side__1LRzI\",\"task-component\":\"EditCard_task-component__1NIjG\",\"description-input\":\"EditCard_description-input__34Sen\",\"small-buttons\":\"EditCard_small-buttons__3x8f_\",\"pics\":\"EditCard_pics__1D6Wt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormAddPassword_container__2rHYK\",\"alerts\":\"FormAddPassword_alerts__KgyKI\",\"inner-container\":\"FormAddPassword_inner-container__dfVpo\",\"logo\":\"FormAddPassword_logo__23PlN\",\"right-side\":\"FormAddPassword_right-side__14wBO\",\"title\":\"FormAddPassword_title__1LG4S\",\"input-container\":\"FormAddPassword_input-container__1R-rU\",\"pass-instructions\":\"FormAddPassword_pass-instructions__3zntW\",\"pass-input\":\"FormAddPassword_pass-input__2FQ1O\",\"login-button\":\"FormAddPassword_login-button__1CMr1\",\"button-div-login\":\"FormAddPassword_button-div-login__1zLyR\",\"text-login\":\"FormAddPassword_text-login__7Ssd1\",\"new-pass-alert\":\"FormAddPassword_new-pass-alert__19AQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3D23k\",\"row\":\"List_row__3SpGm\",\"button\":\"List_button__2vu65\",\"dots\":\"List_dots__2Uyr_\",\"menu\":\"List_menu__2pTd8\",\"edit\":\"List_edit__2ZTw7\",\"delete\":\"List_delete__1j7wN\",\"relative\":\"List_relative__3ZRpE\",\"add-task\":\"List_add-task__9t0c2\",\"draggable\":\"List_draggable__1Kie5\",\"droppable\":\"List_droppable__2nRmG\",\"flexend\":\"List_flexend__1em8R\",\"name\":\"List_name__2f7CG\",\"container\":\"List_container__28clh\",\"input\":\"List_input__2Uwjc\",\"task-input\":\"List_task-input__3AlUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2qpUe\",\"pic-container\":\"Home_pic-container__18o2T\",\"pic1\":\"Home_pic1__1XEYo\",\"welcome-user\":\"Home_welcome-user__16U4D\",\"left-buttons\":\"Home_left-buttons__34rHC\",\"right-buttons\":\"Home_right-buttons__2ADOX\",\"my-teams-container\":\"Home_my-teams-container__2NsRB\",\"teams-home\":\"Home_teams-home__2egNH\",\"select-team-container\":\"Home_select-team-container__SI5vC\",\"navigate-buttons\":\"Home_navigate-buttons__1gZW_\",\"navigate-buttons-teams\":\"Home_navigate-buttons-teams__cvZPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditProject_form__1B8sp\",\"title\":\"EditProject_title__27HHn\",\"buttons-div\":\"EditProject_buttons-div__2aoeI\",\"navigate-buttons\":\"EditProject_navigate-buttons__cmB7m\",\"input-container\":\"EditProject_input-container__1swjT\",\"input-pr-name\":\"EditProject_input-pr-name__yCbuG\",\"input-container-descr\":\"EditProject_input-container-descr__36mFS\",\"text-area-descr\":\"EditProject_text-area-descr__3nBCs\",\"edit-members\":\"EditProject_edit-members__3E-vv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Team_container__1-Z2r\",\"title\":\"Team_title__20btW\",\"left-side\":\"Team_left-side__EScI4\",\"right-side\":\"Team_right-side__PfsR8\",\"right-side-team\":\"Team_right-side-team__dNt1p\",\"pic1\":\"Team_pic1__1aGcq\",\"button-div\":\"Team_button-div__34g33\",\"new-project-button\":\"Team_new-project-button__3vCrd\",\"picture\":\"Team_picture__zSznw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MyTasksTask_card__13GC7\",\"task\":\"MyTasksTask_task__1tULV\",\"progress\":\"MyTasksTask_progress__3Dd1T\",\"days\":\"MyTasksTask_days__6nLr2\",\"deadline\":\"MyTasksTask_deadline__hVNnV\",\"buttons-container\":\"MyTasksTask_buttons-container__1K23b\",\"button\":\"MyTasksTask_button__2fg5i\",\"input\":\"MyTasksTask_input__30gQP\",\"bad-input\":\"MyTasksTask_bad-input__1vN4W\",\"no-border\":\"MyTasksTask_no-border__3uP64\",\"edit\":\"MyTasksTask_edit__1MP3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditList_container__2vZrX\",\"input-container\":\"EditList_input-container__2L0_P\",\"name\":\"EditList_name__BNenU\",\"name-input\":\"EditList_name-input__2WGjw\",\"change-color\":\"EditList_change-color__1ozjv\",\"color-title\":\"EditList_color-title__nKS0I\",\"color-pick\":\"EditList_color-pick__28nNu\",\"color-button\":\"EditList_color-button__3VVg9\",\"edit-list-button\":\"EditList_edit-list-button__10pxQ\",\"text\":\"EditList_text__4SmRk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TableDateNavigation_container___ruQ9\",\"navigateButtons\":\"TableDateNavigation_navigateButtons__sUQBP\",\"picContainer\":\"TableDateNavigation_picContainer__RWkKA\",\"centeredText\":\"TableDateNavigation_centeredText__1-OJF\"};","const getCookie = (name) => {\r\n    const cookieValue = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n    return cookieValue ? cookieValue[2] : null;\r\n}\r\n\r\nexport default getCookie;","function userObject(response) {\r\n    return {\r\n        username: response.user.username,\r\n        id: response.user._id,\r\n        teams: response.teams,\r\n        inbox: response.user.inbox,\r\n        confirmed: response.user.confirmed,\r\n        newPasswordConfirmed: response.user.newPasswordConfirmed,\r\n        recentProjects: response.user.recentProjects,\r\n        image: response.user.image,\r\n        lastTeamSelected: response.user.lastTeamSelected\r\n    }\r\n}\r\n\r\nexport default userObject","import React from \"react\"\r\n\r\nconst UserContext = React.createContext({\r\n    user: null,\r\n    logIn: () => {},\r\n    logOut: () => {}\r\n});\r\n\r\nexport default UserContext","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport getCookie from \"../utils/cookie\"\r\nimport userObject from \"../utils/userObject\"\r\nimport UserContext from \"./UserContext\"\r\n\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const history = useHistory()\r\n\r\n    const logIn = (user) => {\r\n        setUser({\r\n            ...user,\r\n            loggedIn: true\r\n        })\r\n    }\r\n\r\n    const logOut = useCallback(() => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        fetch('/api/user/logout', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        }).then(response => {\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            } else {\r\n                document.cookie = \"x-auth-token= ; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/;\"\r\n\r\n                setUser({\r\n                    loggedIn: false\r\n                })\r\n            }\r\n        })\r\n    }, [history])\r\n\r\n    const verifyLogin = useCallback(() => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        if (!token) {\r\n\r\n            setUser({\r\n                loggedIn: false\r\n            })\r\n\r\n            setLoading(false)\r\n            return;\r\n        }\r\n\r\n        fetch(\"/api/user/verify\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        }).then(promise => {\r\n            return promise.json()\r\n        }).then(response => {\r\n            if (response.status) {\r\n                logIn(userObject(response))\r\n            } else {\r\n                logOut()                \r\n            }\r\n\r\n            setLoading(false)\r\n        })\r\n    }, [logOut])\r\n\r\n    useEffect(() => {\r\n        verifyLogin()\r\n    }, [verifyLogin])\r\n\r\n    if (loading) {\r\n        return (\r\n            <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#363338\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            user,\r\n            setUser,\r\n            logIn,\r\n            logOut\r\n        }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider","import React from \"react\"\r\nimport UserProvider from \"./contexts/UserProvider\"\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n        <UserProvider>\r\n            {props.children}\r\n        </UserProvider>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\n\r\nconst TeamContext = React.createContext({\r\n  teams: [] ,\r\n  setTeams: () => {},\r\n  selectedTeam: 'Select' ,\r\n  setSelectedTeam: () => {},\r\n  getCurrentTeam: () => {},\r\n  currentTeam: '',\r\n  setCurrentTeam: () => {},\r\n  getTeams: () => {}\r\n})\r\n\r\nexport default TeamContext","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonClean = ({ title, onClick, type, className, children, style }) => {\r\n    return (\r\n        <button\r\n            type={type || 'button'}\r\n            onClick={onClick}\r\n            className={`${styles.clean} ${className}`} style={style}\r\n        >{title}{children}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonClean","import React, { useContext, useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext)\r\n}\r\n\r\nexport function SocketProvider({ user, children }) {\r\n  const [socket, setSocket] = useState()\r\n  const url = window.location.href.includes('heroku') ? '/' : 'http://localhost:4000'\r\n    \r\n  useEffect(() => {\r\n    if (!user) {\r\n      return\r\n    }\r\n\r\n    if (!user.teams) {\r\n      return\r\n    }\r\n    const username = user.username\r\n    const userId = user.id\r\n    const teams = [...user.teams]\r\n    const teamsId = teams.map( t => t._id)\r\n    const teamsStr = JSON.stringify(teamsId)\r\n    const newSocket = io(\r\n      url, {\r\n        query: { teamsStr, username, userId },\r\n        transports: ['websocket']\r\n      }\r\n    )\r\n    setSocket(newSocket)\r\n\r\n    return () => newSocket.close()\r\n  }, [user, url])\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n}\r\n","import styles from \"./index.module.css\"\r\nimport Image from \"cloudinary-react/lib/components/Image\"\r\nimport Transformation from \"cloudinary-react/lib/components/Transformation\"\r\nimport Avatar from \"react-avatar\"\r\n\r\nexport default function AvatarUser({ user, onClick, className, size }) {\r\n\r\n    return (\r\n\r\n        user.image ?\r\n                <Image\r\n                    publicId={user.image.publicId}\r\n                    onClick={onClick}\r\n                    className={`${styles['profile-picture']} ${className}`}\r\n                    title={user.username}\r\n                >\r\n                    <Transformation width={size} height={size} gravity=\"faces\" crop=\"fill\" />\r\n                </Image>\r\n\r\n            :\r\n\r\n            <Avatar\r\n                className={className}\r\n                onClick={onClick}\r\n                name={user.username}\r\n                size={size}\r\n                round={true}\r\n                maxInitials={2}\r\n            />\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonGrey = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonGrey","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ButtonGrey from '../ButtonGrey'\r\n\r\n\r\nexport default function CreateTeam(props) {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch('/api/user/get-all', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u._id !== input._id)\r\n        setMembers(arr)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch('/api/teams', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                requests: members\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const team = await response.json()\r\n            const arr = [...teamContext.teams]\r\n            arr.push(team)\r\n            // const userTeams = [...userContext.user.teams]\r\n            // userTeams.push(team)\r\n            teamContext.setTeams(arr)\r\n            teamContext.setSelectedTeam(team.name)\r\n            props.hideForm()\r\n            socket.emit('team-update', team._id)\r\n            socket.emit('multiple-messages-sent', members)\r\n            history.push(`/team/${team._id}`)\r\n        }\r\n\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    return (\r\n        // <div className={styles.form}>\r\n\r\n        <div className={styles.container}>\r\n\r\n\r\n            <div className={styles.title} >Create New Team</div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    placeholder='Team Name'\r\n                    autocomplete=\"off\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span className={styles['description-text']}> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label=\"Description\"\r\n                    id=\"description\"\r\n                    placeholder='Team Description'\r\n                    spellCheck=\"false\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-members']}>\r\n                <span className={styles['members-text']}> Invite Members</span>\r\n\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['input-members']}\r\n                        autoComplete=\"off\"\r\n                        value={member}\r\n                        onChange={inputMembers}\r\n                        label=\"Invite members\"\r\n                        id=\"members\"\r\n                        placeholder='username'\r\n                        onBlur={onBlur}\r\n\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            showMembers &&\r\n                            <div className={styles['members-pop-up']}>\r\n                                <div className={styles.members}>\r\n                                    {\r\n                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                            .filter((e) => {\r\n                                                const found = members.find(element => element.username === e.username)\r\n                                                if (found) {\r\n                                                    return false\r\n                                                } else {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                            .map(u => {\r\n                                                return (\r\n                                                    <ButtonClean\r\n                                                        key={u._id}\r\n                                                        className={styles.user}\r\n                                                        onClick={() => addMember(u)}\r\n                                                        title={<div>\r\n                                                            <div>{u.username}</div>\r\n                                                            <div className={styles.email}>{u.email}</div>\r\n                                                        </div>}\r\n                                                    />)\r\n                                            })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map(m => {\r\n                        return (\r\n                            <ButtonClean\r\n                                onClick={() => removeMember(m)}\r\n                                title={\r\n                                <AvatarUser user={m} size={40}/>\r\n                                }\r\n                            />\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n                {/* <button type='submit' className={styles['create-button']}>Create</button> */}\r\n                <ButtonGrey onClick={(e)=>handleSubmit(e)} title=\"Create\" className={styles['create-button']}/>\r\n                \r\n            </div>\r\n\r\n\r\n        </div>\r\n        // </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LinkComponent = ({ title, href, className, onClick }) => {\r\n    return (\r\n            <Link to={href} className={`${styles.link} ${className}`} onClick={onClick} >\r\n                {title}\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponent;","export default __webpack_public_path__ + \"static/media/logo.2beba198.svg\";","export default __webpack_public_path__ + \"static/media/menu.f66dcc80.svg\";","export default __webpack_public_path__ + \"static/media/home.05f82417.svg\";","export default __webpack_public_path__ + \"static/media/tasks.d514e762.svg\";","export default __webpack_public_path__ + \"static/media/inbox.6389f480.svg\";","export default __webpack_public_path__ + \"static/media/inbox-bell.959a963c.svg\";","export default __webpack_public_path__ + \"static/media/project-info.58f0cc8c.svg\";","import React from 'react'\r\n\r\nconst ProjectContext = React.createContext({\r\n  lists: [] ,\r\n  setLists: () => {},\r\n  hiddenLists: [],\r\n  setHiddenLists: () => {},\r\n  project: {},\r\n  setProject: () => {}\r\n})\r\n\r\nexport default ProjectContext\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ListColor({ color, type }) {\r\n    if (type === 'aside') {\r\n        return (\r\n            <svg className={`${styles[type]}`} xmlns=\"http://www.w3.org/2000/svg\" width=\"110\" height=\"26.931\" viewBox=\"0 0 110 26.931\">\r\n                <g id=\"Layer_2\" data-name=\"Layer 2\" transform=\"translate(0.002 0.014)\">\r\n                    <g id=\"Layer_1\" data-name=\"Layer 1\" transform=\"translate(-0.002 -0.014)\">\r\n                        <path\r\n                            id=\"Path_60\"\r\n                            data-name=\"Path 60\"\r\n                            d=\"M4.208,22.578l-.277-.26c-.594-.366-.814-1.074-1.351-1.49-1-.749-1.14-2.214-2.352-2.784a1.237,1.237,0,0,1-.187-.391,1.628,1.628,0,0,1,.554-1.628,5.636,5.636,0,0,1,3.1-.456,6.862,6.862,0,0,0,1.083,0,.733.733,0,0,0,.765-.765c.049-.48-.057-.814-.586-.871a1.628,1.628,0,0,1-.513-.163c-.92-.456-.961-1.083-.106-1.7a3.256,3.256,0,0,0,.545-.448,1.27,1.27,0,0,1,.659-.383c.667-.244,1.538.3,2.027-.545a.651.651,0,0,0-.244-.374,6.894,6.894,0,0,1-.659-.554,1.278,1.278,0,0,1-.415-.814A1.9,1.9,0,0,0,5.022,6.933C4.2,6.509,3.6,5.891,4.411,4.881c2.263-1.628,4.933-1.937,7.57-2.328,1.27-.309,2.589-.187,3.858-.48a4.811,4.811,0,0,1,1.449-.09c.643.073,1.254.317,1.921-.147a2.011,2.011,0,0,1,1.718-.106,2.808,2.808,0,0,0,2.32-.2,3.394,3.394,0,0,1,2.2.122c1.628-.6,3.313-.391,4.957-.667.765-.147,1.563-.114,2.328-.3a8.873,8.873,0,0,1,3.557.13.252.252,0,0,0,.269,0A2.914,2.914,0,0,1,39.885.73h.277A2.182,2.182,0,0,1,42.075.307a22.922,22.922,0,0,0,3.883.057A34.326,34.326,0,0,0,56.165.2,1.75,1.75,0,0,1,57.85.51h.277C59.136-.3,60.276.054,61.383.128a28.856,28.856,0,0,0,4.436.26,8.669,8.669,0,0,1,2.751,0c1.188.317,2.442,0,3.606.244A22.083,22.083,0,0,0,75.7.917l.464.041a16.752,16.752,0,0,0,3.191.228h.464c1.083.057,2.157.285,3.256.269,1.351,0,2.678.3,4.021.309.814.171,1.685.2,2.523.334.545.269,1.254.065,1.709.578a4.746,4.746,0,0,0,1.9.309,26.545,26.545,0,0,1,4.548.392c1.166.211,2.347.235,3.527.333,1.091.3,2.271,0,3.329.5,1.408,0,2.825,0,4.241.081.3,0,.716.1.676.513s-.374.586-.814.383c-1.034-.09-2.059-.155-2.523,1.083-.317.814-.961.562-1.555.488-.537.228-1.14.147-1.677.358a5.576,5.576,0,0,1-.814.106,20.26,20.26,0,0,0-4.591.765c.814.676,1.245,1.555,2.255,1.758a1.934,1.934,0,0,1,1.424.334c-.057,1.026-.936.586-1.449.814a.578.578,0,0,1-.383-.065.057.057,0,0,0,0,.057h3.972a1.042,1.042,0,0,1,.92.448c-.244.814-1.058.521-1.587.814-.407.212-1.156.187-.545.961a4.613,4.613,0,0,0,.391.407,11.928,11.928,0,0,0,3,.155,5.421,5.421,0,0,1,.961,0c.814.147,1.058.44.407,1.156-1.074,1.188-2.442,2.165-3.012,3.769,1.742,0,3.565.041,5.389,0,.863.4.879.92.236,1.547a1.148,1.148,0,0,0-.3.814c.114.35.073.733.212,1.074.562,1.384.5,1.547-.863,2.068a13.569,13.569,0,0,1-2.637.814c-1.571.049-3.118.521-4.7.309-1.628-.554-3.329.212-4.99-.081a9.589,9.589,0,0,0-4.884.147,2.816,2.816,0,0,1-2.076.488H79.771a5.739,5.739,0,0,0-1.9.179,10.631,10.631,0,0,1-1.831.1c-4.485,0-8.954.081-13.455,0a4.933,4.933,0,0,0-1.758.187,9.247,9.247,0,0,1-2.507.106h-.529a28.6,28.6,0,0,1-3.126,0h-.48a6.137,6.137,0,0,1-1.726-.1,11.209,11.209,0,0,0-3.533-.2c-2.222.065-4.461-.106-6.675.163a6.658,6.658,0,0,1-1.929.081,4.168,4.168,0,0,1-.456,0c-1.286,0-2.572.106-3.858.049a12.474,12.474,0,0,0-3.394,0c-1.319.2-2.67-.138-3.98.187a16.768,16.768,0,0,1-2.556.236c-1.368-.366-2.711.342-4.07.106a2.133,2.133,0,0,1-.456-.073,9.475,9.475,0,0,0-2.711-.179c-1.213-.09-2.442-.236-3.63-.342a9.377,9.377,0,0,0-1.058-.228,17.6,17.6,0,0,0-2.068-.114c-1.335-.472-2.768-.22-4.119-.521a.969.969,0,0,1-.684-.814l-.594-.537c-.244-.236-.627-.26-.814-.529l-.529-.342A1.913,1.913,0,0,1,4.208,22.578Z\"\r\n                            transform=\"translate(0.002 0.014)\"\r\n                            fill={color}\r\n                        />\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        )\r\n    }\r\n    if (type === 'list') {\r\n        return (\r\n            <svg className={`${styles[type]}`} xmlns=\"http://www.w3.org/2000/svg\" width=\"267.316\" height=\"26.931\" viewBox=\"0 0 267.316 26.931\">\r\n                <path\r\n                    id=\"Path_60\"\r\n                    data-name=\"Path 60\"\r\n                    d=\"M10.229,22.578l-.673-.26c-1.444-.366-1.978-1.074-3.284-1.49C3.84,20.079,3.5,18.614.556,18.044A1.347,1.347,0,0,1,.1,17.653c-.341-.6.18-1.235,1.345-1.628,2.334-.61,4.985-.431,7.537-.456.876.029,1.755.029,2.631,0a3.5,3.5,0,0,0,1.34-.214c.354-.146.542-.346.52-.551.119-.48-.138-.814-1.424-.871A8.487,8.487,0,0,1,10.8,13.77c-2.235-.456-2.334-1.083-.257-1.7a10.411,10.411,0,0,0,1.325-.448,5.16,5.16,0,0,1,1.6-.383c1.622-.244,3.739.3,4.926-.545a1.011,1.011,0,0,0-.593-.374q-.842-.256-1.6-.554c-.569-.211-.928-.5-1.009-.814.269-.877-.97-1.715-2.987-2.019-2-.423-3.462-1.042-1.484-2.051,5.5-1.628,11.987-1.937,18.4-2.328,3.086-.309,6.29-.187,9.376-.48a28.141,28.141,0,0,1,3.521-.09,13.688,13.688,0,0,0,4.668-.147,11.345,11.345,0,0,1,4.174-.106,15.811,15.811,0,0,0,5.638-.2,19.52,19.52,0,0,1,5.341.122c3.956-.6,8.051-.391,12.047-.667,1.859-.147,3.8-.114,5.657-.3a51.868,51.868,0,0,1,8.644.13,1.4,1.4,0,0,0,.653,0A15.916,15.916,0,0,1,96.93.73H97.6a11.592,11.592,0,0,1,4.649-.423c3.136.129,6.292.148,9.436.057A201.717,201.717,0,0,0,136.493.2a9.383,9.383,0,0,1,4.095.309h.673c2.453-.814,5.222-.456,7.913-.383,3.572.2,7.176.288,10.781.26a50.926,50.926,0,0,1,6.686,0c2.888.317,5.934,0,8.763.244,2.832.189,5.7.284,8.565.285L185.1.958c2.561.178,5.158.254,7.754.228h1.128c2.631.057,5.242.285,7.913.269,3.284,0,6.508.3,9.772.309,1.978.171,4.095.2,6.132.334,1.325.269,3.046.065,4.154.578a26.89,26.89,0,0,0,4.609.309c3.714,0,7.407.131,11.052.392,2.834.211,5.7.235,8.571.333,2.651.3,5.519,0,8.091.5,3.422,0,6.864,0,10.306.081.732,0,1.741.1,1.642.513s-.91.586-1.978.383c-2.512-.09-5-.155-6.132,1.083-.771.814-2.334.562-3.778.488-1.306.228-2.769.147-4.075.358-.652.055-1.313.091-1.978.106-3.778.078-7.522.335-11.157.765,1.978.676,3.027,1.555,5.479,1.758a10.354,10.354,0,0,1,3.462.334c-.138,1.026-2.275.586-3.521.814a3.213,3.213,0,0,1-.93-.065.031.031,0,0,0,0,.057h9.653a4.468,4.468,0,0,1,2.235.448c-.593.814-2.572.521-3.857.814-.989.212-2.809.187-1.325.961q.444.215.949.407a69.98,69.98,0,0,0,7.28.155c.777-.028,1.558-.028,2.334,0,1.978.147,2.572.44.989,1.156-2.611,1.188-5.934,2.165-7.319,3.769,4.233,0,8.664.041,13.1,0,2.1.4,2.136.92.574,1.547-.493.221-.756.514-.732.814.277.35.178.733.514,1.074,1.365,1.384,1.207,1.547-2.1,2.068-2.064.36-4.211.633-6.409.814-3.818.049-7.576.521-11.434.309-3.956-.554-8.091.212-12.126-.081a55.789,55.789,0,0,0-11.869.147,15.064,15.064,0,0,1-5.044.488H193.858a33.325,33.325,0,0,0-4.609.179c-1.474.085-2.963.118-4.451.1-10.9,0-21.759.081-32.7,0a28.531,28.531,0,0,0-4.273.187,54.277,54.277,0,0,1-6.093.106h-1.286q-3.8.085-7.6,0h-1.167a35.951,35.951,0,0,1-4.194-.1,65.578,65.578,0,0,0-8.585-.2c-5.4.065-10.84-.106-16.221.163A39.063,39.063,0,0,1,98,26.289q-.553.012-1.108,0c-3.125,0-6.251.106-9.376.049a73.383,73.383,0,0,0-8.249,0c-3.2.2-6.488-.138-9.673.187-2.053.144-4.129.223-6.211.236-3.323-.366-6.587.342-9.891.106-.375-.008-.746-.032-1.108-.073a55.413,55.413,0,0,0-6.587-.179c-2.947-.09-5.934-.236-8.822-.342q-1.269-.144-2.572-.228c-1.668-.079-3.346-.117-5.024-.114-3.244-.472-6.726-.22-10.009-.521-.9-.111-1.551-.431-1.662-.814l-1.444-.537c-.593-.236-1.523-.26-1.978-.529L13,23.188A8.056,8.056,0,0,1,10.229,22.578Z\"\r\n                    transform=\"translate(0.002 0.014)\"\r\n                    fill={color} />\r\n            </svg>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport ProjectContext from \"../../contexts/ProjectContext\";\r\nimport ListColor from '../ListColor'\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonHideList = ( { list, type } ) => {\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    function onClick() {\r\n        const newHiddenLists = [...projectContext.hiddenLists]\r\n        \r\n        if (newHiddenLists.includes(list._id)) {\r\n            const index = newHiddenLists.indexOf(list._id)\r\n            newHiddenLists.splice(index, 1)\r\n        } else {\r\n            newHiddenLists.push(list._id)\r\n        }\r\n        projectContext.setHiddenLists(newHiddenLists)\r\n    }\r\n\r\n    return (\r\n    <button onClick={onClick} className={`${styles.submit} ${projectContext.hiddenLists.includes(list._id) && styles.opacity}`} >\r\n        <ListColor color={list.color || '#A6A48E'} type={type} />\r\n        <div className={styles.name} title={list.name} >{list.name}</div>\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default ButtonHideList","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst Transparent = (props) => {\r\n    return (\r\n    <>\r\n    <div onClick={props.hideForm} className={styles.transparent}></div>\r\n    {props.children}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Transparent\r\n","import { useState, useEffect } from \"react\"\r\n\r\nexport const useDetectOutsideClick = (el) => {\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const onClick = e => {\r\n      // If the active element exists and is clicked outside of\r\n      if (el.current !== null && !el.current.contains(e.target)) {\r\n        setIsActive(!isActive)\r\n      }\r\n    }\r\n\r\n    // If the item is active (ie open) then listen for clicks outside\r\n    if (isActive) {\r\n      window.addEventListener(\"click\", onClick)\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", onClick)\r\n    }\r\n  }, [isActive, el])\r\n\r\n  return [isActive, setIsActive]\r\n}","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport ButtonGrey from '../ButtonGrey'\r\n\r\n\r\n\r\n\r\nconst ConfirmDialog = (props) => {\r\n  return (\r\n    <>\r\n      <div className={styles['transparent-confirm']}></div>\r\n      <div className={styles.container}>\r\n\r\n        <div className={styles.content}>\r\n\r\n\r\n\r\n          <div className={styles.logo}>\r\n            <img src={logo} alt=\"logo\" width='194' height='142' />\r\n          </div>\r\n\r\n          <div className={styles.title}>{`Are you sure you want to ${props.title}?`}</div>\r\n          <div className={styles.buttons}>\r\n            <ButtonGrey\r\n              className={styles.button}\r\n              title={'Yes'}\r\n              onClick={() => {\r\n                props.hideConfirm();\r\n                props.onConfirm()\r\n              }\r\n              }\r\n            />\r\n            <ButtonGrey\r\n              className={styles.button}\r\n              title={'No'}\r\n              onClick={() => props.hideConfirm()}\r\n            />\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\nexport default ConfirmDialog;","import React, { useCallback, useContext, useRef, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ButtonClean from '../ButtonClean'\r\n\r\n\r\nexport default function AddMember(props) {\r\n\r\n    const socket = useSocket()\r\n    const [users, setUsers] = useState([])\r\n    const context = useContext(UserContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState(props.project.membersRoles)\r\n    const isAdmin = props.admin\r\n    const history = useHistory()\r\n    const projectId = props.project._id\r\n    const params = useParams()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('team-update', params.teamid)\r\n    }, [socket, props, params.teamid])\r\n\r\n    async function handleOnDragEnd(result) {\r\n\r\n        if (!result.destination) {\r\n            console.log('no destination');\r\n            return\r\n        }\r\n\r\n        const memberRoleId = result.draggableId\r\n\r\n        const member = members.filter(a => a._id === memberRoleId)[0]['memberId']\r\n\r\n        if (member._id === context.user.id) {\r\n            console.log('can`t move self');\r\n            return\r\n        }\r\n\r\n        const memberAdmin = members.filter(a => a._id === memberRoleId)[0]['admin']\r\n\r\n\r\n        if (result.destination.droppableId === 'admins' && memberAdmin) {\r\n            return\r\n        }\r\n        if (result.destination.droppableId === 'members' && !memberAdmin) {\r\n            return\r\n        }\r\n\r\n        let arr = [...members]\r\n        let newArr = arr.filter(m => m._id !== memberRoleId)\r\n        let updatedUser = members.filter(a => a._id === memberRoleId)[0]\r\n        updatedUser.admin = !memberAdmin\r\n        newArr.push(updatedUser)\r\n        setMembers(newArr)\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const response = await fetch(`/api/projects/${projectId}/user-roles`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                userRole: memberRoleId,\r\n                isAdmin: !memberAdmin\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n        }\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        const projectId = props.project._id\r\n\r\n        if (member._id === context.user.id) {\r\n            return\r\n        }\r\n        const memberId = member._id\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${projectId}/user-remove`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                memberId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n            let arr = [...members]\r\n            let newArr = arr.filter(m => m.memberId._id !== memberId)\r\n            setMembers(newArr)\r\n        }\r\n\r\n    }\r\n\r\n    const handleAdd = async (member) => {\r\n\r\n        if (!member) {\r\n            setIsActive(!isActive)\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n\r\n        const response = await fetch(`/api/projects/${projectId}/user`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                member,\r\n                admin: false\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const memberRole = await response.json()\r\n            updateProjectSocket()\r\n            memberRole.memberId = member\r\n            setIsActive(!isActive)\r\n            let arr = [...members]\r\n            arr.push(memberRole)\r\n            setMembers(arr)\r\n            setUsers([])\r\n        }\r\n    }\r\n\r\n    const onFocus = async () => {\r\n\r\n        if (users.length === 0) {\r\n            let currentTeamId = ''\r\n\r\n            teamContext.teams.map(t => {\r\n                return (\r\n                    t.projects.map(p => {\r\n                        if (p._id === projectId) {\r\n                            currentTeamId = t._id\r\n                        }\r\n                        return currentTeamId\r\n                    })\r\n                )\r\n            })\r\n\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch(`/api/teams/get-users/${currentTeamId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const data = await response.json()\r\n\r\n            let teamUsers = data.members\r\n\r\n            const filtered = teamUsers.filter((e) => {\r\n                const found = members.find(element => element.memberId.username === e.username)\r\n                if (found) {\r\n                    return false\r\n                } else {\r\n                    return true\r\n                }\r\n            })\r\n\r\n            setUsers(filtered)\r\n        }\r\n\r\n        setShowMembers(true)\r\n\r\n\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n\r\n    let confirmationObjectFunctions = {\r\n        'delete this member': deleteMember\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n            <div className={styles['big-container']}>\r\n                {isAdmin ?\r\n                    <div>\r\n                        <div className={styles['input-container']}>\r\n                            <span className={styles['text-invite']}>Add Members</span>\r\n                            <div className={styles['invite-input']}>\r\n                                <input\r\n                                    className={styles['members-input']}\r\n                                    autoComplete=\"off\"\r\n                                    value={member}\r\n                                    onFocus={onFocus}\r\n                                    onBlur={onBlur}\r\n                                    onChange={(e) => setMember(e.target.value)}\r\n                                    label=\"Invite members\"\r\n                                    id=\"members\"\r\n                                    placeholder='Teammate Username'\r\n                                />\r\n                                <div className={styles['select-for-invite']}>\r\n                                    {\r\n                                        showMembers &&\r\n                                        <div className={styles.members}>\r\n                                            {\r\n                                                users.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(context.user.username))\r\n                                                    .filter((e) => {\r\n                                                        const found = members.find(element => element.username === e.username)\r\n                                                        if (found) {\r\n                                                            return false\r\n                                                        } else {\r\n                                                            return true\r\n                                                        }\r\n                                                    })\r\n                                                    .sort((a, b) => a.username.localeCompare(b.username))\r\n                                                    .map(u => {\r\n                                                        return (\r\n                                                            <ButtonClean\r\n                                                                key={u._id}\r\n                                                                className={styles.user}\r\n                                                                onClick={() => { handleAdd(u) }}\r\n                                                                title={<div>\r\n                                                                    <div>{u.username}</div>\r\n                                                                    <div className={styles.email}>{u.email}</div>\r\n                                                                </div>}\r\n                                                            />)\r\n                                                    })\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                            <div className={styles['admins-container']}>\r\n                                <span className={styles.title}>Admins:</span>\r\n                                <Droppable droppableId={\"admins\"}>\r\n                                    {(provided) => (\r\n                                        <div className={styles.droppable} ref={provided.innerRef}  {...provided.droppableProps} >\r\n                                            {\r\n                                                members.filter(a => a.admin === true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index}>\r\n                                                            {(provided) => (\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                    <AvatarUser user={element.memberId}\r\n                                                                        size={40} />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n\r\n                            <div className={styles['members-container']}>\r\n                                <span className={styles.title}>Members:</span>\r\n                                <Droppable droppableId={\"members\"}>\r\n                                    {(provided) => (\r\n                                        <div className={styles['droppable-members']} ref={provided.innerRef} {...provided.droppableProps}>\r\n                                            {\r\n                                                members.filter(a => a.admin !== true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index} >\r\n                                                            {(provided) => (\r\n\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                    <AvatarUser user={element.memberId}\r\n                                                                        // key={index} \r\n                                                                        size={40} round={true}\r\n                                                                        onClick={() => {\r\n                                                                            setConfirmOpen(true)\r\n                                                                            setConfirmTitle('delete this member')\r\n                                                                            setCurrElement(element.memberId)\r\n                                                                        }}\r\n                                                                    />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n                        </DragDropContext>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className={styles['admins-container']}>\r\n                            <span className={styles.title}>Admins:</span>\r\n                            <div className={styles.droppable}>\r\n                                {\r\n                                    members.filter(a => a.admin === true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index} >\r\n                                                <AvatarUser user={element.memberId} size={40} />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={styles['admins-container']}>\r\n                            <span className={styles.title}>Members:</span>\r\n                            <div className={styles.droppable}>\r\n                                {\r\n                                    members.filter(a => a.admin !== true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index}>                                                                                                <AvatarUser user={element.memberId} size={40} />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","function isUserAdmin(id, members) {\r\n    \r\n    const member = members.find( m => m.memberId._id === id )\r\n    if (!member) {\r\n        return false\r\n    }\r\n\r\n    return member.admin\r\n}\r\n\r\nexport default isUserAdmin\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AddProjectMember from '../AddProjectMember'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\n\r\n\r\nexport default function EditProject(props) {\r\n    const [name, setName] = useState(props.project.name)\r\n    const [description, setDescription] = useState(props.project.description)\r\n    const [isFinished, setIsFinished] = useState(props.project.isFinished)\r\n    const members = props.project.membersRoles\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n\r\n    const projectId = props.project._id\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n    }, [socket, props])\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id, props])\r\n\r\n    \r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n       \r\n        console.log('handle', isFinished);\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${projectId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                isFinished\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n            props.hideForm()\r\n            socket.emit('team-update', params.teamid)\r\n        }\r\n    }\r\n\r\n    async function deleteProject() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${props.project._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            props.hideForm()\r\n            const obj = {\r\n                projectId: props.project._id,\r\n                teamId: params.teamid\r\n            }\r\n            socket.emit('project-deleted', obj)\r\n            history.push(`/team/${params.teamid}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this project'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteProject()}\r\n                />\r\n            }\r\n\r\n            <div className={styles.container} >\r\n                <div className={styles.title} >Project</div>\r\n\r\n                <div className={styles['input-container']}>\r\n                    <span> Name</span>\r\n                    <input\r\n                        className={styles['input-pr-name']}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label=\"Name\"\r\n                        id=\"name\"\r\n                    />\r\n                </div>\r\n                <div className={styles['input-container-descr']}>\r\n                    <span> Description</span>\r\n                    <textarea\r\n                        className={styles['text-area-descr']}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        label=\"Description\"\r\n                        id=\"description\"\r\n                        placeholder='Project Description'\r\n                        spellCheck=\"false\"\r\n                    />\r\n                </div>\r\n                <div className={styles['edit-members']}>\r\n                    <AddProjectMember admin={isAdmin} project={props.project} members={members} />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {isAdmin ?\r\n                    <div className={styles['buttons-div']}>\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Edit'} onClick={(e)=>handleSubmit(e)} />\r\n                        <ButtonGrey className={styles['navigate-buttons']}\r\n                            title={isFinished ?\r\n                                'Set Current' : 'Set Finished'}\r\n                            onClick={()=>setIsFinished(!isFinished)} />\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Delete Project'}\r\n                            onClick={() => {\r\n                                setConfirmOpen(true)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport LinkComponent from '../Link'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport menu from '../../images/aside/menu.svg'\r\nimport home from '../../images/aside/home.svg'\r\nimport tasks from '../../images/aside/tasks.svg'\r\nimport inbox from '../../images/aside/inbox.svg'\r\nimport bell from '../../images/aside/inbox-bell.svg'\r\nimport projectInfo from '../../images/aside/project-info.svg'\r\n// import settings from '../../images/aside/settings.svg'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport ButtonHideList from '../ButtonHideList'\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport userObject from '../../utils/userObject'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport Transparent from '../Transparent'\r\nimport EditProject from '../EditProject'\r\n\r\nexport default function Aside({ asideOn, setAsideOn }) {\r\n    const [listVisibility, setListVisibility] = useState(false)\r\n    const [editProjectVisibility, setEditProjectVisibility] = useState(false)\r\n    const [editProjectButtonVisibility, setEditProjectButtonVisibility] = useState(false)\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const logIn = userContext.logIn\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('project')) {\r\n            setListVisibility(true)\r\n            setEditProjectButtonVisibility(true)\r\n        }\r\n    }, [])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        const user = userObject(response)\r\n        logIn(user)\r\n    }, [logIn])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <div className={styles.aside}>\r\n            <aside className={styles.container}>\r\n                <div className={styles['top-left']}>\r\n                    <ButtonClean\r\n                        className={styles.hamburger}\r\n                        onClick={() => setAsideOn(!asideOn)}\r\n                        title={<img className={styles.options} src={menu} alt=\"menu\" width=\"32\" height=\"24\" />}\r\n                    />\r\n                </div>\r\n                <LinkComponent\r\n                    href='/'\r\n                    title={<img src={home} alt=\"home\" width=\"34\" height=\"32\" />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/my-tasks/${userContext.user.id}`}\r\n                    title={<img src={tasks} alt=\"my-tasks\" width=\"30\" height=\"25\" />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/inbox/${userContext.user.id}`}\r\n                    title={<img src={inbox} alt=\"inbox\" width=\"33\" height=\"34\" />}\r\n                />\r\n                {editProjectButtonVisibility &&\r\n                    <ButtonClean\r\n                        className={styles.settings}\r\n                        onClick={() => setEditProjectVisibility(!editProjectVisibility)}\r\n                        title={<img className={styles.options} src={projectInfo} alt=\"\" width=\"40\" />}\r\n                    />\r\n                }\r\n                {/* <LinkComponent\r\n                    href={`/profile/${userContext.user.id}`}\r\n                    title={<img src={settings} alt=\"settings\" width=\"25\" height=\"25\" />}\r\n                /> */}\r\n                {userContext.user.inbox.length !== 0 &&\r\n                    <LinkComponent\r\n                        href={`/inbox/${userContext.user.id}`}\r\n                        title={<img src={bell} alt=\"inbox\" width=\"33\" height=\"34\" />}\r\n                        className={styles.bell}\r\n                    />\r\n                }\r\n            </aside>\r\n            {asideOn &&\r\n                <div className={styles.menu}>\r\n                    <div className={styles['top-right']}>\r\n                        <div className={styles.logo}>\r\n                            <img src={logo} alt=\"logo\" width=\"87\" height=\"65\" />\r\n                        </div>\r\n                        <LinkComponent\r\n                            href='/'\r\n                            title='Home'\r\n                            className={styles.link}\r\n                        />\r\n                        <LinkComponent\r\n                            href={`/my-tasks/${userContext.user.id}`}\r\n                            title='My Tasks'\r\n                            className={styles.link}\r\n                        />\r\n                        <LinkComponent\r\n                            href={`/inbox/${userContext.user.id}`}\r\n                            title='Inbox'\r\n                            className={styles.link}\r\n                        />\r\n                        {editProjectButtonVisibility &&\r\n                            <ButtonClean\r\n                                className={styles.link}\r\n                                onClick={() => setEditProjectVisibility(!editProjectVisibility)}\r\n                                title={'Settings'}\r\n                            />\r\n                        }\r\n                        {/* <LinkComponent\r\n                            href={`/profile/${userContext.user.id}`}\r\n                            title='Settings'\r\n                            className={styles.link}\r\n                        /> */}\r\n                    </div>\r\n                    {listVisibility && <div className={styles['bottom-right']}>\r\n                        {\r\n                            projectContext.lists.map((element) => {\r\n                                return (\r\n                                    <ButtonHideList key={element._id} list={element} type={'aside'} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>}\r\n                </div>\r\n            }\r\n\r\n            {editProjectVisibility &&\r\n                < div >\r\n                    <Transparent hideForm={() => setEditProjectVisibility(!editProjectVisibility)} >\r\n                        <EditProject hideForm={() => setEditProjectVisibility(!editProjectVisibility)} project={projectContext.project} />\r\n                    </Transparent >\r\n                </div >\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\n\r\n\r\nexport default function SearchResults(props) {\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const teams = userContext.user.teams\r\n    const searchInput = props.searchInput\r\n\r\n    let resultArr = []\r\n\r\n    for (let index = 0; index < teams.length; index++) {\r\n        const team = teams[index];\r\n        let obj = { 'name': `Team: ${team.name}`, 'id': team._id, 'type': 'team' }\r\n        resultArr.push(obj)\r\n        for (let index = 0; index < team.projects.length; index++) {\r\n            const project = team.projects[index];\r\n            let obj = { 'name': `Project: ${project.name}`, 'id': project._id, 'type': 'project' }\r\n            resultArr.push(obj)\r\n        }\r\n    }\r\n\r\n    const gotToPage = (id) => {\r\n        for (let index = 0; index < teams.length; index++) {\r\n            const team = teams[index];\r\n            if (team._id === id) {\r\n                history.push(`/team/${id}`)\r\n                teamContext.updateSelectedTeam(team._id)\r\n                props.hideForm()\r\n            }\r\n            for (let index = 0; index < team.projects.length; index++) {\r\n                const project = team.projects[index];\r\n                if (project._id === id) {\r\n                    history.push(`/project-board/${team._id}/${project._id}`)\r\n                    teamContext.updateSelectedTeam(team._id)\r\n                    props.hideForm()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles['search-container']}>\r\n            {\r\n                resultArr.filter(u => u.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n                    .map((t, index) => {\r\n                        return (\r\n                            <div key={index} className={styles.result} onClick={() => { gotToPage(t.id) }}>{t.name}</div>\r\n                        )\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/search.a87ce9fc.svg\";","import React, { useRef, useState } from 'react'\r\nimport { useDetectOutsideClick } from \"../../utils/useDetectOutsideClick\"\r\nimport SearchResults from \"../SearchResults\"\r\nimport styles from './index.module.css'\r\nimport searchImg from '../../images/search.svg'\r\n\r\n\r\nconst SearchField = ({ asideOn }) => {\r\n    const dropdownRefSearch = useRef(null)\r\n    const [searchInput, setSearchInput] = useState('')\r\n    const [showSearchForm, setShowSearchForm] = useDetectOutsideClick(dropdownRefSearch)\r\n    const [showSearchInput, setShowSearchInput] = useState(false)\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => (setShowSearchForm(false)), 120)\r\n        setTimeout(() => (setShowSearchInput(!showSearchInput)),120)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles['search-button']} onClick={() => setShowSearchInput(!showSearchInput)} >\r\n                <img className={styles['search-icon']} src={searchImg} alt=\"search\" />\r\n            </div>\r\n            <div className={showSearchInput ? \r\n                ( asideOn? \r\n                    (`${styles['new-line']} ${styles['search-fields']} ${styles['small']} `)\r\n                    :(`${styles['new-line']} ${styles['search-fields']}`)) \r\n                : styles['search-fields']} >\r\n                <input \r\n                    className={styles.input} \r\n                    type='text'\r\n                    placeholder={!showSearchForm ? 'Search...' : 'Enter Project or Team name'}\r\n                    autoComplete=\"off\"\r\n                    value={searchInput}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                    onClick={() => setShowSearchForm(true)}\r\n                    onBlur={onBlur}\r\n                />\r\n                {\r\n                    (\r\n                        searchInput.length > 0\r\n                        &&\r\n                        showSearchForm) ?\r\n                        <div ref={dropdownRefSearch}>\r\n                            <SearchResults searchInput={searchInput} hideForm={() => { setShowSearchForm(!showSearchForm); setSearchInput('') }} />\r\n                        </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchField","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LinkComponentTitle = ({ title, href, className, onClick }) => {\r\n    return (\r\n            <Link to={href} className={`${styles.link} ${className}`} onClick={onClick} title={title} >\r\n                {title}\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponentTitle","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonCleanTitle = ({ title, onClick, type, className, children, style }) => {\r\n    return (\r\n        <button\r\n            type={type || 'button'}\r\n            onClick={onClick}\r\n            className={`${styles.clean} ${className}`} style={style}\r\n            title={title}\r\n        >{title}{children}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonCleanTitle","import React, { useContext, useRef, useState } from 'react'\r\nimport styles from \"./index.module.css\"\r\nimport LinkComponentTitle from '../LinkTitle'\r\nimport ButtonClean from '../ButtonClean'\r\nimport Transparent from '../Transparent'\r\nimport CreateTeam from '../CreateTeam'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonCleanTitle from '../ButtonCleanTitle'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function TeamDropdown() {\r\n    const teamContext = useContext(TeamContext)\r\n    const teamRef = useRef(null)\r\n    const [showTeamForm, setShowTeamForm] = useState(false)\r\n    const [isTeamActive, setIsTeamActive] = useDetectOutsideClick(teamRef)\r\n\r\n    function selectTeam(teamId, teamName) {\r\n        teamContext.getCurrentProjects(teamId)\r\n        teamContext.setSelectedTeam(teamName)\r\n        setIsTeamActive(false)\r\n    }\r\n\r\n    return (\r\n        <div className={`${styles.container} ${styles['team-media']}`}>\r\n            <div className={styles.title}>Team:</div>\r\n            <div className={styles['dropdown-container']}>\r\n                <ButtonCleanTitle\r\n                    className={styles.button}\r\n                    onClick={() => setIsTeamActive(!isTeamActive)}\r\n                    title={teamContext.selectedTeam}\r\n                />\r\n                {isTeamActive && <div className={styles.dropdown} ref={teamRef}>\r\n                    <div className={styles['options-container']}>\r\n                        {teamContext.teams.map(t => (\r\n                            <LinkComponentTitle\r\n                                href={`/team/${t._id}`}\r\n                                key={t._id}\r\n                                title={t.name}\r\n                                onClick={() => { selectTeam(t._id, t.name) }}\r\n                                className={styles.options}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <ButtonClean\r\n                        onClick={() => setShowTeamForm(true)}\r\n                        title='Create Team'\r\n                        className={`${styles.options} ${styles['last-option']}`}\r\n                    />\r\n                </div>}\r\n            </div>\r\n            {showTeamForm && (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n                <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n            </Transparent>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ButtonGrey from '../ButtonGrey'\r\n\r\nexport default function CreateProject({ hideForm }) {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const socket = useSocket()\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n        const teamId = params.teamid\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch('/api/projects', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                teamId,\r\n                members\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        } else {\r\n            const project = await response.json()\r\n            hideForm && hideForm()\r\n            socket.emit('team-update', teamId)\r\n            history.push(`/project-board/${teamId}/${project._id}`)\r\n        }\r\n    }\r\n\r\n    const onFocus = async () => {\r\n        setShowMembers(true)\r\n\r\n        const teamId = params.teamid\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch(`/api/teams/get-users/${teamId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users.members)\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u._id !== input._id)\r\n        setMembers(arr)\r\n    }\r\n\r\n    return (\r\n        // <div className={styles.form}>\r\n        <div className={styles.container} >\r\n\r\n\r\n\r\n            <div className={styles.title} >Create New Project</div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    placeholder='Project Name'\r\n                    autoComplete=\"off\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label=\"Description\"\r\n                    id=\"description\"\r\n                    placeholder='Project Description'\r\n                    spellCheck=\"false\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span className={styles['text-invite']}>Add Members</span>\r\n\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['members-input']}\r\n                        autoComplete=\"off\"\r\n                        value={member}\r\n                        onFocus={onFocus}\r\n                        onBlur={onBlur}\r\n                        onChange={(e) => setMember(e.target.value)}\r\n                        label=\"Invite members\"\r\n                        id=\"members\"\r\n                        placeholder='Teammate Username'\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            showMembers &&\r\n                            <div className={styles.members}>\r\n                                {\r\n                                    allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                        .filter((e) => {\r\n                                            const found = members.find(element => element.username === e.username)\r\n                                            if (found) {\r\n                                                return false\r\n                                            } else {\r\n                                                return true\r\n                                            }\r\n                                        })\r\n                                        .sort((a, b) => a.username.localeCompare(b.username))\r\n                                        .map(u => {\r\n                                            return (\r\n                                                <ButtonClean\r\n                                                    key={u._id}\r\n                                                    className={styles.user}\r\n                                                    onClick={() => addMember(u)}\r\n                                                    title={<div>\r\n                                                        <div>{u.username}</div>\r\n                                                        <div className={styles.email}>{u.email}</div>\r\n                                                    </div>}\r\n                                                />)\r\n                                        })\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map((m,index) => {\r\n                        return (\r\n                            <span key={index}>\r\n                            <AvatarUser  user={m} onClick={() => removeMember(m)} size={40}/>\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n            <ButtonGrey onClick={(e)=>handleSubmit(e)} title=\"Create\" className={styles['create-button']}/>\r\n                {/* <button type='submit' className={styles['create-button']}>Create</button> */}\r\n            </div>\r\n\r\n        </div>\r\n        // </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport styles from \"./index.module.css\"\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport LinkComponentTitle from '../LinkTitle'\r\nimport { useParams } from 'react-router-dom'\r\nimport ButtonClean from '../ButtonClean'\r\nimport Transparent from '../Transparent'\r\nimport CreateProject from '../CreateProject'\r\nimport ButtonCleanTitle from '../ButtonCleanTitle'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function ProjectDropdown() {\r\n    const teamContext = useContext(TeamContext)\r\n    const projectContext = useContext(ProjectContext)\r\n    const params = useParams()\r\n    const projectRef = useRef(null)\r\n    const [showProjectForm, setShowProjectForm] = useState(false)\r\n    const [showOldProjects, setShowOldProjects] = useState(false)\r\n    const [isProjectActive, setIsProjectActive] = useDetectOutsideClick(projectRef)\r\n\r\n    useEffect(() => {\r\n        if (projectContext.project.isFinished === true) {\r\n            setShowOldProjects(true)\r\n        } else {\r\n            setShowOldProjects(false)\r\n        }\r\n    }, [projectContext.project.isFinished])\r\n\r\n\r\n    return (\r\n        <div className={`${styles.container} ${styles['project-media']}`}>\r\n            <div className={styles.title}>Project:</div>\r\n            <div className={styles['dropdown-container']}>\r\n                <ButtonCleanTitle\r\n                    className={styles.button}\r\n                    onClick={() => setIsProjectActive(!isProjectActive)}\r\n                    title={projectContext.project.name}\r\n                />\r\n                {isProjectActive && <div ref={projectRef} className={styles.dropdown} >\r\n                    <div className={styles['options-container']} >\r\n                        {teamContext.currentProjects.filter(!showOldProjects ? (p => (p.isFinished === false) || (p.isFinished === undefined)) : (p => (p.isFinished === true)))\r\n                            .reverse()\r\n                            .map(p => (\r\n                                <LinkComponentTitle\r\n                                    href={`/project-board/${params.teamid}/${p._id}`}\r\n                                    key={p._id}\r\n                                    title={p.name}\r\n                                    onClick={() => { setIsProjectActive(false) }}\r\n                                    className={styles.options}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <ButtonClean\r\n                        onClick={() => setShowProjectForm(true)}\r\n                        title='Create Project'\r\n                        className={`${styles.options} ${styles['last-option']}`}\r\n                    />\r\n                </div>}\r\n            </div>\r\n\r\n            {showProjectForm && <Transparent hideForm={() => setShowProjectForm(false)}>\r\n                <CreateProject hideForm={() => setShowProjectForm(false)} />\r\n            </Transparent>}\r\n        </div>\r\n    )\r\n}","import React, { useContext, useRef, useState, useEffect } from 'react'\r\nimport styles from \"./index.module.css\"\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function ViewDropdown() {\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const projectContext = useContext(ProjectContext)\r\n    const viewRef = useRef(null)\r\n    const [isViewActive, setIsViewActive] = useDetectOutsideClick(viewRef)\r\n    const [viewState, setViewState] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('board')) {\r\n            setViewState('Board')\r\n        }\r\n        if (window.location.href.includes('list')) {\r\n            setViewState('List')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.title}>View:</div>\r\n            <div className={styles['dropdown-container']}>\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setIsViewActive(!isViewActive)}\r\n                    title={viewState}\r\n                />\r\n                {isViewActive && <div ref={viewRef} className={styles.dropdown} >\r\n                    <ButtonClean\r\n                        title='Board'\r\n                        className={styles.options}\r\n                        onClick={() => { history.push(`/project-board/${params.teamid}/${projectContext.project._id}`); setIsViewActive(false) }}\r\n                    />\r\n                    <ButtonClean\r\n                        title='List'\r\n                        className={`${styles.options} ${styles['last-option']}`}\r\n                        onClick={() => { history.push(`/project-list/${params.teamid}/${projectContext.project._id}`); setIsViewActive(false) }}\r\n                    />\r\n                </div>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useRef } from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport AvatarUser from '../AvatarUser'\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\n\r\nexport default function ProfileDropdown() {\r\n    const profileRef = useRef(null)\r\n    const history = useHistory()\r\n    const context = useContext(UserContext)\r\n    const [isProfileActive, setIsProfileActive] = useDetectOutsideClick(profileRef)\r\n\r\n    return (<div className={styles['dropdown-container']}>\r\n        <ButtonClean\r\n            className={styles.avatar}\r\n            onClick={() => setIsProfileActive(!isProfileActive)}\r\n            title={<AvatarUser user={context.user} size={40} />}\r\n        />\r\n        {isProfileActive &&\r\n            <div\r\n                ref={profileRef}\r\n                className={`${styles.dropdown} ${styles.profile}`}\r\n            >\r\n                <ButtonClean\r\n                    title='Profile'\r\n                    className={`${styles.options} ${styles.profile}`}\r\n                    onClick={() => history.push(`/profile/${context.user && context.user.id}`)}\r\n                />\r\n\r\n                <ButtonClean\r\n                    onClick={context.logOut}\r\n                    title='Log Out'\r\n                    className={`${styles.options} ${styles['last-option']} ${styles.profile}`}\r\n                />\r\n            </div>\r\n        }\r\n    </div>)\r\n}\r\n","import React, { useContext, useState, useEffect, useCallback } from \"react\"\r\nimport styles from \"./index.module.css\"\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport ProjectContext from \"../../contexts/ProjectContext\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport SearchField from \"../SearchField\"\r\nimport TeamDropdown from \"../HeaderDropdowns/TeamDropdown\"\r\nimport ProjectDropdown from \"../HeaderDropdowns/ProjectDropdown\"\r\nimport ViewDropdown from \"../HeaderDropdowns/ViewDropdown\"\r\nimport ProfileDropdown from \"../HeaderDropdowns/ProfileDropdown\"\r\n\r\nconst Header = ({ asideOn }) => {\r\n    const [isProjectVisibble, setIsProjectVisibble] = useState(false)\r\n    const [isViewVisibble, setIsViewVisibble] = useState(false)\r\n    const projectContext = useContext(ProjectContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n\r\n    const getData = useCallback(async () => {\r\n        const id = params.projectid\r\n        const token = getCookie(\"x-auth-token\");\r\n        const response = await fetch(`/api/projects/info/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            projectContext.setProject(data)\r\n        }\r\n    }, [history, params, projectContext])\r\n    \r\n    const goToHomePage = useCallback((deletedTeamId) => {\r\n        if (deletedTeamId !== params.teamid) return\r\n        history.push('/')\r\n    }, [history, params.teamid])\r\n\r\n    const goToTeamPage = useCallback((deletedProjectId) => {\r\n        if (deletedProjectId !== params.projectid) return\r\n        history.push(`/team/${params.teamid}`)\r\n    }, [history, params.projectid, params.teamid])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) {\r\n            teamContext.setSelectedTeam('Select')\r\n            return\r\n        } \r\n\r\n        if (teamContext.selectedTeam === 'Select') {\r\n            const teamId = params.teamid\r\n            teamContext.updateSelectedTeam(teamId)\r\n        }\r\n\r\n        if (window.location.href.includes('project')) {\r\n            setIsViewVisibble(true)\r\n            setIsProjectVisibble(true)\r\n            teamContext.getCurrentProjects(params.teamid)\r\n\r\n            if (projectContext.project === null || projectContext.project._id !== params.projectid) {\r\n                getData()\r\n            }\r\n        }\r\n    }, [getData, params, params.teamid, projectContext.project, teamContext,])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) return\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('team-deleted', goToHomePage)\r\n        return () => socket.off('team-deleted')\r\n    }, [goToHomePage, socket])\r\n\r\n    useEffect(() => {\r\n        if (!window.location.href.includes('project')) return\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-deleted', goToTeamPage)\r\n        return () => socket.off('project-deleted')\r\n    }, [goToTeamPage, socket])\r\n\r\n    if (window.location.href.includes('project') && !projectContext.project) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <header className={`${styles.navigation} ${asideOn ? styles.small : ''}`} >\r\n            <div className={styles.container}>\r\n                <div className={styles.links}>\r\n                    <TeamDropdown/>\r\n                    {isProjectVisibble && <ProjectDropdown/>}\r\n                    {isViewVisibble && <ViewDropdown/>}\r\n                </div>\r\n\r\n                <div className={`${styles.links} ${styles.font}`}>\r\n                    <SearchField asideOn={asideOn} />\r\n                    <ProfileDropdown/>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\nimport Aside from '../Aside'\r\nimport Header from \"../Header\"\r\nimport styles from \"./index.module.css\"\r\n\r\nconst PageLayout = ({ children, contentClassName }) => {\r\n  const [asideOn, setAsideOn] = useState(false)\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <Aside asideOn={asideOn} setAsideOn={setAsideOn} />\r\n      <Header asideOn={asideOn} />\r\n      <div \r\n        className={contentClassName ? contentClassName : `${styles.content} ${asideOn ? styles.small : ''}`}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageLayout","import React from \"react\"\r\nimport styles from \"./index.module.css\"\r\n\r\nconst Title = ( {title} ) => {\r\n    return (\r\n    <div className={styles.title}>{title}</div>\r\n    )\r\n}\r\n\r\nexport default Title","export default __webpack_public_path__ + \"static/media/home-page-pic.50bdb1b7.svg\";","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonGreyTitle = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`} title={title} >{title}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonGreyTitle","import React, { useContext, useState, useRef } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport CreateTeam from \"../../components/CreateTeam\"\r\nimport PageLayout from \"../../components/PageLayout\"\r\nimport Title from \"../../components/Title\"\r\nimport Transparent from \"../../components/Transparent\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/home-page-pic.svg'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonGreyTitle from \"../../components/ButtonGreyTitle\"\r\n\r\n\r\nconst Home = () => {\r\n  const dropdownRef = useRef(null)\r\n  const userContext = useContext(UserContext)\r\n  const history = useHistory()\r\n  const [showTeamForm, setShowTeamForm] = useState(false)\r\n  const [showTeamsVisibleForm, setShowTeamsVisibleForm] = useDetectOutsideClick(dropdownRef)\r\n  const userName = userContext.user.username\r\n  const userTeams = userContext.user.teams\r\n  const userId = userContext.user._id\r\n  const recentProjects = userContext.user.recentProjects\r\n\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n  const goToProject = (projectId) => {\r\n\r\n    userTeams.map(t => {\r\n      return (t.projects.forEach(element => {\r\n        if (element._id === projectId) {\r\n          history.push(`/project-board/${t._id}/${projectId}`)\r\n        }\r\n      }))\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <PageLayout>\r\n      <div>\r\n        {\r\n          showTeamForm ? (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n            <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n          </Transparent>) : null\r\n        }\r\n      </div>\r\n\r\n      <Title title='Home' />\r\n      <div className={styles.container}>\r\n\r\n        <span className={styles['left-buttons']}>\r\n\r\n          <div>\r\n            <ButtonGreyTitle className={styles['navigate-buttons']} title={'My Tasks'} onClick={() => history.push(`/my-tasks/${userId}`)} />\r\n\r\n          </div>\r\n\r\n          <div>\r\n            {/* <div className={styles['my-teams-container']}> */}\r\n            <ButtonGreyTitle className={styles['navigate-buttons']} title={'My Teams'} onClick={() => setShowTeamsVisibleForm(!showTeamsVisibleForm)} />\r\n\r\n\r\n            {/* </div> */}\r\n            <span>\r\n              <div className={styles['select-team-container']}>\r\n                {\r\n                  showTeamsVisibleForm ?\r\n                    <div className={styles['teams-home']} ref={dropdownRef}>\r\n                      {\r\n                        userTeams.length > 0\r\n                          ? userTeams.map((t, index) => {\r\n                            return (\r\n                              <span key={index}>\r\n                                <div\r\n                                  className={styles['navigate-buttons-teams']}\r\n                                  onClick={() => goToTeamPage(t._id)}\r\n                                  title={t.name}\r\n                                >\r\n                                  {t.name}</div>\r\n\r\n                              </span>\r\n                            )\r\n                          }\r\n                          )\r\n                          : \"You haven't joined any teams yet\"\r\n                      }\r\n                    </div>\r\n                    : null\r\n                }\r\n              </div>\r\n            </span>\r\n          </div>\r\n\r\n          <div>\r\n            <ButtonGreyTitle className={styles['navigate-buttons']} title={'Create New Team'} onClick={() => setShowTeamForm(true)} />\r\n\r\n          </div>\r\n\r\n        </span>\r\n\r\n        <div className={styles['pic-container']}>\r\n          <img className={styles.pic1} src={pic1} alt=\"\" />\r\n          <div className={styles['welcome-user']}>{`Welcome ${userName}!`}</div>\r\n          <ButtonGreyTitle className={styles['navigate-buttons']} title={'Get Started'} onClick={() => history.push(`/get-started/`)} />\r\n        </div>\r\n\r\n        <span className={styles['right-buttons']}>\r\n          {\r\n            (recentProjects) ?\r\n              <div>\r\n                <div >{`Recent projects:`}</div>\r\n                {\r\n                  recentProjects.slice(0).reverse().map((p, index) => {\r\n                    return (\r\n                      <div key={p._id}>\r\n                        <ButtonGreyTitle className={styles['navigate-buttons']} title={p.name} onClick={() => goToProject(p._id)} />\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n\r\n\r\n              </div>\r\n              : null\r\n          }\r\n        </span>\r\n      </div>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default Home","export default __webpack_public_path__ + \"static/media/welcome-page-1.346d3517.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-2.73d5ef5e.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-3.5a073b3b.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-4.5b854b1a.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-5.a24b3016.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-6.2c79ee8c.svg\";","export default __webpack_public_path__ + \"static/media/instagram-icon.1043ced2.svg\";","export default __webpack_public_path__ + \"static/media/twitter-icon.0f92d6a5.svg\";","export default __webpack_public_path__ + \"static/media/facebook-icon.529cf39a.svg\";","import userObject from \"./userObject\"\r\n\r\nconst authenticate = async (url, method, body, onSuccess, onFailure) => {\r\n    try {\r\n        \r\n        const promise = await fetch(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        \r\n        const authToken = promise.headers.get(\"Authorization\")\r\n        const response = await promise.json()\r\n        \r\n        if (response.needPassword) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.wrongPassword) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.wrongUser) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.exist) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n\r\n        document.cookie = `x-auth-token=${authToken};path=/`\r\n\r\n\r\n        if (response.user.username && authToken) {\r\n            onSuccess(userObject(response));\r\n        } else {\r\n            onFailure(response)\r\n        }\r\n\r\n    } catch (e) {\r\n        onFailure(e)\r\n    }\r\n}\r\n\r\nexport default authenticate","import userObject from \"./userObject\"\r\n\r\nconst responseGoogle = async (googleResponse, onSuccess, onFailure) => {\r\n\r\n    try {\r\n        const tokenId = googleResponse.tokenId\r\n        const promise = await fetch(\"/api/user/google-login\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({tokenId}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        const authToken = promise.headers.get(\"Authorization\")\r\n        document.cookie = `x-auth-token=${authToken};path=/`\r\n\r\n        const response = await promise.json()\r\n\r\n        if (response.user.username && authToken) {\r\n            onSuccess(userObject(response))\r\n        } else {\r\n            onFailure(response)\r\n        }\r\n        \r\n    } catch (error) {\r\n        onFailure(error)\r\n    }\r\n}\r\n\r\nexport default responseGoogle","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div>\r\n            {props.alert ? (<div className={styles.alert}>\r\n                {props.message}\r\n            </div>) : null}\r\n        </div>\r\n    )\r\n}","import getCookie from \"./cookie\"\r\nimport userObject from \"./userObject\"\r\n\r\nconst authenticateUpdate = async (url, method, body, onSuccess, onFailure) => {\r\n\r\n    try {\r\n        \r\n        const cookie = getCookie('x-auth-token')\r\n    \r\n        const promise = await fetch(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": cookie\r\n            }\r\n        })\r\n        \r\n        const response = await promise.json()\r\n        if (response.user.username) {            \r\n            onSuccess(userObject(response))\r\n        } else {\r\n            onFailure()\r\n        }\r\n\r\n    } catch (e) {\r\n        onFailure(e)\r\n    }\r\n}\r\n\r\nexport default authenticateUpdate","import React, { useCallback, useContext, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Alert from '../Alert'\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport authenticateUpdate from '../../utils/authenticate-update'\r\n\r\n\r\n\r\nexport default function AddPassword(props) {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rePassword, setRePassword] = useState(\"\")\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n\r\n    const userContext = useContext(UserContext)\r\n\r\n\r\n    const history = useHistory()\r\n    const userId = props.userId\r\n   \r\n\r\n\r\n    const handleSubmit = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n\r\n\r\n        if (!password || !rePassword) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n       \r\n\r\n        await authenticateUpdate(`/api/user/addNewPassword/${userId}`, 'PUT', {        //     \r\n            password        \r\n        }, (response) => {\r\n            userContext.logIn(response.user)\r\n            console.log(userContext.user);\r\n            history.push(\"/\")\r\n        })        \r\n\r\n    }, [history, userContext, password, rePassword, userId])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form className={styles.container} >\r\n\r\n            <div className={styles['inner-container']}>\r\n\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    </div>\r\n\r\n                    <div className={styles.title} >Add password to user</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['pass-input']}\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            label=\"New Password\"\r\n                            id=\"password\"\r\n                        />\r\n\r\n\r\n\r\n                        <div className={styles['pass-instructions']}>\r\n                            <p>Use 8 or more characters with a mix </p>\r\n                            <p>of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Confirm Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['pass-input']}\r\n                            type=\"password\"\r\n                            value={rePassword}\r\n                            onChange={e => setRePassword(e.target.value)}\r\n                            label=\"Confirm Password\"\r\n                            id=\"rePassword\"\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className={styles['new-pass-alert']}>\r\n                        Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n                        </div>\r\n\r\n                    <div className={styles['button-div-login']}>\r\n                        <button type='submit' className={styles['login-button']} onClick={handleSubmit}>Submit</button>\r\n                    </div>\r\n\r\n                    <div className={styles['text-login']}>User was registered with Google. Please add password for this Website</div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google.2cf12fa6.svg\";","import React, { useState, useContext } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from \"./index.module.css\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport Transparent from \"../Transparent\"\r\nimport AddPassword from \"../FormAddPassword\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from \"../Alert\"\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [userId, setUserId] = useState('')\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        await authenticate(\"/api/user/login\", 'POST', {\r\n            email,\r\n            password\r\n        }, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            if (response.needPassword) {\r\n                setUserId(response.userId)\r\n                setShowForm(true)\r\n            }\r\n            if (response.wrongPassword) {\r\n                setWrongPassAllert(true)\r\n            }\r\n            if (response.wrongUser) {\r\n                setWrongUserAllert(true)\r\n            }\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setShowForm(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                showForm ?\r\n                    <div>\r\n                        <Transparent hideForm={hideForm}>\r\n                            <AddPassword hideForm={hideForm} userId={userId} email={email} />\r\n                        </Transparent>\r\n                    </div> : null\r\n            }\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n                <div className={styles['inner-container']}>\r\n\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n                        <div className={styles.alerts}>\r\n                            <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                            <Alert alert={wrongPassAllert} message={'Wrong Password'} />\r\n                            <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                        </div>\r\n\r\n                        <div className={styles.title} >Log In with E-mail</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles['email-input']}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label=\"Email\"\r\n                                id=\"email\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Password:</div>\r\n                            <input\r\n                                className={styles['pass-input']}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label=\"Password\"\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['button-div-login']}>\r\n                            <button type='submit' className={styles['login-button']}>Log In</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['text-div']}>\r\n                            <p className={styles['forgot-pass']}\r\n                                onClick={() => { props.goToForgotPassword(); props.hideForm() }}>\r\n                                Forgot Password?\r\n                        </p>\r\n                            <p className={styles['new-to-sm']}>\r\n                                New to Smart Manager?\r\n                        <button className={styles['sign-up-btn']}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                        </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['button-div-google-login']}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles['google-login-btn']}\r\n                                    >\r\n                                        <img src={google} alt=\"logo\" width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText=\"Login\"\r\n                                onSuccess={handleGoogle}\r\n                                // onFailure={errorGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, { useContext, useState } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport styles from \"./index.module.css\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Alert from \"../Alert\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\n\r\n\r\n\r\nconst SignupForm = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [userExist, setUserExist] = useState(false)\r\n    const [validEmailAlert, setValidEmailAlert] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n\r\n    function validateEmail(email) {\r\n        var re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\r\n        return re.test(email);\r\n    }\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n\r\n\r\n        setValidEmailAlert(false)\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n        setUserExist(false)\r\n\r\n        const valid = validateEmail(email)\r\n        \r\n        if (!valid) {\r\n            setValidEmailAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n\r\n\r\n        if (!username || !password || !rePassword || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        await authenticate(\"/api/user/register\", 'POST', {\r\n            email,\r\n            username,\r\n            password\r\n        }, (user) => {\r\n            context.logIn(user);\r\n            history.push(\"/\");\r\n        }, (response) => {\r\n            if (response.exist) {\r\n                setUserExist(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n\r\n            <div className={styles['inner-container']}>\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={userExist} message={'User with this email already exists'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                        <Alert alert={validEmailAlert} message={'Please enter valid email address'} />\r\n                    </div>\r\n                    <div className={styles.title}  >Sign Up with E-mail</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Username:</div>\r\n                        <input\r\n                            placeholder='John Smith'\r\n                            className={styles['sign-up-input']}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            label=\"Username\"\r\n                            id=\"username\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Email:</div>\r\n                        <input\r\n                            placeholder='John@example.com'\r\n                            className={styles['sign-up-input']}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            label=\"Email\"\r\n                            id=\"email\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            label=\"Password\"\r\n                            id=\"password\"\r\n                        />\r\n                        <div className={styles['pass-instructions']}>\r\n                            <p>Use 8 or more characters with a</p>\r\n                            <p>mix of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Re-type Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type=\"password\"\r\n                            value={rePassword}\r\n                            onChange={(e) => setRePassword(e.target.value)}\r\n                            label=\"Re-Password\"\r\n                            id=\"re-password\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['button-div-login']}>\r\n                        <button type='submit' className={styles['sign-up-button']}>Get Started</button>\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <h3>\r\n                            or\r\n                        </h3>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles['button-div-google-login']}>\r\n                        <GoogleLogin\r\n                            render={renderProps => (\r\n                                <button onClick={renderProps.onClick}\r\n                                    className={styles['google-login-btn']}\r\n                                >\r\n                                    <img src={google} alt=\"logo\" width='25' height='25' />Sign Up with Google</button>\r\n                            )}\r\n                            clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                            buttonText=\"Sign up with Google\"\r\n                            onSuccess={handleGoogle}\r\n                            // onFailure={errorGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <p className={styles['already-sign-up']}>\r\n                            Already Sign Up?\r\n                        <button className={styles['sign-up-btn']} onClick={() => { props.goToLogin(); props.hideForm() }}>Log In</button>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SignupForm;","import React, { useState, useContext } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from \"../Alert\"\r\nimport authenticateUpdate from \"../../utils/authenticate-update\"\r\n\r\n\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [rePassword, setRePassword] = useState(\"\")\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n        if (password !== rePassword) {\r\n            setWrongPassAllert(true)\r\n            return\r\n        }\r\n\r\n        const promise = await fetch(\"/api/user/login\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        const response = await promise.json()\r\n\r\n        if (response.wrongUser) {\r\n            setWrongUserAllert(true)\r\n            return\r\n        }\r\n        let userId\r\n        console.log(\"Error\", response)\r\n        if (response.user) {\r\n            userId = response.user._id\r\n        } else if (response.userId) {\r\n            userId = response.userId\r\n        }\r\n\r\n        authenticateUpdate(`/api/user/addNewPassword/${userId}`, 'PUT', {        //     \r\n            password\r\n        }, (response) => {\r\n            context.logIn(response.user)\r\n            history.push(\"/\")\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n                <div className={styles.alerts}>\r\n                    <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    <Alert alert={wrongPassAllert} message={'Passwords do not match'} />\r\n                    <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                </div>\r\n\r\n                <div className={styles['inner-container']}>\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n\r\n                        <div className={styles.title} >Forgot Password Form</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles.emailInput}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label=\"Email\"\r\n                                id=\"email\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label=\"Password\"\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>Re-type New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={rePassword}\r\n                                onChange={e => setRePassword(e.target.value)}\r\n                                label=\"Confirm Password\"\r\n                                id=\"rePassword\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles.buttonDivLogin}>\r\n                            <button type='submit' className={styles.loginButton}>Submit</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.textDiv}>\r\n\r\n                            <p className={styles.newToSmM}>\r\n                                New to Smart Manager?\r\n                        <button className={styles.signUpBtn}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                        </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.buttonDivGoogleLogin}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles.googleLoginBtn}\r\n                                    >\r\n                                        <img src={google} alt=\"logo\" width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText=\"Login\"\r\n                                onSuccess={handleGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordForm;","import React, { useState } from \"react\"\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport pic1 from '../../images/welcome-page/welcome-page-1.svg'\r\nimport pic2 from '../../images/welcome-page/welcome-page-2.svg'\r\nimport pic3 from '../../images/welcome-page/welcome-page-3.svg'\r\nimport pic4 from '../../images/welcome-page/welcome-page-4.svg'\r\nimport pic5 from '../../images/welcome-page/welcome-page-5.svg'\r\nimport pic6 from '../../images/welcome-page/welcome-page-6.svg'\r\nimport instagram from '../../images/welcome-page/instagram-icon.svg'\r\nimport twitter from '../../images/welcome-page/twitter-icon.svg'\r\nimport facebook from '../../images/welcome-page/facebook-icon.svg'\r\nimport LoginForm from \"../../components/LoginForm\"\r\nimport Transparent from \"../../components/Transparent\"\r\nimport SignupForm from \"../../components/SignupForm\"\r\nimport ForgotPasswordForm from \"../../components/FormForgotPassword\"\r\n\r\n\r\nconst WelcomePage = () => {\r\n\r\n  const [isVisible, setIsVisible] = useState(false)\r\n  const [isVisibleSignUp, setIsVisibleSignUp] = useState(false)\r\n  const [isVisibleForgot, setIsVisibleForgot] = useState(false)\r\n\r\n\r\n  return (\r\n\r\n    <div className={styles.container}>\r\n        {isVisible ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n              <LoginForm hideForm={() => setIsVisible(!isVisible)} goToSignUp={()=>setIsVisibleSignUp(!isVisibleSignUp)} \r\n              goToForgotPassword={()=>setIsVisibleForgot(!isVisibleForgot)}/>\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n        {isVisibleSignUp ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisibleSignUp(!isVisibleSignUp)} >\r\n              <SignupForm hideForm={() => setIsVisibleSignUp(!isVisibleSignUp)} goToLogin={()=>setIsVisible(!isVisible)} />\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n        {isVisibleForgot ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisibleForgot(!isVisibleForgot)} >\r\n              <ForgotPasswordForm hideForm={() => setIsVisibleForgot(!isVisibleForgot)} goToSignUp={()=>setIsVisibleSignUp(!isVisibleSignUp)} />\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n\r\n      <div className={styles['content-wrap']}>\r\n        <div className={styles['top-container']}>\r\n          <div className={styles['top-div-container']}>\r\n            <div className={styles['header-nav']}>\r\n              <span className={styles.logo}>\r\n                <img src={logo} alt=\"logo\" width='100%' height='100%' />\r\n              </span>\r\n              <span className={styles['first-buttons']}>\r\n                <button className={styles['login-button']} onClick={()=>setIsVisible(!isVisible)}  >Log In</button>\r\n                <button className={styles['sign-up-button']} onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Sign Up</button>\r\n              </span>\r\n            </div>\r\n              <div className={styles.pic1}>\r\n                <img src={pic1} alt=\"\" width='100%' />\r\n              </div>\r\n              <div className={styles.pic2}>\r\n                <img src={pic2} alt=\"\" width='100%' />\r\n              </div>\r\n          </div>\r\n          <div className={styles['lower-div-container']}>\r\n            <div className={styles['first-text']}>\r\n              <p className={styles.headers}>Manage your work in a <span className={styles.lucida}>Smart</span> way! </p>\r\n              <div className={styles.paragraph}>\r\n                <p >The ideas get more clear, organized and focused on.</p>\r\n                <p >Flexible and time saving for the whole team. </p>\r\n                <button className={styles['second-sign-up-button']}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Free Sign Up</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles['second-container']}>\r\n          <div className={styles['first-row']}>\r\n            <div className={styles['second-text']}>\r\n              <p className={styles.headers}>Work and participate in different teams </p>\r\n              <div className={styles.paragraph}>\r\n                <p >Follow who and when is doing tasks. Be always</p>\r\n                <p >informed with the accomplishment of the projects. </p>\r\n                <button className={styles['third-sign-up-button']}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Try It Now</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles['pic3-container']}>\r\n              <img className={styles.picture} src={pic3} alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div className={styles['second-row']}>\r\n            <div className={styles['pic4-container']}>\r\n              <img className={styles.picture} src={pic4} alt=\"\" />\r\n            </div>\r\n            <div className={styles['second-row-colum']}>\r\n              <div className={styles['second-text']}>\r\n                <p className={styles.headers}>Еаsy to manage all the information</p>\r\n                <div className={styles.paragraph}>\r\n                  <p >Add stickers, notes, comments, attachments in your</p>\r\n                  <p >  Smart Manager.</p>\r\n                  <p >Collaborate with others in your Team.</p>\r\n                </div>\r\n              </div>\r\n              <div className={styles['second-row-pic']} >\r\n                <img className={styles.picture} src={pic5} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles['third-row']}>\r\n            <div className={styles['second-text']}>\r\n              <p className={styles.headers}>Start your <span className={styles.lucida}>Smart Manager</span> Now </p>\r\n              <div className={styles.paragraph}>\r\n                <p >Connect with other teams from <span className={styles.lucida}>The Smart Family</span>,</p>\r\n                <p > save time with more work done.</p>\r\n                <button className={styles['second-sign-up-button']}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Get Started</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles['pic6-container']}>\r\n              <img className={styles.picture} src={pic6} alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <footer className={styles.footer}>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>Contact Us</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>+359 52 317 395</p>\r\n            <p>smartmanager@gmail.com</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>SERVICES</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>Contact Us</p>\r\n            <p>Ordering & Payment FAQ</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>INFORMATION</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>About SMART MANAGER</p>\r\n            <p>Work With US</p>\r\n            <p>Privacy Policy</p>\r\n            <p>Terms & Conditions</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['last-column']}>\r\n          <div className={styles['social-media-container']}>\r\n            <span>\r\n              <img className={styles['social-media']} src={instagram} alt=\"\" />\r\n            </span>\r\n            <span>\r\n              <img className={styles['social-media']} src={twitter} alt=\"\" />\r\n            </span>\r\n            <span>\r\n              <img className={styles['social-media']} src={facebook} alt=\"\" />\r\n            </span>\r\n          </div>\r\n          <div className={styles.sd2006}>SD2006</div>\r\n\r\n        </div>\r\n\r\n      </footer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WelcomePage","export default __webpack_public_path__ + \"static/media/profile-page-pic.2c3455c2.svg\";","export default __webpack_public_path__ + \"static/media/pen.4b4021f9.svg\";","import React, { useState, useEffect, useCallback, useContext, useRef } from \"react\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport PageLayout from \"../../components/PageLayout\"\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/profile-page-pic.svg'\r\nimport pen from '../../images/pen.svg'\r\nimport authenticateUpdate from '../../utils/authenticate-update';\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Title from \"../../components/Title\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport Alert from \"../../components/Alert\"\r\nimport ButtonGrey from '../../components/ButtonGrey'\r\nimport ConfirmDialog from \"../../components/ConfirmationDialog\"\r\nimport { Image, Transformation } from 'cloudinary-react';\r\n\r\n\r\nconst ProfilePage = () => {\r\n  const dropdownRef = useRef(null)\r\n  const userContext = useContext(UserContext)\r\n  const [userEmail, setUserEmail] = useState(null)\r\n  const [passwordActive, setPaswordActive] = useState(false)\r\n  const [userNameActive, setUserNameActive] = useState(false)\r\n  const [username, setUsername] = useState(userContext.user.username);\r\n  const [password, setPassword] = useState(null);\r\n  const [rePassword, setRePassword] = useState(null);\r\n  const [alert, setAlert] = useState(false)\r\n  const [showTeamsVisibleForm, setShowTeamsVisibleForm] = useDetectOutsideClick(dropdownRef)\r\n  const [isEditListActive, setIsEditListActive] = useDetectOutsideClick(dropdownRef)\r\n  const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n\r\n  const params = useParams()\r\n  const history = useHistory()\r\n\r\n\r\n  const userName = userContext.user.username\r\n  const userTeams = userContext.user.teams\r\n  const id = params.userid;\r\n\r\n\r\n\r\n  const getData = useCallback(async () => {\r\n\r\n    const response = await fetch(`/api/user/${id}`)\r\n    if (!response.ok) {\r\n      history.push(\"/error\")\r\n    } else {\r\n      const user = await response.json()\r\n      setUserEmail(user.email)\r\n\r\n    }\r\n  }, [history, id])\r\n\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    setAlert(false)\r\n    setPaswordActive(false)\r\n    setUserNameActive(false)\r\n\r\n\r\n\r\n    if (!username && !password) {\r\n      return\r\n    }\r\n\r\n    if (password !== rePassword) {\r\n      setAlert(true)\r\n      return\r\n    }\r\n\r\n    // if(password && rePassword){\r\n    //   setChangePassAlert(true)\r\n    // }\r\n\r\n    await authenticateUpdate(`/api/user/${id}`, 'PUT', {\r\n      username,\r\n      password\r\n    }, (user) => {\r\n      userContext.logIn(user)\r\n    }, (e) => {\r\n      console.log(\"Error\", e);\r\n    })\r\n    getData()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [getData])\r\n\r\n  if (!userName) {\r\n    return (\r\n      <PageLayout>\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#363338\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </PageLayout>\r\n    )\r\n  }\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n\r\n  function changeProfilePicture() {\r\n    const widget = window.cloudinary.createUploadWidget({\r\n      cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n      uploadPreset: process.env.REACT_APP_UPLOAD_PRESET\r\n    }, (error, result) => {\r\n      if (result.event === 'success') {\r\n        const path = result.info.path\r\n        const publicId = result.info.public_id\r\n        const newImage = {\r\n          path,\r\n          publicId\r\n        }\r\n        authenticateUpdate(`/api/user/image/${id}`, 'PUT', {\r\n          newImage,\r\n          oldImage: userContext.user.image\r\n        }, (user) => {\r\n          userContext.logIn(user)\r\n        }, (e) => {\r\n          console.log(\"Error\", e);\r\n        })\r\n        getData()\r\n  \r\n      }\r\n  \r\n      if (error) {\r\n        //TODO: Handle errors\r\n  \r\n        return\r\n      }\r\n    })\r\n\r\n    widget.open()\r\n  }\r\n\r\n  const deletePic = async () => {\r\n\r\n    await authenticateUpdate(`/api/user/image/${id}`, 'PUT', {\r\n      oldImage: userContext.user.image\r\n    }, (user) => {\r\n      userContext.logIn(user)\r\n    }, (e) => {\r\n      console.log(\"Error\", e);\r\n    })\r\n    getData()\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <PageLayout>\r\n\r\n      {confirmOpen &&\r\n        <ConfirmDialog\r\n          title={'delete this picture'}\r\n          hideConfirm={() => setConfirmOpen(false)}\r\n          onConfirm={() => deletePic()}\r\n        />\r\n      }\r\n\r\n\r\n      <Title title='Profile' />\r\n\r\n      <div className={styles.container}>\r\n\r\n        <div className={styles['left-container']}>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey title={'Username:'} className={styles['navigate-buttons']}\r\n              onClick={() => { setUserNameActive(!userNameActive) }} />\r\n            < input\r\n              ref={function (input) {\r\n                if (input !== null) {\r\n                  input.focus();\r\n                }\r\n              }}\r\n              value={username}\r\n              onChange={e => setUsername(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={userName}\r\n              disabled={!userNameActive}\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey title={'Change Password'} className={styles['navigate-buttons']}\r\n              onClick={() => { setPaswordActive(!passwordActive) }} />\r\n            < input\r\n              onChange={e => setPassword(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={'********'}\r\n              disabled={!passwordActive}\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className={styles.alerts}>\r\n            <Alert alert={alert} message={'Passwords do not match'} />\r\n          </div>\r\n\r\n          {passwordActive ?\r\n            <div className={styles['new-pass-alert']}>\r\n              Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n            </div> : null\r\n          }\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey title={'Confirm Password'} className={styles['navigate-buttons']}\r\n              onClick={() => { setPaswordActive(!passwordActive) }} />\r\n\r\n            < input\r\n              onChange={e => setRePassword(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={'********'}\r\n              disabled={!passwordActive}\r\n              type=\"password\"\r\n            />\r\n\r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n\r\n            <ButtonGrey title={'Email:'} className={styles['navigate-buttons']}\r\n            />\r\n\r\n            < input\r\n              className={styles['input-fields-profile']}\r\n              value={userEmail}\r\n              disabled={true}\r\n            />\r\n\r\n          </div>\r\n\r\n          <div className={styles['button-input-div-tasks']}>\r\n            <ButtonGrey title={'My Tasks'} className={styles['navigate-buttons']}\r\n              onClick={() => history.push(`/my-tasks/${id}`)} />\r\n          < input\r\n              className={styles['input-fields-tasks']}\r\n              value={''}\r\n              disabled={true}\r\n            />\r\n          \r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <div className={styles.myTeamsContainer}>\r\n              <ButtonGrey title={'My Teams'} className={styles['navigate-buttons']}\r\n                onClick={() => setShowTeamsVisibleForm(!showTeamsVisibleForm)} />\r\n              <div className={styles['select-team-container']}>\r\n                {\r\n                  showTeamsVisibleForm ?\r\n                    <div className={styles['teams-home']} ref={dropdownRef}>\r\n                      {userTeams.length > 0 ?\r\n                        userTeams.map((t, index) => {\r\n                          return (\r\n                            <span key={index}>\r\n                              <div\r\n                                className={styles['navigate-buttons-teams']}\r\n                                onClick={() => goToTeamPage(t._id)}\r\n                                title={t.name}\r\n                              >{t.name}</div>\r\n                            </span>\r\n                          )\r\n                        }\r\n                        )\r\n                        : \"You haven't joined any teams yet\"\r\n                      }\r\n                    </div>\r\n                    : null\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className={styles['button-div-save']}>\r\n            <ButtonGrey title={'SAVE'} className={styles['save-button']}\r\n               onClick={(e) => handleSubmit(e)}/>\r\n              {/* <button type='submit' className={styles['save-button']} onClick={(e) => handleSubmit(e)}>SAVE</button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className={styles['pic-container']}>\r\n          <div className={styles['profile-pic-container']}>\r\n            <div className={styles['profile-pic']}\r\n              onClick={() => {\r\n                userContext.user.image ?\r\n                  setIsEditListActive(!isEditListActive)\r\n                  : changeProfilePicture()\r\n              }}\r\n            >\r\n              {userContext.user.image ?\r\n\r\n                <div className={styles['profile-picture']}>\r\n                 \r\n                  <Image publicId={userContext.user.image.publicId} className={styles['profile-picture-pic']} >\r\n                    <Transformation width=\"200\" height=\"200\" gravity=\"faces\" crop=\"fill\"\r\n                    />\r\n                  </Image>\r\n\r\n\r\n                  <div className={styles.relative}>\r\n                    {isEditListActive && <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                      <ButtonGrey\r\n                        onClick={changeProfilePicture}\r\n                        title='Edit'\r\n                        className={styles.edit}\r\n                      />\r\n                      <ButtonGrey\r\n                        onClick={() => {\r\n                          setConfirmOpen(true)\r\n                        }}\r\n                        title='Delete'\r\n                        className={styles.delete}\r\n                      />\r\n                    </div>}\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                  <p className={styles['load-pic-text']}>Load a profile picture</p>\r\n                  <img className={styles.pen}\r\n                    src={pen} alt=\"\" />\r\n                </div>\r\n              }\r\n\r\n            </div>\r\n\r\n            <p>{userName}</p>\r\n          </div>\r\n\r\n\r\n\r\n          <img className={styles.pic1} src={pic1} alt=\"\"\r\n          // width=\"80%\" height=\"80%\"\r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from \"../ButtonClean\"\r\nimport AvatarUser from '../AvatarUser'\r\n\r\n\r\nexport default function TeamMembers(props) {\r\n\r\n    const members = props.members\r\n    const invited = props.invited\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['members-avatars']}>\r\n                <div>\r\n                    Team Members:\r\n                </div>\r\n                {\r\n                    members.map((m, index) => {\r\n                        return (\r\n                            <ButtonClean\r\n                                key={index}\r\n                                title={\r\n                                    <AvatarUser user={m}\r\n                                        size={40}\r\n                                    />}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                invited.length !== 0 &&\r\n                <div className={styles['members-avatars']}>\r\n                    <div>\r\n                        Invited Members:\r\n                        </div>\r\n                    {\r\n                        invited.map((m, index) => {\r\n                            return (\r\n                                <span key={index}>\r\n                                <AvatarUser user={m}\r\n                                   \r\n                                    size={40}\r\n                                // onClick={() => { if (window.confirm('Are you sure you wish to delete this member?')) removeMember(m) }}\r\n                                />\r\n                                </span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamMembers from '../TeamMembers'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport AvatarUser from '../AvatarUser'\r\n\r\n\r\nexport default function EditTeam(props) {\r\n    const [currTeam, setCurrTeam] = useState(props.currTeam)\r\n    const [name, setName] = useState(currTeam.name)\r\n    const [description, setDescription] = useState(currTeam.description)\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState(currTeam.members)\r\n    const [invited, setInvited] = useState(currTeam.requests)\r\n    const [forInvite, setForInvite] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n\r\n    const teamId = params.teamid\r\n\r\n    const getData = useCallback(() => {\r\n\r\n        userContext.user.teams.forEach(t => {\r\n            if (t._id === teamId) {\r\n                setCurrTeam(t)\r\n            }\r\n        })\r\n        let teamAuthor = currTeam.author\r\n        setMembers(currTeam.members)\r\n        setInvited(currTeam.requests)\r\n        setDescription(currTeam.description)\r\n        setName(currTeam.name)\r\n        if (userContext.user.id === teamAuthor) {\r\n            setIsAdmin(true)\r\n        }\r\n    }, [userContext.user.id, currTeam.author, currTeam.description, currTeam.members, currTeam.name, currTeam.requests, userContext.user.teams, teamId])\r\n\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [getData])\r\n\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch('/api/user/get-all', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...forInvite]\r\n        arr.push(input)\r\n        setForInvite(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = async (input) => {\r\n\r\n        const arr = await members.filter(u => u._id !== input._id)\r\n            .filter(u => u._id !== input.id)\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            socket.emit('team-update', teamId)\r\n            if (input.id === userContext.user.id) {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeInvited = async (input) => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                removeInvitation: input\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            getData()\r\n            socket.emit('team-update', teamId)\r\n            socket.emit('message-sent', input._id)\r\n        }\r\n    }\r\n\r\n    const removeForInvite = (input) => {\r\n        const arr = forInvite.filter(u => u._id !== input._id)\r\n        setForInvite(arr)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        // event.preventDefault()\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members,\r\n                requests: forInvite\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            teamContext.setSelectedTeam(name)\r\n            getData()\r\n            socket.emit('team-update', teamId)\r\n            socket.emit('multiple-messages-sent', forInvite)\r\n            props.hideForm()\r\n        }\r\n\r\n    }\r\n\r\n    async function deleteTeam() {\r\n\r\n        if (!window.confirm('You will lost all team information - projects, lists and tasks')) {\r\n            return\r\n        }\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const deletedTeam = await response.json()\r\n            const recievers = [...deletedTeam.members, ...deletedTeam.requests]\r\n            socket.emit('team-deleted', { id: teamId, recievers })\r\n            history.push(\"/\")\r\n            props.hideForm()\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    let confirmationObjectFunctions = {\r\n        'remove this member': removeForInvite,\r\n        'leave this team': removeMember,\r\n        'delete this member from team': removeMember,\r\n        'delete this member from invited': removeInvited,\r\n        'delete this team': deleteTeam\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n\r\n\r\n            <div className={styles.form}>\r\n                <div className={styles.container}>\r\n\r\n                    <div className={styles.title} >Team</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <span> Name</span>\r\n                        <input\r\n                            className={styles['input-name']}\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                            label=\"Name\"\r\n                            id=\"name\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container-descr']}>\r\n                        <span> Description</span>\r\n                        <textarea\r\n                            className={styles['text-area-descr']}\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            label=\"Description\"\r\n                            id=\"description\"\r\n                            spellCheck=\"false\"\r\n\r\n                        />\r\n                    </div>\r\n                    {\r\n                        isAdmin ?\r\n                            <div className={styles['input-container-invite']}>\r\n                                <span className={styles['text-invite']}> Invite Members</span>\r\n\r\n                                <div className={styles['invite-input']}>\r\n                                    <input\r\n                                        className={styles['input-invite']}\r\n                                        autoComplete=\"off\"\r\n                                        value={member}\r\n                                        onChange={inputMembers}\r\n                                        label=\"Invite members\"\r\n                                        id=\"members\"\r\n                                        placeholder='username'\r\n                                        onBlur={onBlur}\r\n\r\n                                    />\r\n\r\n                                    <div className={styles['select-for-invite']}>\r\n                                        {\r\n                                            showMembers ?\r\n                                                <div className={styles.members}>\r\n                                                    {\r\n                                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                                            .filter((e) => {\r\n                                                                const found = members.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .filter((e) => {\r\n                                                                const found = invited.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .filter((e) => {\r\n                                                                const found = forInvite.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                                            .map((u, index) => {\r\n                                                                return (\r\n                                                                    <ButtonClean\r\n                                                                        key={index}\r\n                                                                        className={styles.user}\r\n                                                                        onClick={() => addMember(u)}\r\n                                                                        title={<div>\r\n                                                                            <div>{u.username}</div>\r\n                                                                            <div className={styles.email}>{u.email}</div>\r\n                                                                        </div>}\r\n                                                                    />)\r\n                                                            })\r\n                                                    }\r\n                                                </div> : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        isAdmin ?\r\n                            <div className={styles['members-div']}>\r\n\r\n\r\n\r\n                                <div className={styles['members-avatars']}>\r\n                                    <span>\r\n                                        <div>\r\n                                            Send Invitation:\r\n                                </div>\r\n                                        {\r\n                                            forInvite.map((m, index) => {\r\n                                                return (\r\n                                                    <span key={index}>\r\n                                                    <AvatarUser user={m}\r\n                                                    size={40}                                                       \r\n                                                        onClick={() => {\r\n                                                            setConfirmOpen(true)\r\n                                                            setConfirmTitle('remove this member')\r\n                                                            setCurrElement(m)\r\n                                                        }} />\r\n                                                        </span>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div className={styles.membersAvatars}>\r\n                                        <div>\r\n                                            Team Members:\r\n                                    </div>\r\n                                        {\r\n                                            members.map((m, index) => {\r\n                                                return (\r\n                                                    <span key={index}>\r\n                                                    <AvatarUser user={m}  size={40}\r\n                                                        onClick={() => {\r\n                                                            setConfirmOpen(true)\r\n                                                            setConfirmTitle('delete this member from team')\r\n                                                            setCurrElement(m)\r\n                                                        }}\r\n                                                    />\r\n                                                    </span>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        (invited.length !== 0) ?\r\n\r\n                                            <div className={styles.membersAvatars}>\r\n                                                <div>\r\n                                                    Invited Members:\r\n                                            </div>\r\n                                                {\r\n                                                    invited.map((m, index) => {\r\n                                                        return (\r\n                                                            <span key={index}>\r\n                                                            <AvatarUser user={m}                                                                \r\n                                                                size={40}\r\n                                                                onClick={() => {\r\n                                                                    setConfirmOpen(true)\r\n                                                                    setConfirmTitle('delete this member from invited')\r\n                                                                    setCurrElement(m)\r\n                                                                }}\r\n                                                            />\r\n                                                            </span>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className={styles['button-div']}>\r\n                                    <ButtonGrey className={styles['create-button']} onClick={() => handleSubmit()} title={'Submit Changes'} />\r\n                                    <ButtonGrey className={styles['create-button']} title={'Delete Team'}\r\n                                        onClick={() => {\r\n                                            setConfirmOpen(true)\r\n                                            setConfirmTitle('delete this team')\r\n                                            setCurrElement('')\r\n                                        }}\r\n                                    />\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <TeamMembers\r\n                                    members={members} invited={invited}\r\n                                />\r\n\r\n                                { !props.isMessage && <div className={styles['leave-team-btn-div']}>\r\n                                    <ButtonGrey title={'Leave Team'} className={styles['leave-team-btn']}\r\n                                        onClick={() => {\r\n                                            setConfirmOpen(true)\r\n                                            setConfirmTitle('leave this team')\r\n                                            setCurrElement(userContext.user)\r\n                                        }}\r\n\r\n                                    />\r\n\r\n                                </div>}\r\n                            </div>\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport getCookie from \"../../utils/cookie\"\r\n\r\nexport default function useInboxUtils() {\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const params = useParams()\r\n    const userId = params.userid\r\n    const [isMoveActive, setIsMoveActive] = useState(false)  //If move message is invoked this state is set to true and doesn`t allow to move it again\r\n\r\n    return {\r\n\r\n        moveToHistory: async function (message) {\r\n            if (isMoveActive) return\r\n            setIsMoveActive(true)\r\n    \r\n            const response = await fetch('/api/user/inbox', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    message\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n                return\r\n            } else {\r\n                await response.json()\r\n                socket.emit('message-sent', userId)\r\n            }\r\n        },\r\n\r\n        deleteMessage: async function (message, setInboxHistory) {\r\n            const response = await fetch(`/api/user/message/${message._id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n                return\r\n            } else {\r\n                const user = await response.json()\r\n                setInboxHistory(user.inboxHistory)\r\n            }\r\n        },\r\n\r\n        viewTeam: async function viewTeam(message, setCurrTeam, setShowEditTeamForm) {\r\n            const response = await fetch(`/api/teams/${message.team.id}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n                return\r\n            } else {\r\n                const team = await response.json()\r\n                setCurrTeam(team)\r\n                setShowEditTeamForm(true)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport EditTeam from '../EditTeam'\r\nimport Transparent from '../Transparent'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationInbox({ message, setInbox, setInboxHistory, options }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const userId = params.userid\r\n    const utils = useInboxUtils()\r\n\r\n    async function acceptInvitation(message, accepted) {\r\n        const response = await fetch(`/api/teams/invitations/${message.team.id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message,\r\n                accepted\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            socket.emit('team-update', message.team.id)\r\n            setInbox(user.inbox)\r\n            setInboxHistory(user.inboxHistory)\r\n            socket.emit('message-sent', userId)\r\n            socket.emit('message-sent', message.sendFrom._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                message.team.isDeleted ?\r\n                    <div>\r\n                        <div className={styles.bold}>Team deleted</div>\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    </div> :\r\n                    <div>\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => acceptInvitation(message, true)}\r\n                            title='Accept'\r\n                        />\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => acceptInvitation(message, false)}\r\n                            title='Decline'\r\n                        />\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.viewTeam(message, setCurrTeam, setShowEditTeamForm)}\r\n                            title='View Team'\r\n                        />\r\n                    </div>\r\n            }\r\n\r\n            {\r\n                showEditTeamForm &&\r\n                <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                    <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                </Transparent>\r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport EditTeam from '../EditTeam'\r\nimport Transparent from '../Transparent'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationHistory({ message, options, setInboxHistory }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    {message.accepted === undefined ?\r\n                        <div className={styles.container}>\r\n                            <div className={styles.bold}>{message.subject}</div>\r\n                        </div> :\r\n                        <div className={styles.container}>\r\n                            <div className={styles.bold}>{message.subject}:</div>\r\n                            {message.accepted ? <div>Accepted</div> : <div>Declined</div>}\r\n                        </div>\r\n                    }\r\n                    <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                    <div className={styles.inline}>{message.team.name}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                {\r\n                    message.team.isDeleted &&\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Team deleted</div>\r\n                }\r\n                <div>\r\n                    {\r\n                        !message.team.isDeleted &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.viewTeam(message, setCurrTeam, setShowEditTeamForm)}\r\n                            title='View Team'\r\n                        />\r\n                    }\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => setConfirmOpen(true)}\r\n                        title='Delete Message'\r\n                    />\r\n                    {\r\n                        showEditTeamForm &&\r\n                        <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                            <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                        </Transparent>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationResponse({ message, setInboxHistory, options, isInbox }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>{message.subject}:</div>\r\n                    <span>{message.sendFrom.username}{message.accepted ? <span> accepted</span> : <span> declined</span>}</span>\r\n                </div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    isInbox &&\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.moveToHistory(message)}\r\n                        title='Move to History'\r\n                    />\r\n                }\r\n                {\r\n                    !isInbox &&\r\n                    <ButtonGrey\r\n                    className={styles.button}\r\n                    onClick={() => setConfirmOpen(true)} \r\n                    title='Delete Message'\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TaskAssignment({ message, setInboxHistory, options, isInbox }) {\r\n    const history = useHistory()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.inline} ${styles.margin}`}><span className={styles.bold}>Project:</span>{message.project.name}</div>\r\n                <div className={`${styles.inline} ${styles.margin}`}><span className={styles.bold}>List:</span>{message.list.name}</div>\r\n                <div className={`${styles.inline} ${styles.margin}`}><span className={styles.bold}>Task:</span>{message.card.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Assigned by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                (message.team.isDeleted || message.project.isDeleted) &&\r\n                <div className={styles.bold}>Project deleted</div>\r\n            }\r\n            <div>\r\n                {\r\n                    !message.team.isDeleted && !message.project.isDeleted &&\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => history.push(`/project-board/${message.team.id}/${message.project.id}`)}\r\n                        title='Go to Project'\r\n                    />\r\n                }\r\n                {\r\n                    isInbox ?\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.moveToHistory(message)}\r\n                        title='Move to History'\r\n                    /> :\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => setConfirmOpen(true)} \r\n                        title='Delete Message'\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamDeleted({ message, setInboxHistory, options, isInbox }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.container}>\r\n                        <div className={styles.bold}>Team {message.team.name} deleted</div>\r\n                    </div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Deleted by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                <div>\r\n                    {isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    }\r\n                    {!isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => setConfirmOpen(true)}\r\n                            title='Delete Message'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function ProjectDeleted({ message, setInboxHistory, options, isInbox }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            { confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.container}>\r\n                        <div className={styles.bold}>Project {message.project.name} deleted</div>\r\n                    </div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Deleted by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                <div>\r\n                    { isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    }\r\n                    { !isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => setConfirmOpen(true)}\r\n                            title='Delete Message'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport EditTeam from '../EditTeam'\r\nimport Transparent from '../Transparent'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationCanceled({ message, setInboxHistory, options, isInbox }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>{message.subject}</div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                    <div className={styles.inline}>{message.team.name}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                {\r\n                    message.team.isDeleted &&\r\n                    <div className={styles.bold}>Team deleted</div>\r\n                }\r\n                {!message.team.isDeleted &&\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.viewTeam(message, setCurrTeam, setShowEditTeamForm)}\r\n                        title='View Team'\r\n                    />\r\n                }\r\n                {isInbox ?\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.moveToHistory(message)}\r\n                        title='Move to History'\r\n                    /> :\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => setConfirmOpen(true)}\r\n                        title='Delete Message'\r\n                    />\r\n                }\r\n                {showEditTeamForm &&\r\n                    <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                        <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                    </Transparent>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport TeamInvitationInbox from \"../../components/Inbox/TeamInvitationInbox\"\r\nimport TeamInvitationHistory from \"../../components/Inbox/TeamInvitationHistory\"\r\nimport TeamInvitationResponse from \"../../components/Inbox/TeamInvitationResponse\"\r\nimport TaskAssignment from \"../../components/Inbox/TaskAssignment\"\r\nimport PageLayout from \"../../components/PageLayout\"\r\nimport Title from \"../../components/Title\"\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport styles from './index.module.css'\r\nimport TeamDeleted from \"../../components/Inbox/TeamDeleted\"\r\nimport ProjectDeleted from \"../../components/Inbox/ProjectDeleted\"\r\nimport TeamInvitationCanceled from \"../../components/Inbox/TeamInvitationCanceled\"\r\n\r\nconst InboxPage = () => {\r\n    const [inbox, setInbox] = useState([])\r\n    const [inboxHistory, setInboxHistory] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }\r\n\r\n    const getInbox = useCallback(async () => {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInbox(user.inbox)\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }, [history, token])\r\n\r\n    useEffect(() => {\r\n        getInbox()\r\n    }, [getInbox])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        setInbox(response.inboxUser.inbox)\r\n        setInboxHistory(response.inboxUser.inboxHistory)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div>\r\n                <Title title='Inbox' />\r\n                {\r\n                    inbox.length === 0 && <div className={styles.title}>Inbox is empty</div>\r\n                }\r\n                {\r\n                    [...inbox].reverse().map(m => {\r\n                        switch (m.subject) {\r\n                            case 'Team invitation':\r\n                                return <TeamInvitationInbox\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                />\r\n\r\n                            case 'Team invitation response':\r\n                                return <TeamInvitationResponse\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Team invitation canceled':\r\n                                return <TeamInvitationCanceled\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Task assignment':\r\n                                return <TaskAssignment\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Team deleted':\r\n                                return <TeamDeleted\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Project deleted':\r\n                                return <ProjectDeleted\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            default:\r\n                                break\r\n                        }\r\n                        return ''\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {\r\n                inboxHistory.length !== 0 &&\r\n                <div>\r\n                    <Title title='History' />\r\n                    {\r\n                        [...inboxHistory].reverse().map(m => {\r\n                            switch (m.subject) {\r\n                                case 'Team invitation':\r\n                                    return <TeamInvitationHistory\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                    />\r\n\r\n                                case 'Team invitation response':\r\n                                    return <TeamInvitationResponse\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team invitation canceled':\r\n                                    return <TeamInvitationCanceled\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Task assignment':\r\n                                    return <TaskAssignment\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team deleted':\r\n                                    return <TeamDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Project deleted':\r\n                                    return <ProjectDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            return ''\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default InboxPage;","export default __webpack_public_path__ + \"static/media/my-tasks.a0bdac2a.svg\";","export default __webpack_public_path__ + \"static/media/pic1.06557b43.svg\";","export default __webpack_public_path__ + \"static/media/pic12.cb5bf992.svg\";","export default __webpack_public_path__ + \"static/media/pic10.b95e708c.svg\";","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport styles from './index.module.css'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport AvatarUser from '../AvatarUser'\r\n\r\n\r\nexport default function ShowAllTaskMembers({ members, deleteMemberOption, deleteMemberObj }) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    function onClick(m) {\r\n        if (deleteMemberOption) {\r\n            setConfirmOpen(true)\r\n            setCurrElement(m)\r\n        }\r\n    }\r\n\r\n\r\n    const updateSocket = () => {\r\n        const project = deleteMemberObj.project\r\n        const teamId = deleteMemberObj.teamId\r\n\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        const cardMembers = deleteMemberObj.cardMembers\r\n        const setCardMembers = deleteMemberObj.setCardMembers\r\n        const cardId = deleteMemberObj.cardId\r\n        const listId = deleteMemberObj.listId\r\n\r\n        var index = cardMembers.indexOf(member)\r\n        let arr = [...cardMembers]\r\n\r\n        if (index !== -1) {\r\n            arr.splice(index, 1)\r\n        }\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                members: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            deleteMemberObj.setCurrCard(updatedCard)\r\n            updateSocket()\r\n            setCardMembers(arr)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this member'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteMember(currElement)}\r\n                />\r\n            }\r\n            <div className={styles['all-card-members']}>\r\n                {members.map((m, index) => {\r\n                    return (\r\n                        <div key={index} className={styles['each-member']} onClick={() => onClick(m)} >\r\n                            <div className={styles.name}>\r\n                                <span className={styles.avatar} key={m._id}>\r\n                                    <AvatarUser user={m}\r\n                                        size={30}\r\n                                        className={styles.avatar}\r\n                                    />\r\n                                </span>\r\n                                <span className={styles.username}>{m.username}</span>\r\n                            </div>\r\n                            {\r\n                                deleteMemberOption ?\r\n                                    <span className={styles['delete-icon']}>x</span>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useRef } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ShowAllTaskMembers from '../ShowAllTaskMembers'\r\nimport styles from './index.module.css'\r\n\r\nconst MembersList = ({ members, maxLength, deleteMemberOption, deleteMemberObj }) => {\r\n    const ref = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(ref)\r\n\r\n    maxLength = Math.min(maxLength, members.length)\r\n\r\n    return (\r\n        <div\r\n            className={styles.members}\r\n            onClick={() => setIsActive(true)}\r\n            ref={ref}\r\n        >\r\n            { isActive &&\r\n                <ShowAllTaskMembers\r\n                    members={members}\r\n                    deleteMemberOption={deleteMemberOption}\r\n                    deleteMemberObj={deleteMemberObj}\r\n                    setCurrCard\r\n                />\r\n            }\r\n            {(members.length > maxLength) ?\r\n                <>\r\n                    {members.slice(0, maxLength - 1).map(member => {\r\n                        return (\r\n                            <span \r\n                            className={styles.avatar} \r\n                            key={member._id}>\r\n                                <AvatarUser user={member}\r\n                                    size={30}\r\n                                    className={styles.avatar}\r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                    <span className={styles.avatar}>\r\n                        <Avatar\r\n                            color={'grey'}\r\n                            // split number of remaining members (and + sign) with spaces in b/n\r\n                            // so that they are correctly displayed by the Avatar component\r\n                            name={['+', ...(`${members.length - maxLength + 1}`.split(''))].join(' ')}\r\n                            size={30}\r\n                            round={true}\r\n                            maxInitials={3}\r\n                            className={styles.avatar}\r\n                        />\r\n                    </span>\r\n                </>\r\n                :\r\n                <>\r\n                    {members.map(element => {\r\n                        return (\r\n                            <span className={styles.avatar} key={element._id}>\r\n                                <AvatarUser\r\n                                user={element}\r\n                                    size={30}                                  \r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MembersList","import React, { useEffect, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic10 from '../../images/edit-card/pic10.svg'\r\nimport MembersList from '../MembersList'\r\n\r\n\r\nexport default function TaskMembers({ card, listId, project, teamId, setCurrCard }) {\r\n    const ref = useRef(null);\r\n    const [cardMembers, setCardMembers] = useState(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(ref)\r\n    const [users, setUsers] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const token = getCookie(\"x-auth-token\")\r\n\r\n    useEffect(() => {\r\n        setCardMembers(card.members)\r\n    }, [card.members])\r\n\r\n    const getTeamUsers = async () => {\r\n\r\n        const response = await fetch(`/api/teams/get-users/${teamId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        }\r\n        const data = await response.json()\r\n\r\n        let filtered = data.members\r\n\r\n        for (let member in cardMembers) {\r\n            filtered = filtered.filter((obj) => obj._id !== cardMembers[member]._id)\r\n        }\r\n        setUsers(filtered)\r\n\r\n    }\r\n\r\n    const handleSelect = async (id) => {\r\n\r\n        if (id === 'select') return\r\n\r\n        const selectedUser = users.filter(obj => obj._id === id)[0]\r\n\r\n        const result = project.membersRoles.filter(obj => obj.memberId._id === selectedUser._id)[0]\r\n\r\n        if (!result) {\r\n            if (!window.confirm(`Do you want to add ${selectedUser.username} to project?`)) return\r\n\r\n            const responseAdd = await fetch(`/api/projects/${project._id}/user`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    member: selectedUser,\r\n                    admin: false\r\n                })\r\n            })\r\n            if (!responseAdd.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n        }\r\n\r\n        let arr = [...cardMembers]\r\n\r\n        arr.push(selectedUser)\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                members: arr,\r\n                newMember: selectedUser,\r\n                teamId,\r\n                projectId: project._id,\r\n                cardId: card._id,\r\n                listId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            setIsActive(!isActive)\r\n            setCardMembers(arr)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n            socket.emit('message-sent', selectedUser._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['small-buttons']} onClick={() => { getTeamUsers(); setIsActive(!isActive) }} >\r\n                <img className={styles.pics} src={pic10} alt=\"pic10\" />\r\n                Add Teammate\r\n            </div>\r\n            { isActive && <form ref={ref} >\r\n                <select className={styles.select} onChange={e => { handleSelect(e.target.value) }}>\r\n                    <option value={'select'}>Select</option>\r\n                    {users.map(m => (\r\n                        <option key={m._id} value={m._id}>{m.username}</option>\r\n                    ))}\r\n                </select>\r\n            </form>}\r\n            { !isActive && card.members.length > 0 && <div className={styles.members}>\r\n                <MembersList\r\n                    members={card.members}\r\n                    maxLength={4}\r\n                    deleteMemberOption={true}\r\n                    deleteMemberObj={{\r\n                        cardMembers,\r\n                        setCardMembers,\r\n                        cardId: card._id,\r\n                        listId,\r\n                        project,\r\n                        teamId,\r\n                        setCurrCard\r\n                    }}\r\n                />\r\n            </div>}\r\n        </div >\r\n    )\r\n}\r\n\r\n","const FORMAT_REGEX = /%[aAbBdmwyY]/g\r\n\r\nconst MONTHS = [ \r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', \r\n    'August', 'September', 'October', 'November', 'December'\r\n]\r\n\r\nconst WEEKDAYS = [ \r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', \r\n    'Thursday', 'Friday', 'Saturday', 'Sunday'\r\n]\r\n\r\nconst MILLISECONDS_IN_DAY = 86400000\r\n\r\nconst FORMAT_OPTIONS = {\r\n    'y': (date) => date.getUTCFullYear().toString().slice(-2),      // short year (2018 => 18)\r\n    'Y': (date) => date.getUTCFullYear(),                           // full year (2018 => 2018)\r\n    'm': (date) => `0${date.getMonth() + 1}`.slice(-2),             // month as a number (01 - 12)\r\n    'b': (date) => MONTHS[date.getMonth()].slice(0, 3),             // month, short (Dec, Apr etc.)\r\n    'B': (date) => MONTHS[date.getMonth()],                         // month, long (December)\r\n    'd': (date) => `0${date.getDate()}`.slice(-2),                  // day of month (01 - 31)\r\n    'a': (date) => WEEKDAYS[date.getDay()].slice(0, 3),             // weekday, short (Mon, Wed)\r\n    'A': (date) => WEEKDAYS[date.getDay()],                         // weekday, long (Monday)\r\n    'w': (date) => getWeekNumber(date),                             // week number of the year (1-53)\r\n}\r\n\r\nconst getDateWithOffset = (initialDate, daysOffset) => {\r\n    return new Date(initialDate.getTime() + daysOffset * MILLISECONDS_IN_DAY)\r\n}\r\n\r\nconst getMonday = (date) => {\r\n    date = date || new Date()\r\n\r\n    // need to change to 7 in case date is Sunday (which in JS is 0, while Monday is 1)\r\n    const dateDay = date.getDay() || 7\r\n    const monday = new Date(date)\r\n    monday.setDate(date.getDate() - (dateDay - 1))\r\n\r\n    return monday\r\n}\r\n\r\nconst getWeekNumber = (date) => {\r\n    // Thursday in current week decides the year\r\n    // (each week's year is the Gregorian year in which the Thursday falls)\r\n    const currWeekThursday = getDateWithOffset(getMonday(date), 3)\r\n\r\n    // January 4th is always in week 1\r\n    const week1 = new Date(date.getFullYear(), 0, 4)\r\n    const week1Thursday = getDateWithOffset(getMonday(week1), 3)\r\n\r\n    return 1 + Math.round((currWeekThursday.getTime() - week1Thursday.getTime()) / ( 7 * MILLISECONDS_IN_DAY))\r\n}\r\n\r\n/*  Receives a Javascript date as a first parameter and a format string \r\nas a second parameter and returns a string representing the date in \r\nthe desired format. The format string has several options which can be\r\nseen in the \"FORMAT_OPTIONS\" constant above. \r\n!!! Every format option must be preceded by a percentage sign (%)\r\nExamples: \r\n    In: (date: new Date('2021-01-28'), formatString: '%y_%B_%d')\r\n   Out: '21_January_28'\r\n\r\n   In: (date: new Date('2020-05-12), formatString: '%a, %d %b, %Y')\r\n  Out: 'Tue, 12 May, 2020'\r\n */\r\nconst formatDate = (date, formatString) => {\r\n    return formatString.replace(FORMAT_REGEX, (substr) => {\r\n        const formatType = substr[1]\r\n        const result = FORMAT_OPTIONS[formatType](date)\r\n        return result\r\n    })\r\n}\r\n\r\n/* Returns true if the year, month and day of two dates are the same,\r\nand false otherwise (i.e. ignores time)\r\n*/\r\nconst checkDateEquality = (firstDate, secondDate) => {\r\n    return firstDate.getYear() === secondDate.getYear() \r\n        && firstDate.getMonth() === secondDate.getMonth() \r\n        && firstDate.getDate() === secondDate.getDate()\r\n}\r\n\r\n/* Returns 1 if firstDate is larger, -1 if secondDate is larger\r\nand 0 if the year, month and day of both dates are equal (ignores time)\r\n*/\r\nconst compareDates = (firstDate, secondDate) => {\r\n    const firstDateYear = firstDate.getYear()\r\n    const secondDateYear = secondDate.getYear()\r\n\r\n    if (firstDateYear !== secondDateYear) {\r\n        return 1 - 2 * (secondDateYear > firstDateYear)\r\n    }\r\n\r\n    const firstDateMonth = firstDate.getMonth()\r\n    const secondDateMonth = secondDate.getMonth() \r\n    \r\n    if (firstDateMonth !== secondDateMonth) {\r\n        return 1 - 2 * (secondDateMonth > firstDateMonth)\r\n    }\r\n\r\n    const firstDateDay = firstDate.getDate()\r\n    const secondDateDay = secondDate.getDate()\r\n\r\n    if (firstDateDay !== secondDateDay) {\r\n        return 1 - 2 * (secondDateDay > firstDateDay)\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nexport {\r\n    formatDate,\r\n    checkDateEquality,\r\n    compareDates,\r\n    getDateWithOffset,\r\n    getMonday\r\n}","export default __webpack_public_path__ + \"static/media/pic5.e6817eda.svg\";","import React, { useCallback, useState, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport DatePicker from \"react-datepicker\"\r\nimport { formatDate } from '../../utils/date'\r\nimport pic5 from '../../images/edit-card/pic5.svg'\r\n\r\n\r\n\r\nexport default function TaskDueDate({ dueDate, card, listId, project, teamId, setCurrCard }) {\r\n\r\n    const [cardDueDate, setCardDueDate] = useState(null)\r\n    const [taskDueDate, setTaskDueDate] = useState(null)\r\n    const [width, setWindowWidth] = useState(0)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n\r\n\r\n    useEffect( () => {\r\n      updateDimensions()\r\n      window.addEventListener(\"resize\", updateDimensions)\r\n      return () => window.removeEventListener(\"resize\", updateDimensions)\r\n    }, [])\r\n  \r\n    const updateDimensions = () => {\r\n      const innerWidth = window.innerWidth\r\n      setWindowWidth(innerWidth)\r\n    }\r\n\r\n    function datePickerPosition(w) {\r\n        if (w > 750) {\r\n            return 'bottom-end'\r\n        } else {\r\n            return 'bottom-start'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCardDueDate(dueDate)\r\n        if (cardDueDate) {\r\n            const date = cardDueDate.getTime() ? formatDate(cardDueDate, '%d-%m-%Y') : ''\r\n            setTaskDueDate(date)\r\n        }\r\n    }, [dueDate, cardDueDate])\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }, [socket, project, teamId])\r\n\r\n    const editCardDueDate = async (date) => {\r\n\r\n        if (cardDueDate === \"\" && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                dueDate: date,\r\n                teamId: teamId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            updateProjectSocket()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DatePicker\r\n                customInput={\r\n                    <div className={styles['small-buttons']} >\r\n                        <img className={styles.pics} src={pic5} alt=\"pic5\" />\r\n                        Due Date\r\n                    </div>\r\n                }\r\n                selected={taskDueDate ? cardDueDate : today}\r\n                onChange={(date) => { setCardDueDate(date); editCardDueDate(date) }}\r\n                label=\"Go to date\"\r\n                popperPlacement={datePickerPosition(width)}\r\n            />\r\n            {\r\n                taskDueDate && <div className={styles.date}>{taskDueDate}</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TaskHistory({ taskHistory }) {\r\n\r\n    let arr = []\r\n\r\n    if (taskHistory) {\r\n        for (let i = 0; i < taskHistory.length; i++) {\r\n            let currElement = taskHistory[i]\r\n\r\n            if (i === taskHistory.length - 1) {\r\n                arr.push(currElement)\r\n                break;\r\n            }\r\n\r\n            if (currElement.event.slice(0, 8) === taskHistory[i + 1].event.slice(0, 8) && currElement.date === taskHistory[i + 1].date) {\r\n\r\n            } else {\r\n                arr.push(currElement)\r\n            }\r\n        }\r\n    }\r\n\r\n    function showDate(currDate) {\r\n        let currDay = new Date(currDate)      \r\n        let date = (('0' + currDay.getDate())).slice(-2) + '.' + ('0' + (currDay.getMonth() + 1)).slice(-2) + '.' + currDay.getFullYear()\r\n        return (date)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.history}>\r\n            { taskHistory ?\r\n                arr.reverse().map((m, index) => (\r\n                    <div key={index} >\r\n                        {`${showDate(m['date'])} - ${m['event']}`}\r\n                    </div>\r\n                ))\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/pic2.da7b02c6.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ProgressBar({ progress }) {\r\n\r\n    const progressColor = (input) => {\r\n        if (Number(input) <= 20) {\r\n            return 'red'\r\n        }\r\n        if (Number(input) <= 40) {\r\n            return 'orange'\r\n        }\r\n        if (Number(input) <= 80) {\r\n            return 'blue'\r\n        }\r\n        if (Number(input) > 80) {\r\n            return 'green'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.bar}>\r\n            <div\r\n                style={{\r\n                    width: `${progress}%`,\r\n                    backgroundColor: progressColor(progress)\r\n                }}\r\n                className={styles.progress}\r\n            /></div>\r\n    )\r\n}\r\n","import React, { useRef, useState, useMemo, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic2 from '../../images/edit-card/pic2.svg'\r\nimport ProgressBar from '../ProgressBar'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function TaskProgress({ card, listId, project, teamId, taskHistory, setTaskHistory, setCurrCard }) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const ref = useRef(null)\r\n    const [progress, setProgress] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const [isInputActive, setIsInputActive] = useDetectOutsideClick(ref)\r\n    const [isInputVisible, setIsInputVisible] = useState(false)\r\n    const today = useMemo(() => new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()), [])\r\n\r\n    useEffect(() => {\r\n        setIsInputVisible(card.progress !== null)\r\n        setProgress(card.progress)\r\n    }, [card.progress])\r\n\r\n    const changeProgress = async () => {\r\n        if (progress === null) {\r\n            setIsInputVisible(false)\r\n            setIsInputActive(false)\r\n            return\r\n        }\r\n\r\n        if (currInput === progress || !isInputOk) {\r\n            setProgress(currInput)\r\n            setIsInputOk(true)\r\n            return\r\n        }\r\n\r\n        let arr = [...taskHistory]\r\n        arr.push({\r\n            'event': `Progress ${progress}%`,\r\n            'date': today\r\n        })\r\n        setTaskHistory(arr)\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n\r\n    }\r\n\r\n    function onEscPressed(event) {\r\n        if (event.keyCode === 27) {\r\n            setProgress(currInput)\r\n            setIsInputActive(false)\r\n            setIsInputOk(true)\r\n            if (progress === null) setIsInputVisible(false)\r\n        }\r\n    }\r\n\r\n    function onKeyUp() {\r\n        if (!progress || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n        } else {\r\n            setIsInputOk(true)\r\n        }\r\n    }\r\n\r\n    function onClick() {\r\n        setIsInputVisible(true)\r\n        setIsInputActive(true)\r\n        setCurrInput(progress)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles['small-buttons']} onClick={onClick} >\r\n                <img className={styles.pics} src={pic2} alt=\"\" />\r\n                Progress\r\n            </div>\r\n            {card.progress !== null &&\r\n                <div className={styles['progress-bar']} >\r\n                    <ProgressBar progress={card.progress} />\r\n                </div>\r\n            }\r\n            {isInputVisible && <div className={styles['progress-input-container']}>\r\n                {isInputActive ? <span ref={ref}>\r\n                    <input\r\n                        ref={function (input) {\r\n                            if (input != null) {\r\n                                input.focus();\r\n                            }\r\n                        }}\r\n                        id='progress'\r\n                        type='number'\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        className={`${styles['progress-input']} ${!isInputOk && styles['bad-input']}`}\r\n                        value={progress}\r\n                        onKeyDown={e => onEscPressed(e)}\r\n                        onKeyUp={onKeyUp}\r\n                        onChange={e => setProgress(e.target.value)}\r\n                        onBlur={changeProgress}\r\n                    /><span>%</span>\r\n                </span> : <div className={styles.progress} onClick={onClick}>{progress}%</div>}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic6.68bb366f.svg\";","export default __webpack_public_path__ + \"static/media/download.1cad53f3.svg\";","export default __webpack_public_path__ + \"static/media/remove.3a2c6cb2.svg\";","import React, { useState, useEffect } from 'react'\r\nimport ButtonClean from '../ButtonClean'\r\nimport styles from './index.module.css'\r\nimport download from '../../images/edit-card/download.svg'\r\nimport remove from '../../images/edit-card/remove.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\n\r\nexport default function AttachmentList({ attachments, listRef, card, project, teamId, setCurrCard }) {\r\n    const socket = useSocket()\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const [attachmentsArr, setAttachmentsArr] = useState([])\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    useEffect(() => {\r\n        setAttachmentsArr(attachments)\r\n    }, [attachments])\r\n\r\n    const getFullDocumentUrl = (att) => {\r\n        return `https://res.cloudinary.com/${process.env.REACT_APP_CLOUD_NAME}/raw/upload/fl_attachment/${att.path}`\r\n    }\r\n\r\n    async function deteleAttachment(att) {\r\n        const response = await fetch(`/api/projects/lists/cards/attachments/${card._id}/${att._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            setAttachmentsArr(updatedCard.attachments)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='remove this attachment'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => deteleAttachment(currElement)}\r\n            />\r\n        }\r\n        <div ref={listRef} className={styles.container}>\r\n            <div className={styles.title}>Task Attachments</div>\r\n            {attachmentsArr.map((att, index) => (\r\n                <div key={index} className={styles.attachment}>\r\n                    <div className={styles.name}>{att.name}.{att.format}</div>\r\n                    <div>\r\n                        <ButtonClean title={<img className={styles.button} src={download} alt=\"Download\" />} onClick={() => window.open(getFullDocumentUrl(att), \"_blank\")} />\r\n                        <ButtonClean title={<img className={styles.button} src={remove} alt=\"Remove\" />}\r\n                         onClick={() => {\r\n                            setConfirmOpen(true)                            \r\n                            setCurrElement(att)\r\n                        }} \r\n                        //  onClick={() => deteleAttachment(att)} \r\n                         />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\nimport AttachmentList from '../AttachmentList'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Transparent from '../Transparent'\r\n\r\nexport default function Attachment({ att, attachments, card, project, teamId, setCurrCard }) {\r\n    const listRef = useRef(null)\r\n    const [isListVisible, setIsListVisible] = useDetectOutsideClick(listRef)\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className={styles.attachment}\r\n                onClick={() => setIsListVisible(true)}\r\n                title={att.name}\r\n            >\r\n                <img src={pic1} alt=\"\" className={styles['att-picture']} />\r\n                <div className={styles.format}>{att.format}</div>\r\n            </div>\r\n            {isListVisible && <Transparent hideForm={() => setIsListVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                    setCurrCard={setCurrCard}\r\n                />\r\n            </Transparent >}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic6 from '../../images/edit-card/pic6.svg'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport Attachment from '../Attachment'\r\n\r\nexport default function TaskAttach({ card, project, teamId, setCurrCard }) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [attachments, setAttachments] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setAttachments(card.attachments)\r\n    }, [card.attachments])\r\n\r\n    function addAttachment() {\r\n        const widget = window.cloudinary.createUploadWidget({\r\n            cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n            uploadPreset: process.env.REACT_APP_UPLOAD_PRESET,\r\n            resourceType: 'raw'\r\n\r\n        }, async (error, result) => {\r\n            if (result.event === 'success') {\r\n                const path = result.info.path\r\n                const name = result.info.original_filename\r\n                let format = result.info.format\r\n                if (!format) {\r\n                    format = path.split('.')[1]\r\n                }\r\n                const publicId = result.info.public_id\r\n                const attachment = { path, name, format, publicId }\r\n\r\n\r\n                const response = await fetch(`/api/projects/lists/cards/attachments/${card._id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token\r\n                    },\r\n                    body: JSON.stringify({\r\n                        attachment\r\n                    })\r\n                })\r\n                if (!response.ok) {\r\n                    history.push(\"/error\")\r\n                } else {\r\n                    const updatedCard = await response.json()\r\n                    setAttachments(updatedCard.attachments)\r\n                    socket.emit('project-update', project)\r\n                    socket.emit('task-team-update', teamId)\r\n                }\r\n            }\r\n\r\n            if (error) {\r\n                //TODO: Handle errors\r\n\r\n                return\r\n            }\r\n        })\r\n\r\n        widget.open()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['small-buttons']} onClick={addAttachment}>\r\n                <img className={styles.pics} src={pic6} alt=\"pic6\" />\r\n                Attach File\r\n            </div>\r\n            { attachments && <div className={styles['att-container']}>\r\n                {attachments.length <= 4 ? attachments.map(att => (\r\n                    <Attachment key={att._id} att={att} attachments={attachments} card={card} project={project} teamId={teamId} setCurrCard={setCurrCard} />\r\n                )) :\r\n                <>\r\n                {attachments.slice(0, 3).map(att => (\r\n                    <Attachment key={att._id} att={att} attachments={attachments} card={card} project={project} teamId={teamId} setCurrCard={setCurrCard} />\r\n                ))}\r\n                <div className={`${styles.remaining} ${styles.attachment}`}>\r\n                    +{attachments.length - 3}\r\n                </div>\r\n                </>\r\n                }\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState, useMemo, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\n// import pic2 from '../../images/edit-card/pic2.svg'\r\n// import pic3 from '../../images/edit-card/pic3.svg'\r\n// import pic4 from '../../images/edit-card/pic4.svg'\r\n// import pic5 from '../../images/edit-card/pic5.svg'\r\n// import pic6 from '../../images/edit-card/pic6.svg'\r\n// import pic7 from '../../images/edit-card/pic7.svg'\r\n// import pic8 from '../../images/edit-card/pic8.svg'\r\n// import pic9 from '../../images/edit-card/pic9.svg'\r\n// import pic10 from '../../images/edit-card/pic10.svg'\r\n// import pic11 from '../../images/edit-card/pic11.svg'\r\nimport pic12 from '../../images/edit-card/pic12.svg'\r\n// import pic13 from '../../images/edit-card/pic13.svg'\r\n// import pic14 from '../../images/edit-card/pic14.svg'\r\nimport TaskMembers from '../EditCardOptions/TaskMembers'\r\nimport TaskDueDate from \"../EditCardOptions/TaskDueDate\"\r\nimport TaskHistory from '../EditCardOptions/TaskHistory'\r\nimport TaskProgress from '../EditCardOptions/TaskProgress'\r\nimport TaskAttach from '../EditCardOptions/TaskAttach'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\n\r\n\r\nexport default function EditCard({ listId, initialCard, project, teamId, hideForm, setCurrCard }) {\r\n    const nameRef = useRef(null)\r\n    const descriptionRef = useRef(null)\r\n    const [card, setCard] = useState(null)\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [taskHistory, setTaskHistory] = useState(null)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const dueDate = useMemo(() => new Date(initialCard.dueDate), [initialCard.dueDate])\r\n    const token = getCookie(\"x-auth-token\")\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCard(initialCard)\r\n        setName(initialCard.name)\r\n        setDescription(initialCard.description)\r\n        setTaskHistory(initialCard.history)\r\n    }, [initialCard])\r\n\r\n\r\n    const deleteCard = async () => {\r\n\r\n        // if (!window.confirm('Are you sure you wish to delete this item?')) return\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n            hideForm()\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            // const updatedCard = await response.json()\r\n            // setCard(updatedCard)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n            // setProgressChanged(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setNameHeight(nameRef.current.scrollHeight + 2)\r\n        }, 1);\r\n    }, [])\r\n\r\n    function onEscPressed(event, setElement, ref) {\r\n        if (event.keyCode === 27) {\r\n            setElement(currInput)\r\n            setTimeout(() => {\r\n                ref.current.blur()\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.menu}>\r\n\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this task'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteCard()}\r\n                />\r\n            }\r\n\r\n            <div className={styles.container}>\r\n\r\n                <div className={styles['task-name']}>\r\n                    <span>\r\n                        <img src={pic1} alt=\"pic1\" />\r\n                    </span>\r\n                    <textarea\r\n                        ref={nameRef}\r\n                        className={`${styles['name-input']} ${styles.text}`}\r\n                        style={{ 'height': nameHeight }}\r\n                        value={name}\r\n                        onFocus={() => setCurrInput(name)}\r\n                        onKeyDown={e => onEscPressed(e, setName, nameRef)}\r\n                        onChange={e => {\r\n                            setName(e.target.value)\r\n                            setNameHeight(nameRef.current.scrollHeight + 2)\r\n                        }}\r\n                        onBlur={() => {\r\n                            if (currInput === name) return\r\n                            handleSubmit()\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles['task-body']} >\r\n\r\n                    <div className={styles['left-side']}>\r\n                        <div>\r\n                            <div className={styles.text}>Description</div>\r\n                            <textarea className={styles['description-input']}\r\n                                ref={descriptionRef}\r\n                                value={description}\r\n                                onFocus={() => setCurrInput(description)}\r\n                                onKeyDown={e => onEscPressed(e, setDescription, descriptionRef)}\r\n                                onChange={e => setDescription(e.target.value)}\r\n                                onBlur={() => {\r\n                                    if (currInput === description) return\r\n                                    handleSubmit()\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className={styles['task-component']}>\r\n                            <div className={styles.text}>History</div>\r\n                            <TaskHistory taskHistory={taskHistory} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n\r\n                        <div className={styles['task-component']}>\r\n                            <div className={styles.text}>Manage</div>\r\n                            <TaskDueDate\r\n                                dueDate={dueDate}\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <TaskMembers\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <TaskProgress\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                taskHistory={taskHistory}\r\n                                setTaskHistory={setTaskHistory}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <TaskAttach\r\n                                card={initialCard}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <button className={styles['small-buttons']} \r\n                            // onClick={deleteCard} \r\n                            onClick={() => {\r\n                                setConfirmOpen(true)                            \r\n                            }}\r\n                            title=\"Delete Task\" >\r\n                                <img className={styles.pics} src={pic12} alt=\"pic12\" />\r\n                            Delete Task\r\n                        </button>\r\n\r\n\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic3} alt=\"pic3\" />\r\n                            Join\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic4} alt=\"pic4\" />\r\n                            Stickers\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic5} alt=\"pic5\" />\r\n                            Due Date\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic7} alt=\"pic7\" />\r\n                            Reports\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic10} alt=\"pic10\" />\r\n                            Add Teammate\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic11} alt=\"pic11\" />\r\n                            Make Template\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic13} alt=\"pic13\" />\r\n                            Remove List\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic8} alt=\"pic8\" />\r\n                            Settings\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic9} alt=\"pic9\" />\r\n                            View\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic14} alt=\"pic14\" />\r\n                            Archive\r\n                        </div> */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport ButtonClean from '../ButtonClean'\r\nimport styles from './index.module.css'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nimport attPic from '../../images/edit-card/pic6.svg'\r\nimport Transparent from '../Transparent'\r\nimport AttachmentList from '../AttachmentList'\r\n\r\nconst AttachmentsLink = ({ card, project, teamId }) => {\r\n    const listRef = useRef(null)\r\n    const [isVisible, setIsVisible] = useDetectOutsideClick(listRef)\r\n\r\n    return (\r\n        <>\r\n        <ButtonClean\r\n            className={`${styles.attachments} ${styles.button}`}\r\n            onClick={() => setIsVisible(true)}\r\n            title={<img src={attPic} alt=\"\" width='14px' />}\r\n        />\r\n        { isVisible &&\r\n            <Transparent hideForm={() => setIsVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={card.attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                />\r\n            </Transparent >\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttachmentsLink","import React, { useState, useRef, useEffect } from 'react'\r\nimport ButtonClean from '../ButtonClean'\r\nimport pen from '../../images/pen.svg'\r\nimport styles from \"./index.module.css\"\r\nimport Transparent from '../Transparent'\r\nimport EditCard from '../EditCard'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AttachmentsLink from '../AttachmentsLink'\r\n\r\nexport default function MyTasksTask({ teamId, project, list, card }) {\r\n    const inputRef = useRef(null)\r\n    const [isInputActive, setIsInputActive] = useState(false)\r\n    const [showEditCard, setShowEditCard] = useState(false)\r\n    const [progress, setProgress] = useState('')\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const days = Math.ceil((Date.parse(card.dueDate) - Date.now()) / 1000 / 3600 / 24)\r\n\r\n    useEffect(() => {\r\n        if (card.progress === null) {\r\n            setProgress('Add')\r\n            return\r\n        }\r\n        setProgress(card.progress + '%')\r\n    }, [setProgress, card.progress])\r\n\r\n    async function onBlur() {\r\n        setIsInputActive(false)\r\n        if (!isInputOk || Number(progress) === card.progress) {\r\n            setProgress(card.progress + '%')\r\n            setIsInputOk(true)\r\n            return\r\n        }\r\n\r\n        if (progress === '') {\r\n            if (card.progress === null) {\r\n                setProgress('Add')\r\n                return\r\n            }\r\n            setProgress(card.progress + '%')\r\n        }\r\n\r\n        const today = new Date(Date.now())\r\n        let arr = [...card.history]\r\n\r\n        arr.push({\r\n            'event': `Progress ${progress}%`,\r\n            'date': today\r\n        })\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${list._id}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress: progress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n    }\r\n\r\n    function onKeyUp() {\r\n        if (Number.isNaN(Number(progress)) || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n        } else {\r\n            setIsInputOk(true)\r\n        }\r\n    }\r\n\r\n    function onFocus() {\r\n        setIsInputActive(true)\r\n        if (progress === 'Add') {\r\n            setProgress('')\r\n            return\r\n        }\r\n        setProgress(Number(progress.slice(0, -1)))\r\n    }\r\n\r\n    return (\r\n        <div key={card._id} className={styles.card}>\r\n            <div className={styles.task}>{card.name}</div>\r\n            <div className={styles.progress}>\r\n                <input\r\n                    ref={inputRef}\r\n                    type={'text'}\r\n                    className={`${styles.input} ${!isInputOk && styles['bad-input']} ${!isInputActive && styles['no-border']}`}\r\n                    autoComplete=\"off\"\r\n                    value={progress}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onKeyUp={onKeyUp}\r\n                    onChange={e => setProgress(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={styles.days}>\r\n                { card.progress === 100 ? (<div>Done</div>) :\r\n                        Date.parse(card.dueDate) === 0 || card.dueDate === null ? (<div>No Deadline</div>) :\r\n                            days < 0 ? (<div className={styles.deadline}>Deadline Passed</div>) :\r\n                                <div>{days}</div>\r\n                }\r\n            </div>\r\n            <div className={styles['buttons-container']}>\r\n                { card.attachments.length > 0 && <AttachmentsLink card={card} project={project} teamId={teamId} /> }\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setShowEditCard(true)}\r\n                    title={<img src={pen} alt=\"\" width=\"14\" />}\r\n                />\r\n            </div>\r\n            { showEditCard && <div className={styles.edit}>\r\n                <Transparent hideForm={() => setShowEditCard(!showEditCard)} >\r\n                    <EditCard\r\n                        hideForm={() => setShowEditCard(!showEditCard)}\r\n                        initialCard={card}\r\n                        listId={list._id}\r\n                        project={project}\r\n                        teamId={teamId}\r\n                    />\r\n                </Transparent>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect, useCallback } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport PageLayout from \"../../components/PageLayout\"\r\nimport Title from \"../../components/Title\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport styles from './index.module.css'\r\nimport myTasks from '../../images/my-tasks/my-tasks.svg'\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport MyTasksTask from \"../../components/MyTasksTask\"\r\nimport ButtonCleanTitle from \"../../components/ButtonCleanTitle\"\r\nimport ButtonClean from \"../../components/ButtonClean\"\r\n\r\nconst MyTasksPage = () => {\r\n    const userContext = useContext(UserContext)\r\n    const [projects, setProjects] = useState([])\r\n    const [showOldProjects, setShowOldProjects] = useState(false)\r\n\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n\r\n    const selectTeam = useCallback(async (teamId) => {\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/user/tasks/${teamId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            if (data === 'Team not found') return\r\n            setProjects(data)\r\n            if (teamId !== userContext.user.lastTeamSelected) {\r\n                const user = { ...userContext.user }\r\n                user.lastTeamSelected = teamId\r\n                userContext.setUser({\r\n                    ...user,\r\n                    loggedIn: true\r\n                })\r\n            }\r\n        }\r\n    }, [history, userContext])\r\n\r\n    useEffect(() => {\r\n        if (!userContext.user.lastTeamSelected || socket == null) return\r\n\r\n        const id = userContext.user.lastTeamSelected\r\n\r\n        socket.on('task-team-updated', taskTeamUpdate)\r\n        socket.on('task-update-team', (teamId) => {\r\n            if (teamId === id) {\r\n                selectTeam(teamId)\r\n            }\r\n        })\r\n\r\n        socket.emit('task-team-join', id)\r\n        return () => {\r\n            socket.off('task-team-updated')\r\n            socket.off('task-update-team')\r\n        }\r\n    }, [socket, selectTeam, userContext.user.lastTeamSelected])\r\n\r\n    useEffect(() => {\r\n        if (userContext.user.lastTeamSelected) {\r\n            selectTeam(userContext.user.lastTeamSelected)\r\n        }\r\n    }, [selectTeam, userContext.user.lastTeamSelected])\r\n\r\n    function taskTeamUpdate(projects) {\r\n        setProjects(projects)\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Title title='My Tasks' />\r\n            <div className={styles['button-container']}>\r\n                <div className={styles['team-buttons']}>\r\n                    <span className={styles.title}>Teams:</span>\r\n                    {userContext.user.teams.map(team => {\r\n                        return <ButtonCleanTitle\r\n                            key={team._id}\r\n                            title={team.name}\r\n                            onClick={() => selectTeam(team._id)}\r\n                            className={`${styles.teams} ${userContext.user.lastTeamSelected === team._id && styles.selected}`}\r\n                        />\r\n                    })}\r\n                </div>\r\n                <ButtonClean className={`${styles.teams} ${styles['projects-button']}`} title={showOldProjects ? 'Current Projects' : \"Old Projects\"} onClick={() => setShowOldProjects(!showOldProjects)} />\r\n            </div>\r\n            {!userContext.user.lastTeamSelected ? <div className={styles.title}>Select a team</div> :\r\n                <div className={styles.box}>\r\n                    {projects.length === 0 ? <div className={styles.title}>There is no current tasks</div> :\r\n                        projects.filter(!showOldProjects ? (p => (p.isFinished === false) || (p.isFinished === undefined)) : (p => (p.isFinished === true)))\r\n                            .reverse()\r\n                            .map(project => {\r\n                                return (\r\n                                    <div key={project._id} className={styles.project}>\r\n                                        <div className={styles['project-name']}>\r\n                                            <Link to={`/project-board/${userContext.user.lastTeamSelected}/${project._id}`} className={styles.link}>\r\n                                                <span className={styles.bold}>Project:</span> {project.name}\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className={`${styles.header} ${styles.raw}`}>\r\n                                            <div className={styles.list}>List:</div>\r\n                                            <div className={styles.container}>\r\n                                                <div className={styles.task}>Task:</div>\r\n                                                <div className={styles.progress}>Progress (%):</div>\r\n                                                <div className={styles.days}>Days Till End:</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        { project.lists.map(list => {\r\n                                            return (\r\n                                                <div key={list._id} className={styles.raw}>\r\n                                                    <div className={styles.list}>{list.name}</div>\r\n                                                    <div className={styles['task-container']}>\r\n                                                        {list.cards.map(card => {\r\n                                                            return (\r\n                                                                <MyTasksTask\r\n                                                                    key={card._id}\r\n                                                                    teamId={userContext.user.lastTeamSelected}\r\n                                                                    project={project}\r\n                                                                    list={list}\r\n                                                                    card={card}\r\n                                                                />\r\n                                                            )\r\n                                                        })}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    }\r\n                </div>\r\n            }\r\n            {(!userContext.user.lastTeamSelected || projects.length === 0) &&\r\n                <div className={styles.pic}>\r\n                    <img src={myTasks} alt='' />\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default MyTasksPage","export default __webpack_public_path__ + \"static/media/error-page.cdc8a8bc.svg\";","import React from \"react\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/error-page.svg'\r\n\r\n\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <PageLayout>\r\n            <div className={styles.title}>Error Page</div>\r\n        <div>\r\n          <img className={styles.pic1} src={pic1} alt=\"\" />\r\n        </div>\r\n            <div className={styles.text}>\r\n                Something went wrong.\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","export default __webpack_public_path__ + \"static/media/pic1.be7eba24.svg\";","export default __webpack_public_path__ + \"static/media/pic2.7c366339.svg\";","export default __webpack_public_path__ + \"static/media/pic3.1bb7af5a.svg\";","export default __webpack_public_path__ + \"static/media/pic4.a58683e8.svg\";","import React, { useState } from \"react\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport pic1 from '../../images/get-started/pic1.svg'\r\nimport pic2 from '../../images/get-started/pic2.svg'\r\nimport pic3 from '../../images/get-started/pic3.svg'\r\nimport pic4 from '../../images/get-started/pic4.svg'\r\nimport Transparent from \"../../components/Transparent\";\r\nimport CreateTeam from \"../../components/CreateTeam\";\r\nimport ButtonGreyTitle from \"../../components/ButtonGreyTitle\";\r\n\r\n\r\n\r\nconst GetStarted = () => {\r\n    const [showTeamForm, setShowTeamForm] = useState(false)\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div>\r\n                {\r\n                    showTeamForm ? (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n                        <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n                    </Transparent>) : null\r\n                }\r\n            </div>\r\n\r\n\r\n            <div className={styles.container}>\r\n                <div className={styles['logo-div']}>\r\n                    <img className={styles.logo} src={logo} alt=\"\" />\r\n                </div>\r\n\r\n                <div className={styles.title}>\r\n\r\n                    Welcome to Smart Manager\r\n\r\n            </div>\r\n\r\n                <div className={styles.title}>\r\n                    Get to know how to use Smart Manager in few quick steps:\r\n            </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    1. - In order to start using Smart Manager you have to be part of a team - you can create your own and work by yourself,  invite your colleagues and friends or can be invited in others by other smart manager users.\r\n                    You can create and join as many teams you want.\r\n\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic} src={pic1} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    2. - When you are already part of a team you can create and join different projects - again as many as you need. In your projects you can add your teammates and work together or you can organize your tasks by yourself.\r\n\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic} src={pic2} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    3. - In each project you can organize your tasks by separating them into different lists - for example - To Do, Doing and Done or any other way. You can create as many lists you need. The tasks can be moved from one list to another or within the lists.\r\n\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic3} src={pic3} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    4. - You can create as many tasks you need which gives you endless opportunities to keep track of the work you are doing. You can assign people for each task, select a due date and fill the progress as you work. You can attach files for each task and also keep track of the progress with task history.\r\n\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic} src={pic4} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className={styles.paragraph}>\r\n                    5. - Great! You are all set. Start your Smart experience and continue exploring countless opportunities by creating your first team.\r\n\r\n                    <div>\r\n                    <ButtonGreyTitle className={styles['navigate-buttons']} title={'Create New Team'} onClick={() => setShowTeamForm(true)} />\r\n\r\n                </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className={styles.greeting}>\r\n                    Enjoy!\r\n                <div >\r\n                        Smart Manager Team\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default GetStarted;","import React, { useRef } from 'react'\r\nimport styles from './index.module.css'\r\nimport pen from '../../images/pen.svg'\r\nimport ButtonClean from '../ButtonClean'\r\nimport MembersList from '../MembersList'\r\nimport ProgressBar from '../ProgressBar'\r\nimport Transparent from '../Transparent'\r\nimport AttachmentList from '../AttachmentList'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useParams } from 'react-router-dom'\r\nimport AttachmentsLink from '../AttachmentsLink'\r\n\r\nexport default function Card({ card, project, showCurrentCard, setCurrCard }) {\r\n    const listRef = useRef(null)\r\n    const [isListVisible, setIsListVisible] = useDetectOutsideClick(listRef)\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <div>\r\n                {((card.progress && card.progress !== 0) || card.members.length > 0 || card.attachments.length > 0) ?\r\n                    <div className={styles.container}>\r\n                        {card.progress ? <div className={styles.progress}><ProgressBar progress={card.progress} /></div> : <div></div>}\r\n                        <div className={styles.container}>\r\n                            {card.attachments.length > 0 && \r\n                                <AttachmentsLink card={card} project={project} teamId={teamId} />\r\n                            }\r\n                            <MembersList\r\n                                members={card.members}\r\n                                maxLength={2}\r\n                            />\r\n                        </div>\r\n                    </div> : null\r\n                }\r\n                <div className={styles['card-name']}>\r\n                    {card.name}\r\n                </div>\r\n            </div>\r\n            <ButtonClean\r\n                className={styles.button}\r\n                onClick={() => {\r\n                    showCurrentCard()\r\n                    setCurrCard(card)\r\n                }}\r\n                title={<img src={pen} alt=\"\" width=\"11.5\" height=\"11.5\" />}\r\n            />\r\n            {isListVisible && <Transparent hideForm={() => setIsListVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={card.attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                />\r\n            </Transparent >}\r\n        </div >\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/dots.d2d443b8.svg\";","import React, { useCallback, useRef, useState } from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Card from '../Card'\r\nimport styles from './index.module.css'\r\nimport dots from '../../images/dots.svg'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ListColor from '../ListColor'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\n\r\n\r\nexport default function List( { isAdmin, project, list, showEditList, showCurrentCard, setCurrCard }) {\r\n    const dropdownRef = useRef(null);\r\n    const cardRef = useRef(null);\r\n    const [isVisible, setIsVisible] = useDetectOutsideClick(cardRef)\r\n    const [isEditListActive, setIsEditListActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardName, setCardName] = useState('')\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n\r\n    const updateSocket = useCallback(() => {\r\n        socket.emit('project-update', project)\r\n    }, [socket, project])\r\n\r\n    async function deleteList() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/${project._id}/${list._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateSocket()\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n    }\r\n\r\n    const addCard = useCallback(async (event) => {\r\n        event.preventDefault()\r\n        if (cardName === '') {\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${list._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name: cardName,\r\n                description: '',\r\n                dueDate: '',\r\n                progress: '',\r\n                members: []\r\n\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsVisible(!isVisible)\r\n            setCardName('')\r\n            updateSocket()\r\n        }\r\n\r\n    }, [history, cardName, list._id, updateSocket, isVisible, setIsVisible])\r\n\r\n    function editList() {\r\n        showEditList()\r\n        setIsEditListActive(!isEditListActive)\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={styles.list}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'you wish to delete this list'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteList()}\r\n                />\r\n            }\r\n            <div className={styles.row}>\r\n                <div>\r\n                    <div className={styles.name} title={list.name} >{list.name}</div>\r\n                    <ListColor color={list.color || '#A6A48E'} type={'list'} />\r\n                </div>\r\n                {\r\n                    isAdmin &&\r\n                    <ButtonClean\r\n                        className={styles.button}\r\n                        onClick={() => setIsEditListActive(!isEditListActive)}\r\n                        title={<img className={styles.dots} src={dots} alt=\"...\" width=\"20\" height=\"6\" />}\r\n                    />\r\n                }\r\n            </div>\r\n            <div className={styles.relative}>\r\n                {isEditListActive && <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                        <ButtonGrey\r\n                            onClick={editList}\r\n                            title='Edit'\r\n                            className={styles.edit}\r\n                        />\r\n                        <ButtonGrey\r\n                        \r\n                            onClick={() => setConfirmOpen(true)}\r\n                            title='Delete'\r\n                            className={styles.delete}\r\n                        />\r\n                </div>}\r\n            </div>\r\n            <Droppable droppableId={list._id} type='droppableSubItem'>\r\n                {(provided) => (\r\n                    <div className={styles.droppable} ref={provided.innerRef}>\r\n                        {\r\n                            list.cards.map((element, index) => {\r\n                                return (\r\n                                    <Draggable key={element._id} draggableId={element._id}\r\n                                        index={index}\r\n                                    >\r\n                                        {(provided) => (\r\n                                            <div>\r\n                                                <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                    <Card\r\n                                                        card={element}\r\n                                                        project={project}\r\n                                                        showCurrentCard={showCurrentCard}\r\n                                                        setCurrCard={setCurrCard}\r\n                                                    />\r\n                                                </div>\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                )\r\n                            })\r\n                        }\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n            <div className={styles.flexend} >\r\n                {\r\n                    isVisible ?\r\n                        <form ref={cardRef} className={styles.container} >\r\n                            <input\r\n                                autoFocus\r\n                                className={styles['task-input']}\r\n                                type={'text'}\r\n                                value={cardName}\r\n                                onChange={e => setCardName(e.target.value)}\r\n                            />\r\n                            <ButtonClean type='submit' className={styles['add-task']} onClick={addCard} title='+ Add Task' project={project} />\r\n                        </form> : <ButtonClean className={styles['add-task']} onClick={() => setIsVisible(!isVisible)} title='+ Add Task' />\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic.260e1407.svg\";","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport Title from '../Title'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ButtonClean from '../ButtonClean'\r\nimport { SketchPicker } from 'react-color'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\nimport ButtonGrey from '../ButtonGrey'\r\n\r\n\r\nexport default function EditList(props) {\r\n    const nameRef = useRef(null)\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const [name, setName] = useState(props.list.name)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const dropdownRef = useRef(null)\r\n    const [isColorActive, setIsColorActive] = useDetectOutsideClick(dropdownRef)\r\n    const [color, setColor] = useState(props.list.color || '#A6A48E')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const members = props.project.membersRoles\r\n    const userContext = useContext(UserContext)\r\n    const projectId = props.project._id\r\n    const listId = props.list._id\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id])\r\n\r\n    async function handleSubmit() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/${projectId}/${listId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({ name, color })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', teamId)\r\n            props.hideForm()\r\n        }\r\n    }\r\n\r\n    const onColorChange = (color) => {\r\n        setColor(color.hex)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setNameHeight(nameRef.current.scrollHeight + 2)\r\n        }, 1);\r\n    }, [])\r\n\r\n    function onEscPressed(event, setElement, ref) {\r\n        if (event.keyCode === 27) {\r\n            setElement(currInput)\r\n            setTimeout(() => {\r\n                ref.current.blur()\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            <Title title=\"Edit List\" />\r\n            <div className={styles['input-container']}>\r\n                <span className={styles.name}> Name</span>\r\n                <textarea\r\n                    ref={nameRef}\r\n                    className={`${styles['name-input']} ${styles.text}`}\r\n                    style={{ 'height': nameHeight }}\r\n                    value={name}\r\n                    onFocus={() => setCurrInput(name)}\r\n                    onKeyDown={e => onEscPressed(e, setName, nameRef)}\r\n                    onChange={e => {\r\n                        setName(e.target.value)\r\n                        setNameHeight(nameRef.current.scrollHeight + 2)\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={styles['change-color']}>\r\n                <span className={styles['color-title']}>Color</span>\r\n                <ButtonClean\r\n                    className={styles['color-button']}\r\n                    style={{ background: `${color}` }}\r\n                    onClick={() => setIsColorActive(!isColorActive)}\r\n                />\r\n            </div>\r\n            {isColorActive && <div ref={dropdownRef} >\r\n                <SketchPicker className={styles['color-pick']} color={color} onChangeComplete={onColorChange} />\r\n            </div>}\r\n            <div className={styles['edit-list-button']}>\r\n                {isAdmin &&\r\n                    <ButtonGrey onClick={handleSubmit} title=\"Edit List\" />\r\n\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useContext } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport UserContext from \"../contexts/UserContext\"\r\nimport getCookie from \"./cookie\"\r\n\r\nasync function useUpdateUserLastTeam(teamId) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const userContext = useContext(UserContext)\r\n\r\n    if (teamId === userContext.user.lastTeamSelected) return\r\n\r\n    const response = await fetch(`/api/user/${userContext.user.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": token\r\n        },\r\n        body: JSON.stringify({\r\n            lastTeamSelected: teamId\r\n        })\r\n    })\r\n\r\n    if (!response.ok) {\r\n        history.push(\"/error\")\r\n      }\r\n\r\n    const user = {...userContext.user}\r\n    user.lastTeamSelected = teamId\r\n    userContext.setUser({\r\n        ...user\r\n    })\r\n\r\n}\r\n\r\nexport default useUpdateUserLastTeam\r\n","import React, { useCallback, useContext, useEffect, useState, useRef } from 'react'\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport List from '../../components/List'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Transparent from '../../components/Transparent'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport styles from './index.module.css'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport pic from '../../images/pic.svg'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Loader from 'react-loader-spinner'\r\nimport ButtonClean from '../../components/ButtonClean'\r\nimport EditCard from '../../components/EditCard'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport EditList from '../../components/EditList'\r\nimport userObject from '../../utils/userObject'\r\nimport useUpdateUserLastTeam from '../../utils/useUpdateUserLastTeam'\r\n\r\n\r\nexport default function ProjectBoard() {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [isVisibleEditList, setIsVisibleEditList] = useState(false)\r\n    const [listName, setListName] = useState('')\r\n    const listRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(listRef)\r\n    const socket = useSocket()\r\n    const projectContext = useContext(ProjectContext)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [currCard, setCurrCard] = useState('')\r\n    const [currList, setCurrList] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [dndActive, setDndActive] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const teamId = params.teamid\r\n    const token = getCookie(\"x-auth-token\")\r\n\r\n    useUpdateUserLastTeam(params.teamid)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n\r\n        projectContext.setProject(project)\r\n        projectContext.setLists(project.lists)\r\n    }, [projectContext])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const id = params.projectid\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, params.projectid])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n            return\r\n        }\r\n\r\n        if (dndActive) return\r\n\r\n        const memberArr = []\r\n        projectContext.project.membersRoles.map(element => {\r\n            return memberArr.push({ admin: element.admin, username: element.memberId.username, id: element.memberId._id })\r\n\r\n        })\r\n        projectContext.setLists(projectContext.project.lists)\r\n        const member = memberArr.find(m => m.id === context.user.id)\r\n\r\n        if (member) {\r\n            setIsAdmin(member.admin)\r\n        }\r\n\r\n    }, [projectContext.project, params.projectid, projectContext, context.user.id, dndActive])\r\n\r\n\r\n    const updateUserRecentProjects = useCallback(async () => {\r\n        const userId = context.user.id\r\n        let updatedUser = { ...context.user }\r\n        let oldArr = [...updatedUser.recentProjects]\r\n\r\n        if (oldArr.length > 2 && oldArr[2]._id === params.projectid) return\r\n\r\n        const arr = oldArr.filter(p => p._id !== params.projectid)\r\n        arr.push({ _id: params.projectid, name: projectContext.project.name })\r\n\r\n        if (arr.length > 3) {\r\n            arr.shift()\r\n        }\r\n\r\n        const response = await fetch(`/api/user/recentProjects/${userId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }, body: JSON.stringify({\r\n                recentProjects: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            const user = userObject(data)\r\n            context.logIn(user)\r\n        }\r\n    }, [context, history, params.projectid, projectContext.project, token])\r\n\r\n    useEffect(() => {\r\n        if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n            return\r\n        } else {\r\n            updateUserRecentProjects()\r\n        }\r\n    }, [params.projectid, projectContext.project, updateUserRecentProjects])\r\n\r\n\r\n    if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n        return (\r\n            <PageLayout>\r\n                <Loader\r\n                    type=\"TailSpin\"\r\n                    color=\"#363338\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n\r\n    async function handleOnDragEnd(result) {\r\n        if (!result.destination) return\r\n\r\n        setDndActive(true)\r\n\r\n        if (result.type === 'droppableItem') {\r\n            let position = result.destination.index\r\n\r\n            const filteredList = projectContext.lists.filter(element => !(projectContext.hiddenLists.includes(element._id)))\r\n            const previousId = filteredList[position - 1]\r\n            position = projectContext.lists.indexOf(previousId) + 1\r\n\r\n            const newListsArr = [...projectContext.lists]\r\n            const [reorderedList] = newListsArr.splice(result.source.index, 1)\r\n            newListsArr.splice(result.destination.index, 0, reorderedList)\r\n            projectContext.setLists(newListsArr)\r\n\r\n            const response = await fetch(`/api/projects/lists/${projectContext.project._id}/${result.draggableId}/dnd-update`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    position,\r\n                    element: 'list',\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            } else {\r\n                const updatedProject = await response.json()\r\n                projectContext.setProject(updatedProject)\r\n            }\r\n        }\r\n\r\n        if (result.type === 'droppableSubItem') {\r\n            const position = result.destination.index\r\n            const oldPosition = result.source.index\r\n            const source = result.source.droppableId\r\n            const destination = result.destination.droppableId\r\n\r\n            const newListsArr = [...projectContext.lists]\r\n            let sourcePosition = ''\r\n            let destinationPosition = ''\r\n\r\n            for (let list of newListsArr) {\r\n                if (list._id === source) sourcePosition = newListsArr.indexOf(list)\r\n                if (list._id === destination) destinationPosition = newListsArr.indexOf(list)\r\n            }\r\n\r\n            const [task] = newListsArr[sourcePosition].cards.splice(oldPosition, 1)\r\n            newListsArr[destinationPosition].cards.splice(position, 0, task)\r\n            projectContext.setLists(newListsArr)\r\n\r\n            const response = await fetch(`/api/projects/lists/${projectContext.project._id}/${result.draggableId}/dnd-update`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    position,\r\n                    element: 'card',\r\n                    source,\r\n                    destination\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n        }\r\n\r\n        socket.emit('project-update', projectContext.project)\r\n        socket.emit('task-team-update', teamId)\r\n        setDndActive(false)\r\n    }\r\n\r\n    const addList = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (listName === \"\") {\r\n            return\r\n        }\r\n        const response = await fetch(`/api/projects/lists/${projectContext.project._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            setListName('')\r\n            socket.emit('project-update', projectContext.project)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div style={{ position: 'absolute' }}>\r\n                {isVisible &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                            <EditCard\r\n                                hideForm={() => setIsVisible(!isVisible)}\r\n                                initialCard={currCard}\r\n                                listId={currList}\r\n                                project={projectContext.project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                        </Transparent >\r\n                    </div >\r\n                }\r\n                {isVisibleEditList &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setIsVisibleEditList(!isVisibleEditList)} >\r\n                            <EditList hideForm={() => setIsVisibleEditList(!isVisibleEditList)} list={currList} project={projectContext.project} />\r\n                        </Transparent >\r\n                    </div >\r\n                }\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId='droppable' direction='horizontal' type='droppableItem'>\r\n                        {(provided) => (\r\n                            <div className={styles['container-droppable']} ref={provided.innerRef} >\r\n                                {projectContext.lists\r\n                                    .filter(element => !(projectContext.hiddenLists.includes(element._id)))\r\n                                    .map((element, index) => {\r\n                                        return (\r\n                                            <Draggable key={element._id} draggableId={element._id} index={index}>\r\n                                                {(provided) => (\r\n                                                    <div className={styles.droppable} {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                        <List\r\n                                                            list={element}\r\n                                                            project={projectContext.project}\r\n                                                            isAdmin={isAdmin}\r\n                                                            showEditList={() => {\r\n                                                                setCurrList(element)\r\n                                                                setIsVisibleEditList(!isVisibleEditList)\r\n                                                            }}\r\n                                                            showCurrentCard={() => {\r\n                                                                setCurrList(element._id)\r\n                                                                setIsVisible(!isVisible)\r\n                                                            }}\r\n                                                            setCurrCard={setCurrCard}\r\n                                                        />\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {provided.placeholder}\r\n                                {isAdmin &&\r\n                                    <div className={styles.list} >\r\n                                        {isActive ?\r\n                                            <form ref={listRef} className={styles.container} >\r\n                                                <input\r\n                                                    autoFocus\r\n                                                    className={styles.input}\r\n                                                    type={'text'}\r\n                                                    value={listName}\r\n                                                    onChange={e => setListName(e.target.value)}\r\n                                                />\r\n                                                <ButtonClean type='submit' className={styles.addlist} onClick={addList} title='+ Add List' />\r\n                                            </form> : <ButtonClean className={styles.addlist} onClick={() => setIsActive(!isActive)} title='+ Add List' />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                <img className={styles.pic} src={pic} alt=\"\" width=\"340\"/>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nconst ESCAPE_KEY_CODE = 27\r\nconst ENTER_KEY_CODE = 13\r\n\r\nconst ResponsiveTextArea = ({ value, setValue, onBlur, onKeyDown, onSubmit, className, toggleActive }) => {\r\n    const inputRef = useRef(null)\r\n    const [areaHeight, setAreaHeight] = useState(null)\r\n    const [currValue, setCurrValue] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (inputRef.current) {\r\n            setAreaHeight(inputRef.current.scrollHeight + 2)\r\n        }\r\n        if(inputRef) {\r\n            inputRef.current.focus()\r\n        }\r\n    }, [])\r\n\r\n    const handleBlur = (event) => {\r\n        if (onBlur) {\r\n            return onBlur(event)\r\n        }\r\n\r\n        if (value === currValue) {\r\n            return\r\n        }\r\n\r\n        onSubmit(event)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (onKeyDown) {\r\n            return onKeyDown(event)\r\n        }\r\n\r\n        if (event.keyCode === ESCAPE_KEY_CODE && toggleActive) {\r\n            setValue(currValue)\r\n            return toggleActive()\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            onSubmit(event)\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        setAreaHeight(inputRef.current.scrollHeight + 2)\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            ref={inputRef}\r\n            className={className}\r\n            style={{ 'height': areaHeight }}\r\n            value={value}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={onChange}\r\n            onBlur={handleBlur}\r\n            onFocus={() => setCurrValue(value)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ResponsiveTextArea","import React, { useCallback, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AttachmentsLink from '../AttachmentsLink'\r\nimport ResponsiveTextArea from '../ResponsiveTextarea'\r\n\r\nexport default function TaskName({ card, listId, project }) {\r\n\r\n\tconst inputRef = useRef(null)\r\n\tconst [isActive, setIsActive] = useDetectOutsideClick(inputRef)\r\n\tconst [cardName, setCardName] = useState(card.name)\r\n\tconst history = useHistory()\r\n\tconst socket = useSocket()\r\n\tconst params = useParams()\r\n\tconst teamId = params.teamid\r\n\r\n\tconst editCardName = useCallback(async () => {\r\n\t\tconst cardId = card._id\r\n\r\n\t\tif (cardName === \"\") {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst token = getCookie(\"x-auth-token\")\r\n\t\tconst response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Authorization\": token\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: cardName\r\n\t\t\t})\r\n\t\t})\r\n\t\tif (!response.ok) {\r\n\t\t\thistory.push(\"/error\")\r\n\t\t\treturn\r\n\t\t} else {\r\n\t\t\tsetIsActive(!isActive)\r\n\t\t\tsocket.emit('project-update', project)\r\n\t\t\tsocket.emit('task-team-update', teamId)\r\n\t\t}\r\n\r\n\t}, [history, cardName, isActive, setIsActive, card._id, listId, project, socket, teamId])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ isActive ?\r\n\t\t\t\t< div ref={inputRef} className={styles.nameContainer}>\r\n\t\t\t\t\t<ResponsiveTextArea\r\n\t\t\t\t\t\tvalue={cardName}\r\n\t\t\t\t\t\tsetValue={setCardName}\r\n\t\t\t\t\t\tclassName={styles.inputElementName}\r\n\t\t\t\t\t\tonSubmit={editCardName}\r\n\t\t\t\t\t\ttoggleActive={() => setIsActive(!isActive)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<span className={styles['attachments-container']}>\r\n\t\t\t\t\t\t{(card.attachments && card.attachments.length > 0 && !isActive) &&\r\n\t\t\t\t\t\t\t<AttachmentsLink\r\n\t\t\t\t\t\t\t\tcard={card}\r\n\t\t\t\t\t\t\t\tproject={project}\r\n\t\t\t\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className={styles.tableText} onClick={() => setIsActive(!isActive)}>\r\n\t\t\t\t\t\t{cardName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n\r\n\r\n}\r\n\r\n","import React, { useCallback, useMemo, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketProvider';\r\n\r\nexport default function TaskProgress(props) {\r\n\r\n    const today = useMemo(() => new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())), [])\r\n    const card = props.card\r\n    const [taskHistory, setTaskHistory] = useState(card.history)\r\n    const value = props.value\r\n    let taskprogress = ''\r\n    let token = value.split('/')\r\n\r\n    if (token.length > 1) {\r\n        taskprogress = token[0]\r\n    }\r\n\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardProgress, setCardProgress] = useState(taskprogress)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n    const editCardProgress = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        // let data = props.value.split('/')\r\n        // let cardId = data[1]\r\n        // let listId = data[2]\r\n\r\n        const cardId = card._id\r\n        const listId = props.listId\r\n\r\n\r\n        if (!cardProgress || (cardProgress > 100) || (cardProgress < 0)) {\r\n            return\r\n        }\r\n\r\n        const cardProgressNum = Number(cardProgress)\r\n        const newCardProgress = Math.max(Math.min(cardProgressNum, 100), 0)\r\n        if (isNaN(cardProgressNum) || newCardProgress === Number(card.progress)) {\r\n            return\r\n        }\r\n\r\n        setCardProgress(newCardProgress)\r\n\r\n        const newTaskHistory = [...taskHistory, { event: `Progress ${cardProgress}%`, date: today }]\r\n        setTaskHistory(newTaskHistory)\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress: cardProgress,\r\n                history: newTaskHistory\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        }\r\n\r\n        setIsActive(!isActive)\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('task-team-update', teamId)\r\n\r\n    }, [history, cardProgress, isActive, setIsActive, taskHistory, today, card._id, props.listId, props.project, socket, teamId, card.progress])\r\n\r\n\r\n    function showTaskProgress(value) {\r\n\r\n        if (value && value !== 'null') {\r\n            return (\r\n                <div style={{\r\n                    backgroundColor: getBackGroundColor(value),\r\n                    padding: '5px',\r\n                    border: 'solid black 1px',\r\n                    borderRadius: '5px',\r\n                    minHeight: '2rem',\r\n                    width: '100%',\r\n                    textAlign: 'center',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }} > {value} %</div>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\r\n                + Add\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    function getBackGroundColor(value) {\r\n        let currColor = ''\r\n        switch (true) {\r\n            case (value === 100 || value === '100'):\r\n                currColor = '#0E8D27';\r\n                break;\r\n            case (value < 20):\r\n                currColor = '#EF2D2D'\r\n                break;\r\n            case (value < 100):\r\n                currColor = '#5E9DDC'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return currColor\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n                isActive ?\r\n                    <div ref={dropdownRef} className={styles.taskProgress} onBlur={editCardProgress}>\r\n                        <input\r\n                            className={styles.taskProgressButtonInput}\r\n                            style={{ backgroundColor: getBackGroundColor(cardProgress) }}\r\n                            type={'number'}\r\n                            value={cardProgress}\r\n                            // placeholder={'%'}\r\n                            onChange={e => setCardProgress(e.target.value)}\r\n                            min=\"0\" max=\"100\"\r\n                            autoFocus\r\n                        />\r\n                    </div >\r\n                    :\r\n                    // <div>\r\n                    // { \r\n                    //     (taskprogress!== null)?\r\n\r\n                    <div className={styles.taskProgress} onClick={() => setIsActive(!isActive)}>\r\n                        {/* <button className={styles.taskProgressButton}  */}\r\n                        {/* > */}\r\n                        {showTaskProgress(taskprogress)}\r\n                        {/* </button> */}\r\n                    </div >\r\n                // : <span>Add Progress</span>\r\n                // }\r\n                // </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pen from '../../images/pen.svg'\r\nimport DatePicker from \"react-datepicker\"\r\nimport Transparent from \"../Transparent\"\r\nimport EditCard from '../EditCard'\r\n\r\n\r\nexport default function TaskDueDate(props) {\r\n\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardDueDate, setCardDueDate] = useState(props.cardDueDate)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n    const editCardDueDate = useCallback(async (date) => {\r\n\r\n        let cardId = props.cardId\r\n        let listId = props.listId\r\n\r\n        if (cardDueDate === \"\" && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                dueDate: date\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', props.teamId)\r\n        }\r\n\r\n    }, [history, cardDueDate, setIsActive, isActive, props.cardId, props.listId, props.project, socket, props.teamId])\r\n\r\n    const changeCardDueDate = (date) => {\r\n        setCardDueDate(date)\r\n        editCardDueDate(date)\r\n    } \r\n\r\n    const value = props.value\r\n\r\n    return (\r\n        <span className={styles.dueDateField}>\r\n            <DatePicker\r\n                selected={value ? cardDueDate : today}\r\n                customInput={\r\n                    value\r\n                    ?   <div className={styles.dueDateFieldInput}>\r\n                            <span>{value}</span>\r\n                        </div>\r\n                    :   <span>Select date</span>\r\n                }\r\n                onChange={changeCardDueDate}\r\n                label=\"Go to date\"\r\n                onBlur={value ? () => setIsActive(!isActive) : null}\r\n                popperPlacement='bottom-end'\r\n                closeOnScroll={e => e.target === document.getElementsByClassName('rt-tbody')[0]}\r\n            />\r\n\r\n            { isVisible ?\r\n                < span >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditCard\r\n                            hideForm={() => setIsVisible(!isVisible)}\r\n                            initialCard={props.card}\r\n                            listId={props.listId}\r\n                            project={props.project}\r\n                            teamId={teamId}\r\n                        />\r\n                    </Transparent >\r\n                </span >\r\n                :\r\n                <span>\r\n                    <img \r\n                        className={styles.pen} \r\n                        src={pen} \r\n                        alt=\"...\" \r\n                        width=\"13\" \r\n                        height=\"13\" \r\n                        onClick={() => setIsVisible(true)} \r\n                    />\r\n                </span>\r\n            }\r\n        </span>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ENTER_KEY_CODE = 13\r\nconst ESCAPE_KEY_CODE = 27\r\n\r\nconst AddProjectElement = ({ handleSubmit, handleInputRemove, elementName, setElementName, placeholder }) => {\r\n    const inputRef = useRef(null)\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n\r\n    const handleChange = (event) => {\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return\r\n        }\r\n\r\n        setElementName(event.target.value)\r\n        setNameHeight(inputRef.current.scrollHeight + 2)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return handleSubmit()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            value={elementName}\r\n            ref={inputRef}\r\n            placeholder={placeholder}\r\n            className={styles.inputElementName}\r\n            style={{ 'height': nameHeight, width: '100%' }}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={handleChange}\r\n            onBlur={handleSubmit}\r\n            autoFocus\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddProjectElement","import React, { useState } from 'react'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddProjectElement from './AddProjectElement'\r\n\r\nexport default function AddTask({ listId, project, handleInputRemove }) {\r\n    const [taskName, setTaskName] = useState('')\r\n    const socket = useSocket()\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async () => {\r\n        if (!taskName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        const token = getCookie('x-auth-token')\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({\r\n                name: taskName,\r\n                progress: ''\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n            \r\n        // const updatedCard = await response.json()\r\n        socket.emit('project-update', project)\r\n\r\n        handleInputRemove()\r\n    }\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={taskName}\r\n            setElementName={setTaskName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new task name:'\r\n        />\r\n    )\r\n}","import React, { useCallback, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport AddProjectElement from './AddProjectElement'\r\n\r\nexport default function AddList({ project, handleInputRemove }) {\r\n    const [listName, setListName] = useState('')\r\n    const socket = useSocket()\r\n    const history = useHistory()     \r\n\r\n\r\n    const handleSubmit = useCallback(async () => {\r\n        const projectId = project._id\r\n        if (!listName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        const token = getCookie('x-auth-token')\r\n        const response = await fetch(`/api/projects/lists/${projectId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        socket.emit('project-update', project)\r\n        handleInputRemove()\r\n            \r\n    }, [history, listName, project, handleInputRemove, socket])\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={listName}\r\n            setElementName={setListName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new list name:'\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport { checkDateEquality, compareDates, getDateWithOffset, formatDate } from '../../utils/date'\r\n\r\nconst CELL_COLORS = {\r\n    CREATED: '#0E8D27',\r\n    DUE_DATE: '#EF2D2D',\r\n    DELAYED: '#EF2D2D',\r\n    FINISHED: '#0E8D27',\r\n    PROGRESS: '#5E9DDC',\r\n    PROGRESS_OLD: '#A2A7B0',\r\n}\r\n\r\nconst assembleColumnData = (startDate) => {\r\n    const currentDate = new Date()\r\n    let cardData = null\r\n\r\n    const getWeekdayCellHtml = (message, color, messageColor = 'black') => {\r\n        const progressStyle = { \r\n            background: color, \r\n            color: messageColor,\r\n            width: '100%',\r\n            padding: '5px', \r\n            // fontSize: '14px',\r\n            border: '1px solid #363338',\r\n            borderRadius: '5px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        }\r\n\r\n        return (\r\n            <div className={styles.daylyProgress}>\r\n                <div style={progressStyle}>\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getWeekdayCellData = (dataString, numDaysOffset) => {\r\n        if (!dataString) {\r\n            return ''\r\n        }\r\n\r\n        // if cell is first to be displayed for this card, parse the incoming data\r\n        // else, it should already have been parsed so we can use it directly\r\n        if (numDaysOffset === 0) {\r\n            cardData = JSON.parse(dataString)\r\n        }\r\n\r\n        const { date, history, progress } = cardData\r\n        const cellDate = getDateWithOffset(startDate, numDaysOffset)\r\n        \r\n        const eventInCell = history && history.events[formatDate(cellDate, '%d/%m/%y')]\r\n\r\n        const dueDate = date ? new Date(date) : null\r\n        const isAfterDueDate = dueDate && compareDates(cellDate, dueDate) > 0\r\n        const isBeforeToday = compareDates(cellDate, currentDate) < 0\r\n        if (eventInCell) {\r\n            const [eventType, eventValue] = eventInCell.event.split(' ')\r\n\r\n            if (eventType === 'Created') {\r\n                return getWeekdayCellHtml(eventType, CELL_COLORS.CREATED)\r\n            }\r\n\r\n            if (eventType === 'Progress' && eventValue && eventValue === '100%') {\r\n                return getWeekdayCellHtml('Finished', CELL_COLORS.FINISHED)\r\n            }\r\n\r\n            if (isBeforeToday) {\r\n                return getWeekdayCellHtml(eventInCell.event, CELL_COLORS.PROGRESS_OLD)\r\n            }\r\n\r\n            const cellBackgroundColor = isAfterDueDate ? CELL_COLORS.DELAYED : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(eventInCell.event, cellBackgroundColor)\r\n        }\r\n\r\n        // if we get to here, we know that there are no new events on the day of the cell\r\n        const isMonday = numDaysOffset === 0\r\n        const eventsInWeek = history && history.hasEventsInWeek[formatDate(cellDate, '%w/%y')]\r\n        if (isMonday && progress && progress === 100 && eventsInWeek) {\r\n            // progress for task is 100% and no new events happen during the week\r\n            return getWeekdayCellHtml('Finished', CELL_COLORS.FINISHED)\r\n        }\r\n\r\n        if (dueDate) {\r\n            if (checkDateEquality(cellDate, dueDate)) {\r\n                if (compareDates(currentDate, dueDate) > 0) {\r\n                    // cell date is the task due date and current date is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return getWeekdayCellHtml('Due Date', CELL_COLORS.DUE_DATE)\r\n            }\r\n\r\n            if (compareDates(cellDate, dueDate) > 0) {\r\n                // cell date is after due date\r\n                if (isMonday && compareDates(currentDate, cellDate) > 0) {\r\n                    // cell is first shown column (usually Monday) and today is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return ''\r\n            }\r\n\r\n            let { finishedDate, startDate: taskStartDate } = history\r\n            finishedDate = finishedDate && new Date(finishedDate)\r\n            taskStartDate = taskStartDate && new Date(taskStartDate)\r\n\r\n            if (finishedDate && compareDates(cellDate, finishedDate) > 0) {\r\n                // task has finished in the past and cell date is later than date of finish\r\n                return ''\r\n            }\r\n\r\n            if (isMonday && taskStartDate && compareDates(taskStartDate, startDate) > 0) {\r\n                // task has started, but first displayed date is earlier than task start date\r\n                return ''\r\n            }\r\n\r\n            \r\n            // task is neither Finished, nor Delayed, but has a Due Date\r\n            // therefore, it's In Progress\r\n            const cellText = isMonday ? 'In Progress' : ''\r\n            const cellColor = isBeforeToday ? CELL_COLORS.PROGRESS_OLD : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(cellText, cellColor)\r\n        }\r\n\r\n        return ''\r\n    }\r\n        \r\n    const getHeaderDateHtml = (numDaysOffset) => {\r\n        const headerDate = getDateWithOffset(startDate, numDaysOffset)\r\n        const color = checkDateEquality(currentDate, headerDate) ? \"#CFE2EC\" : ''\r\n\r\n        const displayedDate = formatDate(headerDate, '%d.%m')\r\n        const displayedDayOfWeek = formatDate(headerDate, '%A')\r\n\r\n        return (\r\n            <div style={{ backgroundColor: color, color: 'black' }}>\r\n                <div style={{ fontWeight: '600' }}>{displayedDayOfWeek}</div>\r\n                <div style={{ fontSize: '80%' }}>{displayedDate}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const wrapCellData = (cellData) => {\r\n        return (\r\n            <div style={{ \r\n                whiteSpace: 'normal', \r\n                overflowWrap: 'anywhere', \r\n                textAlign: 'left',\r\n                height: '100%'}}\r\n            >\r\n                {cellData}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        [\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Task</div>\r\n                },\r\n                accessor: \"task\",\r\n                minWidth: 350,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Progress</div>\r\n                },\r\n                accessor: \"progress\",\r\n                minWidth: 65,\r\n                maxWidth: 75,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {}  // needed to override default sorting\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Team</div>\r\n                },\r\n                accessor: \"assigned\",\r\n                minWidth: 75,\r\n                maxWidth: 80,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                getProps: (state, rowInfo, column) => ({ style: { overflow: 'visible' } }),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(0),\r\n                accessor: \"monday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 0),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(1),\r\n                accessor: \"tuesday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 1),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(2),\r\n                accessor: \"wednesday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 2),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(3),\r\n                accessor: \"thursday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 3),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(4),\r\n                accessor: \"friday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 4),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(5),\r\n                accessor: \"saturday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 5),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(6),\r\n                accessor: \"sunday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 6),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Due Date</div>\r\n                },\r\n                accessor: \"dueDate\",\r\n                minWidth: 100,\r\n                maxWidth: 130,\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {} // needed to override default sorting\r\n            }\r\n        ]\r\n    )\r\n}\r\n\r\n\r\nexport default assembleColumnData\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst FilterWrapper = ({ children, isVisible, legendContent }) => {\r\n    return (\r\n        <fieldset className={styles.container}>\r\n            <legend className={styles['legend-wrapper']}>\r\n                {isVisible && \r\n                    <blockquote className={styles.legend}>\r\n                        {legendContent}\r\n                    </blockquote>\r\n                }\r\n            </legend>\r\n            {children}\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default FilterWrapper","import React, { useContext, useMemo, useRef } from 'react'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonClean from '../ButtonClean'\r\nimport FilterWrapper from '../FilterWrapper'\r\nimport styles from './index.module.css'\r\n\r\nconst MembersFilter = ({ membersFilter, setMembersFilter, handleFilterClear, buttonStyle }) => {\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const { project } = useContext(ProjectContext)\r\n\r\n    const options = useMemo(() => {\r\n        return project.membersRoles.map(mr => ({\r\n            value: mr.memberId._id,\r\n            displayValue: mr.memberId.username\r\n        }))\r\n    }, [project.membersRoles])\r\n\r\n    const handleOptionClick = (optionValue, optionDisplay) => {\r\n        setMembersFilter(optionValue, optionDisplay)\r\n\r\n        setIsActive(false)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        handleFilterClear()\r\n        setIsActive(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks assigned to:'\r\n            isVisible={!!(membersFilter)}\r\n        >\r\n            <div className={styles.container}>\r\n                <div className={styles['btn-container']}>\r\n                    <ButtonClean\r\n                        className={isActive\r\n                            ? `${buttonStyle} ${membersFilter && styles['btn-partial']} ${styles['btn-clicked']}`\r\n                            : `${buttonStyle} ${membersFilter && styles['btn-partial']}`}\r\n                        onClick={() => setIsActive(!isActive)}\r\n                        title={(membersFilter && membersFilter.name) || 'Tasks Assigned To:'}\r\n                    />\r\n                    { membersFilter &&\r\n                        <ButtonClean\r\n                            className={`${buttonStyle} ${styles['btn-clear']}`}\r\n                            title='X'\r\n                            onClick={handleClear}\r\n                        />\r\n                    }\r\n                </div>\r\n                {isActive &&\r\n                    <div className={styles.options} ref={dropdownRef}>\r\n                        {/* <div\r\n                            key='clear options'\r\n                            className={`${styles.option} ${styles['option-blank']}`}\r\n                            onClick={handleOptionClear}\r\n                        >\r\n                            Leave blank\r\n                        </div> */}\r\n                        {options.map(option => {\r\n                            return (\r\n                                <div\r\n                                    key={option.value}\r\n                                    className={styles.option}\r\n                                    onClick={() => handleOptionClick(option.value, option.displayValue)}\r\n                                >\r\n                                    {option.displayValue}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </FilterWrapper>\r\n    )\r\n}\r\n\r\nexport default MembersFilter","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport DatePicker from 'react-datepicker'\r\nimport { formatDate } from '../../utils/date'\r\nimport FilterWrapper from '../FilterWrapper'\r\n\r\nconst DueDateFilter = ({ dueBefore, buttonStyle, onChange, handleFilterClear }) => {\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks due before:'\r\n            isVisible={!!(dueBefore)}\r\n        >\r\n            <DatePicker\r\n                selected={dueBefore}\r\n                customInput={\r\n                    <button className={dueBefore \r\n                            ? `${buttonStyle} ${styles['filter-used']}`\r\n                            : `${buttonStyle} ${styles['filter-blank']}`}\r\n                    >\r\n                        {dueBefore ? formatDate(dueBefore, '%d-%m-%Y') : 'Due Before:'}\r\n                    </button>\r\n                }\r\n                showWeekNumbers={true}\r\n                onChange={onChange}\r\n            />\r\n            { dueBefore &&\r\n                <button \r\n                    className={`${buttonStyle} ${styles['filter-clear']}`}\r\n                    onClick={handleFilterClear}\r\n                >\r\n                    X\r\n                </button>\r\n            }\r\n        </FilterWrapper>\r\n    )\r\n}\r\n\r\nexport default DueDateFilter","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ToggleSwitch = ({ isActive, toggleStatus, label, containerStyle }) => {\r\n    return (\r\n        <div className={`${styles.container} ${containerStyle}`}>\r\n            <label>{label}</label>\r\n            <span \r\n                className={`${styles['switch-container']} ${isActive && styles['container-active']}`}\r\n                onClick={toggleStatus}\r\n            >\r\n                <span className={styles['state-circle']}></span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleSwitch","import React, { useRef } from 'react'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ToggleSwitch from '../ToggleSwitch'\r\nimport styles from './index.module.css'\r\n\r\nconst ProgressFilters = ({ buttonStyle, filters, toggleFilter }) => {\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <ButtonClean \r\n                title='Filter By Progress:' \r\n                className={`${buttonStyle} ${styles['btn-progress']}`}\r\n                onClick={() => setIsActive(!isActive)}\r\n            />\r\n            { isActive &&\r\n            <div className={styles.dropdown} ref={dropdownRef}>\r\n                <ToggleSwitch \r\n                    isActive={filters.notStarted} \r\n                    label='Not Started' \r\n                    toggleStatus={() => toggleFilter('notStarted')}\r\n                    containerStyle={`${styles['progress-switch']} ${styles['progress-switch-top']}`} \r\n                />\r\n                <ToggleSwitch \r\n                    isActive={filters.inProgress} \r\n                    label='In Progress' \r\n                    toggleStatus={() => toggleFilter('inProgress')}\r\n                    containerStyle={styles['progress-switch']} \r\n                />\r\n                <ToggleSwitch \r\n                    isActive={filters.done} \r\n                    label='Done' \r\n                    toggleStatus={() => toggleFilter('done')}\r\n                    containerStyle={`${styles['progress-switch']} ${styles['progress-switch-bottom']}`} \r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressFilters","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport MembersFilter from '../FilterMembers'\r\nimport DueDateFilter from '../FilterDueDate'\r\nimport ProgressFilters from '../FilterProgress'\r\n\r\nconst TaskFilters = ({ filter, setFilter }) => {\r\n    const toggleProgressFilter = (filterName) => {\r\n        const currentFilterValue = filter.progress[[filterName]]\r\n\r\n        setFilter({ ...filter, progress: { ...filter.progress, [filterName]: !currentFilterValue } })\r\n    }\r\n\r\n    return (\r\n        <div className={styles['filters-container']}>\r\n            <ProgressFilters \r\n                buttonStyle={styles.filter} \r\n                filters={filter.progress} \r\n                toggleFilter={toggleProgressFilter} \r\n            />\r\n            <MembersFilter\r\n                membersFilter={filter.member}\r\n                setMembersFilter={(id, name) => setFilter({ ...filter, member: { id, name } })}\r\n                handleFilterClear={() => setFilter({ ...filter, member: null })}\r\n                buttonStyle={styles.filter}\r\n            />\r\n            <DueDateFilter\r\n                dueBefore={filter.dueBefore}\r\n                buttonStyle={styles.filter}\r\n                onChange={date => setFilter({ ...filter, dueBefore: date })}\r\n                handleFilterClear={() => setFilter({ ...filter, dueBefore: null })}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskFilters","export default __webpack_public_path__ + \"static/media/previous-day.e04a7658.svg\";","export default __webpack_public_path__ + \"static/media/next-day.2584bb08.svg\";","import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport styles from './index.module.css'\r\nimport { getMonday } from '../../utils/date'\r\nimport previous from '../../images/project-list/previous-day.svg'\r\nimport next from '../../images/project-list/next-day.svg'\r\n\r\nconst TableDateNavigation = ({ startDate, changeStartDate, setStartDate }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <DatePicker\r\n                selected={startDate}\r\n                customInput={\r\n                    <button className={styles.navigateButtons}>\r\n                        Choose Week\r\n                    </button>\r\n                }\r\n                // className={styles.reactDatepicker}\r\n                showWeekNumbers\r\n                onChange={date => setStartDate(getMonday(date))}\r\n            />\r\n            <button className={styles.navigateButtons} onClick={() => changeStartDate(-7)}>\r\n                Previous week\r\n            </button>\r\n\r\n            <div className={styles.picContainer} onClick={() => changeStartDate(-1)}>\r\n                <img\r\n                    className={styles.buttonPreviousDay}\r\n                    src={previous} alt=\"...\"\r\n                />\r\n                <div className={styles.centeredText}>Previous day</div>\r\n            </div>\r\n\r\n            <div className={styles.picContainer} onClick={() => changeStartDate(1)}>\r\n                <img\r\n                    className={styles.buttonPreviousDay}\r\n                    src={next} alt=\"...\"\r\n                />\r\n                <div className={styles.centeredText}>Next day</div>\r\n            </div>\r\n\r\n            <button\r\n                className={styles.navigateButtons}\r\n                onClick={() => changeStartDate(7)}\r\n            >\r\n                Next week\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDateNavigation","import { compareDates, formatDate } from \"../../utils/date\"\r\n\r\nconst sortByTask = (cardOne, cardTwo) => cardOne.name.localeCompare(cardTwo.name)\r\n\r\nconst sortByProgress = (cardOne, cardTwo) => {\r\n    const firstValue = cardOne.progress || 0\r\n    const secondValue = cardTwo.progress || 0\r\n\r\n    if (firstValue > secondValue) {\r\n        return 1\r\n    } else if (firstValue < secondValue) {\r\n        return -1\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nconst sortByDueDate = (cardOne, cardTwo) => {\r\n    const parsedDateOne = cardOne.dueDate ? new Date(cardOne.dueDate) : new Date('1970-01-01')\r\n    const parsedDateTwo = cardTwo.dueDate ? new Date(cardTwo.dueDate) : new Date('1970-01-01')\r\n\r\n    return compareDates(parsedDateOne, parsedDateTwo)\r\n}\r\n\r\nconst getCardsSortMethod = (columnName, isDescending) => {\r\n    let sortingFunc = null\r\n    switch(columnName) {\r\n        case 'task':\r\n            sortingFunc = sortByTask\r\n            break\r\n        case 'progress':\r\n            sortingFunc = sortByProgress\r\n            break\r\n        case 'dueDate':\r\n            sortingFunc = sortByDueDate\r\n            break\r\n        default:\r\n            return null\r\n    }\r\n\r\n    return (firstValue, secondValue) => {\r\n        const sortingEvaluation = sortingFunc(firstValue, secondValue)\r\n        return isDescending ? -sortingEvaluation : sortingEvaluation\r\n    }\r\n}\r\n\r\nconst createTableEntry = (entryData) => {\r\n    return {\r\n        task: entryData.task || '',\r\n        progress: entryData.progress || '',\r\n        assigned: entryData.assigned || '',\r\n        monday: entryData.monday || '',\r\n        tuesday: entryData.tuesday || '',\r\n        wednesday: entryData.wednesday || '',\r\n        thursday: entryData.thursday || '',\r\n        friday: entryData.friday || '',\r\n        saturday: entryData.saturday || '',\r\n        sunday: entryData.sunday || '',\r\n        dueDate: entryData.dueDate || ''\r\n    }\r\n}\r\n\r\nconst parseCardHistory = (taskHistory) => {\r\n    if (!taskHistory) {\r\n        return null\r\n    }\r\n\r\n    const historyByDate = { events: {}, hasEventsInWeek: {} }\r\n    for (let element of taskHistory) {\r\n        const elementDate = new Date(element.date)\r\n\r\n        if (element.event === 'Created') {\r\n            historyByDate.startDate = elementDate\r\n        }\r\n\r\n        historyByDate.events[formatDate(elementDate, '%d/%m/%y')] = element\r\n        historyByDate.hasEventsInWeek[formatDate(elementDate, '%w/%y')] = true\r\n    }\r\n\r\n    const lastHistoryEvent = taskHistory[taskHistory.length - 1]\r\n    if (lastHistoryEvent && lastHistoryEvent.event === 'Progress 100%') {\r\n        historyByDate.finishedDate = new Date(lastHistoryEvent.date)\r\n    }\r\n    \r\n    return historyByDate\r\n\r\n    // const historyArr = []\r\n    // for (let histIndex = 0; histIndex < taskHistory.length; histIndex++) {\r\n    //     const currElement = taskHistory[histIndex]\r\n    //     const nextElement = taskHistory[histIndex + 1]\r\n        \r\n    //     const currEventType = currElement.event.split(' ')[0]\r\n        \r\n    //     let shouldIncludeEvent = true\r\n    //     if (nextElement) {\r\n    //         const nextEventType = nextElement.event.split(' ')[0]\r\n\r\n    //         if (nextEventType === currEventType && \r\n    //             currElement.date === nextElement.date) {\r\n    //             shouldIncludeEvent = false\r\n    //         }\r\n    //     }\r\n\r\n    //     if (shouldIncludeEvent) {\r\n    //         historyArr.push({\r\n    //             event: currElement.event,\r\n    //             date: currElement.date\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // return historyArr\r\n}\r\n\r\nconst applyCardFilters = (card, filters) => {\r\n    let isCardFilterPassed = false\r\n    if (filters.progress.notStarted && \r\n        (card.progress === 0 || !card.progress)) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    if (filters.progress.inProgress && card.progress > 0 && card.progress < 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n    \r\n    if (filters.progress.done && card.progress === 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    const isUserFilterPassed = filters.member \r\n                    ? card.members.some(m => m._id === filters.member.id) \r\n                    : true\r\n\r\n    const isDueDateFilterPassed = filters.dueBefore\r\n                    ? card.dueDate && compareDates(new Date(card.dueDate), filters.dueBefore) <= 0\r\n                    : true\r\n\r\n    return isCardFilterPassed && isUserFilterPassed && isDueDateFilterPassed\r\n}\r\n\r\nexport {\r\n    createTableEntry,\r\n    parseCardHistory,\r\n    applyCardFilters,\r\n    getCardsSortMethod\r\n}","import React, { useCallback, useEffect, useState, useContext } from \"react\"\r\nimport styles from './index.module.css'\r\nimport ReactTable from \"react-table\"\r\nimport \"react-table/react-table.css\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport TaskName from '../CalendarData/TaskName'\r\nimport TaskProgress from \"../CalendarData/TaskProgress\"\r\nimport TaskDueDate from \"../CalendarData/TaskDueDate\"\r\nimport AddTask from \"../CalendarData/AddTask\"\r\nimport AddList from \"../CalendarData/AddList\"\r\nimport ProjectContext from \"../../contexts/ProjectContext\"\r\nimport assembleColumnData from \"../CalendarData/columnData\"\r\nimport Transparent from \"../Transparent\"\r\nimport EditList from \"../EditList\"\r\nimport UserContext from '../../contexts/UserContext'\r\nimport TaskFilters from '../CalendarData/TaskFilters'\r\nimport MembersList from '../MembersList'\r\nimport TableDateNavigation from '../TableDateNavigation'\r\nimport ButtonClean from '../ButtonClean'\r\nimport { formatDate, getDateWithOffset, getMonday } from '../../utils/date'\r\nimport { createTableEntry, parseCardHistory, applyCardFilters, getCardsSortMethod } from './utils'\r\n\r\nconst TableDndApp = ({ project }) => {\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const params = useParams()\r\n    const [startDate, setStartDate] = useState(getMonday())\r\n    const [tableData, setTableData] = useState([])\r\n    const [currList, setCurrList] = useState('')\r\n    const [newEntries, setNewEntries] = useState(null)\r\n    const [sortCriteria, setSortCriteria] = useState({ columnName: null, isDescending: false })\r\n    const [filter, setFilter] = useState({\r\n        progress: { notStarted: true, inProgress: true, done: true },\r\n        member: null,\r\n        dueBefore: null,\r\n        isUsed: false\r\n    })\r\n\r\n    const onListClick = useCallback((list) => {\r\n        const member = projectContext.project.membersRoles.find(m => \r\n                            m.memberId._id === userContext.user.id)                    \r\n\r\n        if (member && member.admin) {\r\n            setCurrList(list)\r\n        }\r\n\r\n        projectContext.setLists(projectContext.project.lists)\r\n    }, [projectContext, userContext.user.id])\r\n\r\n    const updateTableData = useCallback(() => {\r\n        const data = []\r\n        const lists = project.lists\r\n        projectContext.setLists(lists)\r\n        const cardsSortMethod = getCardsSortMethod(sortCriteria.columnName, sortCriteria.isDescending)\r\n\r\n        lists.forEach((list, histIndex) => {\r\n            if (projectContext.hiddenLists.includes(list._id)) {\r\n                return\r\n            }\r\n\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <div \r\n                        key={histIndex} \r\n                        className={styles.listNameContainer} \r\n                        style={{ background: list.color || '#A6A48E' }}\r\n                        onClick={() => onListClick(list)}\r\n                    >\r\n                        <span className={styles.listNameText} >\r\n                            {list.name}\r\n                        </span>\r\n                    </div>\r\n                ),\r\n                dueDate: (\r\n                    <div onClick={() => setNewEntries({ newTask: list._id })} className={styles.addTask}>\r\n                        {/* <AddTask listId={list._id} project={project} /> */}\r\n                        + Add Task\r\n                    </div>\r\n                )\r\n            }))\r\n\r\n            let listCards = list.cards.filter(card => applyCardFilters(card, filter))\r\n            if (sortCriteria.columnName) {\r\n                listCards = listCards.sort(cardsSortMethod)\r\n            }\r\n\r\n            listCards.forEach(card => {\r\n                const cardDueDate = card.dueDate ? new Date(card.dueDate) : ''\r\n                // const historyArr2 = parseCardHistory(card.history)\r\n                const historyByDate = parseCardHistory(card.history)\r\n\r\n                const cellData = {\r\n                    date: cardDueDate,\r\n                    // history: historyArr2,\r\n                    history: historyByDate,\r\n                    progress: card.progress\r\n                }\r\n\r\n                const weekdayData = JSON.stringify(cellData)\r\n\r\n                data.push(createTableEntry({\r\n                    task:\r\n                        (\r\n                            <TaskName\r\n                                // value={card.name + '/' + card._id + '/' + list._id}\r\n                                card={card} listId={list._id}\r\n                                project={project} />\r\n                        ),\r\n                    progress:\r\n                        (\r\n                            <TaskProgress\r\n                                value={card.progress + '/' + card._id + '/' + list._id}\r\n                                listId={list._id}\r\n                                project={project} card={card} />\r\n                        ),\r\n                    assigned:\r\n                        (\r\n                            <MembersList\r\n                                members={card.members}\r\n                                maxLength={2}\r\n                            />\r\n                        ),\r\n                    monday: weekdayData,\r\n                    tuesday: weekdayData,\r\n                    wednesday: weekdayData,\r\n                    thursday: weekdayData,\r\n                    friday: weekdayData,\r\n                    saturday: weekdayData,\r\n                    sunday: weekdayData,\r\n                    dueDate: (\r\n                        <TaskDueDate\r\n                            value={cardDueDate ? formatDate(cardDueDate, '%d-%m-%Y') : ''}\r\n                            cardDueDate={cardDueDate}\r\n                            cardId={card._id}\r\n                            listId={list._id}\r\n                            project={project}\r\n                            card={card}\r\n                            teamId={params.teamid}\r\n                        />\r\n                    )\r\n                }))\r\n            })\r\n\r\n            if (newEntries && newEntries.newTask && newEntries.newTask === list._id) {\r\n                data.push(createTableEntry({\r\n                    task: (\r\n                        <AddTask\r\n                            listId={list._id}\r\n                            project={project}\r\n                            handleInputRemove={() => setNewEntries(null)}\r\n                        />\r\n                    )\r\n                }))\r\n            }\r\n        })\r\n\r\n        if (newEntries && newEntries.newList) {\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <AddList project={project} handleInputRemove={() => setNewEntries(null)} />\r\n                )\r\n            }))\r\n        }\r\n\r\n        /* \r\n        Rows need to be reversed if descending sort as by default ReactTable simply reverses \r\n        the data if descending sort is selected, expecting the data to already be sorted in \r\n        ascending order. However, this puts the list names below their respective tasks, \r\n        so we need to do this terrible hack of pre-reversing the data in that case.\r\n        Possible solution to avoid this \"hack\" is to switch to subcomponents in ReactTable\r\n        and make each list a subtable. Then the sort should act per-subcomponent \r\n        */\r\n        setTableData(sortCriteria.isDescending ? data.reverse() : data)\r\n    }, [filter, onListClick, params.teamid, projectContext, project, newEntries, sortCriteria.columnName, sortCriteria.isDescending])\r\n\r\n    useEffect(() => {\r\n        updateTableData()\r\n    }, [filter, project, projectContext.hiddenLists, sortCriteria, updateTableData])\r\n\r\n    const changeStartDate = (dayDiff) => {\r\n        const newStartDate = getDateWithOffset(startDate, dayDiff)\r\n        setStartDate(newStartDate)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageContainer}>\r\n            { currList &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setCurrList('')} >\r\n                            <EditList \r\n                                hideForm={() => setCurrList('')} \r\n                                list={currList}\r\n                                 project={project} \r\n                            />\r\n                        </Transparent >\r\n                    </div >\r\n            }\r\n            <div className={styles.buttoDiv}>\r\n                <TaskFilters filter={filter} setFilter={setFilter} />\r\n                <TableDateNavigation \r\n                    startDate={startDate}\r\n                    setStartDate={setStartDate}\r\n                    changeStartDate={changeStartDate}\r\n                />\r\n                {/* <AddList project={project} /> */}\r\n                <ButtonClean   \r\n                    className={styles.addListButton} \r\n                    onClick={() => setNewEntries({ newList: true })} \r\n                    title='+ Add List'\r\n                />\r\n            </div>\r\n            <div>\r\n                {/* <DragDropContext onDragEnd={handleDragEnd} > */}\r\n                <ReactTable\r\n                    // TrComponent={DragTrComponent}\r\n                    // TbodyComponent={DropTbodyComponent}\r\n                    // getTrProps={getTrProps}\r\n                    data={tableData}\r\n                    columns={\r\n                        assembleColumnData(startDate)\r\n                    }\r\n                    defaultPageSize={10}\r\n                    pageSize={tableData.length}\r\n                    showPagination={false}\r\n                    background={\r\n                        'white'\r\n                    }\r\n                    className={`${styles.reactTable} -highlight`}\r\n                    getTbodyProps={() => ({ className: styles.reactTableBody })}\r\n                    getTrGroupProps={() => ({ className: styles.reactTableTrGroup })}\r\n                    onSortedChange={(sortInfo) => {\r\n                        const { id: columnName, desc: isDescending } = sortInfo[0]\r\n                        setSortCriteria({ columnName, isDescending })\r\n                    }}\r\n                />\r\n\r\n                {/* </DragDropContext> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDndApp\r\n\r\n\r\n","import React, { useCallback, useEffect, useContext } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport PageLayout from '../../components/PageLayout'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport TableDndApp from '../../components/CalendarTable'\r\nimport Loader from 'react-loader-spinner'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\n\r\n\r\nexport default function ProjectList() {\r\n    const params = useParams()\r\n\r\n    const socket = useSocket()\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n        projectContext.setProject(project)\r\n    }, [projectContext])\r\n\r\n    useEffect(() => {\r\n        const id = params.projectid\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, params.projectid])\r\n\r\n    if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n        return (\r\n            <PageLayout>\r\n                <Loader\r\n                    type=\"TailSpin\"\r\n                    color=\"#363338\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PageLayout contentClassName={styles['layout-container']}>\r\n            <div className={styles.calendarPageContainer}>\r\n                <div>\r\n                    <div className={styles['calendar-container']}>\r\n                        <TableDndApp project={projectContext.project} />\r\n                        {/* <TableDndApp2 filter={filter} /> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport ProjectContext from './ProjectContext'\r\n\r\nfunction ProjectProvider({ children }) {\r\n  const [lists, setLists] = useState([])\r\n  const [hiddenLists, setHiddenLists] = useState([])\r\n  const [project, setProject] = useState(null)\r\n  const [projectName, setProjectName] = useState('Select')\r\n  \r\n  return (\r\n    <ProjectContext.Provider value={ { lists, setLists, hiddenLists, setHiddenLists, project, setProject, projectName, setProjectName } }>\r\n      {children}\r\n    </ProjectContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ProjectProvider\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport getCookie from '../utils/cookie'\r\nimport userObject from '../utils/userObject'\r\nimport { useSocket } from './SocketProvider'\r\nimport TeamContext from './TeamContext'\r\nimport UserContext from './UserContext'\r\n\r\nfunction TeamProvider({ children }) {\r\n  const [teams, setTeams] = useState([])\r\n  const [selectedTeam, setSelectedTeam] = useState('Select')\r\n  const [currentProjects, setCurrentProjects] = useState([])\r\n  const userContext = useContext(UserContext)\r\n  const socket = useSocket()\r\n\r\n  function getCurrentProjects(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setCurrentProjects(current.projects)\r\n    }\r\n  }\r\n\r\n\r\n  function updateSelectedTeam(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setSelectedTeam(current.name)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTeams(userContext.user.teams)\r\n  }, [userContext.user.teams])\r\n\r\n  const teamUpdate = useCallback(async () => {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const promise = await fetch(\"/api/teams\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token\r\n      }\r\n    })\r\n\r\n    const response = await promise.json()\r\n\r\n    setTeams(response.teams)\r\n\r\n    const user =  userObject(response)\r\n    userContext.logIn(user)\r\n\r\n  }, [userContext])\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return\r\n    socket.on('team-updated', teamUpdate)\r\n    return () => socket.off('team-updated')\r\n  }, [socket, teamUpdate])\r\n\r\n  return (\r\n    <TeamContext.Provider value={{ teams, setTeams, selectedTeam, setSelectedTeam, currentProjects, setCurrentProjects, getCurrentProjects, updateSelectedTeam }}>\r\n      {children}\r\n    </TeamContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TeamProvider\r\n","import React, { useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport EditProject from '../EditProject'\r\nimport Transparent from '../Transparent'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Project(props) {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const params = useParams()\r\n\r\n    return (\r\n        <div>\r\n            {isVisible ?\r\n                < div >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditProject hideForm={() => setIsVisible(!isVisible)} project={props.project} />\r\n                    </Transparent >\r\n                </div > : null\r\n            }\r\n            <div className={styles.container}>\r\n                <div className={styles['top-side']}>\r\n                    <Link to={`/project-board/${params.teamid}/${props.project._id}`} className={styles.key}>Name: <span className={styles.value}>{props.project.name}</span></Link>\r\n\r\n                </div >\r\n                <div className={styles['lower-side']}>\r\n                    <div className={styles['key-lower']}>\r\n                        Creator: <span className={styles.value}>{props.project.author.username}</span>\r\n                    </div>\r\n                    <div className={styles.info} >\r\n                        <ButtonGrey className={styles['info-btn']} title={'Info'} onClick={() => setIsVisible(!isVisible)} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic1.5bdefb31.svg\";","import React, { useState, useContext, useEffect } from \"react\"\r\nimport styles from './index.module.css'\r\nimport PageLayout from \"../../components/PageLayout\"\r\nimport Project from '../../components/Project'\r\nimport Transparent from \"../../components/Transparent\"\r\nimport CreateProject from '../../components/CreateProject'\r\nimport { useParams } from \"react-router-dom\"\r\nimport EditTeam from \"../../components/EditTeam\"\r\nimport TeamMembers from \"../../components/TeamMembers\"\r\nimport pic1 from '../../images/team-page/pic1.svg'\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport ButtonGrey from \"../../components/ButtonGrey\"\r\nimport useUpdateUserLastTeam from \"../../utils/useUpdateUserLastTeam\"\r\n\r\nconst TeamPage = () => {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [showOldProjects, setShowOldProjects] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [projects, setProjects] = useState([])\r\n    const [members, setMembers] = useState([])\r\n    const [invited, setInvited] = useState([])\r\n    const params = useParams()\r\n    const userContext = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        userContext.user.teams.forEach(t => {\r\n            if (t._id === params.teamid) {\r\n                setCurrTeam(t)\r\n                setProjects(t.projects)\r\n                setMembers(t.members)\r\n                setInvited(t.requests)\r\n            }\r\n        })\r\n    }, [userContext, params])\r\n    \r\n    useUpdateUserLastTeam(params.teamid)\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div className={styles.container}>\r\n                {\r\n                    isVisible &&\r\n                    <Transparent hideForm={() => setIsVisible(false)}>\r\n                        <CreateProject />\r\n                    </Transparent>\r\n                }\r\n                {\r\n                    showForm &&\r\n                    <Transparent hideForm={() => setShowForm(false)}>\r\n                        <EditTeam currTeam={currTeam} hideForm={() => { setShowForm(false) }} />\r\n                    </Transparent>\r\n                }\r\n                <div className={styles.pic1}>\r\n                    <img className={styles.picture} src={pic1} alt=\"\" />\r\n                </div>\r\n\r\n\r\n                <div className={styles['left-side']}>\r\n                    { !showOldProjects?\r\n                    <div>\r\n                        <div className={styles.title}>\r\n                        Current Projects:\r\n                        </div>\r\n                        {projects.filter(p => (p.isFinished === false)||(p.isFinished === undefined))\r\n                        .reverse().map((project, index) => {\r\n                            return (\r\n                                <Project key={project._id} index={index} project={project} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className={styles.title}>\r\n                        Old Projects:\r\n                        </div>\r\n                        {projects.filter(p => p.isFinished === true)\r\n                        .reverse().map((project, index) => {\r\n                            return (\r\n                                <Project key={project._id} index={index} project={project} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    }\r\n\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles['right-side-team']}>\r\n                        <TeamMembers\r\n                            members={members} invited={invited}\r\n                        />\r\n                        <div className={styles['button-div']}>\r\n                        <ButtonGrey className={styles['new-project-button']} title={'View Team'} onClick={() => setShowForm(true)} />\r\n                        <ButtonGrey className={styles['new-project-button']} title={'New Project'} onClick={() => setIsVisible(true)} />\r\n                        <ButtonGrey className={styles['new-project-button']}\r\n                        title={!showOldProjects? \r\n                            'Old Projects': 'Current Projects'} \r\n                        onClick={() => setShowOldProjects(!showOldProjects)} />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default TeamPage;","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Button = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport Button from \"../../components/Button\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport logo from '../../images/logo.svg'\r\n\r\n\r\nconst ConfirmationPage = () => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [loading, setLoading] = useState(true)\r\n    const [success, setSuccess] = useState(false)\r\n    const userContext = useContext(UserContext)\r\n    const firstRegistration = userContext.user.newPasswordConfirmed\r\n\r\n\r\n\r\n    const confirmToken = useCallback(async () => {\r\n        const token = params.token\r\n        if (params.token === 'not-confirmed') {\r\n            return\r\n        }\r\n\r\n        if (userContext.user.confirmed && userContext.user.newPasswordConfirmed) {\r\n            return\r\n        }\r\n\r\n        await authenticate('/api/user/confirmation', 'POST', {\r\n            token\r\n        }, (user) => {\r\n            userContext.logIn(user)\r\n            setLoading(false)\r\n            setSuccess(true)\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n\r\n    }, [params.token, userContext])\r\n\r\n    useEffect(() => {\r\n        confirmToken()\r\n    }, [confirmToken])\r\n\r\n\r\n    if (params.token === 'not-confirmed') {\r\n        return (\r\n            <div>\r\n                {\r\n                    firstRegistration ?\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}> Confirm your email address</div >\r\n                            <div className={styles.text}>Please check your email to confirm your account</div>\r\n                            <div className={styles.text}>Once confirmed, this email address will be uniquely associated with your Smart Manager  account.</div>\r\n                            \r\n                        </div>\r\n                        :\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}> Confirm your new password</div >\r\n                            <div className={styles.text}>Please check your email to confirm your new password</div>\r\n                            <div className={styles.text}>Once confirmed, your new password will be active for your Smart Manager  account.</div>\r\n                            \r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && <div>Validating your email.</div>}\r\n            {!loading && success && <div>\r\n                \r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}> Thank you</div >\r\n                            <div className={styles.text}>You can continue to Smart Manager now</div>\r\n                            <Button title='Proceed' className={styles['proceed-button']} onClick={() => history.push('/')} />\r\n                            <div className={styles.cheers}> Cheers,</div >\r\n                            <div className={styles.team}>The Smart Manager Team</div>\r\n                        </div>\r\n                       \r\n\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage;","import React, { useContext } from \"react\"\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\"\r\n\r\nimport Home from \"./pages/Home\"\r\nimport WelcomePage from \"./pages/Welcome\"\r\nimport ProfilePage from \"./pages/Profile\"\r\nimport InboxPage from \"./pages/Inbox\"\r\nimport MyTasksPage from \"./pages/MyTasks\"\r\nimport ErrorPage from \"./pages/Error\"\r\nimport GetStarted from \"./pages/GetStarted\"\r\nimport UserContext from \"./contexts/UserContext\"\r\nimport ProjectBoard from \"./pages/ProjectBoard\"\r\nimport ProjectList from \"./pages/ProjectList\"\r\nimport { SocketProvider } from \"./contexts/SocketProvider\"\r\nimport ProjectProvider from \"./contexts/ProjectProvider\"\r\nimport TeamProvider from \"./contexts/TeamProvider\"\r\nimport TeamPage from \"./pages/Team\"\r\nimport ConfirmationPage from \"./pages/Confirmation\"\r\nimport {CloudinaryContext} from 'cloudinary-react'\r\n\r\nconst Navigation = () => {\r\n\r\n    const context = useContext(UserContext)\r\n    const loggedIn = context.user.loggedIn\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <SocketProvider user={context.user}>\r\n                <ProjectProvider>\r\n                    <TeamProvider>\r\n                        <CloudinaryContext cloudName={process.env.REACT_APP_CLOUD_NAME}>\r\n                            <Switch>\r\n                                <Route path=\"/confirmation/:token\"><ConfirmationPage /></Route>\r\n                                {((loggedIn && !context.user.confirmed)\r\n                                    || (loggedIn && !context.user.newPasswordConfirmed)\r\n                                ) && <Redirect to=\"/confirmation/not-confirmed\" />}\r\n                                <Route exact path=\"/\" >\r\n                                    {loggedIn ? (<Home />) : (<WelcomePage />)}\r\n                                </Route>\r\n                                <Route path=\"/get-started/\">\r\n                                    {loggedIn ? (<GetStarted />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/profile/:userid\">\r\n                                    {loggedIn ? (<ProfilePage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/inbox/:userid\">\r\n                                    {loggedIn ? (<InboxPage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/my-tasks/:userid\">\r\n                                    {loggedIn ? (<MyTasksPage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/project-board/:teamid/:projectid\">\r\n                                    {loggedIn ? (<ProjectBoard />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/project-list/:teamid/:projectid\">\r\n                                    {loggedIn ? (<ProjectList />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/team/:teamid\">\r\n                                    {loggedIn ? (<TeamPage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route component={ErrorPage} />\r\n                            </Switch>\r\n                        </CloudinaryContext>\r\n                    </TeamProvider>\r\n                </ProjectProvider>\r\n            </SocketProvider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css';\r\nimport Navigation from \"./navigation\"\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App>\r\n      <Navigation />\r\n    </App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchField_input__1sYIs\",\"search-fields\":\"SearchField_search-fields__9mWMv\",\"search-button\":\"SearchField_search-button__1ZRbg\",\"search-icon\":\"SearchField_search-icon__5N1sH\",\"new-line\":\"SearchField_new-line__3C-7b\",\"small\":\"SearchField_small__y5Vho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"CalendarTable_pageContainer__Q79fJ\",\"columns\":\"CalendarTable_columns__R05Oj\",\"task\":\"CalendarTable_task__29X_O\",\"buttoDiv\":\"CalendarTable_buttoDiv__19ygP\",\"addTaskField\":\"CalendarTable_addTaskField__1LE6i\",\"input\":\"CalendarTable_input__1fPuG\",\"addlist\":\"CalendarTable_addlist__h88wS\",\"addTask\":\"CalendarTable_addTask__1zOEV\",\"daylyProgress\":\"CalendarTable_daylyProgress__2Wx8j\",\"header\":\"CalendarTable_header__oJTtG\",\"listNameContainer\":\"CalendarTable_listNameContainer__3d68t\",\"listNameColor\":\"CalendarTable_listNameColor__1_jb0\",\"listNameText\":\"CalendarTable_listNameText__1QDpy\",\"reactTable\":\"CalendarTable_reactTable__1P6dk\",\"reactTableBody\":\"CalendarTable_reactTableBody__34d6X\",\"reactTableTrGroup\":\"CalendarTable_reactTableTrGroup__3JTfN\",\"addListButton\":\"CalendarTable_addListButton__FlXW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Project_container__ONX64\",\"top-side\":\"Project_top-side__392gi\",\"key\":\"Project_key__1l93o\",\"key-lower\":\"Project_key-lower__3fmM2\",\"value\":\"Project_value__22HvL\",\"info\":\"Project_info__1374C\",\"info-btn\":\"Project_info-btn__2ozWy\",\"lower-side\":\"Project_lower-side__3yWMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Inbox_message__ZLZDI\",\"bold\":\"Inbox_bold__3vZs1\",\"container\":\"Inbox_container__2hD3y\",\"button\":\"Inbox_button__ct1tM\",\"inline\":\"Inbox_inline__1a3Yv\",\"margin\":\"Inbox_margin__3Drxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent-confirm\":\"ConfirmationDialog_transparent-confirm__3OT_2\",\"container\":\"ConfirmationDialog_container__3JXvR\",\"content\":\"ConfirmationDialog_content__dEeu0\",\"logo\":\"ConfirmationDialog_logo__2XqjU\",\"title\":\"ConfirmationDialog_title__1NUmE\",\"buttons\":\"ConfirmationDialog_buttons__3nQtz\",\"button\":\"ConfirmationDialog_button__1xvbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pic\":\"ProjectBoard_pic__3F6G8\",\"container-droppable\":\"ProjectBoard_container-droppable__ckvFz\",\"droppable\":\"ProjectBoard_droppable__3yrYo\",\"list\":\"ProjectBoard_list__3fwLJ\",\"addlist\":\"ProjectBoard_addlist__375yy\",\"input\":\"ProjectBoard_input__VcGLl\",\"container\":\"ProjectBoard_container__jl8cg\",\"navigateButtons\":\"ProjectBoard_navigateButtons__3KAmW\",\"button\":\"ProjectBoard_button__1Rmzm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterMembers_container__2koZH\",\"filter\":\"FilterMembers_filter__1nj-B\",\"options\":\"FilterMembers_options__3FOmc\",\"option\":\"FilterMembers_option__2a6k6\",\"option-blank\":\"FilterMembers_option-blank__2lufJ\",\"btn-clicked\":\"FilterMembers_btn-clicked__9V4Tv\",\"btn-partial\":\"FilterMembers_btn-partial__2NVFS\",\"btn-clear\":\"FilterMembers_btn-clear__R0IXt\",\"btn-container\":\"FilterMembers_btn-container__3zSrs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterProgress_container__2mnmK\",\"dropdown\":\"FilterProgress_dropdown__2grzj\",\"progress-switch\":\"FilterProgress_progress-switch__3KrHg\",\"progress-switch-top\":\"FilterProgress_progress-switch-top__1XXTF\",\"progress-switch-bottom\":\"FilterProgress_progress-switch-bottom__pzTtC\",\"btn-progress\":\"FilterProgress_btn-progress__2vbyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-card-members\":\"ShowAllTaskMembers_all-card-members__CdY8E\",\"each-member\":\"ShowAllTaskMembers_each-member__36BTi\",\"name\":\"ShowAllTaskMembers_name__10U3W\",\"username\":\"ShowAllTaskMembers_username__1Q2r4\",\"delete-icon\":\"ShowAllTaskMembers_delete-icon__230_4\",\"avatar\":\"ShowAllTaskMembers_avatar__3r-ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Header_navigation__3GP1c\",\"small\":\"Header_small__39lIY\",\"container\":\"Header_container__T6xRW\",\"links\":\"Header_links__1ZKWa\",\"font\":\"Header_font__vD-_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members\":\"MembersList_members__1S0EV\",\"avatar\":\"MembersList_avatar__tyCrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AttachmentList_container___lpCu\",\"attachment\":\"AttachmentList_attachment__18auf\",\"title\":\"AttachmentList_title__21xB0\",\"name\":\"AttachmentList_name__1ynZa\",\"button\":\"AttachmentList_button__3ijRd\"};"],"sourceRoot":""}