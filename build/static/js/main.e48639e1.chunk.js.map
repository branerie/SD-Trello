{"version":3,"sources":["pages/welcome/index.module.css","components/show-all-task-members/index.module.css","components/attachment/index.module.css","components/toggle-switch/index.module.css","components/header/index.module.css","pages/profile/index.module.css","components/button-hide-list/index.module.css","components/page-layout/index.module.css","components/filter-wrapper/index.module.css","components/filter-due-date/index.module.css","components/calendar-data/index.module.css","components/edit-card-options/index.module.css","components/edit-team/index.module.css","components/signup-form/index.module.css","components/list-color/index.module.css","components/team-members/index.module.css","components/progress-bar/index.module.css","components/attachmentsLink/index.module.css","pages/project-list/index.module.css","pages/my-tasks/index.module.css","components/create-team/index.module.css","components/form-forgot-password/index.module.css","components/login-form/index.module.css","components/add-project-member/index.module.css","components/button-clean/index.module.css","components/avatar-user/index.module.css","components/create-project/index.module.css","components/button-grey/index.module.css","components/link/index.module.css","components/transparent/index.module.css","components/search-results/index.module.css","components/title/index.module.css","components/alert/index.module.css","components/button/index.module.css","pages/inbox/index.module.css","pages/confirmation/index.module.css","components/edit-card/index.module.css","components/form-add-password/index.module.css","components/list/index.module.css","pages/home/index.module.css","components/edit-list/index.module.css","components/aside/index.module.css","components/my-tasks-task/index.module.css","components/edit-project/index.module.css","components/table-date-navigation/index.module.css","utils/cookie.js","utils/userObject.js","contexts/UserContext.js","contexts/UserProvider.js","App.js","contexts/TeamContext.js","components/button-clean/index.js","contexts/SocketProvider.js","components/avatar-user/index.js","components/button-grey/index.js","components/create-team/index.js","components/link/index.js","images/logo.svg","images/aside/menu.svg","images/aside/home.svg","images/aside/tasks.svg","images/aside/inbox.svg","images/aside/inbox-bell.svg","contexts/ProjectContext.js","components/list-color/index.js","components/button-hide-list/index.js","components/aside/index.js","utils/useDetectOutsideClick.js","components/transparent/index.js","components/create-project/index.js","components/search-results/index.js","components/header/index.js","components/page-layout/index.js","components/title/index.js","images/home-page-pic.svg","pages/home/index.js","images/welcome-page/welcome-page-1.svg","images/welcome-page/welcome-page-2.svg","images/welcome-page/welcome-page-3.svg","images/welcome-page/welcome-page-4.svg","images/welcome-page/welcome-page-5.svg","images/welcome-page/welcome-page-6.svg","images/welcome-page/instagram-icon.svg","images/welcome-page/twitter-icon.svg","images/welcome-page/facebook-icon.svg","utils/authenticate.js","utils/responseGoogle.js","components/alert/index.js","utils/authenticate-update.js","components/form-add-password/index.js","images/welcome-page/google.svg","components/login-form/index.js","components/signup-form/index.js","components/form-forgot-password/index.js","pages/welcome/index.js","images/profile-page-pic.svg","images/pen.svg","components/confirmation-dialog/index.js","pages/profile/index.js","components/button/index.js","components/team-members/index.js","components/edit-team/index.js","components/inbox/team-invitation-inbox.js","components/inbox/team-invitation-history.js","components/inbox/team-invitation-response.js","components/inbox/task-assignment.js","components/inbox/team-deleted.js","components/inbox/project-deleted.js","components/inbox/team-invitation-canceled.js","pages/inbox/index.js","images/my-tasks/my-tasks.svg","images/edit-card/pic6.svg","images/edit-card/pic1.svg","images/edit-card/pic12.svg","images/edit-card/pic10.svg","components/show-all-task-members/index.js","components/members-list/index.js","components/edit-card-options/taskMembers.js","utils/date.js","images/edit-card/pic5.svg","components/edit-card-options/taskDueDate.js","components/edit-card-options/taskHistory.js","images/edit-card/pic2.svg","components/progress-bar/index.js","components/edit-card-options/taskProgress.js","images/edit-card/download.svg","images/edit-card/remove.svg","components/attachmentList/index.js","components/attachment/index.js","components/edit-card-options/taskAttach.js","components/edit-card/index.js","components/my-tasks-task/index.js","pages/my-tasks/index.js","pages/error/index.js","components/add-project-member/index.js","utils/isUserAdmin.js","components/edit-project/index.js","components/attachmentsLink/index.js","components/card/index.js","images/dots.svg","components/list/index.js","images/pic.svg","components/edit-list/index.js","pages/project-board/index.js","components/calendar-data/task-name.js","components/calendar-data/task-progress.js","components/calendar-data/task-dueDate.js","components/calendar-data/add-project-element.js","components/calendar-data/add-task.js","components/calendar-data/add-list.js","components/calendar-data/column-data.js","components/filter-wrapper/index.js","components/filter-members/index.js","components/filter-due-date/index.js","components/toggle-switch/index.js","components/filter-progress/index.js","components/calendar-data/task-filters.js","images/project-list/previous-day.svg","images/project-list/next-day.svg","components/table-date-navigation/index.js","components/calendar-table/utils.js","components/calendar-table/index.js","pages/project-list/index.js","contexts/ProjectProvider.js","contexts/TeamProvider.js","components/project/index.js","images/team-page/pic1.svg","pages/team/index.js","pages/confirmation/index.js","navigation.js","index.js","components/calendar-table/index.module.css","components/confirmation-dialog/index.module.css","components/filter-members/index.module.css","components/project/index.module.css","components/inbox/index.module.css","pages/project-board/index.module.css","components/filter-progress/index.module.css","pages/team/index.module.css","components/members-list/index.module.css","components/attachmentList/index.module.css","components/card/index.module.css"],"names":["module","exports","getCookie","name","cookieValue","document","cookie","match","userObject","response","username","user","id","_id","teams","inbox","confirmed","newPasswordConfirmed","recentProjects","image","UserContext","React","createContext","logIn","logOut","UserProvider","props","useState","setUser","loading","setLoading","history","useHistory","loggedIn","useCallback","token","fetch","method","headers","then","ok","push","verifyLogin","promise","json","status","useEffect","type","color","height","width","timeout","Provider","value","children","App","TeamContext","setTeams","selectedTeam","setSelectedTeam","getCurrentTeam","currentTeam","setCurrentTeam","getTeams","ButtonClean","title","onClick","className","style","styles","clean","SocketContext","useSocket","useContext","SocketProvider","socket","setSocket","url","window","location","href","includes","userId","teamsId","map","t","teamsStr","JSON","stringify","newSocket","io","query","transports","close","AvatarUser","key","size","publicId","gravity","crop","round","maxInitials","ButtonGrey","button","CreateTeam","setName","description","setDescription","member","setMember","members","setMembers","showMembers","setShowMembers","allUsers","setAllUsers","teamContext","userContext","inputMembers","event","a","target","length","users","handleSubmit","preventDefault","body","requests","team","arr","hideForm","emit","container","onChange","e","label","placeholder","autoComplete","onBlur","setTimeout","filter","u","toLowerCase","find","element","sort","b","localeCompare","input","addMember","email","m","removeMember","LinkComponent","to","link","ProjectContext","lists","setLists","hiddenLists","setHiddenLists","project","setProject","ListColor","xmlns","viewBox","data-name","transform","path","d","fill","ButtonHideList","list","projectContext","newHiddenLists","index","indexOf","splice","submit","opacity","Aside","asideOn","setAsideOn","listVisibility","setListVisibility","updateUser","on","off","aside","options","src","menu","alt","home","tasks","bell","logo","useDetectOutsideClick","el","isActive","setIsActive","current","contains","addEventListener","removeEventListener","Transparent","transparent","CreateProject","params","useParams","teamId","teamid","onFocus","SearchResults","searchInput","resultArr","obj","projects","updateSelectedTeam","gotToPage","Header","dropdownRefProfile","useRef","dropdownRefView","dropdownRefProject","dropdownRefTeam","dropdownRefSearch","isProjectVisibble","setIsProjectVisibble","isProjectActive","setIsProjectActive","isTeamActive","setIsTeamActive","isViewVisibble","setIsViewVisibble","isViewActive","setIsViewActive","viewState","setViewState","isProfileActive","setIsProfileActive","showTeamForm","setShowTeamForm","showSearchForm","setShowSearchForm","setSearchInput","showProjectForm","setShowProjectForm","context","getData","projectid","data","goToHomePage","deletedTeamId","goToTeamPage","deletedProjectId","getCurrentProjects","navigation","small","links","margin","ref","font","teamName","overflow","hover","logout","flex","currentProjects","p","view","avatar","PageLayout","contentStyle","app","content","Title","Home","dropdownRef","showTeamsVisibleForm","setShowTeamsVisibleForm","userName","userTeams","pic1","slice","reverse","projectId","forEach","authenticate","onSuccess","onFailure","authToken","get","needPassword","wrongPassword","wrongUser","exist","responseGoogle","googleResponse","tokenId","Alert","alert","message","authenticateUpdate","AddPassword","password","setPassword","rePassword","setRePassword","setAlert","fillAlert","setFillAlert","console","log","innerContainer","rightSide","alerts","inputContainer","passInput","passInstructions","newPassAlert","buttonDivLogin","loginButton","textLogin","LoginForm","setEmail","showForm","setShowForm","setUserId","wrongPassAllert","setWrongPassAllert","wrongUserAllert","setWrongUserAllert","onSubmit","goToForgotPassword","goToSignUp","render","renderProps","google","clientId","buttonText","cookiePolicy","SignupForm","setUsername","userExist","setUserExist","validEmailAlert","setValidEmailAlert","validateEmail","test","goToLogin","ForgotPasswordForm","emailInput","textDiv","newToSmM","signUpBtn","buttonDivGoogleLogin","googleLoginBtn","WelcomePage","isVisible","setIsVisible","isVisibleSignUp","setIsVisibleSignUp","isVisibleForgot","setIsVisibleForgot","pic2","lucida","paragraph","picture","pic3","pic4","pic5","pic6","footer","instagram","twitter","facebook","sd2006","ConfirmDialog","buttons","hideConfirm","onConfirm","ProfilePage","userEmail","setUserEmail","passwordActive","setPaswordActive","userNameActive","setUserNameActive","isEditListActive","setIsEditListActive","confirmOpen","setConfirmOpen","userid","widget","cloudinary","createUploadWidget","cloudName","process","uploadPreset","error","result","newImage","info","public_id","oldImage","deletePic","focus","disabled","myTeamsContainer","open","relative","edit","delete","pen","Button","TeamMembers","invited","EditTeam","currTeam","setCurrTeam","setInvited","forInvite","setForInvite","isAdmin","setIsAdmin","confirmTitle","setConfirmTitle","currElement","setCurrElement","teamAuthor","author","removeInvited","removeInvitation","confirm","deletedTeam","recievers","confirmationObjectFunctions","form","membersAvatars","TeamInvitationInbox","setInbox","setInboxHistory","showEditTeamForm","setShowEditTeamForm","acceptInvitation","accepted","inboxHistory","sendFrom","bold","subject","Date","createdAt","toLocaleDateString","inline","isDeleted","TeamInvitationHistory","deleteMessage","undefined","TeamInvitationResponse","isInbox","TaskAssignment","card","TeamDeleted","ProjectDeleted","TeamInvitationCanceled","InboxPage","weekday","year","month","day","getInbox","inboxUser","ShowAllTaskMembers","deleteMemberOption","deleteMemberObj","updateSocket","deleteMember","cardMembers","setCardMembers","cardId","listId","allCardMembers","eachMember","MembersList","maxLength","Math","min","split","join","TaskMembers","setCurrCard","setUsers","getTeamUsers","filtered","handleSelect","selectedUser","membersRoles","memberId","admin","newMember","updatedCard","pics","pic10","select","FORMAT_REGEX","MONTHS","WEEKDAYS","MILLISECONDS_IN_DAY","FORMAT_OPTIONS","date","getUTCFullYear","toString","getMonth","getDate","getDay","getWeekNumber","getDateWithOffset","initialDate","daysOffset","getTime","getMonday","dateDay","monday","setDate","currWeekThursday","week1","getFullYear","week1Thursday","formatDate","formatString","replace","substr","formatType","checkDateEquality","firstDate","secondDate","getYear","compareDates","firstDateYear","secondDateYear","firstDateMonth","secondDateMonth","firstDateDay","secondDateDay","TaskDueDate","dueDate","cardDueDate","setCardDueDate","taskDueDate","setTaskDueDate","setWindowWidth","today","updateDimensions","innerWidth","w","updateProjectSocket","editCardDueDate","customInput","selected","popperPlacement","TaskHistory","taskHistory","i","showDate","currDate","currDay","ProgressBar","progress","bar","backgroundColor","Number","TaskProgress","setTaskHistory","setProgress","currInput","setCurrInput","isInputOk","setIsInputOk","isInputActive","setIsInputActive","isInputVisible","setIsInputVisible","useMemo","changeProgress","max","onKeyDown","keyCode","onKeyUp","AttachmentList","attachments","listRef","attachmentsArr","setAttachmentsArr","att","deteleAttachment","attachment","format","download","getFullDocumentUrl","remove","Attachment","nameRef","isNameVisible","setIsNameVisible","nameWidth","setNameWidth","isListVisible","setIsListVisible","getComputedStyle","getPropertyValue","onMouseEnter","onMouseLeave","TaskAttach","setAttachments","resourceType","original_filename","remaining","EditCard","initialCard","descriptionRef","setCard","nameHeight","setNameHeight","deleteCard","onEscPressed","setElement","blur","scrollHeight","text","pic12","MyTasksTask","inputRef","showEditCard","setShowEditCard","showAttachments","setShowAttachments","days","ceil","parse","now","task","isNaN","deadline","attPic","MyTasksPage","setProjects","selectTeam","taskTeamUpdate","box","header","raw","cards","pic","myTasks","ErrorPage","AddMember","setSelectedUser","currentTeamId","teamUsers","destination","memberRoleId","draggableId","memberAdmin","droppableId","userRole","handleAdd","onDragEnd","provided","droppable","innerRef","droppableProps","dragHandleProps","draggableProps","isUserAdmin","EditProject","deleteProject","AttachmentsLink","Card","showCurrentCard","List","showEditList","cardRef","cardName","setCardName","addCard","deleteList","row","dots","flexend","autoFocus","addlist","EditList","isColorActive","setIsColorActive","setColor","background","onChangeComplete","hex","ProjectBoard","IsVisibleEdit","setIsVisibleEdit","isVisibleEditList","setIsVisibleEditList","listName","setListName","currCard","currList","setCurrList","dndActive","setDndActive","projectUpdate","memberArr","updateUserRecentProjects","updatedUser","oldArr","shift","position","filteredList","previousId","newListsArr","source","reorderedList","updatedProject","oldPosition","sourcePosition","destinationPosition","addList","direction","TaskName","editCardName","nameContainer","inputElementName","rows","tableText","UTC","taskprogress","cardProgress","setCardProgress","editCardProgress","cardProgressNum","newCardProgress","newTaskHistory","getBackGroundColor","currColor","taskProgress","taskProgressButtonInput","padding","border","borderRadius","minHeight","textAlign","display","alignItems","justifyContent","showTaskProgress","dueDateField","dueDateFieldInput","closeOnScroll","getElementsByClassName","AddProjectElement","handleInputRemove","elementName","setElementName","AddTask","taskName","setTaskName","AddList","CELL_COLORS","assembleColumnData","startDate","currentDate","cardData","getWeekdayCellHtml","messageColor","progressStyle","daylyProgress","getWeekdayCellData","dataString","numDaysOffset","cellDate","eventInCell","events","isAfterDueDate","isBeforeToday","eventType","eventValue","cellBackgroundColor","isMonday","eventsInWeek","hasEventsInWeek","finishedDate","taskStartDate","getHeaderDateHtml","headerDate","displayedDate","displayedDayOfWeek","fontWeight","fontSize","wrapCellData","cellData","whiteSpace","overflowWrap","accessor","minWidth","Cell","sortable","resizable","maxWidth","sortMethod","getProps","state","rowInfo","column","FilterWrapper","legendContent","legend","MembersFilter","membersFilter","setMembersFilter","handleFilterClear","buttonStyle","mr","displayValue","memberRoles","option","optionValue","optionDisplay","DueDateFilter","dueBefore","showWeekNumbers","ToggleSwitch","toggleStatus","containerStyle","ProgressFilters","filters","toggleFilter","class","dropdown","notStarted","inProgress","done","TaskFilters","setFilter","filterName","currentFilterValue","TableDateNavigation","changeStartDate","setStartDate","navigateButtons","picContainer","buttonPreviousDay","previous","centeredText","next","sortByTask","cardOne","cardTwo","sortByProgress","firstValue","secondValue","sortByDueDate","parsedDateOne","parsedDateTwo","createTableEntry","entryData","assigned","tuesday","wednesday","thursday","friday","saturday","sunday","TableDndApp","tableData","setTableData","newEntries","setNewEntries","columnName","isDescending","sortCriteria","setSortCriteria","isUsed","onListClick","updateTableData","cardsSortMethod","sortingFunc","sortingEvaluation","getCardsSortMethod","histIndex","listNameContainer","listNameText","newTask","addTask","listCards","isCardFilterPassed","isUserFilterPassed","some","isDueDateFilterPassed","applyCardFilters","historyByDate","elementDate","lastHistoryEvent","parseCardHistory","weekdayData","newList","pageContainer","buttoDiv","dayDiff","newStartDate","addListButton","columns","defaultPageSize","pageSize","showPagination","reactTable","getTbodyProps","reactTableBody","getTrGroupProps","reactTableTrGroup","onSortedChange","sortInfo","desc","ProjectList","calendarPageContainer","ProjectProvider","projectName","setProjectName","TeamProvider","setCurrentProjects","teamUpdate","Project","leftSide","TeamPage","ConfirmationPage","success","setSuccess","firstRegistration","confirmToken","cheers","Navigation","exact","component","ReactDOM","StrictMode","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,gBAAgB,+BAA+B,oBAAoB,mCAAmC,aAAa,4BAA4B,KAAO,sBAAsB,gBAAgB,+BAA+B,KAAO,sBAAsB,KAAO,sBAAsB,sBAAsB,qCAAqC,aAAa,4BAA4B,eAAe,8BAA8B,iBAAiB,gCAAgC,QAAU,yBAAyB,OAAS,wBAAwB,UAAY,2BAA2B,wBAAwB,uCAAuC,mBAAmB,kCAAkC,YAAY,2BAA2B,cAAc,6BAA6B,uBAAuB,sCAAsC,iBAAiB,gCAAgC,QAAU,yBAAyB,aAAa,4BAA4B,mBAAmB,kCAAkC,iBAAiB,gCAAgC,iBAAiB,gCAAgC,YAAY,2BAA2B,iBAAiB,gCAAgC,eAAe,8BAA8B,OAAS,wBAAwB,gBAAgB,+BAA+B,iBAAiB,gCAAgC,cAAc,6BAA6B,cAAc,6BAA6B,yBAAyB,wCAAwC,eAAe,8BAA8B,OAAS,0B,oBCArmDD,EAAOC,QAAU,CAAC,cAAgB,6CAA6C,eAAiB,8CAA8C,WAAa,0CAA0C,OAAS,wC,oBCA9MD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,cAAc,gCAAgC,OAAS,2BAA2B,KAAO,2B,oBCAvJD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,mBAAmB,wCAAwC,mBAAmB,wCAAwC,eAAe,sC,mBCApMD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,MAAQ,sBAAsB,UAAY,0BAA0B,MAAQ,sBAAsB,OAAS,uBAAuB,QAAU,wBAAwB,eAAe,6BAA6B,cAAc,4BAA4B,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,qBAAqB,kBAAkB,gCAAgC,gBAAgB,8BAA8B,MAAQ,sBAAsB,iBAAiB,+BAA+B,eAAe,6BAA6B,SAAW,yBAAyB,MAAQ,sBAAsB,KAAO,qBAAqB,oBAAoB,kCAAkC,kBAAkB,kC,mBCA12BD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,iBAAiB,gCAAgC,gBAAgB,+BAA+B,KAAO,sBAAsB,MAAQ,uBAAuB,mBAAmB,kCAAkC,mBAAmB,kCAAkC,yBAAyB,wCAAwC,qBAAqB,oCAAoC,uBAAuB,sCAAsC,cAAc,6BAA6B,gBAAgB,+BAA+B,IAAM,qBAAqB,wBAAwB,uCAAuC,kBAAkB,iCAAiC,cAAc,6BAA6B,kBAAkB,iCAAiC,OAAS,wBAAwB,iBAAiB,gCAAgC,wBAAwB,uCAAuC,aAAa,4BAA4B,yBAAyB,wCAAwC,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,KAAO,wB,oBCAhqCD,EAAOC,QAAU,CAAC,OAAS,iCAAiC,KAAO,+BAA+B,QAAU,oC,oBCA5GD,EAAOC,QAAU,CAAC,IAAM,yBAAyB,QAAU,6BAA6B,MAAQ,6B,oBCAhGD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,iBAAiB,uCAAuC,OAAS,iC,oBCAjID,EAAOC,QAAU,CAAC,cAAc,qCAAqC,eAAe,sCAAsC,eAAe,wC,mBCAzID,EAAOC,QAAU,CAAC,QAAU,+BAA+B,KAAO,4BAA4B,SAAW,gCAAgC,SAAW,gCAAgC,UAAY,iCAAiC,cAAgB,qCAAqC,MAAQ,6BAA6B,UAAY,iCAAiC,QAAU,+BAA+B,aAAe,oCAAoC,kBAAoB,yCAAyC,iBAAmB,wCAAwC,MAAQ,6BAA6B,aAAe,oCAAoC,mBAAqB,0CAA0C,wBAA0B,+CAA+C,UAAY,iCAAiC,OAAS,8BAA8B,IAAM,2BAA2B,WAAa,kCAAkC,iBAAmB,wCAAwC,cAAgB,qCAAqC,OAAS,8BAA8B,cAAgB,qCAAqC,OAAS,8BAA8B,QAAU,+BAA+B,oBAAoB,yCAAyC,kBAAkB,uCAAuC,KAAO,4BAA4B,wBAAwB,+C,mBCA74CD,EAAOC,QAAU,CAAC,gBAAgB,yCAAyC,KAAO,gCAAgC,KAAO,gCAAgC,OAAS,kCAAkC,QAAU,mCAAmC,QAAU,mCAAmC,iBAAiB,0CAA0C,2BAA2B,oDAAoD,eAAe,wCAAwC,YAAY,qCAAqC,SAAW,oCAAoC,gBAAgB,yCAAyC,WAAa,sCAAsC,cAAc,uCAAuC,OAAS,kCAAkC,UAAY,uC,mBCAvxBD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,kBAAkB,mCAAmC,yBAAyB,0CAA0C,aAAa,8BAA8B,cAAc,+BAA+B,eAAe,gCAAgC,wBAAwB,yCAAyC,kBAAkB,mCAAmC,aAAa,8BAA8B,gBAAgB,iCAAiC,kBAAkB,mCAAmC,cAAc,+BAA+B,eAAe,gCAAgC,oBAAoB,qCAAqC,QAAU,2BAA2B,KAAO,wBAAwB,MAAQ,yBAAyB,qBAAqB,sCAAsC,iBAAiB,oC,mBCAx6BD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,OAAS,4BAA4B,kBAAkB,qCAAqC,KAAO,0BAA0B,aAAa,gCAAgC,MAAQ,2BAA2B,kBAAkB,qCAAqC,gBAAgB,mCAAmC,oBAAoB,uCAAuC,iBAAiB,oCAAoC,mBAAmB,sCAAsC,WAAW,8BAA8B,kBAAkB,qCAAqC,cAAc,iCAAiC,0BAA0B,6CAA6C,mBAAmB,wC,oBCAtwBD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,2B,oBCA3DD,EAAOC,QAAU,CAAC,kBAAkB,wC,oBCApCD,EAAOC,QAAU,CAAC,IAAM,0BAA0B,SAAW,iC,oBCA7DD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,YAAc,uC,oBCAzED,EAAOC,QAAU,CAAC,qBAAuB,2CAA2C,qBAAqB,yCAAyC,MAAQ,4BAA4B,OAAS,6BAA6B,YAAc,kCAAkC,aAAe,qC,mBCA3RD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,MAAQ,wBAAwB,SAAW,2BAA2B,IAAM,sBAAsB,IAAM,sBAAsB,QAAU,0BAA0B,eAAe,+BAA+B,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,yBAAyB,IAAM,sBAAsB,UAAY,4BAA4B,iBAAiB,iCAAiC,KAAO,uBAAuB,KAAO,uBAAuB,SAAW,2BAA2B,KAAO,yB,mBCA/jBD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,KAAO,0BAA0B,MAAQ,2BAA2B,kBAAkB,qCAAqC,aAAa,gCAAgC,wBAAwB,2CAA2C,0BAA0B,6CAA6C,mBAAmB,sCAAsC,kBAAkB,qCAAqC,eAAe,kCAAkC,gBAAgB,mCAAmC,aAAa,gCAAgC,gBAAgB,mCAAmC,kBAAkB,qCAAqC,eAAe,kCAAkC,oBAAoB,uCAAuC,iBAAiB,oCAAoC,QAAU,6BAA6B,KAAO,0BAA0B,MAAQ,6B,mBCA38BD,EAAOC,QAAU,CAAC,UAAY,wCAAwC,OAAS,qCAAqC,kBAAkB,8CAA8C,KAAO,mCAAmC,aAAa,yCAAyC,MAAQ,oCAAoC,kBAAkB,8CAA8C,WAAa,yCAAyC,UAAY,wCAAwC,YAAc,0CAA0C,eAAiB,6CAA6C,QAAU,sCAAsC,qBAAuB,mDAAmD,WAAa,yCAAyC,SAAW,uCAAuC,UAAY,wCAAwC,eAAiB,+C,mBCAv4BD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,2BAA2B,kBAAkB,oCAAoC,KAAO,yBAAyB,aAAa,+BAA+B,MAAQ,0BAA0B,kBAAkB,oCAAoC,cAAc,gCAAgC,aAAa,+BAA+B,eAAe,iCAAiC,mBAAmB,qCAAqC,WAAW,6BAA6B,0BAA0B,4CAA4C,cAAc,gCAAgC,YAAY,8BAA8B,cAAc,gCAAgC,mBAAmB,uC,mBCAnwBD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,kBAAkB,4CAA4C,mBAAmB,6CAA6C,OAAS,mCAAmC,gBAAgB,0CAA0C,oBAAoB,8CAA8C,MAAQ,kCAAkC,QAAU,oCAAoC,gBAAgB,0CAA0C,aAAa,uCAAuC,UAAY,sCAAsC,UAAY,sCAAsC,oBAAoB,gD,oBCAhtBD,EAAOC,QAAU,CAAC,MAAQ,8B,oBCA1BD,EAAOC,QAAU,CAAC,kBAAkB,uC,mBCApCD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,MAAQ,8BAA8B,kBAAkB,wCAAwC,aAAa,mCAAmC,eAAe,qCAAqC,oBAAoB,0CAA0C,gBAAgB,sCAAsC,wBAAwB,8CAA8C,kBAAkB,wCAAwC,cAAc,oCAAoC,aAAa,mCAAmC,gBAAgB,sCAAsC,kBAAkB,wCAAwC,QAAU,gCAAgC,KAAO,6BAA6B,MAAQ,gC,oBCAhyBD,EAAOC,QAAU,CAAC,OAAS,8B,oBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,YAAc,mC,oBCAhCD,EAAOC,QAAU,CAAC,mBAAmB,2C,oBCArCD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,KAAO,2BAA2B,MAAQ,4BAA4B,KAAO,2BAA2B,OAAS,6BAA6B,KAAO,2BAA2B,iBAAiB,uC,mBCA/PD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,YAAY,6BAA6B,aAAa,8BAA8B,YAAY,6BAA6B,KAAO,wBAAwB,YAAY,6BAA6B,aAAa,8BAA8B,iBAAiB,kCAAkC,oBAAoB,qCAAqC,gBAAgB,iCAAiC,KAAO,0B,mBCA/cD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,OAAS,kCAAkC,eAAiB,0CAA0C,KAAO,gCAAgC,UAAY,qCAAqC,MAAQ,iCAAiC,eAAiB,0CAA0C,iBAAmB,4CAA4C,UAAY,qCAAqC,YAAc,uCAAuC,eAAiB,0CAA0C,UAAY,qCAAqC,QAAU,mCAAmC,WAAa,sCAAsC,SAAW,oCAAoC,UAAY,qCAAqC,aAAe,0C,yCCAr0BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,IAAM,kBAAkB,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,OAAS,qBAAqB,SAAW,uBAAuB,WAAW,uBAAuB,UAAY,wBAAwB,UAAY,wBAAwB,QAAU,sBAAsB,KAAO,mBAAmB,UAAY,wBAAwB,MAAQ,oBAAoB,aAAa,2B,mBCAjeD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,gBAAgB,4BAA4B,KAAO,mBAAmB,eAAe,2BAA2B,eAAe,2BAA2B,gBAAgB,4BAA4B,qBAAqB,iCAAiC,aAAa,yBAAyB,wBAAwB,oCAAoC,mBAAmB,+BAA+B,yBAAyB,uC,mBCA/dD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,MAAQ,yBAAyB,kBAAkB,mCAAmC,KAAO,wBAAwB,cAAgB,iCAAiC,eAAe,gCAAgC,cAAc,+BAA+B,aAAa,8BAA8B,aAAa,8BAA8B,eAAe,gCAAgC,mBAAmB,oCAAoC,aAAa,8BAA8B,KAAO,0B,mBCA1kBD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,OAAS,sBAAsB,KAAO,oBAAoB,WAAW,wBAAwB,KAAO,oBAAoB,YAAY,yBAAyB,KAAO,oBAAoB,eAAe,4BAA4B,KAAO,sB,mBCA9TD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,SAAW,gCAAgC,KAAO,4BAA4B,SAAW,gCAAgC,oBAAoB,yCAAyC,OAAS,8BAA8B,MAAQ,6BAA6B,YAAY,iCAAiC,YAAY,iCAAiC,KAAO,8B,mBCA3bD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,cAAc,kCAAkC,mBAAmB,uCAAuC,kBAAkB,sCAAsC,gBAAgB,oCAAoC,wBAAwB,4CAA4C,kBAAkB,sCAAsC,eAAe,qC,mBCAzbD,EAAOC,QAAU,CAAC,UAAY,yCAAyC,gBAAkB,+CAA+C,aAAe,4CAA4C,aAAe,8C,4HCInMC,EALG,SAACC,GACf,IAAMC,EAAcC,SAASC,OAAOC,MAAM,UAAYJ,EAAO,iBAC7D,OAAOC,EAAcA,EAAY,GAAK,MCW3BI,MAbf,SAAoBC,GAChB,MAAO,CACHC,SAAUD,EAASE,KAAKD,SACxBE,GAAIH,EAASE,KAAKE,IAClBC,MAAOL,EAASK,MAChBC,MAAON,EAASE,KAAKI,MACrBC,UAAWP,EAASE,KAAKK,UACzBC,qBAAsBR,EAASE,KAAKM,qBACpCC,eAAgBT,EAASE,KAAKO,eAC9BC,MAAOV,EAASE,KAAKQ,QCDdC,EANKC,IAAMC,cAAc,CACpCX,KAAM,KACNY,MAAO,aACPC,OAAQ,eC8FGC,EA5FM,SAACC,GAAW,IAAD,EACJC,mBAAS,MADL,mBACrBhB,EADqB,KACfiB,EADe,OAEED,oBAAS,GAFX,mBAErBE,EAFqB,KAEZC,EAFY,KAGtBC,EAAUC,cAEVT,EAAQ,SAACZ,GACXiB,EAAQ,2BACDjB,GADA,IAEHsB,UAAU,MAIZT,EAASU,uBAAY,WACvB,IAAMC,EAAQjC,EAAU,gBACxBkC,MAAM,mBAAoB,CACtBC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAEtBI,MAAK,SAAA9B,GACCA,EAAS+B,IAGVnC,SAASC,OAAS,mEAElBsB,EAAQ,CACJK,UAAU,KALdF,EAAQU,KAAK,eAStB,CAACV,IAEEW,EAAcR,uBAAY,WAC5B,IAAMC,EAAQjC,EAAU,gBACxB,IAAKiC,EAOD,OALAP,EAAQ,CACJK,UAAU,SAGdH,GAAW,GAIfM,MAAM,mBAAoB,CACtBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAEtBI,MAAK,SAAAI,GACJ,OAAOA,EAAQC,UAChBL,MAAK,SAAA9B,GACAA,EAASoC,OACTtB,EAAMf,EAAWC,IAEjBe,IAGJM,GAAW,QAEhB,CAACN,IAMJ,OAJAsB,qBAAU,WACNJ,MACD,CAACA,IAEAb,EAEI,cAAC,IAAD,CACIkB,KAAK,WACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAMjB,cAAC,EAAYC,SAAb,CAAsBC,MAAO,CACzB1C,OACAiB,UACAL,QACAC,UAJJ,SAMKE,EAAM4B,YClFJC,EATH,SAAC7B,GAET,OACI,cAAC,EAAD,UACKA,EAAM4B,Y,iECMJE,EAXKnC,IAAMC,cAAc,CACtCR,MAAO,GACP2C,SAAU,aACVC,aAAc,SACdC,gBAAiB,aACjBC,eAAgB,aAChBC,YAAa,GACbC,eAAgB,aAChBC,SAAU,e,kBCDGC,EANK,SAAC,GAA4D,IAAzDC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,QAASnB,EAAwC,EAAxCA,KAAMoB,EAAkC,EAAlCA,UAAWb,EAAuB,EAAvBA,SAAUc,EAAa,EAAbA,MAC/D,OACA,yBAAQrB,KAAMA,GAAQ,SAAUmB,QAASA,EAASC,UAAS,UAAKE,IAAOC,MAAZ,YAAqBH,GAAaC,MAAOA,EAApG,UAA6GH,EAAOX,M,kBCFlHiB,EAAgBlD,IAAMC,gBAErB,SAASkD,IACd,OAAOC,qBAAWF,GAGb,SAASG,EAAT,GAA6C,IAAnB/D,EAAkB,EAAlBA,KAAM2C,EAAY,EAAZA,SAAY,EACrB3B,qBADqB,mBAC1CgD,EAD0C,KAClCC,EADkC,KAE3CC,EAAMC,OAAOC,SAASC,KAAKC,SAAS,UAAY,IAAM,wBA0B5D,OAxBAnC,qBAAU,WACR,GAAKnC,GAIAA,EAAKG,MAAV,CAGA,IAAMJ,EAAWC,EAAKD,SAChBwE,EAASvE,EAAKC,GAEduE,EADK,YAAOxE,EAAKG,OACDsE,KAAK,SAAAC,GAAC,OAAIA,EAAExE,OAC5ByE,EAAWC,KAAKC,UAAUL,GAC1BM,EAAYC,IAChBb,EAAK,CACHc,MAAO,CAAEL,WAAU5E,WAAUwE,UAC7BU,WAAY,CAAC,eAKjB,OAFAhB,EAAUa,GAEH,kBAAMA,EAAUI,YACtB,CAAClF,EAAMkE,IAGR,cAACN,EAAcnB,SAAf,CAAwBC,MAAOsB,EAA/B,SACGrB,I,mEChCQ,SAASwC,EAAT,GAA8D,IAAxCnF,EAAuC,EAAvCA,KAAMuD,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,UAAW4B,EAAa,EAAbA,IAAKC,EAAQ,EAARA,KAEhE,OAEIrF,EAAKQ,MACG,cAAC,IAAD,CAAO8E,SAAUtF,EAAKQ,MAAM8E,SAAU/B,QAASA,EAE3CC,UAAS,UAAKE,IAAO,mBAAZ,YAAkCF,GAF/C,SAII,cAAC,IAAD,CAAgBjB,MAAO8C,EAAM/C,OAAQ+C,EAAME,QAAQ,QAAQC,KAAK,UAH3DJ,GAOb,cAAC,IAAD,CAEI5B,UAAWA,EACXD,QAASA,EACT/D,KAAMQ,EAAKD,SACXsF,KAAMA,EACNI,OAAO,EACPC,YAAa,GANRN,G,sBCZNO,EANI,SAAC,GAAqC,IAAlCrC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,UACnC,OACA,wBAAQD,QAASA,EAASC,UAAS,UAAKE,IAAOkC,OAAZ,YAAsBpC,GAAzD,SAAuEF,KCO5D,SAASuC,EAAW9E,GAAQ,IAAD,EACdC,mBAAS,IADK,mBAC/BxB,EAD+B,KACzBsG,EADyB,OAEA9E,mBAAS,IAFT,mBAE/B+E,EAF+B,KAElBC,EAFkB,OAGVhF,mBAAS,IAHC,mBAG/BiF,EAH+B,KAGvBC,EAHuB,OAIRlF,mBAAS,IAJD,mBAI/BmF,EAJ+B,KAItBC,EAJsB,OAKApF,oBAAS,GALT,mBAK/BqF,EAL+B,KAKlBC,EALkB,OAMNtF,mBAAS,IANH,mBAM/BuF,EAN+B,KAMrBC,EANqB,KAOhCpF,EAAUC,cACVoF,EAAc3C,qBAAWjB,GACzB6D,EAAc5C,qBAAWrD,GACzBuD,EAASH,IAET8C,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACjBX,EAAUU,EAAME,OAAOpE,OACvB4D,GAAe,GAES,IAApBC,EAASQ,OAJI,wBAKPvF,EAAQjC,EAAU,gBALX,SAMUkC,MAAM,oBAAqB,CAC9CC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAVZ,cAMP1B,EANO,QAcC+B,IACVT,EAAQU,KAAK,UAfJ,UAiBOhC,EAASmC,OAjBhB,QAiBP+E,EAjBO,OAkBbR,EAAYQ,GAlBC,QAsBbf,EAAOc,QAAU,GACjBT,GAAe,GAvBF,4CAAH,sDAwCZW,EAAY,uCAAG,WAAOL,GAAP,qBAAAC,EAAA,yDACjBD,EAAMM,iBAEO,KAAT1H,EAHa,wDAOXgC,EAAQjC,EAAU,gBAPP,SAQMkC,MAAM,aAAc,CACvCC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBrF,OACAuG,cACAqB,SAAUjB,MAjBD,WAQXrG,EARW,QAoBH+B,GApBG,wBAqBbT,EAAQU,KAAK,UArBA,4CAwBMhC,EAASmC,OAxBf,QAwBPoF,EAxBO,QAyBPC,EAzBO,YAyBGb,EAAYtG,QACxB2B,KAAKuF,GAGTZ,EAAY3D,SAASwE,GACrBb,EAAYzD,gBAAgBqE,EAAK7H,MACjCuB,EAAMwG,WACNvD,EAAOwD,KAAK,cAAeH,EAAKnH,KAChC8D,EAAOwD,KAAK,yBAA0BrB,GACtC/E,EAAQU,KAAR,gBAAsBuF,EAAKnH,MAlCd,4CAAH,sDA2ClB,OAGI,cAFA,CAEA,OAAKsD,UAAWE,IAAO+D,UAAvB,UAGI,qBAAKjE,UAAWE,IAAOJ,MAAvB,6BAEA,sBAAKE,UAAWE,IAAO,mBAAvB,UACI,yCACA,uBACIF,UAAWE,IAAO,cAClBhB,MAAOlD,EACPkI,SAAU,SAAAC,GAAC,OAAI7B,EAAQ6B,EAAEb,OAAOpE,QAChCkF,MAAM,OACN3H,GAAG,OACH4H,YAAY,iBAIpB,sBAAKrE,UAAWE,IAAO,yBAAvB,UACI,sBAAMF,UAAWE,IAAO,oBAAxB,0BACA,0BACIF,UAAWE,IAAO,mBAClBhB,MAAOqD,EACP2B,SAAU,SAAAC,GAAC,OAAI3B,EAAe2B,EAAEb,OAAOpE,QACvCkF,MAAM,cACN3H,GAAG,cACH4H,YAAY,wBAIpB,sBAAKrE,UAAWE,IAAO,2BAAvB,UACI,sBAAMF,UAAWE,IAAO,gBAAxB,6BAEA,sBAAKF,UAAWE,IAAO,gBAAvB,UACI,uBACIF,UAAWE,IAAO,iBAClBoE,aAAa,MACbpF,MAAOuD,EACPyB,SAAUf,EACViB,MAAM,iBACN3H,GAAG,UACH4H,YAAY,WACZE,OAhDL,WACXC,YAAW,kBAAM1B,GAAe,KAAQ,QAmD5B,qBAAK9C,UAAWE,IAAO,qBAAvB,SAEQ2C,GACA,qBAAK7C,UAAWE,IAAO,kBAAvB,SACI,qBAAKF,UAAWE,IAAOyC,QAAvB,SAEQI,EAAS0B,QAAO,SAAAC,GAAC,OAAIA,EAAEnI,SAASoI,cAAc7D,SAAS2B,EAAOkC,iBAAmBD,EAAEnI,SAASuE,SAASoC,EAAY1G,KAAKD,aACjHkI,QAAO,SAACN,GAEL,OADcxB,EAAQiC,MAAK,SAAAC,GAAO,OAAIA,EAAQtI,WAAa4H,EAAE5H,eAOhEuI,MAAK,SAACzB,EAAG0B,GAAJ,OAAU1B,EAAE9G,SAASyI,cAAcD,EAAExI,aAC1C0E,KAAI,SAAAyD,GACD,OACI,cAAC,EAAD,CAEI1E,UAAWE,IAAO1D,KAClBuD,QAAS,kBA7H3C,SAACkF,GACf,IAAMnB,EAAG,YAAOnB,GAChBmB,EAAIxF,KAAK2G,GACTrC,EAAWkB,GACXhB,GAAe,GACfJ,EAAU,IAwHqDwC,CAAUR,IACzB5E,MAAO,gCACH,8BAAM4E,EAAEnI,WACR,qBAAKyD,UAAWE,IAAOiF,MAAvB,SAA+BT,EAAES,YALhCT,EAAEhI,oBAkBnD,qBAAKsD,UAAWE,IAAO,mBAAvB,SAEQyC,EAAQ1B,KAAI,SAAAmE,GACR,OACI,cAAC,EAAD,CACIrF,QAAS,kBA1IhB,SAACkF,GAClB,IAAMnB,EAAMnB,EAAQ8B,QAAO,SAAAC,GAAC,OAAIA,EAAEhI,MAAQuI,EAAMvI,OAChDkG,EAAWkB,GAwI4BuB,CAAaD,IAC5BtF,MACA,cAAC6B,EAAD,CAAYnF,KAAM4I,EAAGvD,KAAM,YAS/C,qBAAK7B,UAAWE,IAAO,cAAvB,SAEI,cAAC,EAAD,CAAYH,QAAS,SAACoE,GAAD,OAAKV,EAAaU,IAAIrE,MAAM,SAASE,UAAWE,IAAO,wB,sBCtM7EoF,EARO,SAAC,GAAyC,IAAvCxF,EAAsC,EAAtCA,MAAOe,EAA+B,EAA/BA,KAAMb,EAAyB,EAAzBA,UAAWD,EAAc,EAAdA,QAC7C,OACQ,cAAC,IAAD,CAAMwF,GAAI1E,EAAMb,UAAS,UAAKE,IAAOsF,KAAZ,YAAoBxF,GAAaD,QAASA,EAAnE,SACKD,K,iBCPF,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,OAA0B,kCCA1B,OAA0B,kCCA1B,OAA0B,uCCW1B2F,GATQvI,IAAMC,cAAc,CACzCuI,MAAO,GACPC,SAAU,aACVC,YAAa,GACbC,eAAgB,aAChBC,QAAS,GACTC,WAAY,e,qBCLC,SAASC,GAAT,GAAqC,IAAhBnH,EAAe,EAAfA,MAAOD,EAAQ,EAARA,KACvC,OACI,qBAAKoB,UAAS,UAAKE,KAAOtB,IAASqH,MAAM,6BAA6BlH,MAAM,MAAMD,OAAO,SAASoH,QAAQ,iBAA1G,SACI,mBAAGzJ,GAAG,UAAU0J,YAAU,UAAUC,UAAU,yBAA9C,SACI,mBAAG3J,GAAG,UAAU0J,YAAU,UAAUC,UAAU,2BAA9C,SACI,sBACIpG,UAAWE,KAAOmG,KAClB5J,GAAG,UACH0J,YAAU,UACVG,EAAE,u8FACFF,UAAU,yBACVG,KAAM1H,U,yBCcf2H,GAvBQ,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,KAAM7H,EAAY,EAAZA,KACvB8H,EAAiBpG,qBAAWmF,IAclC,OACA,yBAAQ1F,QAbR,WACI,IAAM4G,EAAc,YAAOD,EAAed,aAE1C,GAAIe,EAAe7F,SAAS2F,EAAK/J,KAAM,CACnC,IAAMkK,EAAQD,EAAeE,QAAQJ,EAAK/J,KAC1CiK,EAAeG,OAAOF,EAAO,QAE7BD,EAAerI,KAAKmI,EAAK/J,KAE7BgK,EAAeb,eAAec,IAIR3G,UAAS,UAAKE,KAAO6G,OAAZ,YAAsBL,EAAed,YAAY9E,SAAS2F,EAAK/J,MAAQwD,KAAO8G,SAAjH,UACI,cAAChB,GAAD,CAAWnH,MAAO4H,EAAK5H,OAAS,UAAWD,KAAMA,IACjD,qBAAKoB,UAAWE,KAAOlE,KAAvB,SAA8ByK,EAAKzK,WCN5B,SAASiL,GAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAAc,EACP3J,oBAAS,GADF,mBAC5C4J,EAD4C,KAC5BC,EAD4B,KAE7CX,EAAiBpG,qBAAWmF,IAC5BvC,EAAc5C,qBAAWrD,GACzBuD,EAASH,IACTjD,EAAQ8F,EAAY9F,MAE1BuB,qBAAU,WACFgC,OAAOC,SAASC,KAAKC,SAAS,YAC9BuG,GAAkB,KAEvB,IAEH,IAAMC,EAAavJ,sBAAW,uCAAC,WAAOzB,GAAP,eAAA+G,EAAA,sDACrB7G,EAAOH,EAAWC,GACxBc,EAAMZ,GAFqB,2CAAD,sDAG3B,CAACY,IASJ,OAPAuB,qBAAU,WACN,GAAI6B,EAEA,OADAA,EAAO+G,GAAG,eAAgBD,GACnB,kBAAM9G,EAAOgH,IAAI,mBAE7B,CAAChH,EAAQ8G,IAGR,sBAAKtH,UAAWE,IAAOuH,MAAvB,UACI,wBAAOzH,UAAWE,IAAO+D,UAAzB,UACI,qBAAKjE,UAAWE,IAAO,YAAvB,SACI,cAAC,EAAD,CACIH,QAAS,kBAAMoH,GAAYD,IAC3BpH,MAAO,qBAAKE,UAAWE,IAAOwH,QAASC,IAAKC,EAAMC,IAAI,OAAO9I,MAAM,KAAKD,OAAO,WAGvF,cAAC,EAAD,CACI+B,KAAK,IACLf,MAAO,qBAAK6H,IAAKG,EAAMD,IAAI,OAAO9I,MAAM,KAAKD,OAAO,SAExD,cAAC,EAAD,CACI+B,KAAI,oBAAeqC,EAAY1G,KAAKC,IACpCqD,MAAO,qBAAK6H,IAAKI,GAAOF,IAAI,WAAW9I,MAAM,KAAKD,OAAO,SAE7D,cAAC,EAAD,CACI+B,KAAI,iBAAYqC,EAAY1G,KAAKC,IACjCqD,MAAO,qBAAK6H,IAAK/K,GAAOiL,IAAI,QAAQ9I,MAAM,KAAKD,OAAO,SAOpB,IAAlCoE,EAAY1G,KAAKI,MAAM2G,QACvB,cAAC,EAAD,CACI1C,KAAI,iBAAYqC,EAAY1G,KAAKC,IACjCqD,MAAO,qBAAK6H,IAAKK,GAAMH,IAAI,QAAQ9I,MAAM,KAAKD,OAAO,OACrDkB,UAAWE,IAAO8H,UAK1Bd,GACI,sBAAKlH,UAAWE,IAAO0H,KAAvB,UACI,sBAAK5H,UAAWE,IAAO,aAAvB,UACI,qBAAKF,UAAWE,IAAO+H,KAAvB,SACI,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,KAAKD,OAAO,SAEjD,cAAC,EAAD,CACI+B,KAAK,IACLf,MAAM,OACNE,UAAWE,IAAOsF,OAEtB,cAAC,EAAD,CACI3E,KAAI,oBAAeqC,EAAY1G,KAAKC,IACpCqD,MAAM,WACNE,UAAWE,IAAOsF,OAEtB,cAAC,EAAD,CACI3E,KAAI,iBAAYqC,EAAY1G,KAAKC,IACjCqD,MAAM,QACNE,UAAWE,IAAOsF,UAQzB4B,GAAkB,qBAAKpH,UAAWE,IAAO,gBAAvB,SAEXwG,EAAehB,MAAMzE,KAAI,SAAC4D,GACtB,OACI,cAAC,GAAD,CAAkC4B,KAAM5B,EAASjG,KAAM,SAAlCiG,EAAQnI,gB,wBC1GxDwL,GAAwB,SAACC,GAAQ,IAAD,EACX3K,oBAAS,GADE,mBACpC4K,EADoC,KAC1BC,EAD0B,KAqB3C,OAlBA1J,qBAAU,WACR,IAAMoB,EAAU,SAAAoE,GAEK,OAAfgE,EAAGG,SAAqBH,EAAGG,QAAQC,SAASpE,EAAEb,SAChD+E,GAAaD,IASjB,OAJIA,GACFzH,OAAO6H,iBAAiB,QAASzI,GAG5B,WACLY,OAAO8H,oBAAoB,QAAS1I,MAErC,CAACqI,EAAUD,IAEP,CAACC,EAAUC,I,qBCXLK,GATK,SAACnL,GACjB,OACA,qCACA,qBAAKwC,QAASxC,EAAMwG,SAAU/D,UAAWE,KAAOyI,cAC/CpL,EAAM4B,a,2BCII,SAASyJ,GAAT,GAAsC,IAAb7E,EAAY,EAAZA,SAAY,EACxBvG,mBAAS,IADe,mBACzCxB,EADyC,KACnCsG,EADmC,OAEV9E,mBAAS,IAFC,mBAEzC+E,EAFyC,KAE5BC,EAF4B,OAGpBhF,mBAAS,IAHW,mBAGzCiF,EAHyC,KAGjCC,EAHiC,OAIlBlF,mBAAS,IAJS,mBAIzCmF,EAJyC,KAIhCC,EAJgC,OAKVpF,oBAAS,GALC,mBAKzCqF,EALyC,KAK5BC,EAL4B,OAMhBtF,mBAAS,IANO,mBAMzCuF,EANyC,KAM/BC,EAN+B,KAO1CE,EAAc5C,qBAAWrD,GACzBW,EAAUC,cACVgL,EAASC,cACTtI,EAASH,IAEToD,EAAY,uCAAG,WAAOL,GAAP,qBAAAC,EAAA,yDACjBD,EAAMM,iBAEO,KAAT1H,EAHa,wDAOX+M,EAASF,EAAOG,OAChBhL,EAAQjC,EAAU,gBARP,SASMkC,MAAM,gBAAiB,CAC1CC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBrF,OACAuG,cACAwG,SACApG,cAnBS,WASXrG,EATW,QAsBH+B,GAtBG,wBAuBbT,EAAQU,KAAK,UAvBA,4CA0BShC,EAASmC,OA1BlB,QA0BPqH,EA1BO,OA2Bb/B,GAAYA,IACZvD,EAAOwD,KAAK,cAAe+E,GAC3BnL,EAAQU,KAAR,yBAA+ByK,EAA/B,YAAyCjD,EAAQpJ,MA7BpC,4CAAH,sDAiCZuM,EAAO,uCAAG,kCAAA5F,EAAA,yDACZP,GAAe,GAETiG,EAASF,EAAOG,OAEE,IAApBjG,EAASQ,OALD,wBAMFvF,EAAQjC,EAAU,gBANhB,SAOekC,MAAM,wBAAD,OAAyB8K,GAAU,CAC3D7K,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAXjB,cAOF1B,EAPE,QAeM+B,IACVT,EAAQU,KAAK,UAhBT,UAkBYhC,EAASmC,OAlBrB,QAkBF+E,EAlBE,OAmBRR,EAAYQ,EAAMb,SAnBV,4CAAH,qDAwCb,OAEI,cADA,CACA,OAAK3C,UAAWE,KAAO+D,UAAvB,UAII,qBAAKjE,UAAWE,KAAOJ,MAAvB,gCAEA,sBAAKE,UAAWE,KAAO,mBAAvB,UACI,yCACA,uBACIF,UAAWE,KAAO,cAClBhB,MAAOlD,EACPkI,SAAU,SAAAC,GAAC,OAAI7B,EAAQ6B,EAAEb,OAAOpE,QAChCkF,MAAM,OACN3H,GAAG,OACH4H,YAAY,oBAIpB,sBAAKrE,UAAWE,KAAO,yBAAvB,UACI,gDACA,0BACIF,UAAWE,KAAO,mBAClBhB,MAAOqD,EACP2B,SAAU,SAAAC,GAAC,OAAI3B,EAAe2B,EAAEb,OAAOpE,QACvCkF,MAAM,cACN3H,GAAG,cACH4H,YAAY,2BAKpB,sBAAKrE,UAAWE,KAAO,mBAAvB,UACI,sBAAMF,UAAWE,KAAO,eAAxB,6BAEA,sBAAKF,UAAWE,KAAO,gBAAvB,UACI,uBACIF,UAAWE,KAAO,iBAClBoE,aAAa,MACbpF,MAAOuD,EACPwG,QAASA,EACT1E,OA3DL,WACXC,YAAW,kBAAM1B,GAAe,KAAQ,MA2DxBoB,SAAU,SAACC,GAAD,OAAOzB,EAAUyB,EAAEb,OAAOpE,QACpCkF,MAAM,iBACN3H,GAAG,UACH4H,YAAY,sBAGhB,qBAAKrE,UAAWE,KAAO,qBAAvB,SAEQ2C,GACA,qBAAK7C,UAAWE,KAAOyC,QAAvB,SAEQI,EAAS0B,QAAO,SAAAC,GAAC,OAAIA,EAAEnI,SAASoI,cAAc7D,SAAS2B,EAAOkC,iBAAmBD,EAAEnI,SAASuE,SAASoC,EAAY1G,KAAKD,aACjHkI,QAAO,SAACN,GAEL,OADcxB,EAAQiC,MAAK,SAAAC,GAAO,OAAIA,EAAQtI,WAAa4H,EAAE5H,eAOhEuI,MAAK,SAACzB,EAAG0B,GAAJ,OAAU1B,EAAE9G,SAASyI,cAAcD,EAAExI,aAC1C0E,KAAI,SAAAyD,GACD,OACI,cAAC,EAAD,CAEI1E,UAAWE,KAAO1D,KAClBuD,QAAS,kBAlFvC,SAACkF,GACf,IAAMnB,EAAG,YAAOnB,GAChBmB,EAAIxF,KAAK2G,GACTrC,EAAWkB,GACXhB,GAAe,GACfJ,EAAU,IA6EiDwC,CAAUR,IACzB5E,MAAO,gCACH,8BAAM4E,EAAEnI,WACR,qBAAKyD,UAAWE,KAAOiF,MAAvB,SAA+BT,EAAES,YALhCT,EAAEhI,kBAgB/C,qBAAKsD,UAAWE,KAAO,mBAAvB,SAEQyC,EAAQ1B,KAAI,SAACmE,EAAEwB,GACX,OACI,cAACjF,EAAD,CAAwBnF,KAAM4I,EAAGrF,QAAS,kBA5F7C,SAACkF,GAClB,IAAMnB,EAAMnB,EAAQ8B,QAAO,SAAAC,GAAC,OAAIA,EAAEhI,MAAQuI,EAAMvI,OAChDkG,EAAWkB,GA0FyDuB,CAAaD,IAAIvD,KAAM,IAAtD+E,QAMjC,qBAAK5G,UAAWE,KAAO,cAAvB,SACA,cAAC,EAAD,CAAYH,QAAS,SAACoE,GAAD,OAAKV,EAAaU,IAAIrE,MAAM,SAASE,UAAWE,KAAO,wB,yBCvLzE,SAASgJ,GAAc3L,GASlC,IARA,IAAM2F,EAAc5C,qBAAWrD,GACzBW,EAAUC,cACVoF,EAAc3C,qBAAWjB,GACzB1C,EAAQuG,EAAY1G,KAAKG,MACzBwM,EAAc5L,EAAM4L,YAEtBC,EAAY,GAEPxC,EAAQ,EAAGA,EAAQjK,EAAM4G,OAAQqD,IAAS,CAC/C,IAAM/C,EAAOlH,EAAMiK,GACfyC,EAAM,CAAE,KAAO,SAAP,OAAiBxF,EAAK7H,MAAQ,GAAM6H,EAAKnH,IAAK,KAAQ,QAClE0M,EAAU9K,KAAK+K,GACf,IAAK,IAAIzC,EAAQ,EAAGA,EAAQ/C,EAAKyF,SAAS/F,OAAQqD,IAAS,CACvD,IAAMd,EAAUjC,EAAKyF,SAAS1C,GAC1ByC,EAAM,CAAE,KAAO,YAAP,OAAoBvD,EAAQ9J,MAAQ,GAAM8J,EAAQpJ,IAAK,KAAQ,WAC3E0M,EAAU9K,KAAK+K,IAwBvB,OACI,qBAAKrJ,UAAWE,KAAO,oBAAvB,SAEQkJ,EAAU3E,QAAO,SAAAC,GAAC,OAAIA,EAAE1I,KAAK2I,cAAc7D,SAASqI,EAAYxE,kBAC3D1D,KAAI,SAACC,EAAG0F,GACL,OACI,qBAAiB7G,QAAS,YA1BhC,SAACtD,GACf,IAAK,IAAImK,EAAQ,EAAGA,EAAQjK,EAAM4G,OAAQqD,IAAS,CAC/C,IAAM/C,EAAOlH,EAAMiK,GACf/C,EAAKnH,MAAQD,IACbmB,EAAQU,KAAR,gBAAsB7B,IACtBwG,EAAYsG,mBAAmB1F,EAAKnH,KACpCa,EAAMwG,YAEV,IAAK,IAAI6C,EAAQ,EAAGA,EAAQ/C,EAAKyF,SAAS/F,OAAQqD,IAAS,CACvD,IAAMd,EAAUjC,EAAKyF,SAAS1C,GAC1Bd,EAAQpJ,MAAQD,IAChBmB,EAAQU,KAAR,yBAA+BuF,EAAKnH,IAApC,YAA2CoJ,EAAQpJ,MACnDuG,EAAYsG,mBAAmB1F,EAAKnH,KACpCa,EAAMwG,cAaoCyF,CAAUtI,EAAEzE,KAA9C,SAAsDyE,EAAElF,MAA9C4K,QCpCtC,IAySe6C,GAzSA,SAAC,GAAiB,IAAfvC,EAAc,EAAdA,QACRwC,EAAqBC,iBAAO,MAC5BC,EAAkBD,iBAAO,MACzBE,EAAqBF,iBAAO,MAC5BG,EAAkBH,iBAAO,MACzBI,EAAoBJ,iBAAO,MALL,EAMsBnM,oBAAS,GAN/B,mBAMrBwM,EANqB,KAMFC,EANE,OAOkB/B,GAAsB2B,GAPxC,mBAOrBK,EAPqB,KAOJC,EAPI,OAQYjC,GAAsB4B,GARlC,mBAQrBM,EARqB,KAQPC,EARO,OASgB7M,oBAAS,GATzB,mBASrB8M,EATqB,KASLC,EATK,OAUYrC,GAAsB0B,GAVlC,mBAUrBY,EAVqB,KAUPC,EAVO,OAWMjN,mBAAS,MAXf,mBAWrBkN,EAXqB,KAWVC,EAXU,OAYkBzC,GAAsBwB,GAZxC,mBAYrBkB,EAZqB,KAYJC,EAZI,OAaYrN,oBAAS,GAbrB,mBAarBsN,EAbqB,KAaPC,EAbO,OAcgB7C,GAAsB6B,GAdtC,oBAcrBiB,GAdqB,MAcLC,GAdK,SAeUzN,mBAAS,IAfnB,qBAerB2L,GAfqB,MAeR+B,GAfQ,SAgBkB1N,oBAAS,GAhB3B,qBAgBrB2N,GAhBqB,MAgBJC,GAhBI,MAiBtBC,GAAU/K,qBAAWrD,GACrByJ,GAAiBpG,qBAAWmF,IAC5BxC,GAAc3C,qBAAWjB,GACzBwJ,GAASC,cACTlL,GAAUC,cACV2C,GAASH,IAQf,IAAMiL,GAAUvN,sBAAW,sBAAC,kCAAAsF,EAAA,6DAClB5G,EAAKoM,GAAO0C,UACZvN,EAAQjC,EAAU,gBAFA,SAGDkC,MAAM,sBAAD,OAAuBxB,GAAM,CACrDyB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAPD,WAGlB1B,EAHkB,QAUV+B,GAVU,gBAWpBT,GAAQU,KAAK,UAXO,wCAaDhC,EAASmC,OAbR,QAad+M,EAbc,OAcpB9E,GAAeX,WAAWyF,GAdN,4CAgBzB,CAAC5N,GAASiL,GAAQnC,KA0CrB,SAAS+E,GAAaC,GACdA,IAAkB7C,GAAOG,QAC7BpL,GAAQU,KAAK,KAGjB,SAASqN,GAAaC,GACdA,IAAqB/C,GAAO0C,WAChC3N,GAAQU,KAAR,gBAAsBuK,GAAOG,SAGjC,GAlDArK,qBAAU,WACN,GAAMgC,OAAOC,SAASC,KAAKC,SAAS,SAAWH,OAAOC,SAASC,KAAKC,SAAS,YAEtE,GAAiC,WAA7BmC,GAAY1D,aAA2B,CAC9C,IAAMwJ,EAASF,GAAOG,OACtB/F,GAAYsG,mBAAmBR,SAH/B9F,GAAYzD,gBAAgB,UAM5BmB,OAAOC,SAASC,KAAKC,SAAS,aAC9ByJ,GAAkB,GAClBN,GAAqB,GACrBhH,GAAY4I,mBAAmBhD,GAAOG,QAEP,OAA3BtC,GAAeZ,SAAoBY,GAAeZ,QAAQpJ,MAAQmM,GAAO0C,WACzED,KAGA3K,OAAOC,SAASC,KAAKC,SAAS,UAC9B6J,EAAa,SAEbhK,OAAOC,SAASC,KAAKC,SAAS,SAC9B6J,EAAa,WAGtB,CAACW,GAASzC,GAAQA,GAAOG,OAAQtC,GAAeZ,QAAS7C,KAE5DtE,qBAAU,WACN,IAAMgC,OAAOC,SAASC,KAAKC,SAAS,SAAWH,OAAOC,SAASC,KAAKC,SAAS,aAC/D,MAAVN,GAEJ,OADAA,GAAO+G,GAAG,eAAgBkE,IACnB,kBAAMjL,GAAOgH,IAAI,oBAG5B7I,qBAAU,WACN,GAAKgC,OAAOC,SAASC,KAAKC,SAAS,YACrB,MAAVN,GAEJ,OADAA,GAAO+G,GAAG,kBAAmBoE,IACtB,kBAAMnL,GAAOgH,IAAI,uBAaxB7G,OAAOC,SAASC,KAAKC,SAAS,aAAe4F,GAAeZ,QAC5D,OAAO,KAWX,OACI,wBAAQ9F,UAAS,UAAKE,KAAO4L,WAAZ,YAA0B5E,EAAUhH,KAAO6L,MAAQ,IAApE,SACI,sBAAK/L,UAAWE,KAAO+D,UAAvB,UACI,sBAAKjE,UAAWE,KAAO8L,MAAvB,UAEI,qBAAKhM,UAAWE,KAAO+L,OAAvB,mBAGA,gCACI,cAAC,EAAD,CACIjM,UAAWE,KAAOvD,MAClBoD,QAAS,kBAAMsK,GAAiBD,IAChCtK,MAAOmD,GAAY1D,eAGnB6K,EAAe,sBACX8B,IAAKpC,EACL9J,UAAS,UAAKE,KAAOwH,QAAZ,YAAuBxH,KAAOiM,KAA9B,YAAsCjM,KAAO,mBAF3C,UAKP+C,GAAYtG,MAAMsE,KAAI,SAAAC,GAAC,OACnB,qBAAiBlB,UAAWE,KAAO,gBAAnC,SACI,cAAC,EAAD,CACIW,KAAI,gBAAWK,EAAExE,KACjBoD,MAAOoB,EAAElF,KACT+D,QAAS,WA/GrD,IAAoBgJ,EAAQqD,EAARrD,EA+GoD7H,EAAExE,IA/G9C0P,EA+GmDlL,EAAElF,KA9G7EiH,GAAY4I,mBAAmB9C,GAC/B9F,GAAYzD,gBAAgB4M,GAC5B/B,GAAgB,IA6GwBrK,UAAS,UAAKE,KAAOmM,SAAZ,YAAwBnM,KAAOoM,UALtCpL,EAAExE,QAUpB,qBAAKsD,UAAWE,KAAO,eAAvB,SACI,cAAC,EAAD,CACIH,QAAS,kBAAMgL,GAAgB,IAC/BjL,MAAM,cACNE,UAAWE,KAAOqM,cAGrB,QAIbzB,EAAgB,cAAC,GAAD,CAAa/G,SAAU,kBAAMgH,GAAgB,IAA7C,SACZ,cAAC1I,EAAD,CAAY0B,SAAU,WAAQgH,GAAgB,QAChC,KAKrBf,GAAqB,sBAAKhK,UAAWE,KAAOsM,KAAvB,UAClB,qBAAKxM,UAAWE,KAAO+L,OAAvB,sBAGA,gCACI,cAAC,EAAD,CACIjM,UAAWE,KAAOvD,MAClBoD,QAAS,kBAAMoK,GAAoBD,IACnCpK,MAAO4G,GAAeZ,QAAQ9J,OAG9BkO,EAAkB,sBACdgC,IAAKrC,EACL7J,UAAS,UAAKE,KAAOwH,QAAZ,YAAuBxH,KAAOiM,KAA9B,YAAsCjM,KAAO,sBAFxC,UAKV+C,GAAYwJ,gBAAgBxL,KAAI,SAAAyL,GAAC,OAC7B,qBAAiB1M,UAAWE,KAAO,gBAAnC,SACI,cAAC,EAAD,CACIW,KAAI,yBAAoBgI,GAAOG,OAA3B,YAAqC0D,EAAEhQ,KAC3CoD,MAAO4M,EAAE1Q,KACT+D,QAAS,WAAQoK,GAAmB,IACpCnK,UAAS,UAAKE,KAAOmM,SAAZ,YAAwBnM,KAAOoM,UALtCI,EAAEhQ,QAUpB,qBAAKsD,UAAWE,KAAO,eAAvB,SACI,cAAC,EAAD,CACIH,QAAS,kBAAMqL,IAAmB,IAClCtL,MAAM,iBACNE,UAAWE,KAAOqM,cAGrB,QAIbpB,IAAmB,cAAC,GAAD,CAAapH,SAAU,kBAAMqH,IAAmB,IAAhD,SACf,cAACxC,GAAD,CAAe7E,SAAU,kBAAMqH,IAAmB,WAO7Dd,GAAkB,sBAAKtK,UAAWE,KAAOsM,KAAvB,UACf,qBAAKxM,UAAWE,KAAO+L,OAAvB,mBAGA,gCACI,cAAC,EAAD,CACIjM,UAAWE,KAAOyM,KAClB5M,QAAS,kBAAM0K,GAAiBD,IAChC1K,MAAO4K,IAGPF,EAAe,sBACX0B,IAAKtC,EACL5J,UAAS,UAAKE,KAAOwH,QAAZ,YAAuBxH,KAAOiM,KAA9B,YAAsCjM,KAAO,kBAF3C,UAIX,qBAAKF,UAAWE,KAAO,gBAAvB,SACI,cAAC,EAAD,CACIW,KAAI,yBAAoBgI,GAAOG,OAA3B,YAAqCtC,GAAeZ,QAAQpJ,KAChEoD,MAAM,QACNE,UAAWE,KAAOoM,MAClBvM,QAAS,WAAQ0K,GAAgB,QAGzC,qBAAKzK,UAAWE,KAAO,eAAvB,SACI,cAAC,EAAD,CACIW,KAAI,wBAAmBgI,GAAOG,OAA1B,YAAoCtC,GAAeZ,QAAQpJ,KAC/DoD,MAAM,OACNE,UAAWE,KAAOoM,MAClBvM,QAAS,WAAQ0K,GAAgB,WAGpC,cAMzB,sBAAKzK,UAAS,UAAKE,KAAO8L,MAAZ,YAAqB9L,KAAOiM,MAA1C,UACI,iCACI,uBAAOnM,UAAWE,KAAO+E,MAAOrG,KAAK,OACjCyF,YAAc2G,GAA+B,6BAAd,YAC/B1G,aAAa,MACbpF,MAAOiK,GACPjF,SAAU,SAACC,GAAD,OAAO+G,GAAe/G,EAAEb,OAAOpE,QACzCa,QAAS,kBAAMkL,IAAkB,IACjC1G,OApJT,WACXC,YAAW,kBAAOyG,IAAkB,KAAS,QAuJrB9B,GAAY5F,OAAS,GAErByH,GACA,qBAAKkB,IAAKnC,EAAV,SACI,cAACb,GAAD,CAAeC,YAAaA,GAAapF,SAAU,WAAQkH,IAAmBD,IAAiBE,GAAe,SAEhH,QAGd,cAAC,EAAD,CACIlL,UAAWE,KAAO0M,OAClB7M,QAAS,kBAAM8K,GAAoBD,IACnC9K,MACI,cAAC6B,EAAD,CAAYnF,KAAM6O,GAAQ7O,KAAMqF,KAAM,OAI1C+I,EAAkB,sBACdsB,IAAKxC,EACL1J,UAAS,UAAKE,KAAOwH,QAAZ,YAAuBxH,KAAO,oBAFzB,UAId,qBAAKF,UAAWE,KAAO,gBAAvB,SACI,cAAC,EAAD,CACIW,KAAI,mBAAcwK,GAAQ7O,MAAQ6O,GAAQ7O,KAAKC,IAC/CqD,MAAM,UACNE,UAAWE,KAAOoM,UAG1B,qBAAKtM,UAAWE,KAAO,eAAvB,SACI,cAAC,EAAD,CACIH,QAASsL,GAAQhO,OACjByC,MAAM,UACNE,UAAWE,KAAOqM,cAGrB,c,qBC5RlBM,GAjBI,SAAC,GAAgC,IAA9B1N,EAA6B,EAA7BA,SAAU2N,EAAmB,EAAnBA,aAAmB,EACnBtP,oBAAS,GADU,mBAC1C0J,EAD0C,KACjCC,EADiC,KAGjD,OACE,sBAAKnH,UAAWE,KAAO6M,IAAvB,UACE,cAAC9F,GAAD,CAAOC,QAASA,EAASC,WAAYA,IACrC,cAAC,GAAD,CAAQD,QAASA,IACjB,qBACElH,UAAS,UAAKE,KAAO8M,QAAZ,YAAuB9F,EAAUhH,KAAO6L,MAAQ,IACzD9L,MAAO6M,GAAgBA,EAFzB,SAIG3N,Q,qBCPM8N,GAND,SAAC,GAAe,IAAbnN,EAAY,EAAZA,MACb,OACA,qBAAKE,UAAWE,KAAOJ,MAAvB,SAA+BA,K,oBCLpB,OAA0B,0CCwI1BoN,GA3HF,WACX,IAAMC,EAAcxD,iBAAO,MACrBzG,EAAc5C,qBAAWrD,GACzBW,EAAUC,cAHC,EAIuBL,oBAAS,GAJhC,mBAIVsN,EAJU,KAIIC,EAJJ,OAKuC7C,GAAsBiF,GAL7D,mBAKVC,EALU,KAKYC,EALZ,KAMXC,EAAWpK,EAAY1G,KAAKD,SAC5BgR,EAAYrK,EAAY1G,KAAKG,MAC7BoE,EAASmC,EAAY1G,KAAKE,IAC1BK,EAAiBmG,EAAY1G,KAAKO,eAsBxC,OACE,eAAC,GAAD,WACE,8BAEI+N,EAAgB,cAAC,GAAD,CAAa/G,SAAU,kBAAMgH,GAAgB,IAA7C,SACd,cAAC1I,EAAD,CAAY0B,SAAU,WAAQgH,GAAgB,QAC9B,OAItB,cAAC,GAAD,CAAOjL,MAAM,SACb,sBAAKE,UAAWE,KAAO+D,UAAvB,UAEE,uBAAMjE,UAAWE,KAAO,gBAAxB,UAEE,8BACE,cAAC,EAAD,CAAYF,UAAWE,KAAO,oBAAqBJ,MAAO,WAAYC,QAAS,kBAAMnC,EAAQU,KAAR,oBAA0ByC,SAIjH,gCAEI,cAAC,EAAD,CAAYf,UAAWE,KAAO,oBAAqBJ,MAAO,WAAYC,QAAS,kBAAMsN,GAAyBD,MAIhH,+BACE,qBAAKpN,UAAWE,KAAO,yBAAvB,SAEIkN,EACE,qBAAKpN,UAAWE,KAAO,cAAegM,IAAKiB,EAA3C,SAEII,EAAUhK,OAAS,EACfgK,EAAUtM,KAAI,SAACC,EAAG0F,GAClB,OACE,+BACE,qBACE5G,UAAWE,KAAO,0BAClBH,QAAS,kBAzDnBgJ,EAyDsC7H,EAAExE,SAxD5DkB,EAAQU,KAAR,gBAAsByK,IADH,IAACA,GAuDQ,SAIE7H,EAAElF,QALK4K,MAWb,qCAGN,YAMZ,8BACE,cAAC,EAAD,CAAY5G,UAAWE,KAAO,oBAAqBJ,MAAO,kBAAmBC,QAAS,kBAAMgL,GAAgB,WAMhH,sBAAK/K,UAAWE,KAAO,iBAAvB,UACE,qBAAKF,UAAWE,KAAOsN,KAAM7F,IAAK6F,GAAM3F,IAAI,KAC5C,qBAAK7H,UAAWE,KAAO,gBAAvB,2BAAoDoN,EAApD,UAGF,sBAAMtN,UAAWE,KAAO,iBAAxB,SAEKnD,EACC,gCACE,mDAEEA,EAAe0Q,MAAM,GAAGC,UAAUzM,KAAI,SAACyL,EAAG9F,GACxC,OACE,8BACE,cAAC,EAAD,CAAY5G,UAAWE,KAAO,oBAAqBJ,MAAO4M,EAAE1Q,KAAM+D,QAAS,kBA3F5E4N,EA2F8FjB,EAAEhQ,SAzFnH6Q,EAAUtM,KAAI,SAAAC,GACZ,OAAQA,EAAEoI,SAASsE,SAAQ,SAAA/I,GACrBA,EAAQnI,MAAQiR,GAClB/P,EAAQU,KAAR,yBAA+B4C,EAAExE,IAAjC,YAAwCiR,UAL5B,IAACA,MA0FSjB,EAAEhQ,WASlB,c,oBChID,OAA0B,2CCA1B,OAA0B,2CCA1B,OAA0B,2CCA1B,OAA0B,2CCA1B,OAA0B,2CCA1B,OAA0B,2CCA1B,OAA0B,2CCA1B,OAA0B,yCCA1B,OAA0B,0C,yCCgD1BmR,GA9CG,uCAAG,WAAOnN,EAAKxC,EAAQyF,EAAMmK,EAAWC,GAArC,mBAAA1K,EAAA,+EAGSpF,MAAMyC,EAAK,CAC7BxC,SACAyF,KAAMvC,KAAKC,UAAUsC,GACrBxF,QAAS,CACL,eAAgB,sBAPX,cAGPK,EAHO,OAYPwP,EAAYxP,EAAQL,QAAQ8P,IAAI,iBAZzB,SAaUzP,EAAQC,OAblB,YAaPnC,EAbO,QAeA4R,aAfA,wBAgBTH,EAAUzR,GAhBD,+BAmBTA,EAAS6R,cAnBA,wBAoBTJ,EAAUzR,GApBD,+BAuBTA,EAAS8R,UAvBA,wBAwBTL,EAAUzR,GAxBD,+BA2BTA,EAAS+R,MA3BA,wBA4BTN,EAAUzR,GA5BD,2BAgCbJ,SAASC,OAAT,uBAAkC6R,EAAlC,WAGI1R,EAASE,KAAKD,UAAYyR,EAC1BF,EAAUzR,EAAWC,IAErByR,EAAUzR,GAtCD,kDA0CbyR,EAAU,EAAD,IA1CI,0DAAH,8DC2BHO,GA3BK,uCAAG,WAAOC,EAAgBT,EAAWC,GAAlC,qBAAA1K,EAAA,sEAGTmL,EAAUD,EAAeC,QAHhB,SAIOvQ,MAAM,yBAA0B,CAClDC,OAAQ,OACRyF,KAAMvC,KAAKC,UAAU,CAACmN,YACtBrQ,QAAS,CACL,eAAgB,sBART,cAITK,EAJS,OAWTwP,EAAYxP,EAAQL,QAAQ8P,IAAI,iBACtC/R,SAASC,OAAT,uBAAkC6R,EAAlC,WAZe,SAcQxP,EAAQC,OAdhB,QAcTnC,EAdS,QAgBFE,KAAKD,UAAYyR,EAC1BF,EAAUzR,EAAWC,IAErByR,EAAUzR,GAnBC,kDAuBfyR,EAAU,EAAD,IAvBM,0DAAH,0D,yCCCL,SAASU,GAAMlR,GAC1B,OACI,8BACKA,EAAMmR,MAAS,qBAAK1O,UAAWE,KAAOwO,MAAvB,SACXnR,EAAMoR,UACD,OCLtB,IA2BeC,GA3BS,uCAAG,WAAOlO,EAAKxC,EAAQyF,EAAMmK,EAAWC,GAArC,mBAAA1K,EAAA,sEAIblH,EAASJ,EAAU,gBAJN,SAMGkC,MAAMyC,EAAK,CAC7BxC,SACAyF,KAAMvC,KAAKC,UAAUsC,GACrBxF,QAAS,CACL,eAAgB,mBAChB,cAAiBhC,KAXN,cAMbqC,EANa,gBAeIA,EAAQC,OAfZ,QAebnC,EAfa,QAgBNE,KAAKD,SACduR,EAAUzR,EAAWC,IAErByR,IAnBe,kDAuBnBA,EAAU,EAAD,IAvBU,0DAAH,8DCOT,SAASc,GAAYtR,GAAQ,IAAD,EACPC,mBAAS,IADF,mBAChCsR,EADgC,KACtBC,EADsB,OAEHvR,mBAAS,IAFN,mBAEhCwR,EAFgC,KAEpBC,EAFoB,OAGbzR,oBAAS,GAHI,mBAGhCkR,EAHgC,KAGzBQ,EAHyB,OAIL1R,oBAAS,GAJJ,mBAIhC2R,EAJgC,KAIrBC,EAJqB,KAMjClM,EAAc5C,qBAAWrD,GAGzBW,EAAUC,cACVkD,EAASxD,EAAMwD,OAIf0C,EAAe1F,sBAAW,uCAAC,WAAOqF,GAAP,SAAAC,EAAA,yDAC7BD,EAAMM,iBAENwL,GAAS,GACTE,GAAa,GAGRN,GAAaE,EAPW,uBAQzBI,GAAa,GARY,6BAYzBN,IAAaE,EAZY,uBAazBE,GAAS,GAbgB,2CAkBvBN,GAAmB,4BAAD,OAA6B7N,GAAU,MAAO,CAClE+N,aACD,SAACxS,GACA4G,EAAY9F,MAAMd,EAASE,MAC3B6S,QAAQC,IAAIpM,EAAY1G,MACxBoB,EAAQU,KAAK,QAvBY,4CAAD,sDA0B7B,CAACV,EAASsF,EAAa4L,EAAUE,EAAYjO,IAIhD,OAEI,sBAAMf,UAAWE,KAAO+D,UAAxB,SAEI,sBAAKjE,UAAWE,KAAOqP,eAAvB,UAEI,qBAAKvP,UAAWE,KAAO+H,KAAvB,SACI,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,MAAMD,OAAO,UAGlD,sBAAKkB,UAAWE,KAAOsP,UAAvB,UACI,sBAAKxP,UAAWE,KAAOuP,OAAvB,UACI,cAAChB,GAAD,CAAOC,MAAOA,EAAOC,QAAS,2BAC9B,cAACF,GAAD,CAAOC,MAAOS,EAAWR,QAAS,8BAGtC,qBAAK3O,UAAWE,KAAOJ,MAAvB,kCAEA,sBAAKE,UAAWE,KAAOwP,eAAvB,UACI,6CACA,uBACIrL,YAAY,WACZrE,UAAWE,KAAOyP,UAClB/Q,KAAK,WACLM,MAAO4P,EACP5K,SAAU,SAAAC,GAAC,OAAI4K,EAAY5K,EAAEb,OAAOpE,QACpCkF,MAAM,eACN3H,GAAG,aAKP,sBAAKuD,UAAWE,KAAO0P,iBAAvB,UACI,qEACA,sEAIR,sBAAK5P,UAAWE,KAAOwP,eAAvB,UACI,qDACA,uBACIrL,YAAY,WACZrE,UAAWE,KAAOyP,UAClB/Q,KAAK,WACLM,MAAO8P,EACP9K,SAAU,SAAAC,GAAC,OAAI8K,EAAc9K,EAAEb,OAAOpE,QACtCkF,MAAM,mBACN3H,GAAG,kBAKX,qBAAKuD,UAAWE,KAAO2P,aAAvB,+LAIA,qBAAK7P,UAAWE,KAAO4P,eAAvB,SACI,wBAAQlR,KAAK,SAASoB,UAAWE,KAAO6P,YAAahQ,QAAS0D,EAA9D,sBAGJ,qBAAKzD,UAAWE,KAAO8P,UAAvB,2FClHL,WAA0B,mCC+K1BC,GAhKG,SAAC1S,GAAW,IAAD,EACOC,mBAAS,IADhB,mBAClBsR,EADkB,KACRC,EADQ,OAECvR,mBAAS,IAFV,mBAElB2H,EAFkB,KAEX+K,EAFW,OAGO1S,oBAAS,GAHhB,mBAGlB2S,EAHkB,KAGRC,EAHQ,OAIG5S,mBAAS,IAJZ,mBAIlBuD,EAJkB,KAIVsP,EAJU,KAKnBhF,EAAU/K,qBAAWrD,GACrBW,EAAUC,cANS,EAOSL,oBAAS,GAPlB,mBAOlB2R,EAPkB,KAOPC,EAPO,OAQqB5R,oBAAS,GAR9B,mBAQlB8S,EARkB,KAQDC,EARC,OASqB/S,oBAAS,GAT9B,mBASlBgT,EATkB,KASDC,EATC,KAcnBhN,EAAY,uCAAG,WAAOL,GAAP,SAAAC,EAAA,yDACjBD,EAAMM,iBAEN0L,GAAa,GACbmB,GAAmB,GACnBE,GAAmB,GAEd3B,GAAa3J,EAPD,uBAQbiK,GAAa,GARA,0CAYXvB,GAAa,kBAAmB,OAAQ,CAC1C1I,QACA2J,aACD,SAACtS,GACA6O,EAAQjO,MAAMZ,GACdoB,EAAQU,KAAK,QACd,SAAChC,GACIA,EAAS4R,eACTmC,EAAU/T,EAASyE,QACnBqP,GAAY,IAEZ9T,EAAS6R,eACToC,GAAmB,GAEnBjU,EAAS8R,WACTqC,GAAmB,GAEvBpB,QAAQC,IAAI,QAAShT,MA7BR,2CAAH,sDA0CZyH,EAAW,WACbqM,GAAY,IAGhB,OACI,gCAGQD,EACI,8BACI,cAAC,GAAD,CAAapM,SAAUA,EAAvB,SACI,cAAC8K,GAAD,CAAa9K,SAAUA,EAAUhD,OAAQA,EAAQoE,MAAOA,QAEvD,KAEjB,sBAAMnF,UAAWE,KAAO+D,UAAWyM,SAAUjN,EAA7C,SAGI,sBAAKzD,UAAWE,KAAO,mBAAvB,UAEI,qBAAKF,UAAWE,KAAO+H,KAAvB,SACI,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,MAAMD,OAAO,UAGlD,sBAAKkB,UAAWE,KAAO,cAAvB,UACI,sBAAKF,UAAWE,KAAOuP,OAAvB,UACI,cAAChB,GAAD,CAAOC,MAAOS,EAAWR,QAAS,2BAClC,cAACF,GAAD,CAAOC,MAAO4B,EAAiB3B,QAAS,mBACxC,cAACF,GAAD,CAAOC,MAAO8B,EAAiB7B,QAAS,uCAG5C,qBAAK3O,UAAWE,KAAOJ,MAAvB,gCAGA,sBAAKE,UAAWE,KAAO,mBAAvB,UACI,0CACA,uBACIF,UAAWE,KAAO,eAClBmE,YAAY,mBACZnF,MAAOiG,EACPjB,SAAU,SAAAC,GAAC,OAAI+L,EAAS/L,EAAEb,OAAOpE,QACjCkF,MAAM,QACN3H,GAAG,aAIX,sBAAKuD,UAAWE,KAAO,mBAAvB,UACI,6CACA,uBACIF,UAAWE,KAAO,cAClBmE,YAAY,WACZzF,KAAK,WACLM,MAAO4P,EACP5K,SAAU,SAAAC,GAAC,OAAI4K,EAAY5K,EAAEb,OAAOpE,QACpCkF,MAAM,WACN3H,GAAG,gBAIX,qBAAKuD,UAAWE,KAAO,oBAAvB,SACI,wBAAQtB,KAAK,SAASoB,UAAWE,KAAO,gBAAxC,sBAIJ,sBAAKF,UAAWE,KAAO,YAAvB,UACI,mBAAGF,UAAWE,KAAO,eACjBH,QAAS,WAAQxC,EAAMoT,qBAAsBpT,EAAMwG,YADvD,8BAIA,oBAAG/D,UAAWE,KAAO,aAArB,kCAEJ,wBAAQF,UAAWE,KAAO,eACdH,QAAS,WAAQxC,EAAMqT,aAAcrT,EAAMwG,YADvD,wBAII,uCAMJ,qBAAK/D,UAAWE,KAAO,2BAAvB,SACI,cAAC,KAAD,CACI2Q,OAAQ,SAAAC,GAAW,OACf,yBAAQ/Q,QAAS+Q,EAAY/Q,QACzBC,UAAWE,KAAO,oBADtB,UAGI,qBAAKyH,IAAKoJ,GAAQlJ,IAAI,OAAO9I,MAAM,KAAKD,OAAO,OAHnD,yBAMJkS,SAAS,2EACTC,WAAW,QACXnD,UArGP,SAACS,GAClBD,GAAeC,GAAgB,SAAC/R,GAC5B6O,EAAQjO,MAAMZ,GACdoB,EAAQU,KAAK,QACd,SAAChC,GACA+S,QAAQC,IAAI,QAAShT,OAkGD4U,aAAc,qC,oBCqC/BC,GA7LI,SAAC5T,GAAW,IAAD,EACMC,mBAAS,IADf,mBACnBjB,EADmB,KACT6U,EADS,OAEM5T,mBAAS,IAFf,mBAEnBsR,EAFmB,KAETC,EAFS,OAGAvR,mBAAS,IAHT,mBAGnB2H,EAHmB,KAGZ+K,EAHY,OAIU1S,mBAAS,IAJnB,mBAInBwR,EAJmB,KAIPC,EAJO,OAKAzR,oBAAS,GALT,mBAKnBkR,EALmB,KAKZQ,EALY,OAMQ1R,oBAAS,GANjB,mBAMnB2R,EANmB,KAMRC,EANQ,OAOQ5R,oBAAS,GAPjB,mBAOnB6T,EAPmB,KAORC,EAPQ,OAQoB9T,oBAAS,GAR7B,mBAQnB+T,EARmB,KAQFC,EARE,KASpBnG,EAAU/K,qBAAWrD,GACrBW,EAAUC,cAGhB,SAAS4T,EAActM,GAEnB,MADS,gDACCuM,KAAKvM,GAInB,IAAM1B,EAAY,uCAAG,WAAOL,GAAP,SAAAC,EAAA,yDACjBD,EAAMM,iBAIN8N,GAAmB,GACnBtC,GAAS,GACTE,GAAa,GACbkC,GAAa,GAECG,EAActM,GAVX,uBAabqM,GAAmB,GAbN,6BAiBb1C,IAAaE,EAjBA,wBAkBbE,GAAS,GAlBI,8BAuBZ3S,GAAauS,GAAaE,GAAe7J,EAvB7B,wBAwBbiK,GAAa,GAxBA,4CA4BXvB,GAAa,qBAAsB,OAAQ,CAC7C1I,QACA5I,WACAuS,aACD,SAACtS,GACA6O,EAAQjO,MAAMZ,GACdoB,EAAQU,KAAK,QACd,SAAChC,GACIA,EAAS+R,OACTiD,GAAa,MArCJ,4CAAH,sDAoDlB,OAGI,sBAAMtR,UAAWE,KAAO+D,UAAWyM,SAAUjN,EAA7C,SAII,sBAAKzD,UAAWE,KAAO,mBAAvB,UACI,qBAAKF,UAAWE,KAAO+H,KAAvB,SACI,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,MAAMD,OAAO,UAGlD,sBAAKkB,UAAWE,KAAO,cAAvB,UAEI,sBAAKF,UAAWE,KAAOuP,OAAvB,UACI,cAAChB,GAAD,CAAOC,MAAOA,EAAOC,QAAS,2BAC9B,cAACF,GAAD,CAAOC,MAAO2C,EAAW1C,QAAS,wCAClC,cAACF,GAAD,CAAOC,MAAOS,EAAWR,QAAS,2BAClC,cAACF,GAAD,CAAOC,MAAO6C,EAAiB5C,QAAS,wCAE5C,qBAAK3O,UAAWE,KAAOJ,MAAvB,iCAEA,sBAAKE,UAAWE,KAAO,mBAAvB,UACI,6CACA,uBACImE,YAAY,aACZrE,UAAWE,KAAO,iBAClBhB,MAAO3C,EACP2H,SAAU,SAACC,GAAD,OAAOiN,EAAYjN,EAAEb,OAAOpE,QACtCkF,MAAM,WACN3H,GAAG,gBAIX,sBAAKuD,UAAWE,KAAO,mBAAvB,UACI,0CACA,uBACImE,YAAY,mBACZrE,UAAWE,KAAO,iBAClBhB,MAAOiG,EACPjB,SAAU,SAACC,GAAD,OAAO+L,EAAS/L,EAAEb,OAAOpE,QACnCkF,MAAM,QACN3H,GAAG,aAIX,sBAAKuD,UAAWE,KAAO,mBAAvB,UACI,6CACA,uBACImE,YAAY,WACZrE,UAAWE,KAAO,iBAClBtB,KAAK,WACLM,MAAO4P,EACP5K,SAAU,SAACC,GAAD,OAAO4K,EAAY5K,EAAEb,OAAOpE,QACtCkF,MAAM,WACN3H,GAAG,aAEP,sBAAKuD,UAAWE,KAAO,qBAAvB,UACI,gEACA,0EAIR,sBAAKF,UAAWE,KAAO,mBAAvB,UACI,qDACA,uBACImE,YAAY,WACZrE,UAAWE,KAAO,iBAClBtB,KAAK,WACLM,MAAO8P,EACP9K,SAAU,SAACC,GAAD,OAAO8K,EAAc9K,EAAEb,OAAOpE,QACxCkF,MAAM,cACN3H,GAAG,mBAIX,qBAAKuD,UAAWE,KAAO,oBAAvB,SACI,wBAAQtB,KAAK,SAASoB,UAAWE,KAAO,kBAAxC,2BAGJ,qBAAKF,UAAWE,KAAO,YAAvB,SACI,sCAMJ,qBAAKF,UAAWE,KAAO,2BAAvB,SACI,cAAC,KAAD,CACI2Q,OAAQ,SAAAC,GAAW,OACf,yBAAQ/Q,QAAS+Q,EAAY/Q,QACzBC,UAAWE,KAAO,oBADtB,UAGI,qBAAKyH,IAAKoJ,GAAQlJ,IAAI,OAAO9I,MAAM,KAAKD,OAAO,OAHnD,0BAKJkS,SAAS,2EACTC,WAAW,sBACXnD,UA3GH,SAACS,GAClBD,GAAeC,GAAgB,SAAC/R,GAC5B6O,EAAQjO,MAAMZ,GACdoB,EAAQU,KAAK,QACd,SAAChC,GAEA+S,QAAQC,IAAI,QAAShT,OAuGL4U,aAAc,yBAItB,qBAAKlR,UAAWE,KAAO,YAAvB,SACI,oBAAGF,UAAWE,KAAO,mBAArB,6BAEA,wBAAQF,UAAWE,KAAO,eAAgBH,QAAS,WAAQxC,EAAMoU,YAAapU,EAAMwG,YAApF,kC,oBCLT6N,GA5KY,SAACrU,GAAW,IAAD,EACFC,mBAAS,IADP,mBAC3BsR,EAD2B,KACjBC,EADiB,OAERvR,mBAAS,IAFD,mBAE3B2H,EAF2B,KAEpB+K,EAFoB,OAGE1S,mBAAS,IAHX,mBAG3BwR,EAH2B,KAGfC,EAHe,KAI5B5D,EAAU/K,qBAAWrD,GACrBW,EAAUC,cALkB,EAMAL,oBAAS,GANT,mBAM3B2R,EAN2B,KAMhBC,EANgB,OAOY5R,oBAAS,GAPrB,mBAO3B8S,EAP2B,KAOVC,EAPU,OAQY/S,oBAAS,GARrB,mBAQ3BgT,EAR2B,KAQVC,EARU,KAa5BhN,EAAY,uCAAG,WAAOL,GAAP,mBAAAC,EAAA,yDACjBD,EAAMM,iBAEN0L,GAAa,GACbmB,GAAmB,GACnBE,GAAmB,GAEd3B,GAAa3J,EAPD,uBAQbiK,GAAa,GARA,6BAWbN,IAAaE,EAXA,wBAYbuB,GAAmB,GAZN,4CAgBKtS,MAAM,kBAAmB,CAC3CC,OAAQ,OACRyF,KAAMvC,KAAKC,UAAU,CACjB8D,QACA2J,aAEJ3Q,QAAS,CACL,eAAgB,sBAvBP,eAgBXK,EAhBW,iBA2BMA,EAAQC,OA3Bd,aA2BXnC,EA3BW,QA6BJ8R,UA7BI,wBA8BbqC,GAAmB,GA9BN,2BAkCjBpB,QAAQC,IAAI,QAAShT,GACjBA,EAASE,KACTuE,EAASzE,EAASE,KAAKE,IAChBJ,EAASyE,SAChBA,EAASzE,EAASyE,QAGtB6N,GAAmB,4BAAD,OAA6B7N,GAAU,MAAO,CAC5D+N,aACD,SAACxS,GACA+O,EAAQjO,MAAMd,EAASE,MACvBoB,EAAQU,KAAK,QA7CA,4CAAH,sDA4DlB,OACI,8BAEI,uBAAM0B,UAAWE,KAAO+D,UAAWyM,SAAUjN,EAA7C,UACI,sBAAKzD,UAAWE,KAAOuP,OAAvB,UACI,cAAChB,GAAD,CAAOC,MAAOS,EAAWR,QAAS,2BAClC,cAACF,GAAD,CAAOC,MAAO4B,EAAiB3B,QAAS,2BACxC,cAACF,GAAD,CAAOC,MAAO8B,EAAiB7B,QAAS,uCAG5C,sBAAK3O,UAAWE,KAAO,mBAAvB,UACI,qBAAKF,UAAWE,KAAO+H,KAAvB,SACI,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,MAAMD,OAAO,UAGlD,sBAAKkB,UAAWE,KAAO,cAAvB,UAEI,qBAAKF,UAAWE,KAAOJ,MAAvB,kCAGA,sBAAKE,UAAWE,KAAO,mBAAvB,UACI,0CACA,uBACIF,UAAWE,KAAO2R,WAClBxN,YAAY,mBACZnF,MAAOiG,EACPjB,SAAU,SAAAC,GAAC,OAAI+L,EAAS/L,EAAEb,OAAOpE,QACjCkF,MAAM,QACN3H,GAAG,aAIX,sBAAKuD,UAAWE,KAAO,mBAAvB,UACI,gDACA,uBACIF,UAAWE,KAAOyP,UAClBtL,YAAY,WACZzF,KAAK,WACLM,MAAO4P,EACP5K,SAAU,SAAAC,GAAC,OAAI4K,EAAY5K,EAAEb,OAAOpE,QACpCkF,MAAM,WACN3H,GAAG,gBAIX,sBAAKuD,UAAWE,KAAO,mBAAvB,UACI,wDACA,uBACIF,UAAWE,KAAOyP,UAClBtL,YAAY,WACZzF,KAAK,WACLM,MAAO8P,EACP9K,SAAU,SAAAC,GAAC,OAAI8K,EAAc9K,EAAEb,OAAOpE,QACtCkF,MAAM,mBACN3H,GAAG,kBAIX,qBAAKuD,UAAWE,KAAO4P,eAAvB,SACI,wBAAQlR,KAAK,SAASoB,UAAWE,KAAO6P,YAAxC,sBAIJ,sBAAK/P,UAAWE,KAAO4R,QAAvB,UAEI,oBAAG9R,UAAWE,KAAO6R,SAArB,kCAEJ,wBAAQ/R,UAAWE,KAAO8R,UACdjS,QAAS,WAAQxC,EAAMqT,aAAcrT,EAAMwG,YADvD,wBAII,uCAMJ,qBAAK/D,UAAWE,KAAO+R,qBAAvB,SACI,cAAC,KAAD,CACIpB,OAAQ,SAAAC,GAAW,OACf,yBAAQ/Q,QAAS+Q,EAAY/Q,QACzBC,UAAWE,KAAOgS,eADtB,UAGI,qBAAKvK,IAAKoJ,GAAQlJ,IAAI,OAAO9I,MAAM,KAAKD,OAAO,OAHnD,yBAMJkS,SAAS,2EACTC,WAAW,QACXnD,UAnGP,SAACS,GAClBD,GAAeC,GAAgB,SAAC/R,GAC5B6O,EAAQjO,MAAMZ,GACdoB,EAAQU,KAAK,QACd,SAAChC,GACA+S,QAAQC,IAAI,QAAShT,OA+FD4U,aAAc,qCCU/BiB,GAvKK,WAAO,IAAD,EAEU3U,oBAAS,GAFnB,mBAEjB4U,EAFiB,KAENC,EAFM,OAGsB7U,oBAAS,GAH/B,mBAGjB8U,EAHiB,KAGAC,EAHA,OAIsB/U,oBAAS,GAJ/B,mBAIjBgV,EAJiB,KAIAC,EAJA,KAOxB,OAEE,sBAAKzS,UAAWE,KAAO+D,UAAvB,UACKmO,EACC,8BACE,cAAC,GAAD,CAAarO,SAAU,kBAAMsO,GAAcD,IAA3C,SACE,cAAC,GAAD,CAAWrO,SAAU,kBAAMsO,GAAcD,IAAYxB,WAAY,kBAAI2B,GAAoBD,IACzF3B,mBAAoB,kBAAI8B,GAAoBD,UAEtC,KAEXF,EACC,8BACE,cAAC,GAAD,CAAavO,SAAU,kBAAMwO,GAAoBD,IAAjD,SACE,cAAC,GAAD,CAAYvO,SAAU,kBAAMwO,GAAoBD,IAAkBX,UAAW,kBAAIU,GAAcD,UAEzF,KAEXI,EACC,8BACE,cAAC,GAAD,CAAazO,SAAU,kBAAM0O,GAAoBD,IAAjD,SACE,cAAC,GAAD,CAAoBzO,SAAU,kBAAM0O,GAAoBD,IAAkB5B,WAAY,kBAAI2B,GAAoBD,UAExG,KAGd,sBAAKtS,UAAWE,KAAO,gBAAvB,UACE,sBAAKF,UAAWE,KAAO,iBAAvB,UACE,sBAAKF,UAAWE,KAAO,qBAAvB,UACE,sBAAKF,UAAWE,KAAO,cAAvB,UACE,sBAAMF,UAAWE,KAAO+H,KAAxB,SACE,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,OAAOD,OAAO,WAEjD,uBAAMkB,UAAWE,KAAO,iBAAxB,UACE,wBAAQF,UAAWE,KAAO,gBAAiBH,QAAS,kBAAIsS,GAAcD,IAAtE,oBACA,wBAAQpS,UAAWE,KAAO,kBAAmBH,QAAS,kBAAMwS,GAAoBD,IAAhF,2BAGF,qBAAKtS,UAAWE,KAAOsN,KAAvB,SACE,qBAAK7F,IAAK6F,GAAM3F,IAAI,GAAG9I,MAAM,WAE/B,qBAAKiB,UAAWE,KAAOwS,KAAvB,SACE,qBAAK/K,IAAK+K,GAAM7K,IAAI,GAAG9I,MAAM,cAGnC,qBAAKiB,UAAWE,KAAO,uBAAvB,SACE,sBAAKF,UAAWE,KAAO,cAAvB,UACE,oBAAGF,UAAWE,KAAO/B,QAArB,mCAAoD,sBAAM6B,UAAWE,KAAOyS,OAAxB,mBAApD,YACA,sBAAK3S,UAAWE,KAAO0S,UAAvB,UACE,oFACA,8EACA,wBAAQ5S,UAAWE,KAAO,yBAA2BH,QAAS,kBAAMwS,GAAoBD,IAAxF,qCAKR,sBAAKtS,UAAWE,KAAO,oBAAvB,UACE,sBAAKF,UAAWE,KAAO,aAAvB,UACE,sBAAKF,UAAWE,KAAO,eAAvB,UACE,mBAAGF,UAAWE,KAAO/B,QAArB,sDACA,sBAAK6B,UAAWE,KAAO0S,UAAvB,UACE,8EACA,mFACA,wBAAQ5S,UAAWE,KAAO,wBAA0BH,QAAS,kBAAMwS,GAAoBD,IAAvF,8BAGJ,qBAAKtS,UAAWE,KAAO,kBAAvB,SACE,qBAAKF,UAAWE,KAAO2S,QAASlL,IAAKmL,GAAMjL,IAAI,UAGnD,sBAAK7H,UAAWE,KAAO,cAAvB,UACE,qBAAKF,UAAWE,KAAO,kBAAvB,SACE,qBAAKF,UAAWE,KAAO2S,QAASlL,IAAKoL,GAAMlL,IAAI,OAEjD,sBAAK7H,UAAWE,KAAO,oBAAvB,UACE,sBAAKF,UAAWE,KAAO,eAAvB,UACE,mBAAGF,UAAWE,KAAO/B,QAArB,0DACA,sBAAK6B,UAAWE,KAAO0S,UAAvB,UACE,mFACA,iDACA,4EAGJ,qBAAK5S,UAAWE,KAAO,kBAAvB,SACE,qBAAKF,UAAWE,KAAO2S,QAASlL,IAAKqL,GAAMnL,IAAI,aAIrD,sBAAK7H,UAAWE,KAAO,aAAvB,UACE,sBAAKF,UAAWE,KAAO,eAAvB,UACE,oBAAGF,UAAWE,KAAO/B,QAArB,wBAAyC,sBAAM6B,UAAWE,KAAOyS,OAAxB,2BAAzC,WACA,sBAAK3S,UAAWE,KAAO0S,UAAvB,UACE,+DAAkC,sBAAM5S,UAAWE,KAAOyS,OAAxB,8BAAlC,OACA,gEACA,wBAAQ3S,UAAWE,KAAO,yBAA2BH,QAAS,kBAAMwS,GAAoBD,IAAxF,+BAGJ,qBAAKtS,UAAWE,KAAO,kBAAvB,SACE,qBAAKF,UAAWE,KAAO2S,QAASlL,IAAKsL,GAAMpL,IAAI,gBAMvD,yBAAQ7H,UAAWE,KAAOgT,OAA1B,UAEE,sBAAKlT,UAAWE,KAAO,iBAAvB,UACE,qBAAKF,UAAWE,KAAO,kBAAvB,SACE,6CAEF,sBAAKF,UAAWE,KAAO,eAAvB,UACE,gDACA,6DAIJ,sBAAKF,UAAWE,KAAO,iBAAvB,UACE,qBAAKF,UAAWE,KAAO,kBAAvB,SACE,2CAEF,sBAAKF,UAAWE,KAAO,eAAvB,UACE,2CACA,6DAIJ,sBAAKF,UAAWE,KAAO,iBAAvB,UACE,qBAAKF,UAAWE,KAAO,kBAAvB,SACE,8CAEF,sBAAKF,UAAWE,KAAO,eAAvB,UACE,oDACA,6CACA,+CACA,yDAIJ,sBAAKF,UAAWE,KAAO,eAAvB,UACE,sBAAKF,UAAWE,KAAO,0BAAvB,UACE,+BACE,qBAAKF,UAAWE,KAAO,gBAAiByH,IAAKwL,GAAWtL,IAAI,OAE9D,+BACE,qBAAK7H,UAAWE,KAAO,gBAAiByH,IAAKyL,GAASvL,IAAI,OAE5D,+BACE,qBAAK7H,UAAWE,KAAO,gBAAiByH,IAAK0L,GAAUxL,IAAI,UAG/D,qBAAK7H,UAAWE,KAAOoT,OAAvB,8B,oBC/KK,OAA0B,6CCA1B,OAA0B,gC,oBCgD1BC,GAxCO,SAAChW,GACrB,OACE,qCACE,qBAAKyC,UAAWE,KAAO,yBACvB,qBAAKF,UAAWE,KAAO+D,UAAvB,SAEE,sBAAKjE,UAAWE,KAAO8M,QAAvB,UAIE,qBAAKhN,UAAWE,KAAO+H,KAAvB,SACE,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,MAAMD,OAAO,UAGhD,qBAAKkB,UAAWE,KAAOJ,MAAvB,4CAA2DvC,EAAMuC,MAAjE,OACA,sBAAKE,UAAWE,KAAOsT,QAAvB,UACE,cAAC,EAAD,CACExT,UAAWE,KAAOkC,OAClBtC,MAAO,MACPC,QAAS,WACPxC,EAAMkW,cACNlW,EAAMmW,eAIV,cAAC,EAAD,CACE1T,UAAWE,KAAOkC,OAClBtC,MAAO,KACPC,QAAS,kBAAMxC,EAAMkW,6B,UC4UpBE,GA/VK,WAClB,IAAMxG,EAAcxD,iBAAO,MACrBzG,EAAc5C,qBAAWrD,GAFP,EAGUO,mBAAS,MAHnB,mBAGjBoW,EAHiB,KAGNC,EAHM,OAImBrW,oBAAS,GAJ5B,mBAIjBsW,EAJiB,KAIDC,EAJC,OAKoBvW,oBAAS,GAL7B,mBAKjBwW,EALiB,KAKDC,EALC,OAMQzW,mBAAS0F,EAAY1G,KAAKD,UANlC,mBAMjBA,EANiB,KAMP6U,EANO,OAOQ5T,mBAAS,MAPjB,mBAOjBsR,EAPiB,KAOPC,EAPO,OAQYvR,mBAAS,MARrB,mBAQjBwR,EARiB,KAQLC,EARK,OASEzR,oBAAS,GATX,mBASjBkR,EATiB,KASVQ,EATU,OAUgChH,GAAsBiF,GAVtD,mBAUjBC,EAViB,KAUKC,EAVL,OAWwBnF,GAAsBiF,GAX9C,mBAWjB+G,EAXiB,KAWCC,EAXD,OAYc3W,oBAAS,GAZvB,mBAYjB4W,EAZiB,KAYJC,EAZI,KAelBxL,EAASC,cACTlL,EAAUC,cAGVyP,EAAWpK,EAAY1G,KAAKD,SAC5BgR,GAAYrK,EAAY1G,KAAKG,MAC7BF,GAAKoM,EAAOyL,OAIZhJ,GAAUvN,sBAAW,sBAAC,8BAAAsF,EAAA,sEAEHpF,MAAM,aAAD,OAAcxB,KAFhB,WAEpBH,EAFoB,QAGZ+B,GAHY,gBAIxBT,EAAQU,KAAK,UAJW,uCAMLhC,EAASmC,OANJ,OAMlBjC,EANkB,OAOxBqX,EAAarX,EAAK2I,OAPM,4CAUzB,CAACvH,EAASnB,KAIPgH,GAAY,uCAAG,WAAOL,GAAP,SAAAC,EAAA,yDACnBD,EAAMM,iBAENwL,GAAS,GACT6E,GAAiB,GACjBE,GAAkB,GAIb1X,GAAauS,EATC,oDAafA,IAAaE,EAbE,uBAcjBE,GAAS,GAdQ,2CAsBbN,GAAmB,aAAD,OAAcnS,IAAM,MAAO,CACjDF,WACAuS,aACC,SAACtS,GACF0G,EAAY9F,MAAMZ,MACjB,SAAC2H,GACFkL,QAAQC,IAAI,QAASnL,MA5BJ,QA8BnBmH,KA9BmB,4CAAH,sDAqClB,GAJA3M,qBAAU,WACR2M,OACC,CAACA,MAECgC,EACH,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CACE1O,KAAK,WACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,QAMjB,IAQMuV,GAAS5T,OAAO6T,WAAWC,mBAAmB,CAClDC,UAAWC,YACXC,aAAcD,aACb,SAACE,EAAOC,GACT,GAAqB,YAAjBA,EAAO1R,MAAqB,CAC9B,IAEM2R,EAAW,CACf1O,KAHWyO,EAAOE,KAAK3O,KAIvBvE,SAHegT,EAAOE,KAAKC,WAK7BrG,GAAmB,mBAAD,OAAoBnS,IAAM,MAAO,CACjDsY,WACAG,SAAUhS,EAAY1G,KAAKQ,QAC1B,SAACR,GACF0G,EAAY9F,MAAMZ,MACjB,SAAC2H,GACFkL,QAAQC,IAAI,QAASnL,MAEvBmH,SAWE6J,GAAS,uCAAG,sBAAA9R,EAAA,sEAEVuL,GAAmB,mBAAD,OAAoBnS,IAAM,MAAO,CACvDyY,SAAUhS,EAAY1G,KAAKQ,QAC1B,SAACR,GACF0G,EAAY9F,MAAMZ,MACjB,SAAC2H,GACFkL,QAAQC,IAAI,QAASnL,MAPP,OAShBmH,KATgB,2CAAH,qDAcf,OACE,eAAC,GAAD,WAEG8I,GACC,cAAC,GAAD,CACEtU,MAAO,sBACP2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBAAMyB,QAKrB,cAAC,GAAD,CAAOrV,MAAM,YAEb,sBAAKE,UAAWE,KAAO+D,UAAvB,UAEE,sBAAKjE,UAAWE,KAAO,kBAAvB,UAIE,sBAAKF,UAAWE,KAAO,oBAAvB,UACE,cAAC,EAAD,CAAYJ,MAAO,YAAaE,UAAWE,KAAO,oBAChDH,QAAS,WAAQkU,GAAmBD,MACtC,uBACE9H,IAAK,SAAUjH,GACA,MAATA,GACFA,EAAMmQ,SAGVlW,MAAO3C,EACP2H,SAAU,SAAAC,GAAC,OAAIiN,EAAYjN,EAAEb,OAAOpE,QACpCc,UAAWE,KAAO,wBAClBmE,YAAaiJ,EACb+H,UAAWrB,OAMf,sBAAKhU,UAAWE,KAAO,oBAAvB,UACE,cAAC,EAAD,CAAYJ,MAAO,kBAAmBE,UAAWE,KAAO,oBACtDH,QAAS,WAAQgU,GAAkBD,MACrC,uBACE5P,SAAU,SAAAC,GAAC,OAAI4K,EAAY5K,EAAEb,OAAOpE,QACpCc,UAAWE,KAAO,wBAClBmE,YAAa,WACbgR,UAAWvB,EACXlV,KAAK,gBAKT,qBAAKoB,UAAWE,KAAOuP,OAAvB,SACE,cAAChB,GAAD,CAAOC,MAAOA,EAAOC,QAAS,6BAG/BmF,EACC,qBAAK9T,UAAWE,KAAO,kBAAvB,+LAES,KAGX,sBAAKF,UAAWE,KAAO,oBAAvB,UACE,cAAC,EAAD,CAAYJ,MAAO,mBAAoBE,UAAWE,KAAO,oBACvDH,QAAS,WAAQgU,GAAkBD,MAErC,uBACE5P,SAAU,SAAAC,GAAC,OAAI8K,EAAc9K,EAAEb,OAAOpE,QACtCc,UAAWE,KAAO,wBAClBmE,YAAa,WACbgR,UAAWvB,EACXlV,KAAK,gBAKT,sBAAKoB,UAAWE,KAAO,oBAAvB,UAEE,cAAC,EAAD,CAAYJ,MAAO,SAAUE,UAAWE,KAAO,sBAG/C,uBACEF,UAAWE,KAAO,wBAClBhB,MAAO0U,EACPyB,UAAU,OAMd,sBAAKrV,UAAWE,KAAO,0BAAvB,UACE,cAAC,EAAD,CAAYJ,MAAO,WAAYE,UAAWE,KAAO,oBAC/CH,QAAS,kBAAMnC,EAAQU,KAAR,oBAA0B7B,QAC7C,uBACIuD,UAAWE,KAAO,sBAClBhB,MAAO,GACPmW,UAAU,OAMd,sBAAKrV,UAAWE,KAAO,oBAAvB,UACE,sBAAKF,UAAWE,KAAOoV,iBAAvB,UAEE,cAAC,EAAD,CAAYxV,MAAO,WAAYE,UAAWE,KAAO,oBAC/CH,QAAS,kBAAMsN,GAAyBD,MAC1C,qBAAKpN,UAAWE,KAAO,yBAAvB,SAEIkN,EACE,qBAAKpN,UAAWE,KAAO,cAAegM,IAAKiB,EAA3C,SACGI,GAAUhK,OAAS,EAClBgK,GAAUtM,KAAI,SAACC,EAAG0F,GAChB,OACE,+BACE,qBACE5G,UAAWE,KAAO,0BAClBH,QAAS,kBAzKjBgJ,EAyKoC7H,EAAExE,SAxK1DkB,EAAQU,KAAR,gBAAsByK,IADH,IAACA,GAuKM,SAGE7H,EAAElF,QAJK4K,MASb,qCAGJ,UAIV,qBAAK5G,UAAWE,KAAO,mBAAvB,SACA,cAAC,EAAD,CAAYJ,MAAO,OAAQE,UAAWE,KAAO,eAC1CH,QAAS,SAACoE,GAAD,OAAOV,GAAaU,cAOpC,sBAAKnE,UAAWE,KAAO,iBAAvB,UAGE,sBAAKF,UAAWE,KAAO,yBAAvB,UACE,qBAAKF,UAAWE,KAAO,eACrBH,QAAS,WACPmD,EAAY1G,KAAKQ,MACfmX,GAAqBD,GACnBK,GAAOgB,QAJf,SAOGrS,EAAY1G,KAAKQ,MAEhB,sBAAKgD,UAAWE,KAAO,mBAAvB,UAKE,cAAC,SAAD,CAAO4B,SAAUoB,EAAY1G,KAAKQ,MAAM8E,SAAU9B,UAAWE,KAAO,mBAApE,SACE,cAAC,kBAAD,CAAgBnB,MAAM,MAAMD,OAAO,UAMrC,qBAAKkB,UAAWE,KAAOsV,SAAvB,SACGtB,GAAoB,sBAAKhI,IAAKiB,EAAanN,UAAS,UAAKE,KAAO0H,MAA5C,UACnB,cAAC,EAAD,CACE7H,QAAS,kBAAMwU,GAAOgB,QACtBzV,MAAM,OACNE,UAAWE,KAAOuV,OAEpB,cAAC,EAAD,CACE1V,QAAS,WACPsU,GAAe,IAEjBvU,MAAM,SACNE,UAAWE,KAAOwV,iBAM1B,gCACE,mBAAG1V,UAAWE,KAAO,iBAArB,oCACA,qBAAKF,UAAWE,KAAOyV,IACrBhO,IAAKgO,GAAK9N,IAAI,UAMtB,4BAAIyF,OAKN,qBAAKtN,UAAWE,KAAOsN,KAAM7F,IAAK6F,GAAM3F,IAAI,e,qBC1VvC+N,GANA,SAAC,GAAqC,IAAlC9V,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,UAC/B,OACA,wBAAQD,QAASA,EAASC,UAAS,UAAKE,KAAOkC,OAAZ,YAAsBpC,GAAzD,SAAuEF,K,yCCC5D,SAAS+V,GAAYtY,GAEhC,IAAMoF,EAAUpF,EAAMoF,QAChBmT,EAAUvY,EAAMuY,QAEtB,OACI,gCACI,sBAAK9V,UAAWE,KAAO,mBAAvB,UACI,gDAIIyC,EAAQ1B,KAAI,SAACmE,EAAGwB,GACZ,OACI,cAAC,EAAD,CAEI9G,MACA,cAAC6B,EAAD,CAAYnF,KAAM4I,EAEdvD,KAAM,IADDuD,EAAE1I,MAHNkK,SAYF,IAAnBkP,EAAQvS,QACR,sBAAKvD,UAAWE,KAAO,mBAAvB,UACI,mDAII4V,EAAQ7U,KAAI,SAACmE,EAAGwB,GACZ,OACI,cAACjF,EAAD,CAAYnF,KAAM4I,EAEdvD,KAAM,IADD+E,YC5B1B,SAASmP,GAASxY,GAAQ,IAAD,EACJC,mBAASD,EAAMyY,UADX,mBAC7BA,EAD6B,KACnBC,EADmB,OAEZzY,mBAASwY,EAASha,MAFN,mBAE7BA,EAF6B,KAEvBsG,EAFuB,OAGE9E,mBAASwY,EAASzT,aAHpB,mBAG7BA,EAH6B,KAGhBC,EAHgB,OAIRhF,mBAAS,IAJD,mBAI7BiF,EAJ6B,KAIrBC,EAJqB,OAKNlF,mBAASwY,EAASrT,SALZ,mBAK7BA,EAL6B,KAKpBC,EALoB,OAMNpF,mBAASwY,EAASpS,UANZ,mBAM7BkS,EAN6B,KAMpBI,EANoB,OAOF1Y,mBAAS,IAPP,mBAO7B2Y,EAP6B,KAOlBC,EAPkB,OAQE5Y,oBAAS,GARX,mBAQ7BqF,EAR6B,KAQhBC,EARgB,OASJtF,mBAAS,IATL,mBAS7BuF,EAT6B,KASnBC,EATmB,OAUNxF,oBAAS,GAVH,mBAU7B6Y,EAV6B,KAUpBC,GAVoB,QAWE9Y,oBAAS,GAXX,qBAW7B4W,GAX6B,MAWhBC,GAXgB,SAYI7W,mBAAS,IAZb,qBAY7B+Y,GAZ6B,MAYfC,GAZe,SAaEhZ,mBAAS,IAbX,qBAa7BiZ,GAb6B,MAahBC,GAbgB,MAe9B9Y,GAAUC,cACVoF,GAAc3C,qBAAWjB,GACzB6D,GAAc5C,qBAAWrD,GACzBuD,GAASH,IAGT0I,GAFSD,cAEOE,OAEhBsC,GAAUvN,uBAAY,WAExBmF,GAAY1G,KAAKG,MAAMiR,SAAQ,SAAA1M,GACvBA,EAAExE,MAAQqM,IACVkN,EAAY/U,MAGpB,IAAIyV,EAAaX,EAASY,OAC1BhU,EAAWoT,EAASrT,SACpBuT,EAAWF,EAASpS,UACpBpB,EAAewT,EAASzT,aACxBD,EAAQ0T,EAASha,MACbkH,GAAY1G,KAAKC,KAAOka,GACxBL,IAAW,KAEhB,CAACpT,GAAY1G,KAAKC,GAAIuZ,EAASY,OAAQZ,EAASzT,YAAayT,EAASrT,QAASqT,EAASha,KAAMga,EAASpS,SAAUV,GAAY1G,KAAKG,MAAOoM,KAG5IpK,qBAAU,WACN2M,OACD,CAACA,KAGJ,IAAMnI,GAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACjBX,EAAUU,EAAME,OAAOpE,OACvB4D,GAAe,GAES,IAApBC,EAASQ,OAJI,wBAKPvF,EAAQjC,EAAU,gBALX,SAMUkC,MAAM,oBAAqB,CAC9CC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAVZ,cAMP1B,EANO,QAcC+B,IACVT,GAAQU,KAAK,UAfJ,UAiBOhC,EAASmC,OAjBhB,QAiBP+E,EAjBO,OAkBbR,EAAYQ,GAlBC,QAsBbf,EAAOc,QAAU,GACjBT,GAAe,GAvBF,4CAAH,sDAmCZuC,GAAY,uCAAG,WAAOJ,GAAP,iBAAA5B,EAAA,sEAECV,EAAQ8B,QAAO,SAAAC,GAAC,OAAIA,EAAEhI,MAAQuI,EAAMvI,OACjD+H,QAAO,SAAAC,GAAC,OAAIA,EAAEhI,MAAQuI,EAAMxI,MAHhB,cAEXqH,EAFW,OAMX9F,EAAQjC,EAAU,gBANP,SAOMkC,MAAM,cAAD,OAAe8K,IAAU,CACjD7K,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBrF,OACAuG,cACAI,QAASmB,MAhBA,iBAmBHzF,GAnBG,wBAoBbT,GAAQU,KAAK,UApBA,2BAuBbkC,GAAOwD,KAAK,cAAe+E,IACvB9D,EAAMxI,KAAOyG,GAAY1G,KAAKC,IAC9BmB,GAAQU,KAAK,KAzBJ,4CAAH,sDA8BZuY,GAAa,uCAAG,WAAO5R,GAAP,eAAA5B,EAAA,6DACZrF,EAAQjC,EAAU,gBADN,SAEKkC,MAAM,cAAD,OAAe8K,IAAU,CACjD7K,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjByV,iBAAkB7R,MATR,iBAYJ5G,GAZI,uBAadT,GAAQU,KAAK,UAbC,0BAgBdgN,KACA9K,GAAOwD,KAAK,cAAe+E,IAC3BvI,GAAOwD,KAAK,eAAgBiB,EAAMvI,KAlBpB,4CAAH,sDA2Bb+G,GAAY,uCAAG,4BAAAJ,EAAA,6DAEXrF,EAAQjC,EAAU,gBAFP,SAGMkC,MAAM,cAAD,OAAe8K,IAAU,CACjD7K,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBrF,OACAuG,cACAI,UACAiB,SAAUuS,MAbD,iBAgBH9X,GAhBG,uBAiBbT,GAAQU,KAAK,UAjBA,0BAoBb2E,GAAYzD,gBAAgBxD,GAC5BsP,KACA9K,GAAOwD,KAAK,cAAe+E,IAC3BvI,GAAOwD,KAAK,yBAA0BmS,GACtC5Y,EAAMwG,WAxBO,4CAAH,qDA1IkB,8CAuKpC,kCAAAV,EAAA,yDAES1C,OAAOoW,QAAQ,kEAFxB,wDAOU/Y,EAAQjC,EAAU,gBAP5B,SAQ2BkC,MAAM,cAAD,OAAe8K,IAAU,CACjD7K,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAZ7B,WAQU1B,EARV,QAekB+B,GAflB,iBAgBQT,GAAQU,KAAK,UAhBrB,yCAkBkChC,EAASmC,OAlB3C,QAkBcuY,EAlBd,OAmBcC,EAnBd,sBAmB8BD,EAAYrU,SAnB1C,YAmBsDqU,EAAYpT,WAC1DpD,GAAOwD,KAAK,eAAgB,CAAEvH,GAAIsM,GAAQkO,cAC1CrZ,GAAQU,KAAK,KACbf,EAAMwG,WAtBd,6CAvKoC,sBAiMpC,IAIImT,GAA8B,CAC9B,qBAjEoB,SAACjS,GACrB,IAAMnB,EAAMqS,EAAU1R,QAAO,SAAAC,GAAC,OAAIA,EAAEhI,MAAQuI,EAAMvI,OAClD0Z,EAAatS,IAgEb,kBAAmBuB,GACnB,+BAAgCA,GAChC,kCAAmCwR,GACnC,mBA1MgC,6CA6MpC,OACI,gCACKzC,IACG,cAAC,GAAD,CACItU,MAAOyW,GACP9C,YAAa,kBAAMY,IAAe,IAClCX,UAAW,kBAAMwD,GAA4BX,IAAcE,OAKnE,qBAAKzW,UAAWE,KAAOiX,KAAvB,SACI,sBAAKnX,UAAWE,KAAO+D,UAAvB,UAEI,qBAAKjE,UAAWE,KAAOJ,MAAvB,kBAEA,sBAAKE,UAAWE,KAAO,mBAAvB,UACI,yCACA,uBACIF,UAAWE,KAAO,cAClBhB,MAAOlD,EACPkI,SAAU,SAAAC,GAAC,OAAI7B,EAAQ6B,EAAEb,OAAOpE,QAChCkF,MAAM,OACN3H,GAAG,YAIX,sBAAKuD,UAAWE,KAAO,yBAAvB,UACI,gDACA,0BACIF,UAAWE,KAAO,mBAClBhB,MAAOqD,EACP2B,SAAU,SAAAC,GAAC,OAAI3B,EAAe2B,EAAEb,OAAOpE,QACvCkF,MAAM,cACN3H,GAAG,mBAIP4Z,EACI,sBAAKrW,UAAWE,KAAO,0BAAvB,UACI,sBAAMF,UAAWE,KAAO,eAAxB,6BAEA,sBAAKF,UAAWE,KAAO,gBAAvB,UACI,uBACIF,UAAWE,KAAO,gBAClBoE,aAAa,MACbpF,MAAOuD,EACPyB,SAAUf,GACViB,MAAM,iBACN3H,GAAG,UACH4H,YAAY,WACZE,OA/DrB,WACXC,YAAW,kBAAM1B,GAAe,KAAQ,QAkEZ,qBAAK9C,UAAWE,KAAO,qBAAvB,SAEQ2C,EACI,qBAAK7C,UAAWE,KAAOyC,QAAvB,SAEQI,EAAS0B,QAAO,SAAAC,GAAC,OAAIA,EAAEnI,SAASoI,cAAc7D,SAAS2B,EAAOkC,iBAAmBD,EAAEnI,SAASuE,SAASoC,GAAY1G,KAAKD,aACjHkI,QAAO,SAACN,GAEL,OADcxB,EAAQiC,MAAK,SAAAC,GAAO,OAAIA,EAAQtI,WAAa4H,EAAE5H,eAOhEkI,QAAO,SAACN,GAEL,OADc2R,EAAQlR,MAAK,SAAAC,GAAO,OAAIA,EAAQtI,WAAa4H,EAAE5H,eAOhEkI,QAAO,SAACN,GAEL,OADcgS,EAAUvR,MAAK,SAAAC,GAAO,OAAIA,EAAQtI,WAAa4H,EAAE5H,eAOlEuI,MAAK,SAACzB,EAAG0B,GAAJ,OAAU1B,EAAE9G,SAASyI,cAAcD,EAAExI,aAC1C0E,KAAI,SAACyD,EAAGkC,GACL,OACI,cAAC,EAAD,CAEI5G,UAAWE,KAAO1D,KAClBuD,QAAS,kBA/N3D,SAACkF,GACf,IAAMnB,EAAG,YAAOqS,GAChBrS,EAAIxF,KAAK2G,GACTmR,EAAatS,GACbhB,GAAe,GACfJ,EAAU,IA0NqEwC,CAAUR,IACzB5E,MAAO,gCACH,8BAAM4E,EAAEnI,WACR,qBAAKyD,UAAWE,KAAOiF,MAAvB,SAA+BT,EAAES,YALhCyB,QAUpB,aAK3B,KAINyP,EACI,sBAAKrW,UAAWE,KAAO,eAAvB,UAII,qBAAKF,UAAWE,KAAO,mBAAvB,SACI,iCACI,mDAIIiW,EAAUlV,KAAI,SAACmE,EAAGwB,GACd,OACI,cAACjF,EAAD,CAAYnF,KAAM4I,EAClBvD,KAAM,GAEF9B,QAAS,WACLsU,IAAe,GACfmC,GAAgB,sBAChBE,GAAetR,KAJdwB,WAW7B,gCACI,sBAAK5G,UAAWE,KAAOkX,eAAvB,UACI,gDAIIzU,EAAQ1B,KAAI,SAACmE,EAAGwB,GACZ,OACI,cAACjF,EAAD,CAAYnF,KAAM4I,EAAevD,KAAM,GACnC9B,QAAS,WACLsU,IAAe,GACfmC,GAAgB,gCAChBE,GAAetR,KAJGwB,SAalB,IAAnBkP,EAAQvS,OAEL,sBAAKvD,UAAWE,KAAOkX,eAAvB,UACI,mDAIItB,EAAQ7U,KAAI,SAACmE,EAAGwB,GACZ,OACI,cAACjF,EAAD,CAAYnF,KAAM4I,EAEdvD,KAAM,GACN9B,QAAS,WACLsU,IAAe,GACfmC,GAAgB,mCAChBE,GAAetR,KALdwB,SAczB,QAIZ,sBAAK5G,UAAWE,KAAO,cAAvB,UACI,cAAC,EAAD,CAAYF,UAAWE,KAAO,iBAAkBH,QAAS,kBAAM0D,MAAgB3D,MAAO,mBACtF,cAAC,EAAD,CAAYE,UAAWE,KAAO,iBAAkBJ,MAAO,cACnDC,QAAS,WACLsU,IAAe,GACfmC,GAAgB,oBAChBE,GAAe,aAQ/B,gCACI,cAACb,GAAD,CACIlT,QAASA,EAASmT,QAASA,IAG/B,qBAAK9V,UAAWE,KAAO,sBAAvB,SACI,cAAC,EAAD,CAAYJ,MAAO,aAAcE,UAAWE,KAAO,kBAC/CH,QAAS,WACLsU,IAAe,GACfmC,GAAgB,mBAChBE,GAAexT,GAAY1G,sB,uBCjaxD,SAAS6a,GAAT,GAA+E,IAAhD1I,EAA+C,EAA/CA,QAAS2I,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,gBAAiB7P,EAAW,EAAXA,QAAW,EACzClK,oBAAS,GADgC,mBAClFga,EADkF,KAChEC,EADgE,OAEzDja,mBAAS,IAFgD,mBAElFwY,EAFkF,KAExEC,EAFwE,KAGnFrY,EAAUC,cACVG,EAAQjC,EAAU,gBAClByE,EAASH,IAETU,EADS+H,cACOwL,OAPmE,SAS1EoD,EAT0E,gFASzF,WAAgC/I,EAASgJ,GAAzC,iBAAAtU,EAAA,sEAC2BpF,MAAM,0BAAD,OAA2B0Q,EAAQ9K,KAAKpH,IAAM,CACtEyB,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBsN,UACAgJ,eATZ,WACUrb,EADV,QAYkB+B,GAZlB,uBAaQT,EAAQU,KAAK,UAbrB,2CAgB2BhC,EAASmC,OAhBpC,QAgBcjC,EAhBd,OAiBQgE,EAAOwD,KAAK,cAAe2K,EAAQ9K,KAAKpH,IACxC6a,EAAS9a,EAAKI,OACd2a,EAAgB/a,EAAKob,cACrBpX,EAAOwD,KAAK,eAAgBjD,GAC5BP,EAAOwD,KAAK,eAAgB2K,EAAQkJ,SAASnb,KArBrD,6CATyF,kEAkCzF,4BAAA2G,EAAA,sEAC2BpF,MAAM,kBAAmB,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBsN,cARZ,WACUrS,EADV,QAWkB+B,GAXlB,uBAYQT,EAAQU,KAAK,UAZrB,2CAechC,EAASmC,OAfvB,QAgBQ+B,EAAOwD,KAAK,eAAgBjD,GAhBpC,6CAlCyF,kEAsDzF,8BAAAsC,EAAA,sEAE2BpF,MAAM,cAAD,OAAe0Q,EAAQ9K,KAAKpH,IAAM,CAC1DyB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAN7B,WAEU1B,EAFV,QAUkB+B,GAVlB,uBAWQT,EAAQU,KAAK,UAXrB,2CAc2BhC,EAASmC,OAdpC,QAccoF,EAdd,OAeQoS,EAAYpS,GAfpB,QAiBI4T,GAAoB,GAjBxB,6CAtDyF,sBA0EzF,OAEI,sBAAKzX,UAAWE,KAAOyO,QAAvB,UACI,sBAAK3O,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAO4X,KAAvB,SAA8BnJ,EAAQoJ,UACtC,8BAAM,IAAIC,KAAKrJ,EAAQsJ,WAAWC,mBAAmB,QAASxQ,QAElE,gCACI,qBAAK1H,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,wBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQ9K,KAAK7H,UAEjD,gCACI,qBAAKgE,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,yBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQkJ,SAAStb,cAGjDoS,EAAQ9K,KAAKuU,UACT,gCACI,qBAAKpY,UAAWE,KAAO4X,KAAvB,0BACA,cAAC,GAAD,CACI9X,UAAWE,KAAOkC,OAClBrC,QA/FiE,2CAgGjED,MAAM,uBAGd,gCACI,cAAC,GAAD,CACIE,UAAWE,KAAOkC,OAClBrC,QAAS,kBAAM2X,EAAiB/I,GAAS,IACzC7O,MAAM,WAEV,cAAC,GAAD,CACIE,UAAWE,KAAOkC,OAClBrC,QAAS,kBAAM2X,EAAiB/I,GAAS,IACzC7O,MAAM,YAEV,cAAC,GAAD,CACIE,UAAWE,KAAOkC,OAClBrC,QAhHiE,2CAiHjED,MAAM,iBAMlB0X,GACA,cAAC,GAAD,CAAazT,SAAU,kBAAM0T,GAAoB,IAAjD,SACI,cAAC1B,GAAD,CAAUC,SAAUA,EAAUjS,SAAU,WAAQ0T,GAAoB,WCzHzE,SAASY,GAAT,GAAuE,IAAtC1J,EAAqC,EAArCA,QAASjH,EAA4B,EAA5BA,QAAS6P,EAAmB,EAAnBA,gBAAmB,EACjC/Z,oBAAS,GADwB,mBAC1Ega,EAD0E,KACxDC,EADwD,OAEjDja,mBAAS,IAFwC,mBAE1EwY,EAF0E,KAEhEC,EAFgE,KAG3ErY,EAAUC,cACVG,EAAQjC,EAAU,gBAJyD,EAK3CyB,oBAAS,GALkC,mBAK1E4W,EAL0E,KAK7DC,EAL6D,OAM3C7W,mBAAS,IANkC,mBAM1EiZ,EAN0E,KAM7DC,EAN6D,iDAQjF,8BAAArT,EAAA,sEAC2BpF,MAAM,qBAAD,OAAsB0Q,EAAQjS,KAAO,CAC7DwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAL7B,WACU1B,EADV,QAQkB+B,GARlB,uBASQT,EAAQU,KAAK,UATrB,2CAY2BhC,EAASmC,OAZpC,QAYcjC,EAZd,OAaQ+a,EAAgB/a,EAAKob,cAb7B,6CARiF,kEAyBjF,8BAAAvU,EAAA,sEAC2BpF,MAAM,cAAD,OAAe0Q,EAAQ9K,KAAKpH,IAAM,CAC1DyB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAL7B,WACU1B,EADV,QASkB+B,GATlB,uBAUQT,EAAQU,KAAK,UAVrB,2CAa2BhC,EAASmC,OAbpC,QAacoF,EAbd,OAcQoS,EAAYpS,GAdpB,QAgBI4T,GAAoB,GAhBxB,6CAzBiF,sBA4CjF,OACI,qCACCrD,GACG,cAAC,GAAD,CACItU,MAAM,sBACN2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBAlD0D,0CAkDpD4E,CAAc7B,MAGvC,sBAAKzW,UAAWE,KAAOyO,QAAvB,UACI,sBAAK3O,UAAWE,KAAO+D,UAAvB,eAE6BsU,IAArB5J,EAAQgJ,SACJ,qBAAK3X,UAAWE,KAAO+D,UAAvB,SACI,qBAAKjE,UAAWE,KAAO4X,KAAvB,SAA8BnJ,EAAQoJ,YAE1C,sBAAK/X,UAAWE,KAAO+D,UAAvB,UACI,sBAAKjE,UAAWE,KAAO4X,KAAvB,UAA8BnJ,EAAQoJ,QAAtC,OACCpJ,EAAQgJ,SAAW,2CAAsB,8CAGtD,8BAAM,IAAIK,KAAKrJ,EAAQsJ,WAAWC,mBAAmB,QAASxQ,QAElE,gCACI,qBAAK1H,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,wBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQ9K,KAAK7H,UAEjD,gCACI,qBAAKgE,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,yBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQkJ,SAAStb,cAGjDoS,EAAQ9K,KAAKuU,WACb,qBAAKpY,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,0BAEJ,iCAESxJ,EAAQ9K,KAAKuU,WACd,cAAC,GAAD,CACIpY,UAAWE,KAAOkC,OAClBrC,QApF6D,2CAqF7DD,MAAM,cAGd,cAAC,GAAD,CACIE,UAAWE,KAAOkC,OAElBrC,QAAS,WACLsU,GAAe,GACfqC,EAAe/H,IAEnB7O,MAAM,mBAGN0X,GACA,cAAC,GAAD,CAAazT,SAAU,kBAAM0T,GAAoB,IAAjD,SACI,cAAC1B,GAAD,CAAUC,SAAUA,EAAUjS,SAAU,WAAQ0T,GAAoB,iBCrG7E,SAASe,GAAT,GAAiF,IAA/C7J,EAA8C,EAA9CA,QAAS4I,EAAqC,EAArCA,gBAAiB7P,EAAoB,EAApBA,QAAS+Q,EAAW,EAAXA,QAC1E7a,EAAUC,cACVG,EAAQjC,EAAU,gBAClByE,EAASH,IACTwI,EAASC,cAJ4E,EAKrDtL,oBAAS,GAL4C,mBAKpF4W,EALoF,KAKvEC,EALuE,OAMrD7W,mBAAS,IAN4C,mBAMpFiZ,EANoF,KAMvEC,EANuE,KAOrF3V,EAAS8H,EAAOyL,OAPqE,4CAS3F,4BAAAjR,EAAA,sEAC2BpF,MAAM,kBAAmB,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBsN,cARZ,WACUrS,EADV,QAWkB+B,GAXlB,uBAYQT,EAAQU,KAAK,UAZrB,2CAechC,EAASmC,OAfvB,QAgBQ+B,EAAOwD,KAAK,eAAgBjD,GAhBpC,6CAT2F,kEA6B3F,gCAAAsC,EAAA,6DACUrF,EAAQjC,EAAU,gBAD5B,SAE2BkC,MAAM,qBAAD,OAAsB0Q,EAAQjS,KAAO,CAC7DwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAN7B,WAEU1B,EAFV,QASkB+B,GATlB,uBAUQT,EAAQU,KAAK,UAVrB,2CAa2BhC,EAASmC,OAbpC,QAacjC,EAbd,OAcQ+a,EAAgB/a,EAAKob,cAd7B,6CA7B2F,sBA+C3F,OACI,qCACCxD,GACG,cAAC,GAAD,CACItU,MAAM,sBACN2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBArDoE,0CAqD9D4E,CAAc7B,MAGvC,sBAAKzW,UAAWE,KAAOyO,QAAvB,UACI,sBAAK3O,UAAWE,KAAO+D,UAAvB,UACI,sBAAKjE,UAAWE,KAAO+D,UAAvB,UACI,sBAAKjE,UAAWE,KAAO4X,KAAvB,UAA8BnJ,EAAQoJ,QAAtC,OACA,iCAAOpJ,EAAQkJ,SAAStb,SAAUoS,EAAQgJ,SAAW,6CAAyB,mDAElF,8BAAM,IAAIK,KAAKrJ,EAAQsJ,WAAWC,mBAAmB,QAASxQ,QAElE,gCACI,qBAAK1H,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,wBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQ9K,KAAK7H,UAEjD,gCAEQyc,GACA,cAAC,GAAD,CACIzY,UAAWE,KAAOkC,OAClBrC,QAzEuE,2CA0EvED,MAAM,qBAIT2Y,GACD,cAAC,GAAD,CACAzY,UAAWE,KAAOkC,OAElBrC,QAAS,WACLsU,GAAe,GACfqC,EAAe/H,IAEnB7O,MAAM,4BCrFX,SAAS4Y,GAAT,GAAyE,IAA/C/J,EAA8C,EAA9CA,QAAS4I,EAAqC,EAArCA,gBAAiB7P,EAAoB,EAApBA,QAAS+Q,EAAW,EAAXA,QAClE7a,EAAUC,cACVG,EAAQjC,EAAU,gBAClByE,EAASH,IACTwI,EAASC,cAJoE,EAK7CtL,oBAAS,GALoC,mBAK5E4W,EAL4E,KAK/DC,EAL+D,OAM7C7W,mBAAS,IANoC,mBAM5EiZ,EAN4E,KAM/DC,EAN+D,KAO7E3V,EAAS8H,EAAOyL,OAP6D,4CASnF,4BAAAjR,EAAA,sEAC2BpF,MAAM,kBAAmB,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBsN,cARZ,WACUrS,EADV,QAWkB+B,GAXlB,uBAYQT,EAAQU,KAAK,UAZrB,2CAechC,EAASmC,OAfvB,QAgBQ+B,EAAOwD,KAAK,eAAgBjD,GAhBpC,6CATmF,kEA6BnF,gCAAAsC,EAAA,6DACUrF,EAAQjC,EAAU,gBAD5B,SAE2BkC,MAAM,qBAAD,OAAsB0Q,EAAQjS,KAAO,CAC7DwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAN7B,WAEU1B,EAFV,QASkB+B,GATlB,uBAUQT,EAAQU,KAAK,UAVrB,2CAa2BhC,EAASmC,OAbpC,QAacjC,EAbd,OAcQ+a,EAAgB/a,EAAKob,cAd7B,6CA7BmF,sBA+CnF,OACI,qCACCxD,GACG,cAAC,GAAD,CACItU,MAAM,sBACN2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBArD4D,0CAqDtD4E,CAAc7B,MAGvC,sBAAKzW,UAAWE,KAAOyO,QAAvB,UACI,sBAAK3O,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAO4X,KAAvB,SAA8BnJ,EAAQoJ,UACtC,8BAAM,IAAIC,KAAKrJ,EAAQsJ,WAAWC,mBAAmB,QAASxQ,QAElE,gCACI,qBAAK1H,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,sBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQ7I,QAAQ9J,OAChD,qBAAKgE,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,OAA3B,YAAqCjY,KAAO+L,QAA1D,mBACA,qBAAKjM,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQlI,KAAKzK,OAC7C,qBAAKgE,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,OAA3B,YAAqCjY,KAAO+L,QAA1D,mBACA,qBAAKjM,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQgK,KAAK3c,UAEjD,gCACI,qBAAKgE,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,0BACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQkJ,SAAStb,eAGhDoS,EAAQ9K,KAAKuU,WAAazJ,EAAQ7I,QAAQsS,YAC3C,qBAAKpY,UAAWE,KAAO4X,KAAvB,6BAEJ,iCAESnJ,EAAQ9K,KAAKuU,YAAczJ,EAAQ7I,QAAQsS,WAC5C,cAAC,GAAD,CACIpY,UAAWE,KAAOkC,OAClBrC,QAAS,kBAAMnC,EAAQU,KAAR,yBAA+BqQ,EAAQ9K,KAAKpH,GAA5C,YAAkDkS,EAAQ7I,QAAQrJ,MACjFqD,MAAM,kBAIV2Y,EACA,cAAC,GAAD,CACIzY,UAAWE,KAAOkC,OAClBrC,QA1F+D,2CA2F/DD,MAAM,oBAEV,cAAC,GAAD,CACIE,UAAWE,KAAOkC,OAElBrC,QAAS,WACLsU,GAAe,GACfqC,EAAe/H,IAEnB7O,MAAM,4B,yBCrGf,SAAS8Y,GAAT,GAAsE,IAA/CjK,EAA8C,EAA9CA,QAAS4I,EAAqC,EAArCA,gBAAiB7P,EAAoB,EAApBA,QAAS+Q,EAAW,EAAXA,QAC/D7a,EAAUC,cACVG,EAAQjC,EAAU,gBAClByE,EAASH,IACTwI,EAASC,cAJiE,EAK1CtL,oBAAS,GALiC,mBAKzE4W,EALyE,KAK5DC,EAL4D,OAM1C7W,mBAAS,IANiC,mBAMzEiZ,EANyE,KAM5DC,EAN4D,KAO1E3V,EAAS8H,EAAOyL,OAP0D,4CAShF,4BAAAjR,EAAA,sEAC2BpF,MAAM,kBAAmB,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBsN,cARZ,WACUrS,EADV,QAWkB+B,GAXlB,uBAYQT,EAAQU,KAAK,UAZrB,2CAechC,EAASmC,OAfvB,QAgBQ+B,EAAOwD,KAAK,eAAgBjD,GAhBpC,6CATgF,kEA6BhF,gCAAAsC,EAAA,6DACUrF,EAAQjC,EAAU,gBAD5B,SAE2BkC,MAAM,qBAAD,OAAsB0Q,EAAQjS,KAAO,CAC7DwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAN7B,WAEU1B,EAFV,QASkB+B,GATlB,uBAUQT,EAAQU,KAAK,UAVrB,2CAa2BhC,EAASmC,OAbpC,QAacjC,EAbd,OAcQ+a,EAAgB/a,EAAKob,cAd7B,6CA7BgF,sBA+ChF,OACI,qCACCxD,GACG,cAAC,GAAD,CACItU,MAAM,sBACN2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBArDyD,0CAqDnD4E,CAAc7B,MAGvC,sBAAKzW,UAAWE,KAAOyO,QAAvB,UACI,sBAAK3O,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAO+D,UAAvB,SACI,sBAAKjE,UAAWE,KAAO4X,KAAvB,kBAAmCnJ,EAAQ9K,KAAK7H,KAAhD,gBAEJ,8BAAM,IAAIgc,KAAKrJ,EAAQsJ,WAAWC,mBAAmB,QAASxQ,QAElE,gCACI,qBAAK1H,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,yBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQkJ,SAAStb,cAErD,gCAEQkc,GACA,cAAC,GAAD,CACIzY,UAAWE,KAAOkC,OAClBrC,QAxE4D,2CAyE5DD,MAAM,qBAIT2Y,GACD,cAAC,GAAD,CACAzY,UAAWE,KAAOkC,OAElBrC,QAAS,WACLsU,GAAe,GACfqC,EAAe/H,IAEnB7O,MAAM,4BCrFX,SAAS+Y,GAAT,GAAyE,IAA/ClK,EAA8C,EAA9CA,QAAS4I,EAAqC,EAArCA,gBAAiB7P,EAAoB,EAApBA,QAAS+Q,EAAW,EAAXA,QAClE7a,EAAUC,cACVG,EAAQjC,EAAU,gBAClByE,EAASH,IAETU,EADS+H,cACOwL,OAL6D,EAM7C9W,oBAAS,GANoC,mBAM5E4W,EAN4E,KAM/DC,EAN+D,OAO7C7W,mBAAS,IAPoC,mBAO5EiZ,EAP4E,KAO/DC,EAP+D,iDASnF,4BAAArT,EAAA,sEAC2BpF,MAAM,kBAAmB,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBsN,cARZ,WACUrS,EADV,QAWkB+B,GAXlB,uBAYQT,EAAQU,KAAK,UAZrB,2CAechC,EAASmC,OAfvB,QAgBQ+B,EAAOwD,KAAK,eAAgBjD,GAhBpC,6CATmF,kEA6BnF,gCAAAsC,EAAA,6DACUrF,EAAQjC,EAAU,gBAD5B,SAE2BkC,MAAM,qBAAD,OAAsB0Q,EAAQjS,KAAO,CAC7DwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAN7B,WAEU1B,EAFV,QASkB+B,GATlB,uBAUQT,EAAQU,KAAK,UAVrB,2CAa2BhC,EAASmC,OAbpC,QAacjC,EAbd,OAcQ+a,EAAgB/a,EAAKob,cAd7B,6CA7BmF,sBA+CnF,OACI,qCACCxD,GACG,cAAC,GAAD,CACItU,MAAM,sBACN2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBArD4D,0CAqDtD4E,CAAc7B,MAGvC,sBAAKzW,UAAWE,KAAOyO,QAAvB,UACI,sBAAK3O,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAO+D,UAAvB,SACI,sBAAKjE,UAAWE,KAAO4X,KAAvB,qBAAsCnJ,EAAQ7I,QAAQ9J,KAAtD,gBAEJ,8BAAM,IAAIgc,KAAKrJ,EAAQsJ,WAAWC,mBAAmB,QAASxQ,QAElE,gCACI,qBAAK1H,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,yBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQkJ,SAAStb,cAErD,gCAEQkc,GACA,cAAC,GAAD,CACIzY,UAAWE,KAAOkC,OAClBrC,QAxE+D,2CAyE/DD,MAAM,qBAIT2Y,GACD,cAAC,GAAD,CACAzY,UAAWE,KAAOkC,OAElBrC,QAAS,WACLsU,GAAe,GACfqC,EAAe/H,IAEnB7O,MAAM,4BCnFX,SAASgZ,GAAT,GAA2F,IAAzDnK,EAAwD,EAAxDA,QAAmB4I,GAAqC,EAA/CD,SAA+C,EAArCC,iBAAiB7P,EAAoB,EAApBA,QAAS+Q,EAAW,EAAXA,QAAW,EACrDjb,oBAAS,GAD4C,mBAC9Fga,EAD8F,KAC5EC,EAD4E,OAErEja,mBAAS,IAF4D,mBAE9FwY,EAF8F,KAEpFC,EAFoF,KAG/FrY,EAAUC,cACVG,EAAQjC,EAAU,gBAClByE,EAASH,IACTwI,EAASC,cANsF,EAO/DtL,oBAAS,GAPsD,mBAO9F4W,EAP8F,KAOjFC,EAPiF,OAQ/D7W,mBAAS,IARsD,mBAQ9FiZ,EAR8F,KAQjFC,EARiF,KAS/F3V,EAAS8H,EAAOyL,OAT+E,4CAWrG,4BAAAjR,EAAA,sEAC2BpF,MAAM,kBAAmB,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBsN,cARZ,WACUrS,EADV,QAWkB+B,GAXlB,uBAYQT,EAAQU,KAAK,UAZrB,2CAechC,EAASmC,OAfvB,QAgBQ+B,EAAOwD,KAAK,eAAgBjD,GAhBpC,6CAXqG,kEA+BrG,8BAAAsC,EAAA,sEAE2BpF,MAAM,cAAD,OAAe0Q,EAAQ9K,KAAKpH,IAAM,CAC1DyB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAN7B,WAEU1B,EAFV,QAUkB+B,GAVlB,uBAWQT,EAAQU,KAAK,UAXrB,2CAc2BhC,EAASmC,OAdpC,QAccoF,EAdd,OAeQoS,EAAYpS,GAfpB,QAiBI4T,GAAoB,GAjBxB,6CA/BqG,kEAmDrG,8BAAApU,EAAA,sEAC2BpF,MAAM,qBAAD,OAAsB0Q,EAAQjS,KAAO,CAC7DwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAL7B,WACU1B,EADV,QAQkB+B,GARlB,uBASQT,EAAQU,KAAK,UATrB,2CAY2BhC,EAASmC,OAZpC,QAYcjC,EAZd,OAaQ+a,EAAgB/a,EAAKob,cAb7B,6CAnDqG,sBAoErG,OACI,qCACCxD,GACG,cAAC,GAAD,CACItU,MAAM,sBACN2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBA1E8E,0CA0ExE4E,CAAc7B,MAGvC,sBAAKzW,UAAWE,KAAOyO,QAAvB,UACI,sBAAK3O,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAO4X,KAAvB,SAA8BnJ,EAAQoJ,UACtC,8BAAM,IAAIC,KAAKrJ,EAAQsJ,WAAWC,mBAAmB,QAASxQ,QAElE,gCACI,qBAAK1H,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,wBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQ9K,KAAK7H,UAEjD,gCACI,qBAAKgE,UAAS,UAAKE,KAAO4X,KAAZ,YAAoB5X,KAAOiY,QAAzC,yBACA,qBAAKnY,UAAWE,KAAOiY,OAAvB,SAAgCxJ,EAAQkJ,SAAStb,cAGjDoS,EAAQ9K,KAAKuU,WACb,qBAAKpY,UAAWE,KAAO4X,KAAvB,2BAGCnJ,EAAQ9K,KAAKuU,WACd,cAAC,GAAD,CACIpY,UAAWE,KAAOkC,OAClBrC,QAlGqF,2CAmGrFD,MAAM,cAIV2Y,EACI,cAAC,GAAD,CACIzY,UAAWE,KAAOkC,OAClBrC,QA1GiF,2CA2GjFD,MAAM,oBAEV,cAAC,GAAD,CACIE,UAAWE,KAAOkC,OAElBrC,QAAS,WACLsU,GAAe,GACfqC,EAAe/H,IAEnB7O,MAAM,mBAId0X,GACA,cAAC,GAAD,CAAazT,SAAU,kBAAM0T,GAAoB,IAAjD,SACI,cAAC1B,GAAD,CAAUC,SAAUA,EAAUjS,SAAU,WAAQ0T,GAAoB,cCrHxF,IAqMesB,GArMG,WAAO,IAAD,EACMvb,mBAAS,IADf,mBACbZ,EADa,KACN0a,EADM,OAEoB9Z,mBAAS,IAF7B,mBAEboa,EAFa,KAECL,EAFD,KAGd3Z,EAAUC,cACV2C,EAASH,IACTrC,EAAQjC,EAAU,gBAClB2L,EAAU,CAAEsR,QAAS,QAASC,KAAM,UAAWC,MAAO,QAASC,IAAK,WAEpEC,EAAWrb,sBAAW,sBAAC,8BAAAsF,EAAA,sEACFpF,MAAM,kBAAmB,CAC5CC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KALA,WACnB1B,EADmB,QAQX+B,GARW,uBASrBT,EAAQU,KAAK,UATQ,2CAYFhC,EAASmC,OAZP,QAYfjC,EAZe,OAarB8a,EAAS9a,EAAKI,OACd2a,EAAgB/a,EAAKob,cAdA,4CAgB1B,CAACha,EAASI,IAEbW,qBAAU,WACNya,MACD,CAACA,IAEJ,IAAM9R,EAAavJ,sBAAW,uCAAC,WAAOzB,GAAP,SAAA+G,EAAA,sDAC3BiU,EAAShb,EAAS+c,UAAUzc,OAC5B2a,EAAgBjb,EAAS+c,UAAUzB,cAFR,2CAAD,sDAG3B,IASH,OAPAjZ,qBAAU,WACN,GAAI6B,EAEA,OADAA,EAAO+G,GAAG,eAAgBD,GACnB,kBAAM9G,EAAOgH,IAAI,mBAE7B,CAAChH,EAAQ8G,IAGR,eAAC,GAAD,WACI,gCACI,cAAC,GAAD,CAAOxH,MAAM,UAEQ,IAAjBlD,EAAM2G,QAAgB,qBAAKvD,UAAWE,KAAOJ,MAAvB,4BAGtB,YAAIlD,GAAO8Q,UAAUzM,KAAI,SAAAmE,GACrB,OAAQA,EAAE2S,SACN,IAAK,kBACD,OAAO,cAACV,GAAD,CAEH1I,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,GAJJtC,EAAE1I,KAOf,IAAK,2BACD,OAAO,cAAC8b,GAAD,CAEH7J,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAQf,IAAK,2BACD,OAAO,cAACoc,GAAD,CAEHnK,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAQf,IAAK,kBACD,OAAO,cAACgc,GAAD,CAEH/J,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAQf,IAAK,eACD,OAAO,cAACkc,GAAD,CAEHjK,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAQf,IAAK,kBACD,OAAO,cAACmc,GAAD,CAEHlK,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAWnB,MAAO,SAMS,IAAxBkb,EAAarU,QACb,gCACI,cAAC,GAAD,CAAOzD,MAAM,YAET,YAAI8X,GAAclK,UAAUzM,KAAI,SAAAmE,GAC5B,OAAQA,EAAE2S,SACN,IAAK,kBACD,OAAO,cAACM,GAAD,CAEH1J,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,GAJJtC,EAAE1I,KAOf,IAAK,2BACD,OAAO,cAAC8b,GAAD,CAEH7J,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAQf,IAAK,2BACD,OAAO,cAACoc,GAAD,CAEHnK,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAQf,IAAK,kBACD,OAAO,cAACgc,GAAD,CAEH/J,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAQf,IAAK,eACD,OAAO,cAACkc,GAAD,CAEHjK,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAQf,IAAK,kBACD,OAAO,cAACmc,GAAD,CAEHlK,QAASvJ,EACTkS,SAAUA,EACVC,gBAAiBA,EACjB7P,QAASA,EACT+Q,SAAS,GALJrT,EAAE1I,KAWnB,MAAO,a,oBC3MpB,OAA0B,qCCA1B,OAA0B,iC,wCCA1B,OAA0B,iCCA1B,OAA0B,kC,oBCA1B,OAA0B,kC,qBCS1B,SAAS4c,GAAT,GAA+E,IAAjD3W,EAAgD,EAAhDA,QAAS4W,EAAuC,EAAvCA,mBAAoBC,EAAmB,EAAnBA,gBAChExb,EAAQjC,EAAU,gBAClB6B,EAAUC,cACV2C,EAASH,IAH0E,EAInD7C,oBAAS,GAJ0C,mBAIlF4W,EAJkF,KAIrEC,EAJqE,OAKnD7W,mBAAS,IAL0C,mBAKlFiZ,EALkF,KAKrEC,EALqE,KAezF,IAAM+C,EAAe,WACjB,IAAM3T,EAAU0T,EAAgB1T,QAC1BiD,EAASyQ,EAAgBzQ,OAE/BvI,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoB+E,IAG9B2Q,EAAY,uCAAG,WAAOjX,GAAP,yBAAAY,EAAA,6DACXsW,EAAcH,EAAgBG,YAC9BC,EAAiBJ,EAAgBI,eACjCC,EAASL,EAAgBK,OACzBC,EAASN,EAAgBM,OAE3BlT,EAAQ+S,EAAY9S,QAAQpE,GAC5BqB,EAPa,YAOH6V,IAEC,IAAX/S,GACA9C,EAAIgD,OAAOF,EAAO,GAVL,SAaM3I,MAAM,6BAAD,OAA8B6b,EAA9B,YAAwCD,GAAU,CAC1E3b,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBsB,QAASmB,MApBA,cAuBHzF,IAGVob,IACAG,EAAe9V,IAHflG,EAAQU,KAAK,UAxBA,4CAAH,sDAgClB,OACI,gCACK8V,GACG,cAAC,GAAD,CACItU,MAAO,qBACP2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBAAMgG,EAAajD,MAItC,qBAAKzW,UAAWE,KAAO6Z,eAAvB,SAGQpX,EAAQ1B,KAAI,SAACmE,EAAGwB,GACZ,OACI,sBAAiB5G,UAAWE,KAAO8Z,WAAYja,QAAS,kBA/DhF,SAAiBqF,GACTmU,IACAlF,GAAe,GACfqC,EAAetR,IA4D+DrF,CAAQqF,IAAtE,UACI,sBAAMpF,UAAWE,KAAO0M,OAAxB,SACI,cAACjL,EAAD,CAAYnF,KAAM4I,EACdvD,KAAM,GACN7B,UAAWE,KAAO0M,UAHWxH,EAAE1I,KAMvC,+BAAO0I,EAAE7I,aAPHqK,W,wBCPvBqT,GAjEK,SAAC,GAAiE,IAA/DtX,EAA8D,EAA9DA,QAASuX,EAAqD,EAArDA,UAAWX,EAA0C,EAA1CA,mBAAoBC,EAAsB,EAAtBA,gBACrDtN,EAAMvC,iBAAO,MAD8D,EAEjDzB,GAAsBgE,GAF2B,mBAE1E9D,EAF0E,KAEhEC,EAFgE,KAMjF,OAFA6R,EAAYC,KAAKC,IAAIF,EAAWvX,EAAQY,QAGpC,sBACIvD,UAAWE,KAAOyC,QAClB5C,QAAS,kBAAMsI,GAAY,IAC3B6D,IAAKA,EAHT,UAKM9D,GACE,cAACkR,GAAD,CACI3W,QAASA,EACT4W,mBAAoBA,EACpBC,gBAAiBA,IAGvB7W,EAAQY,OAAS2W,EACf,qCACKvX,EAAQ8K,MAAM,EAAGyM,EAAY,GAAGjZ,KAAI,SAAAwB,GACjC,OACI,sBACAzC,UAAWE,KAAO0M,OADlB,SAGI,cAACjL,EAAD,CAAYnF,KAAMiG,EACdZ,KAAM,GACN7B,UAAWE,KAAO0M,UAHrBnK,EAAO/F,QAQpB,sBAAMsD,UAAWE,KAAO0M,OAAxB,SACI,cAAC,IAAD,CACI/N,MAAO,OAGP7C,KAAM,CAAC,KAAD,mBAAU,UAAG2G,EAAQY,OAAS2W,EAAY,GAAIG,MAAM,MAAMC,KAAK,KACrEzY,KAAM,GACNI,OAAO,EACPC,YAAa,EACblC,UAAWE,KAAO0M,cAK9B,mCACKjK,EAAQ1B,KAAI,SAAA4D,GACT,OACI,sBAAM7E,UAAWE,KAAO0M,OAAxB,SACI,cAACjL,EAAD,CACAnF,KAAMqI,EAEFhD,KAAM,IADDgD,EAAQnI,MAHgBmI,EAAQnI,cC/C1D,SAAS6d,GAAT,GAAsE,IAA/C5B,EAA8C,EAA9CA,KAAMmB,EAAwC,EAAxCA,OAAQhU,EAAgC,EAAhCA,QAASiD,EAAuB,EAAvBA,OAAQyR,EAAe,EAAfA,YAC3DtO,EAAMvC,iBAAO,MAD6D,EAE1CnM,mBAAS,MAFiC,mBAEzEmc,EAFyE,KAE5DC,EAF4D,OAGhD1R,GAAsBgE,GAH0B,mBAGzE9D,EAHyE,KAG/DC,EAH+D,OAItD7K,mBAAS,IAJ6C,mBAIzEgG,EAJyE,KAIlEiX,EAJkE,KAK1E7c,EAAUC,cACV2C,EAASH,IACTrC,EAAQjC,EAAU,gBAExB4C,qBAAU,WACNib,EAAejB,EAAKhW,WACrB,CAACgW,EAAKhW,UAET,IAAM+X,EAAY,uCAAG,oCAAArX,EAAA,sEAEMpF,MAAM,wBAAD,OAAyB8K,GAAU,CAC3D7K,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KANR,cAEX1B,EAFW,QAUH+B,IACVT,EAAQU,KAAK,UAXA,SAaEhC,EAASmC,OAbX,OAiBjB,IAASgE,KAJH+I,EAbW,OAebmP,EAAWnP,EAAK7I,QAfH,WAiBRF,GACLkY,EAAWA,EAASlW,QAAO,SAAC4E,GAAD,OAASA,EAAI3M,MAAQid,EAAYlX,GAAQ/F,QADrDid,EAAc,EAAxBlX,GAGTgY,EAASE,GApBQ,4CAAH,qDAwBZC,EAAY,uCAAG,WAAOne,GAAP,qBAAA4G,EAAA,yDAEN,WAAP5G,EAFa,oDAIXoe,EAAerX,EAAMiB,QAAO,SAAA4E,GAAG,OAAIA,EAAI3M,MAAQD,KAAI,GAE1CqJ,EAAQgV,aAAarW,QAAO,SAAA4E,GAAG,OAAIA,EAAI0R,SAASre,MAAQme,EAAane,OAAK,GANxE,oBASRiE,OAAOoW,QAAP,6BAAqC8D,EAAate,SAAlD,iBATQ,iEAWa0B,MAAM,iBAAD,OAAkB6H,EAAQpJ,IAA1B,SAAsC,CACjEwB,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBoB,OAAQoY,EACRG,OAAO,MAnBF,cAsBI3c,IACbT,EAAQU,KAAK,UAvBJ,eA2BbwF,EA3Ba,YA2BH6V,IAEVrb,KAAKuc,GA7BQ,UA+BM5c,MAAM,6BAAD,OAA8B6b,EAA9B,YAAwCnB,EAAKjc,KAAO,CAC5EwB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBsB,QAASmB,EACTmX,UAAWJ,EACX9R,SACA4E,UAAW7H,EAAQpJ,IACnBmd,OAAQlB,EAAKjc,IACbod,aA3CS,YA+BXxd,EA/BW,QA8CH+B,GA9CG,iBA+CbT,EAAQU,KAAK,UA/CA,yCAiDahC,EAASmC,OAjDtB,QAiDPyc,EAjDO,OAkDTV,GAAaA,EAAYU,GAC7B7S,GAAaD,GACbwR,EAAe9V,GACftD,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoB+E,GAChCvI,EAAOwD,KAAK,eAAgB6W,EAAane,KAvD5B,4CAAH,sDA2DlB,OACI,gCACI,sBAAKsD,UAAWE,KAAO,iBAAkBH,QAAS,WAAQ2a,IAAgBrS,GAAaD,IAAvF,UACI,qBAAKpI,UAAWE,KAAOib,KAAMxT,IAAKyT,GAAOvT,IAAI,UADjD,kBAIEO,GAAY,sBAAM8D,IAAKA,EAAX,SACV,yBAAQlM,UAAWE,KAAOmb,OAAQnX,SAAU,SAAAC,GAAOyW,EAAazW,EAAEb,OAAOpE,QAAzE,UACI,wBAAQA,MAAO,SAAf,oBACCsE,EAAMvC,KAAI,SAAAmE,GAAC,OACR,wBAAoBlG,MAAOkG,EAAE1I,IAA7B,SAAmC0I,EAAE7I,UAAxB6I,EAAE1I,cAIxB0L,GAAYuQ,EAAKhW,QAAQY,OAAS,GAAK,qBAAKvD,UAAWE,KAAOyC,QAAvB,SACtC,cAAC,GAAD,CACIA,QAASgW,EAAKhW,QACduX,UAAW,EACXX,oBAAoB,EACpBC,gBAAiB,CACbG,cACAC,iBACAC,OAAQlB,EAAKjc,IACbod,SACAhU,UACAiD,iB,wBCnIlBuS,GAAe,gBAEfC,GAAS,CACX,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OACxD,SAAU,YAAa,UAAW,WAAY,YAG5CC,GAAW,CACb,SAAU,SAAU,UAAW,YAC/B,WAAY,SAAU,WAAY,UAGhCC,GAAsB,MAEtBC,GAAiB,CACnB,EAAK,SAACC,GAAD,OAAUA,EAAKC,iBAAiBC,WAAWpO,OAAO,IACvD,EAAK,SAACkO,GAAD,OAAUA,EAAKC,kBACpB,EAAK,SAACD,GAAD,MAAU,WAAIA,EAAKG,WAAa,GAAIrO,OAAO,IAChD,EAAK,SAACkO,GAAD,OAAUJ,GAAOI,EAAKG,YAAYrO,MAAM,EAAG,IAChD,EAAK,SAACkO,GAAD,OAAUJ,GAAOI,EAAKG,aAC3B,EAAK,SAACH,GAAD,MAAU,WAAIA,EAAKI,WAAYtO,OAAO,IAC3C,EAAK,SAACkO,GAAD,OAAUH,GAASG,EAAKK,UAAUvO,MAAM,EAAG,IAChD,EAAK,SAACkO,GAAD,OAAUH,GAASG,EAAKK,WAC7B,EAAK,SAACL,GAAD,OAAUM,GAAcN,KAG3BO,GAAoB,SAACC,EAAaC,GACpC,OAAO,IAAIpE,KAAKmE,EAAYE,UAAYD,EAAaX,KAGnDa,GAAY,SAACX,GAIf,IAAMY,GAHNZ,EAAOA,GAAQ,IAAI3D,MAGEgE,UAAY,EAC3BQ,EAAS,IAAIxE,KAAK2D,GAGxB,OAFAa,EAAOC,QAAQd,EAAKI,WAAaQ,EAAU,IAEpCC,GAGLP,GAAgB,SAACN,GAGnB,IAAMe,EAAmBR,GAAkBI,GAAUX,GAAO,GAGtDgB,EAAQ,IAAI3E,KAAK2D,EAAKiB,cAAe,EAAG,GACxCC,EAAgBX,GAAkBI,GAAUK,GAAQ,GAE1D,OAAO,EAAIxC,KAAKlY,OAAOya,EAAiBL,UAAYQ,EAAcR,WAA5C,SAepBS,GAAa,SAACnB,EAAMoB,GACtB,OAAOA,EAAaC,QAAQ1B,IAAc,SAAC2B,GACvC,IAAMC,EAAaD,EAAO,GAE1B,OADevB,GAAewB,GAAYvB,OAQ5CwB,GAAoB,SAACC,EAAWC,GAClC,OAAOD,EAAUE,YAAcD,EAAWC,WACnCF,EAAUtB,aAAeuB,EAAWvB,YACpCsB,EAAUrB,YAAcsB,EAAWtB,WAMxCwB,GAAe,SAACH,EAAWC,GAC7B,IAAMG,EAAgBJ,EAAUE,UAC1BG,EAAiBJ,EAAWC,UAElC,GAAIE,IAAkBC,EAClB,OAAO,EAAI,GAAKA,EAAiBD,GAGrC,IAAME,EAAiBN,EAAUtB,WAC3B6B,EAAkBN,EAAWvB,WAEnC,GAAI4B,IAAmBC,EACnB,OAAO,EAAI,GAAKA,EAAkBD,GAGtC,IAAME,EAAeR,EAAUrB,UACzB8B,EAAgBR,EAAWtB,UAEjC,OAAI6B,IAAiBC,EACV,EAAI,GAAKA,EAAgBD,GAG7B,GC3GI,OAA0B,iCCW1B,SAASE,GAAT,GAA+E,IAAxDC,EAAuD,EAAvDA,QAASpF,EAA8C,EAA9CA,KAAMmB,EAAwC,EAAxCA,OAAQhU,EAAgC,EAAhCA,QAASiD,EAAuB,EAAvBA,OAAQyR,EAAe,EAAfA,YAAe,EAEnDhd,mBAAS,MAF0C,mBAElFwgB,EAFkF,KAErEC,EAFqE,OAGnDzgB,mBAAS,MAH0C,mBAGlF0gB,EAHkF,KAGrEC,EAHqE,OAIzD3gB,mBAAS,GAJgD,mBAIlFuB,EAJkF,KAI3Eqf,EAJ2E,KAKnFxgB,EAAUC,cACV2C,EAASH,IACTge,EAAQ,IAAIrG,MAAK,IAAIA,MAAO4E,eAAe,IAAI5E,MAAO8D,YAAY,IAAI9D,MAAO+D,WAGnFpd,qBAAW,WAGT,OAFA2f,IACA3d,OAAO6H,iBAAiB,SAAU8V,GAC3B,kBAAM3d,OAAO8H,oBAAoB,SAAU6V,MACjD,IAEH,IAAMA,EAAmB,WACvB,IAAMC,EAAa5d,OAAO4d,WAC1BH,EAAeG,IAWjB5f,qBAAU,WAEN,GADAsf,EAAeF,GACXC,EAAa,CACb,IAAMrC,EAAOqC,EAAY3B,UAAYS,GAAWkB,EAAa,YAAc,GAC3EG,EAAexC,MAEpB,CAACoC,EAASC,IAEb,IAhB4BQ,EAgBtBC,EAAsB1gB,uBAAY,WACpCyC,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoB+E,KACjC,CAACvI,EAAQsF,EAASiD,IAEf2V,EAAe,uCAAG,WAAO/C,GAAP,mBAAAtY,EAAA,yDAEA,KAAhB2a,GAA+B,KAATrC,EAFN,uBAGhBtM,QAAQC,IAAI,UAHI,iCAMdtR,EAAQjC,EAAU,gBANJ,SAOGkC,MAAM,6BAAD,OAA8B6b,EAA9B,YAAwCnB,EAAKjc,KAAO,CAC5EwB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjB0c,QAASpC,EACT5S,OAAQA,MAfI,WAOdzM,EAPc,QAkBN+B,GAlBM,wBAmBhBT,EAAQU,KAAK,UAnBG,4CAsBUhC,EAASmC,OAtBnB,QAsBVyc,EAtBU,OAuBZV,GAAaA,EAAYU,GAC7BuD,IAxBgB,4CAAH,sDA4BrB,OACI,gCACI,cAAC,KAAD,CACIE,YACI,sBAAK3e,UAAWE,KAAO,iBAAvB,UACI,qBAAKF,UAAWE,KAAOib,KAAMxT,IAAKqL,GAAMnL,IAAI,SADhD,cAKJ+W,SAAUV,EAAcF,EAAcK,EACtCna,SAAU,SAACyX,GAAWsC,EAAetC,GAAO+C,EAAgB/C,IAC5DvX,MAAM,aACNya,iBA7DgBL,EA6DoBzf,EA5DxCyf,EAAI,IACG,aAEA,kBA4DHN,GAAe,qBAAKle,UAAWE,KAAOyb,KAAvB,SAA8BuC,OC7F9C,SAASY,GAAT,GAAuC,IAAhBC,EAAe,EAAfA,YAE9Bjb,EAAM,GAEV,GAAIib,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAYxb,OAAQyb,IAAK,CACzC,IAAIvI,EAAcsI,EAAYC,GAE9B,GAAIA,IAAMD,EAAYxb,OAAS,EAAG,CAC9BO,EAAIxF,KAAKmY,GACT,MAGAA,EAAYrT,MAAMqK,MAAM,EAAG,KAAOsR,EAAYC,EAAI,GAAG5b,MAAMqK,MAAM,EAAG,IAAMgJ,EAAYkF,OAASoD,EAAYC,EAAI,GAAGrD,MAGlH7X,EAAIxF,KAAKmY,GAKrB,SAASwI,EAASC,GACd,IAAIC,EAAU,IAAInH,KAAKkH,GAEvB,OADa,IAAMC,EAAQpD,WAAYtO,OAAO,GAAK,KAAO,KAAO0R,EAAQrD,WAAa,IAAIrO,OAAO,GAAK,IAAM0R,EAAQvC,cAIxH,OACI,qBAAK5c,UAAWE,KAAOtC,QAAvB,SACMmhB,EACEjb,EAAI4J,UAAUzM,KAAI,SAACmE,EAAGwB,GAAJ,OACd,wCACQqY,EAAS7Z,EAAC,MADlB,cACiCA,EAAC,QADxBwB,MAIZ,OCtCH,WAA0B,iC,qBCG1B,SAASwY,GAAT,GAAoC,IAExBna,EAFWoa,EAAY,EAAZA,SAiBlC,OACI,qBAAKrf,UAAWE,KAAOof,IAAvB,SACI,qBACIrf,MAAO,CACHlB,MAAM,GAAD,OAAKsgB,EAAL,KACLE,iBApBOta,EAoBwBoa,EAnBvCG,OAAOva,IAAU,GACV,MAEPua,OAAOva,IAAU,GACV,SAEPua,OAAOva,IAAU,GACV,OAEPua,OAAOva,GAAS,GACT,aADX,IAYQjF,UAAWE,KAAOmf,aClBnB,SAASI,GAAT,GAAoG,IAA5E9G,EAA2E,EAA3EA,KAAMmB,EAAqE,EAArEA,OAAQhU,EAA6D,EAA7DA,QAASiD,EAAoD,EAApDA,OAAQgW,EAA4C,EAA5CA,YAAaW,EAA+B,EAA/BA,eAAgBlF,EAAe,EAAfA,YACzFxc,EAAQjC,EAAU,gBAClB6B,EAAUC,cACV2C,EAASH,IACT6L,EAAMvC,iBAAO,MAJ2F,EAK9EnM,mBAAS,MALqE,mBAKvG6hB,EALuG,KAK7FM,EAL6F,OAM5EniB,mBAAS,MANmE,mBAMvGoiB,EANuG,KAM5FC,EAN4F,OAO5EriB,oBAAS,GAPmE,mBAOvGsiB,EAPuG,KAO5FC,EAP4F,OAQpE7X,GAAsBgE,GAR8C,mBAQvG8T,EARuG,KAQxFC,EARwF,OASlEziB,oBAAS,GATyD,mBASvG0iB,EATuG,KASvFC,EATuF,KAUxG9B,EAAQ+B,mBAAQ,kBAAM,IAAIpI,MAAK,IAAIA,MAAO4E,eAAe,IAAI5E,MAAO8D,YAAY,IAAI9D,MAAO+D,aAAY,IAE7Gpd,qBAAU,WACNwhB,EAAoC,OAAlBxH,EAAK0G,UACvBM,EAAYhH,EAAK0G,YAClB,CAAC1G,EAAK0G,WAET,IAAMgB,EAAc,uCAAG,gCAAAhd,EAAA,yDACF,OAAbgc,EADe,uBAEfc,GAAkB,GAClBF,GAAiB,GAHF,6BAOfL,IAAcP,GAAaS,EAPZ,uBAQfH,EAAYC,GACZG,GAAa,GATE,iCAafjc,EAbe,YAaLib,IACVzgB,KAAK,CACL,MAAQ,YAAR,OAAqB+gB,EAArB,KACA,KAAQhB,IAEZqB,EAAe5b,GAlBI,UAoBI7F,MAAM,6BAAD,OAA8B6b,EAA9B,YAAwCnB,EAAKjc,KAAO,CAC5EwB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBge,WACAzhB,QAASkG,MA5BE,YAoBbxH,EApBa,QA+BL+B,GA/BK,iBAgCfT,EAAQU,KAAK,UAhCE,yCAkCWhC,EAASmC,OAlCpB,QAkCTyc,EAlCS,OAmCXV,GAAaA,EAAYU,GAC7B1a,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoB+E,GArCjB,4CAAH,qDA2DpB,SAAShJ,IACLogB,GAAkB,GAClBF,GAAiB,GACjBJ,EAAaR,GAGjB,OACI,qCACI,sBAAKrf,UAAWE,KAAO,iBAAkBH,QAASA,EAAlD,UACI,qBAAKC,UAAWE,KAAOib,KAAMxT,IAAK+K,GAAM7K,IAAI,KADhD,cAIA,qBAAK7H,UAAWE,KAAO,gBAAvB,SACuB,OAAlByY,EAAK0G,SAAoB,cAACD,GAAD,CAAaC,SAAU1G,EAAK0G,WAAe,OAEzE,qBAAKrf,UAAWE,KAAO,4BAAvB,SACKggB,GAAkB,mCACdF,EAAgB,uBAAM9T,IAAKA,EAAX,UACb,uBACIA,IAAK,SAAUjH,GACE,MAATA,GACAA,EAAMmQ,SAGd3Y,GAAG,WACHmC,KAAK,SACLwb,IAAI,IACJkG,IAAI,MACJtgB,UAAS,UAAKE,KAAO,kBAAZ,aAAkC4f,GAAa5f,KAAO,cAC/DhB,MAAOmgB,EACPkB,UAAW,SAAApc,GA9CT,KA8C2BA,EA9CvCqc,UACNb,EAAYC,GACZK,GAAiB,GACjBF,GAAa,GACI,OAAbV,GAAmBc,GAAkB,KA2CzBM,QAvCxB,YACSpB,GAAYG,OAAOH,GAAY,GAAKG,OAAOH,GAAY,IACxDU,GAAa,GAEbA,GAAa,IAoCG7b,SAAU,SAAAC,GAAC,OAAIwb,EAAYxb,EAAEb,OAAOpE,QACpCqF,OAAQ8b,IACV,wCACQ,sBAAKrgB,UAAWE,KAAOmf,SAAUtf,QAASA,EAA1C,UAAoDsf,EAApD,c,6CCxHnB,OAA0B,qCCA1B,OAA0B,mCCU1B,SAASqB,GAAT,GAAuF,IAA7DC,EAA4D,EAA5DA,YAAaC,EAA+C,EAA/CA,QAASjI,EAAsC,EAAtCA,KAAM7S,EAAgC,EAAhCA,QAASiD,EAAuB,EAAvBA,OAAQyR,EAAe,EAAfA,YAC5Eha,EAASH,IACTzC,EAAUC,cACVG,EAAQjC,EAAU,gBAHyE,EAIrDyB,mBAAS,IAJ4C,mBAI1FqjB,EAJ0F,KAI1EC,EAJ0E,OAK3DtjB,oBAAS,GALkD,mBAK1F4W,EAL0F,KAK7EC,EAL6E,OAM3D7W,mBAAS,IANkD,mBAM1FiZ,EAN0F,KAM7EC,EAN6E,KAQjG/X,qBAAU,WACNmiB,EAAkBH,KACnB,CAACA,IAV6F,4CAgBjG,WAAgCI,GAAhC,iBAAA1d,EAAA,sEAC2BpF,MAAM,yCAAD,OAA0C0a,EAAKjc,IAA/C,YAAsDqkB,EAAIrkB,KAAO,CACzFwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAL7B,WACU1B,EADV,QAQkB+B,GARlB,uBASQT,EAAQU,KAAK,UATrB,2CAYkChC,EAASmC,OAZ3C,QAYcyc,EAZd,OAaYV,GAAaA,EAAYU,GAC7B4F,EAAkB5F,EAAYyF,aAC9BngB,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoB+E,GAhBxC,6CAhBiG,sBAsCjG,OACI,qCACCqL,GACG,cAAC,GAAD,CACItU,MAAM,yBACN2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBA5C0E,2CA4CpEsN,CAAiBvK,MAG1C,sBAAKvK,IAAK0U,EAAS5gB,UAAWE,KAAO+D,UAArC,UACI,qBAAKjE,UAAWE,KAAOJ,MAAvB,8BACC+gB,EAAe5f,KAAI,SAAC8f,EAAKna,GAAN,OAChB,sBAAiB5G,UAAWE,KAAO+gB,WAAnC,UACI,sBAAKjhB,UAAWE,KAAOlE,KAAvB,UAA8B+kB,EAAI/kB,KAAlC,IAAyC+kB,EAAIG,UAC7C,gCACI,cAAC,EAAD,CAAaphB,MAAO,qBAAKE,UAAWE,KAAOkC,OAAQuF,IAAKwZ,GAAUtZ,IAAI,aAAe9H,QAAS,kBAAMY,OAAO4U,KAzCpG,SAACwL,GACxB,MAAM,8BAAN,OAAqCpM,YAArC,qCAAkGoM,EAAI1a,MAwC0B+a,CAAmBL,GAAM,aACzI,cAAC,EAAD,CAAajhB,MAAO,qBAAKE,UAAWE,KAAOkC,OAAQuF,IAAK0Z,GAAQxZ,IAAI,WACnE9H,QAAS,WACNsU,GAAe,GACfqC,EAAeqK,WAPjBna,YCpDX,SAAS0a,GAAT,GAA+E,IAAzDP,EAAwD,EAAxDA,IAAKJ,EAAmD,EAAnDA,YAAahI,EAAsC,EAAtCA,KAAM7S,EAAgC,EAAhCA,QAASiD,EAAuB,EAAvBA,OAAQyR,EAAe,EAAfA,YACpEtO,EAAMvC,iBAAO,MACb4X,EAAU5X,iBAAO,MACjBiX,EAAUjX,iBAAO,MAHkE,EAI/CnM,oBAAS,GAJsC,mBAIlFgkB,EAJkF,KAInEC,EAJmE,OAKvDjkB,mBAAS,MAL8C,mBAKlFkkB,EALkF,KAKvEC,EALuE,OAM/CzZ,GAAsB0Y,GANyB,mBAMlFgB,EANkF,KAMnEC,EANmE,KAwBzF,OANAljB,qBAAU,WACF4iB,EAAQjZ,SACRqZ,EAAahhB,OAAOmhB,iBAAiBP,EAAQjZ,SAASyZ,iBAAiB,YAE5E,CAACP,IAGA,gCACI,sBACIxhB,UAAWE,KAAO+gB,WAClB/U,IAAKA,EACL8V,aApBS,WACjBxd,YAAW,WACH0H,EAAI5D,UAEU,WADA3H,OAAOmhB,iBAAiB5V,EAAI5D,SAASyZ,iBAAiB,qBAC5CN,GAAiB,MAE9C,MAeKQ,aAAc,kBAAMR,GAAiB,IACrC1hB,QAAS,kBAAM8hB,GAAiB,IALpC,UAOI,qBAAKla,IAAK6F,GAAM3F,IAAI,GAAG7H,UAAWE,KAAO,iBACzC,qBAAKF,UAAWE,KAAOghB,OAAvB,SAAgCH,EAAIG,SACnCM,GACG,qBACItV,IAAKqV,EACLvhB,UAAWE,KAAOlE,KAClBiE,MAAO,CAAE,UAAU,GAAV,OAAcyhB,IAH3B,SAIEX,EAAI/kB,UAGb4lB,GAAiB,cAAC,GAAD,CAAa7d,SAAU,kBAAM8d,GAAiB,IAA9C,SACd,cAACnB,GAAD,CACIE,QAASA,EACTD,YAAaA,EACbhI,KAAMA,EACN7S,QAASA,EACTiD,OAAQA,EACRyR,YAAaA,SClDlB,SAAS0H,GAAT,GAA6D,IAAvCvJ,EAAsC,EAAtCA,KAAM7S,EAAgC,EAAhCA,QAASiD,EAAuB,EAAvBA,OAAQyR,EAAe,EAAfA,YAClDxc,EAAQjC,EAAU,gBAClB6B,EAAUC,cACV2C,EAASH,IAHwD,EAIjC7C,mBAAS,MAJwB,mBAIhEmjB,EAJgE,KAInDwB,EAJmD,KA0DvE,OApDAxjB,qBAAU,WACNwjB,EAAexJ,EAAKgI,eACrB,CAAChI,EAAKgI,cAmDL,gCACI,sBAAK3gB,UAAWE,KAAO,iBAAkBH,QAlDjD,WACmBY,OAAO6T,WAAWC,mBAAmB,CAChDC,UAAWC,YACXC,aAAcD,WACdyN,aAAc,OAHH,uCAKZ,WAAOvN,EAAOC,GAAd,2BAAAzR,EAAA,yDACsB,YAAjByR,EAAO1R,MADZ,wBAEWiD,EAAOyO,EAAOE,KAAK3O,KACnBrK,EAAO8Y,EAAOE,KAAKqN,mBACrBnB,EAASpM,EAAOE,KAAKkM,UAErBA,EAAS7a,EAAKgU,MAAM,KAAK,IAEvBvY,EAAWgT,EAAOE,KAAKC,UACvBgM,EAAa,CAAE5a,OAAMrK,OAAMklB,SAAQpf,YAT9C,SAY4B7D,MAAM,yCAAD,OAA0C0a,EAAKjc,KAAO,CAC9EwB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjB4f,iBAnBb,WAYW3kB,EAZX,QAsBmB+B,GAtBnB,iBAuBST,EAAQU,KAAK,UAvBtB,yCAyBmChC,EAASmC,OAzB5C,QAyBeyc,EAzBf,OA0BSiH,EAAejH,EAAYyF,aAC3BngB,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoB+E,GA5BzC,YAgCK8L,EAhCL,uFALY,yDA4CRU,QAKH,UACI,qBAAKvV,UAAWE,KAAOib,KAAMxT,IAAKsL,GAAMpL,IAAI,SADhD,iBAIE8Y,GAAe,qBAAK3gB,UAAWE,KAAO,iBAAvB,SACZygB,EAAYpd,QAAU,EAAIod,EAAY1f,KAAI,SAAA8f,GAAG,OAC1C,cAACO,GAAD,CAA0BP,IAAKA,EAAKJ,YAAaA,EAAahI,KAAMA,EAAM7S,QAASA,EAASiD,OAAQA,EAAQyR,YAAaA,GAAxGuG,EAAIrkB,QAEzB,qCACCikB,EAAYlT,MAAM,EAAG,GAAGxM,KAAI,SAAA8f,GAAG,OAC5B,cAACO,GAAD,CAA0BP,IAAKA,EAAKJ,YAAaA,EAAahI,KAAMA,EAAM7S,QAASA,EAASiD,OAAQA,EAAQyR,YAAaA,GAAxGuG,EAAIrkB,QAEzB,sBAAKsD,UAAS,UAAKE,KAAOoiB,UAAZ,YAAyBpiB,KAAO+gB,YAA9C,cACMN,EAAYpd,OAAS,aCrD5B,SAASgf,GAAT,GAAoF,IAAhEzI,EAA+D,EAA/DA,OAAQ0I,EAAuD,EAAvDA,YAAa1c,EAA0C,EAA1CA,QAASiD,EAAiC,EAAjCA,OAAQhF,EAAyB,EAAzBA,SAAUyW,EAAe,EAAfA,YACzE+G,EAAU5X,iBAAO,MACjB8Y,EAAiB9Y,iBAAO,MAFgE,EAGtEnM,mBAAS,MAH6D,mBAGvFmb,EAHuF,KAGjF+J,EAHiF,OAItEllB,mBAAS,IAJ6D,mBAIvFxB,EAJuF,KAIjFsG,EAJiF,OAKxD9E,mBAAS,IAL+C,mBAKvF+E,EALuF,KAK1EC,EAL0E,OAMxDhF,mBAAS,MAN+C,mBAMvFuhB,EANuF,KAM1EW,EAN0E,KAOxF9hB,EAAUC,cACV2C,EAASH,IAR+E,EAS1D7C,mBAAS,MATiD,mBASvFmlB,EATuF,KAS3EC,EAT2E,OAU5DplB,mBAAS,MAVmD,mBAUvFoiB,EAVuF,KAU5EC,EAV4E,KAWxF9B,EAAUqC,mBAAQ,kBAAM,IAAIpI,KAAKwK,EAAYzE,WAAU,CAACyE,EAAYzE,UACpE/f,EAAQjC,EAAU,gBAZsE,EAaxDyB,oBAAS,GAb+C,mBAavF4W,EAbuF,KAa1EC,EAb0E,KAe9F1V,qBAAU,WACN+jB,EAAQF,GACRlgB,EAAQkgB,EAAYxmB,MACpBwG,EAAeggB,EAAYjgB,aAC3Bmd,EAAe8C,EAAY5kB,WAC5B,CAAC4kB,IAGJ,IAAMK,EAAU,uCAAG,sBAAAxf,EAAA,sEAIQpF,MAAM,6BAAD,OAA8B6b,EAA9B,YAAwCnB,EAAKjc,KAAO,CAC5EwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KARV,cAWDK,IAGVmC,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoB+E,GAChChF,KAJAnG,EAAQU,KAAK,UAZF,2CAAH,qDAqBVmF,EAAY,uCAAG,sBAAAJ,EAAA,sEAEMpF,MAAM,6BAAD,OAA8B6b,EAA9B,YAAwCnB,EAAKjc,KAAO,CAC5EwB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBrF,OACAuG,kBAVS,cAaHlE,IAKVmC,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoB+E,IALhCnL,EAAQU,KAAK,UAdA,2CAAH,qDA8BlB,SAASwkB,EAAa1f,EAAO2f,EAAY7W,GACf,KAAlB9I,EAAMod,UACNuC,EAAWnD,GACXpb,YAAW,WACP0H,EAAI5D,QAAQ0a,SACb,IAIX,OAfArkB,qBAAU,WACN6F,YAAW,WACPoe,EAAcrB,EAAQjZ,QAAQ2a,aAAe,KAC9C,KACJ,IAYC,sBAAKjjB,UAAWE,KAAO0H,KAAvB,UAEKwM,GACG,cAAC,GAAD,CACItU,MAAO,mBACP2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBAAMmP,OAIzB,sBAAK7iB,UAAWE,KAAO+D,UAAvB,UAEI,sBAAKjE,UAAWE,KAAO,aAAvB,UACI,+BACI,qBAAKyH,IAAK6F,GAAM3F,IAAI,WAExB,0BACIqE,IAAKqV,EACLvhB,UAAS,UAAKE,KAAO,cAAZ,YAA6BA,KAAOgjB,MAC7CjjB,MAAO,CAAE,OAAU0iB,GACnBzjB,MAAOlD,EACPiN,QAAS,kBAAM4W,EAAa7jB,IAC5BukB,UAAW,SAAApc,GAAC,OAAI2e,EAAa3e,EAAG7B,EAASif,IACzCrd,SAAU,SAAAC,GACN7B,EAAQ6B,EAAEb,OAAOpE,OACjB0jB,EAAcrB,EAAQjZ,QAAQ2a,aAAe,IAEjD1e,OAAQ,WACAqb,IAAc5jB,GAClByH,UAIZ,sBAAKzD,UAAWE,KAAO,aAAvB,UAEI,sBAAKF,UAAWE,KAAO,aAAvB,UACI,gCACI,qBAAKF,UAAWE,KAAOgjB,KAAvB,yBACA,0BAAUljB,UAAWE,KAAO,qBACxBgM,IAAKuW,EACLvjB,MAAOqD,EACP0G,QAAS,kBAAM4W,EAAatd,IAC5Bge,UAAW,SAAApc,GAAC,OAAI2e,EAAa3e,EAAG3B,EAAgBigB,IAChDve,SAAU,SAAAC,GAAC,OAAI3B,EAAe2B,EAAEb,OAAOpE,QACvCqF,OAAQ,WACAqb,IAAcrd,GAClBkB,UAIZ,sBAAKzD,UAAWE,KAAO,kBAAvB,UACI,qBAAKF,UAAWE,KAAOgjB,KAAvB,qBACA,cAACpE,GAAD,CAAaC,YAAaA,UAIlC,qBAAK/e,UAAWE,KAAO,cAAvB,SAEI,sBAAKF,UAAWE,KAAO,kBAAvB,UACI,qBAAKF,UAAWE,KAAOgjB,KAAvB,oBACA,cAACpF,GAAD,CACIC,QAASA,EACTpF,KAAM6J,EACN1I,OAAQA,EACRhU,QAASA,EACTiD,OAAQA,EACRyR,YAAaA,IAEjB,cAACD,GAAD,CACI5B,KAAM6J,EACN1I,OAAQA,EACRhU,QAASA,EACTiD,OAAQA,EACRyR,YAAaA,IAEjB,cAACiF,GAAD,CACI9G,KAAM6J,EACN1I,OAAQA,EACRhU,QAASA,EACTiD,OAAQA,EACRgW,YAAaA,EACbW,eAAgBA,EAChBlF,YAAaA,IAEjB,cAAC0H,GAAD,CACIvJ,KAAM6J,EACN1c,QAASA,EACTiD,OAAQA,EACRyR,YAAaA,IAEjB,yBAAQxa,UAAWE,KAAO,iBAE1BH,QAAS,WACLsU,GAAe,IAEnBvU,MAAM,cALN,UAMI,qBAAKE,UAAWE,KAAOib,KAAMxT,IAAKwb,GAAOtb,IAAI,UANjD,+BC7Lb,SAASub,GAAT,GAAyD,IAAlCpN,EAAiC,EAAjCA,SAAUlQ,EAAuB,EAAvBA,QAASW,EAAc,EAAdA,KAAMkS,EAAQ,EAARA,KACrD0K,EAAW1Z,iBAAO,MAClBiX,EAAUjX,iBAAO,MAF4C,EAGzBnM,oBAAS,GAHgB,mBAG5DwiB,EAH4D,KAG7CC,EAH6C,OAI3BziB,oBAAS,GAJkB,mBAI5D8lB,EAJ4D,KAI9CC,EAJ8C,OAKrBrb,GAAsB0Y,GALD,mBAK5D4C,EAL4D,KAK3CC,EAL2C,OAMnCjmB,mBAAS,IAN0B,mBAM5D6hB,EAN4D,KAMlDM,EANkD,OAOjCniB,oBAAS,GAPwB,mBAO5DsiB,EAP4D,KAOjDC,EAPiD,KAQ7DniB,EAAUC,cACV2C,EAASH,IACTqjB,EAAOvJ,KAAKwJ,MAAM3L,KAAK4L,MAAMjL,EAAKoF,SAAW/F,KAAK6L,OAAS,IAAO,KAAO,IAVZ,4CAoBnE,gCAAAxgB,EAAA,yDACI4c,GAAiB,GACZH,GAAaN,OAAOH,KAAc1G,EAAK0G,SAFhD,uBAGQM,EAAYhH,EAAK0G,SAAW,KAC5BU,GAAa,GAJrB,6BAQqB,KAAbV,EARR,oBAS8B,OAAlB1G,EAAK0G,SATjB,uBAUYM,EAAY,OAVxB,0BAaQA,EAAYhH,EAAK0G,SAAW,KAbpC,eAgBUhB,EAAQ,IAAIrG,KAAKA,KAAK6L,QACxB/f,EAjBR,YAiBkB6U,EAAK/a,UAEfU,KAAK,CACL,MAAQ,YAAR,OAAqB+gB,EAArB,KACA,KAAQhB,IAGNrgB,EAAQjC,EAAU,gBAxB5B,UAyB2BkC,MAAM,6BAAD,OAA8BwI,EAAK/J,IAAnC,YAA0Cic,EAAKjc,KAAO,CAC9EwB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBge,SAAUA,EACVzhB,QAASkG,MAjCrB,kBAoCkBzF,GApClB,wBAqCQT,EAAQU,KAAK,UArCrB,2BAwCQkC,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoBgS,EAAStZ,KAzCjD,6CApBmE,sBAkFnE,OAtEAiC,qBAAU,WACgB,OAAlBga,EAAK0G,SAITM,EAAYhH,EAAK0G,SAAW,KAHxBM,EAAY,SAIjB,CAACA,EAAahH,EAAK0G,WAiElB,sBAAoBrf,UAAWE,KAAOyY,KAAtC,UACI,qBAAK3Y,UAAWE,KAAO4jB,KAAvB,SAA8BnL,EAAK3c,OACnC,qBAAKgE,UAAWE,KAAOmf,SAAvB,SACI,uBACInT,IAAKmX,EACLzkB,KAAM,OACNoB,UAAS,UAAKE,KAAO+E,MAAZ,aAAsB6a,GAAa5f,KAAO,aAA1C,aAA2D8f,GAAiB9f,KAAO,cAC5FoE,aAAa,MACbpF,MAAOmgB,EACPpW,QAnBhB,WACIgX,GAAiB,GAKjBN,EAJiB,QAAbN,EAIQG,OAAOH,EAAS5R,MAAM,GAAI,IAHtB,KAiBJlJ,OA7FmD,2CA8FnDkc,QA7BhB,WACQjB,OAAOuE,MAAMvE,OAAOH,KAAcG,OAAOH,GAAY,GAAKG,OAAOH,GAAY,IAC7EU,GAAa,GAEbA,GAAa,IA0BL7b,SAAU,SAAAC,GAAC,OAAIwb,EAAYxb,EAAEb,OAAOpE,YAG5C,qBAAKc,UAAWE,KAAOwjB,KAAvB,SAE0B,MAAlB/K,EAAK0G,SAAoB,uCACQ,IAA7BrH,KAAK4L,MAAMjL,EAAKoF,UAAmC,OAAjBpF,EAAKoF,QAAoB,8CACvD2F,EAAO,EAAK,qBAAK1jB,UAAWE,KAAO8jB,SAAvB,6BACR,8BAAMN,MAG1B,sBAAK1jB,UAAWE,KAAO,qBAAvB,UACKyY,EAAKgI,YAAYpd,OAAS,GAAK,cAAC,EAAD,CAC5BvD,UAAWE,KAAOkC,OAClBrC,QAAS,kBAAM0jB,GAAmB,IAClC3jB,MAAO,qBAAK6H,IAAKsc,GAAQpc,IAAI,GAAG9I,MAAM,SAE1C,cAAC,EAAD,CACIiB,UAAWE,KAAOkC,OAClBrC,QAAS,kBAAMwjB,GAAgB,IAC/BzjB,MAAO,qBAAK6H,IAAKgO,GAAK9N,IAAI,GAAG9I,MAAM,YAG1CykB,GAAmB,cAAC,GAAD,CAAazf,SAAU,kBAAM0f,GAAmB,IAAhD,SAChB,cAAC/C,GAAD,CACIE,QAASA,EACTD,YAAahI,EAAKgI,YAClBhI,KAAMA,EACN7S,QAASA,EACTiD,OAAQiN,EAAStZ,QAGxB4mB,GAAgB,qBAAKtjB,UAAWE,KAAOuV,KAAvB,SACb,cAAC,GAAD,CAAa1R,SAAU,kBAAMwf,GAAiBD,IAA9C,SACI,cAACf,GAAD,CACIxe,SAAU,kBAAMwf,GAAiBD,IACjCd,YAAa7J,EACbmB,OAAQrT,EAAK/J,IACboJ,QAASA,EACTiD,OAAQiN,EAAStZ,YAnDvBic,EAAKjc,KCpFvB,IAuHewnB,GAvHK,WAChB,IAAMhhB,EAAc5C,qBAAWrD,GADT,EAEUO,mBAAS,IAFnB,mBAEfwY,EAFe,KAELC,EAFK,OAGUzY,mBAAS,IAHnB,mBAGf8L,EAHe,KAGL6a,EAHK,KAIhBvmB,EAAUC,cACV2C,EAASH,IAET+jB,EAAarmB,sBAAW,uCAAC,WAAO8F,GAAP,mBAAAR,EAAA,6DAC3B4S,EAAYpS,GAEN7F,EAAQjC,EAAU,gBAHG,SAKJkC,MAAM,mBAAD,OAAoB4F,EAAKnH,KAAO,CACxDwB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KATE,WAKrB1B,EALqB,QAYb+B,GAZa,gBAavBT,EAAQU,KAAK,UAbU,wCAeJhC,EAASmC,OAfL,QAejB+M,EAfiB,OAgBvB2Y,EAAY3Y,GAhBW,4CAAD,sDAkB3B,CAAC5N,IAsBJ,SAASymB,EAAe/a,GACpB6a,EAAY7a,GAGhB,OAxBA3K,qBAAU,WACN,GAAKqX,GAAsB,MAAVxV,EAAjB,CAEA,IAAM/D,EAAKuZ,EAAStZ,IAWpB,OATA8D,EAAO+G,GAAG,oBAAqB8c,GAC/B7jB,EAAO+G,GAAG,oBAAoB,SAACwB,GAC3B,GAAIA,IAAWtM,EAAI,CACf,IAAMoH,EAAI,eAAQmS,GAClBoO,EAAWvgB,OAInBrD,EAAOwD,KAAK,iBAAkBvH,GACvB,WACH+D,EAAOgH,IAAI,qBACXhH,EAAOgH,IAAI,wBAEhB,CAACwO,EAAUxV,EAAQ4jB,IAOlB,eAAC,GAAD,WACI,cAAC,GAAD,CAAOtkB,MAAM,aACb,gCACI,sBAAME,UAAWE,KAAOJ,MAAxB,oBACCoD,EAAY1G,KAAKG,MAAMsE,KAAI,SAAA4C,GACxB,OAAQ,cAAC,EAAD,CAEJ/D,MAAO+D,EAAK7H,KACZ+D,QAAS,kBAAMqkB,EAAWvgB,IAC1B7D,UAAS,UAAKE,KAAOvD,MAAZ,YAAqBqZ,EAAStZ,MAAQmH,EAAKnH,KAAOwD,KAAO0e,WAH7D/a,EAAKnH,WAOpBsZ,EACE,qBAAKhW,UAAWE,KAAOokB,IAAvB,SACyB,IAApBhb,EAAS/F,OAAe,qBAAKvD,UAAWE,KAAOJ,MAAvB,uCACrBwJ,EAASrI,KAAI,SAAA6E,GACT,OACI,sBAAuB9F,UAAWE,KAAO4F,QAAzC,UACI,qBAAK9F,UAAWE,KAAO,gBAAvB,SACI,eAAC,IAAD,CAAMqF,GAAE,yBAAoByQ,EAAStZ,IAA7B,YAAoCoJ,EAAQpJ,KAAOsD,UAAWE,KAAOsF,KAA7E,UACI,sBAAMxF,UAAWE,KAAO4X,KAAxB,sBADJ,IACmDhS,EAAQ9J,UAG/D,sBAAKgE,UAAS,UAAKE,KAAOqkB,OAAZ,YAAsBrkB,KAAOskB,KAA3C,UACI,qBAAKxkB,UAAWE,KAAOuG,KAAvB,mBACA,sBAAKzG,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAO4jB,KAAvB,mBACA,qBAAK9jB,UAAWE,KAAOmf,SAAvB,2BACA,qBAAKrf,UAAWE,KAAOwjB,KAAvB,kCAGP5d,EAAQJ,MAAMzE,KAAI,SAAAwF,GACf,OACI,sBAAoBzG,UAAWE,KAAOskB,IAAtC,UACI,qBAAKxkB,UAAWE,KAAOuG,KAAvB,SAA8BA,EAAKzK,OACnC,qBAAKgE,UAAWE,KAAO,kBAAvB,SACKuG,EAAKge,MAAMxjB,KAAI,SAAA0X,GACZ,OACI,cAACyK,GAAD,CAEIpN,SAAUA,EACVlQ,QAASA,EACTW,KAAMA,EACNkS,KAAMA,GAJDA,EAAKjc,YANpB+J,EAAK/J,UAhBjBoJ,EAAQpJ,UALzB,qBAAKsD,UAAWE,KAAOJ,MAAvB,6BA6CVkW,GAAgC,IAApB1M,EAAS/F,SACpB,qBAAKvD,UAAWE,KAAOwkB,IAAvB,SACI,qBAAK/c,IAAKgd,GAAS9c,IAAI,WCjH5B+c,GARG,WACd,OACI,cAAC,GAAD,UACI,+C,2DCOG,SAASC,GAAUtnB,GAE9B,IAAMiD,EAASH,IACTsC,EAAUpF,EAAMoF,QAHe,EAIXnF,mBAAS,IAJE,mBAI9BgG,EAJ8B,KAIvBiX,EAJuB,OAKGjd,mBAAS,IALZ,mBAK9Bqd,EAL8B,KAKhBiK,EALgB,KAM/BzZ,EAAU/K,qBAAWrD,GACrBgG,EAAc3C,qBAAWjB,GACzB8N,EAAcxD,iBAAO,MARU,EASLzB,GAAsBiF,GATjB,mBAS9B/E,EAT8B,KASpBC,EAToB,KAU/BgO,EAAU9Y,EAAMyd,MAChBpd,EAAUC,cACV8P,EAAYpQ,EAAMuI,QAAQpJ,IAC1BmM,EAASC,cAbsB,EAcCtL,oBAAS,GAdV,mBAc9B4W,EAd8B,KAcjBC,EAdiB,OAeG7W,mBAAS,IAfZ,mBAe9B+Y,EAf8B,KAehBC,EAfgB,OAgBChZ,mBAAS,IAhBV,mBAgB9BiZ,EAhB8B,KAgBjBC,EAhBiB,KAmB/B+H,EAAsB1gB,uBAAY,WACpCyC,EAAOwD,KAAK,iBAAkBzG,EAAMuI,SACpCtF,EAAOwD,KAAK,cAAe6E,EAAOG,UACnC,CAACxI,EAAQjD,EAAMuI,QAAS+C,EAAOG,SAG5B0R,EAAY,uCAAG,sCAAArX,EAAA,6DACb0hB,EAAgB,GAEpB9hB,EAAYtG,MAAMsE,KAAI,SAAAC,GAClB,OACIA,EAAEoI,SAASrI,KAAI,SAAAyL,GAIX,OAHIA,EAAEhQ,MAAQiR,IACVoX,EAAgB7jB,EAAExE,KAEfqoB,QAKb/mB,EAAQjC,EAAU,gBAdP,SAeMkC,MAAM,wBAAD,OAAyB8mB,GAAiB,CAClE7mB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAnBR,cAeX1B,EAfW,QAuBH+B,IACVT,EAAQU,KAAK,UAxBA,SA0BEhC,EAASmC,OA1BX,OA0BX+M,EA1BW,OA4BbwZ,EAAYxZ,EAAK7I,QAEfgY,EAAWqK,EAAUvgB,QAAO,SAACN,GAE/B,OADcxB,EAAQiC,MAAK,SAAAC,GAAO,OAAIA,EAAQkW,SAASxe,WAAa4H,EAAE5H,eAQ1Eke,EAASE,GAvCQ,4CAAH,qDAzBmB,4CAoErC,WAA+B7F,GAA/B,mBAAAzR,EAAA,yDAESyR,EAAOmQ,YAFhB,uBAGQ5V,QAAQC,IAAI,kBAHpB,6BAOU4V,EAAepQ,EAAOqQ,YAEbxiB,EAAQ8B,QAAO,SAAApB,GAAC,OAAIA,EAAE3G,MAAQwoB,KAAc,GAA5C,SAEJxoB,MAAQ2O,EAAQ7O,KAAKC,GAXpC,uBAYQ4S,QAAQC,IAAI,mBAZpB,6BAgBU8V,EAAcziB,EAAQ8B,QAAO,SAAApB,GAAC,OAAIA,EAAE3G,MAAQwoB,KAAc,GAA5C,MAGmB,WAAnCpQ,EAAOmQ,YAAYI,cAA4BD,EAnBvD,sDAsB2C,YAAnCtQ,EAAOmQ,YAAYI,aAA8BD,EAtBzD,0DAoCUpnB,EAAQjC,EAAU,gBApC5B,UAsC2BkC,MAAM,iBAAD,OAAkB0P,EAAlB,eAA0C,CAClEzP,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBikB,SAAUJ,EACV7O,SAAU+O,MA9CtB,eAiDkB/mB,GAGVogB,IAFA7gB,EAAQU,KAAK,UAlDrB,6CApEqC,sBA4HrC,IAOMob,EAAY,uCAAG,WAAOjX,GAAP,mBAAAY,EAAA,yDACXsK,EAAYpQ,EAAMuI,QAAQpJ,IAE5B+F,EAAO/F,MAAQ2O,EAAQ7O,KAAKC,GAHf,wDAMXse,EAAWtY,EAAO/F,IAClBsB,EAAQjC,EAAU,gBAPP,SAQMkC,MAAM,iBAAD,OAAkB0P,EAAlB,gBAA2C,CACnEzP,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjB0Z,eAfS,cAkBH1c,GAGVogB,IAFA7gB,EAAQU,KAAK,UAnBA,2CAAH,sDA2BZinB,EAAS,uCAAG,WAAOniB,GAAP,iBAAAC,EAAA,yDACdD,EAAMM,iBAGDmX,EAJS,uBAKVxS,GAAaD,GALH,iCAURpK,EAAQjC,EAAU,gBAElB0G,EAASoY,EAZD,SAcS5c,MAAM,iBAAD,OAAkB0P,EAAlB,SAAoC,CAC5DzP,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBoB,SACAuY,OAAO,MAtBD,cAyBA3c,IAGVogB,IACApW,GAAaD,GACb0c,EAAgB,KAJhBlnB,EAAQU,KAAK,UA1BH,4CAAH,sDAkCX4Y,EAA8B,CAC9B,qBAAsBwC,GAG1B,OACI,sBAAK1Z,UAAWE,KAAO+D,UAAvB,UAEKmQ,GACG,cAAC,GAAD,CACItU,MAAOyW,EACP9C,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBAAMwD,EAA4BX,GAAcE,MAInE,qBAAKzW,UAAWE,KAAO,iBAAvB,SACKmW,EACG,+BACKjO,EACG,qBAAKpI,UAAWE,KAAOyC,QAASuJ,IAAKiB,EAArC,SAES3J,EAAMD,OAAS,EAEZ,wDAGI,gCACI,yBAAQvD,UAAWE,KAAO,iBACtBgE,SAAU,SAACC,IAhGtC,SAAC1H,GAClB,IAAMqY,EAAStR,EAAMiB,QAAO,SAAA4E,GACxB,OAAOA,EAAI3M,MAAQD,KACpB,GACHqoB,EAAgBhQ,GA4F+C8F,CAAazW,EAAEb,OAAOpE,QAD7C,UAEI,iDAEIsE,EAAMvC,KAAI,SAAC4D,GAAD,OACN,wBAA0B3F,MAAO2F,EAAQnI,IAAzC,SAA+CmI,EAAQtI,UAA1CsI,EAAQnI,WAKrC,sBAAMsD,UAAWE,KAAO,cAAeH,QAASwlB,EAAhD,uBAIJ,2EAKZ,eAAC,KAAD,CAAiBC,UA9OJ,4CA8Ob,UAGA,sBAAKxlB,UAAWE,KAAO,oBAAvB,UACI,sBAAMF,UAAWE,KAAOJ,MAAxB,qBACA,cAAC,KAAD,CAAWulB,YAAa,SAAxB,SACK,SAACI,GAAD,OACG,8CAAKzlB,UAAWE,KAAOwlB,UAAWxZ,IAAKuZ,EAASE,UAAeF,EAASG,gBAAxE,cAEQjjB,EAAQ8B,QAAO,SAAApB,GAAC,OAAgB,IAAZA,EAAE2X,SAAgB/Z,KAAI,SAAC4D,EAAS+B,GAChD,OACI,cAAC,KAAD,CAAsCue,YAAatgB,EAAQnI,IAAKkK,MAAOA,EAAvE,SACK,SAAC6e,GAAD,OACG,6DAAUA,EAASI,iBAAqBJ,EAASK,gBAAjD,IAAiE5Z,IAAKuZ,EAASE,SAA/E,UACI,cAAChkB,EAAD,CAAYnF,KAAMqI,EAAQkW,SACxBlZ,KAAM,KACP4jB,EAASphB,kBALNQ,EAAQkW,SAASre,QAY5C+oB,EAASphB,sBAQ1B,sBAAKrE,UAAWE,KAAO,qBAAvB,UACI,sBAAMF,UAAWE,KAAOJ,MAAxB,sBACA,cAAC,KAAD,CAAWulB,YAAa,UAAxB,SACK,SAACI,GAAD,OACG,8CAAKzlB,UAAWE,KAAO,qBAAsBgM,IAAKuZ,EAASE,UAAcF,EAASG,gBAAlF,cAEQjjB,EAAQ8B,QAAO,SAAApB,GAAC,OAAgB,IAAZA,EAAE2X,SAAgB/Z,KAAI,SAAC4D,EAAS+B,GAChD,OACI,cAAC,KAAD,CAAsCue,YAAatgB,EAAQnI,IAAKkK,MAAOA,EAAvE,SACK,SAAC6e,GAAD,OAEG,6DAAUA,EAASI,iBAAqBJ,EAASK,gBAAjD,IAAiE5Z,IAAKuZ,EAASE,SAA/E,UACI,cAAChkB,EAAD,CAAYnF,KAAMqI,EAAQkW,SAAwBlZ,KAAM,GAAII,OAAO,EAC/DlC,QAAS,WACLsU,GAAe,GACfmC,EAAgB,sBAChBE,EAAe7R,EAAQkW,YAJWnU,GAOzC6e,EAASphB,kBAXNQ,EAAQkW,SAASre,QAkB5C+oB,EAASphB,mBAItB,sBAAMrE,UAAWE,KAAO,cAAeH,QAAS,WAAQsI,GAAaD,GAAWsS,KAAhF,yBASZ,gCACI,sBAAK1a,UAAWE,KAAO,oBAAvB,UACI,sBAAMF,UAAWE,KAAOJ,MAAxB,qBACA,qBAAKE,UAAWE,KAAOwlB,UAAvB,SAEQ/iB,EAAQ8B,QAAO,SAAApB,GAAC,OAAgB,IAAZA,EAAE2X,SAAgB/Z,KAAI,SAAC4D,EAAS+B,GAChD,OACI,+BACI,cAACjF,EAAD,CAAYnF,KAAMqI,EAAQkW,SAAWlZ,KAAM,MADpC+E,WAS/B,sBAAK5G,UAAWE,KAAO,oBAAvB,UACI,sBAAMF,UAAWE,KAAOJ,MAAxB,sBACA,qBAAKE,UAAWE,KAAOwlB,UAAvB,SAGQ/iB,EAAQ8B,QAAO,SAAApB,GAAC,OAAgB,IAAZA,EAAE2X,SAAgB/Z,KAAI,SAAC4D,EAAS+B,GAChD,OACI,oIAAkH,cAACjF,EAAD,CAAYnF,KAAMqI,EAAQkW,SAAWlZ,KAAM,OAAlJ+E,mBC9UxCmf,OAVf,SAAqBtpB,EAAIkG,GAErB,IAAMF,EAASE,EAAQiC,MAAM,SAAAQ,GAAC,OAAIA,EAAE2V,SAASre,MAAQD,KACrD,QAAKgG,GAIEA,EAAOuY,OCMH,SAASgL,GAAYzoB,GAAQ,IAAD,EACfC,mBAASD,EAAMuI,QAAQ9J,MADR,mBAChCA,EADgC,KAC1BsG,EAD0B,OAED9E,mBAASD,EAAMuI,QAAQvD,aAFtB,mBAEhCA,EAFgC,KAEnBC,EAFmB,KAGjCG,EAAUpF,EAAMuI,QAAQgV,aAHS,EAITtd,oBAAS,GAJA,mBAIhC6Y,EAJgC,KAIvBC,EAJuB,OAKD9Y,oBAAS,GALR,mBAKhC4W,EALgC,KAKnBC,EALmB,KAOjCnR,EAAc5C,qBAAWrD,GACzBW,EAAUC,cACV2C,EAASH,IACTwI,EAASC,cAET6E,EAAYpQ,EAAMuI,QAAQpJ,IAE1B+hB,EAAsB1gB,uBAAY,WACpCyC,EAAOwD,KAAK,iBAAkBzG,EAAMuI,WACrC,CAACtF,EAAQjD,EAAMuI,UAhBqB,4CAwBvC,WAA4B1C,GAA5B,eAAAC,EAAA,6DACID,EAAMM,iBACA1F,EAAQjC,EAAU,gBAF5B,SAG2BkC,MAAM,iBAAD,OAAkB0P,GAAa,CACvDzP,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBrF,OACAuG,kBAXZ,cAckBlE,IAGVogB,IACAlhB,EAAMwG,WACNvD,EAAOwD,KAAK,cAAe6E,EAAOG,SAJlCpL,EAAQU,KAAK,UAfrB,4CAxBuC,kEA+CvC,8BAAA+E,EAAA,6DACUrF,EAAQjC,EAAU,gBAD5B,SAE2BkC,MAAM,iBAAD,OAAkBV,EAAMuI,QAAQpJ,KAAO,CAC/DwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAN7B,cASkBK,IAGVd,EAAMwG,WACAsF,EAAM,CACRsE,UAAWpQ,EAAMuI,QAAQpJ,IACzBqM,OAAQF,EAAOG,QAEnBxI,EAAOwD,KAAK,kBAAmBqF,GAC/BzL,EAAQU,KAAR,gBAAsBuK,EAAOG,UAR7BpL,EAAQU,KAAK,UAVrB,4CA/CuC,sBAqEvC,OAnDAK,qBAAU,WACN2X,EAAWyP,GAAY7iB,EAAY1G,KAAKC,GAAIkG,MAC7C,CAACA,EAASO,EAAY1G,KAAKC,GAAIc,IAkD9B,sBAAKyC,UAAWE,KAAOiX,KAAvB,UACK/C,GACG,cAAC,GAAD,CACItU,MAAO,sBACP2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBA3EY,0CA2ENuS,MAIzB,sBAAKjmB,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAOJ,MAAvB,qBAEA,sBAAKE,UAAWE,KAAO,mBAAvB,UACI,yCACA,uBACIF,UAAWE,KAAO,iBAClBhB,MAAOlD,EACPkI,SAAU,SAAAC,GAAC,OAAI7B,EAAQ6B,EAAEb,OAAOpE,QAChCkF,MAAM,OACN3H,GAAG,YAGX,sBAAKuD,UAAWE,KAAO,yBAAvB,UACI,gDACA,0BACIF,UAAWE,KAAO,mBAClBhB,MAAOqD,EACP2B,SAAU,SAAAC,GAAC,OAAI3B,EAAe2B,EAAEb,OAAOpE,QACvCkF,MAAM,cACN3H,GAAG,cACH4H,YAAY,2BAGpB,qBAAKrE,UAAWE,KAAO,gBAAvB,SACI,cAAC,GAAD,CAAkB8a,MAAO3E,EAASvQ,QAASvI,EAAMuI,QAASnD,QAASpF,EAAMuI,QAAQgV,oBAGzF,8BACKzE,EACG,sBAAKrW,UAAWE,KAAO,eAAvB,UACI,cAAC,EAAD,CAAYF,UAAWE,KAAO,oBAAqBJ,MAAO,OAAQC,QA9G/C,8CA+GnB,cAAC,EAAD,CAAYC,UAAWE,KAAO,oBAAqBJ,MAAO,iBAC1DC,QAAS,WACLsU,GAAe,SAIrB,U,6CC/FP6R,GA1BS,SAAC,GAA+B,IAA7BvN,EAA4B,EAA5BA,KAAM7S,EAAsB,EAAtBA,QAASiD,EAAa,EAAbA,OAChC6X,EAAUjX,iBAAO,MAD4B,EAEjBzB,GAAsB0Y,GAFL,mBAE5CxO,EAF4C,KAEjCC,EAFiC,KAInD,OACI,qCACA,cAAC,EAAD,CACIrS,UAAS,UAAKE,KAAOygB,YAAZ,YAA2BzgB,KAAOkC,QAC3CrC,QAAS,kBAAMsS,GAAa,IAC5BvS,MAAO,qBAAK6H,IAAKsc,GAAQpc,IAAI,GAAG9I,MAAM,WAExCqT,GACE,cAAC,GAAD,CAAarO,SAAU,kBAAMsO,GAAa,IAA1C,SACI,cAACqO,GAAD,CACIE,QAASA,EACTD,YAAahI,EAAKgI,YAClBhI,KAAMA,EACN7S,QAASA,EACTiD,OAAQA,UCdb,SAASod,GAAT,GAAgE,IAAhDxN,EAA+C,EAA/CA,KAAM7S,EAAyC,EAAzCA,QAASsgB,EAAgC,EAAhCA,gBAAiB5L,EAAe,EAAfA,YACrDoG,EAAUjX,iBAAO,MADmD,EAEhCzB,GAAsB0Y,GAFU,mBAEnEgB,EAFmE,KAEpDC,EAFoD,KAIpE9Y,EADSD,cACOE,OAEtB,OACI,sBAAKhJ,UAAWE,KAAOyY,KAAvB,UACI,gCACOA,EAAK0G,UAA8B,IAAlB1G,EAAK0G,UAAmB1G,EAAKhW,QAAQY,OAAS,GAAKoV,EAAKgI,YAAYpd,OAAS,EAC7F,sBAAKvD,UAAWE,KAAO+D,UAAvB,UACK0U,EAAK0G,SAAW,qBAAKrf,UAAWE,KAAOmf,SAAvB,SAAiC,cAACD,GAAD,CAAaC,SAAU1G,EAAK0G,aAAqB,wBACnG,sBAAKrf,UAAWE,KAAO+D,UAAvB,UACK0U,EAAKgI,YAAYpd,OAAS,GACvB,cAAC,GAAD,CAAiBoV,KAAMA,EAAM7S,QAASA,EAASiD,OAAQA,IAE3D,cAAC,GAAD,CACIpG,QAASgW,EAAKhW,QACduX,UAAW,UAGd,KAEb,qBAAKla,UAAWE,KAAO,aAAvB,SACKyY,EAAK3c,UAGd,cAAC,EAAD,CACIgE,UAAWE,KAAOkC,OAClBrC,QAAS,WACLqmB,IACA5L,EAAY7B,IAEhB7Y,MAAO,qBAAK6H,IAAKgO,GAAK9N,IAAI,GAAG9I,MAAM,OAAOD,OAAO,WAEpD8iB,GAAiB,cAAC,GAAD,CAAa7d,SAAU,kBAAM8d,GAAiB,IAA9C,SACd,cAACnB,GAAD,CACIE,QAASA,EACTD,YAAahI,EAAKgI,YAClBhI,KAAMA,EACN7S,QAASA,EACTiD,OAAQA,S,wBCtDb,OAA0B,iCCe1B,SAASsd,GAAT,GAAwF,IAAvEhQ,EAAsE,EAAtEA,QAASvQ,EAA6D,EAA7DA,QAASW,EAAoD,EAApDA,KAAM6f,EAA8C,EAA9CA,aAAcF,EAAgC,EAAhCA,gBAAiB5L,EAAe,EAAfA,YAC7ErN,EAAcxD,iBAAO,MACrB4c,EAAU5c,iBAAO,MAF2E,EAGhEzB,GAAsBqe,GAH0C,mBAG3FnU,EAH2F,KAGhFC,EAHgF,OAIlDnK,GAAsBiF,GAJ4B,mBAI3F+G,EAJ2F,KAIzEC,EAJyE,OAKlE3W,mBAAS,IALyD,mBAK3FgpB,EAL2F,KAKjFC,EALiF,OAM5DjpB,oBAAS,GANmD,mBAM3F4W,EAN2F,KAM9EC,EAN8E,KAO5FzW,EAAUC,cACV2C,EAASH,IAET0I,EADSD,cACOE,OAIhByQ,EAAe1b,uBAAY,WAC7ByC,EAAOwD,KAAK,iBAAkB8B,KAC/B,CAACtF,EAAQsF,IAhBsF,4CAkBlG,4BAAAzC,EAAA,6DACUrF,EAAQjC,EAAU,gBAD5B,SAE2BkC,MAAM,uBAAD,OAAwB6H,EAAQpJ,IAAhC,YAAuC+J,EAAK/J,KAAO,CAC3EwB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,KAN7B,cASkBK,IAGVob,IACAjZ,EAAOwD,KAAK,mBAAoB+E,IAHhCnL,EAAQU,KAAK,UAVrB,4CAlBkG,sBAmClG,IAAMooB,EAAU3oB,sBAAW,uCAAC,WAAOqF,GAAP,eAAAC,EAAA,yDACxBD,EAAMM,iBACW,KAAb8iB,EAFoB,wDAKlBxoB,EAAQjC,EAAU,gBALA,SAMDkC,MAAM,6BAAD,OAA8BwI,EAAK/J,KAAO,CAClEwB,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBrF,KAAMwqB,EACNjkB,YAAa,GACbwb,QAAS,GACTsB,SAAU,GACV1c,QAAS,OAjBO,iBAqBVtE,GArBU,wBAsBpBT,EAAQU,KAAK,UAtBO,2BAyBpB+T,GAAcD,GACdqU,EAAY,IACZhN,IA3BoB,4CAAD,sDA8BxB,CAAC7b,EAAS4oB,EAAU/f,EAAK/J,IAAK+c,EAAcrH,EAAWC,IAO1D,OAEI,sBAAKrS,UAAWE,KAAOuG,KAAvB,UACK2N,GACG,cAAC,GAAD,CACItU,MAAO,+BACP2T,YAAa,kBAAMY,GAAe,IAClCX,UAAW,kBA/EuE,0CA+EjEiT,MAGzB,sBAAK3mB,UAAWE,KAAO0mB,IAAvB,UACI,gCACI,qBAAK5mB,UAAWE,KAAOlE,KAAvB,SAA8ByK,EAAKzK,OACnC,cAACgK,GAAD,CAAWnH,MAAO4H,EAAK5H,OAAS,UAAWD,KAAM,YAGjDyX,GACA,cAAC,EAAD,CACIrW,UAAWE,KAAOkC,OAClBrC,QAAS,kBAAMoU,GAAqBD,IACpCpU,MAAO,qBAAKE,UAAWE,KAAO2mB,KAAMlf,IAAKkf,GAAMhf,IAAI,MAAM9I,MAAM,KAAKD,OAAO,WAIvF,qBAAKkB,UAAWE,KAAOsV,SAAvB,SACKtB,GAAoB,sBAAKhI,IAAKiB,EAAanN,UAAS,UAAKE,KAAO0H,MAA5C,UACb,cAAC,EAAD,CACI7H,QAhCxB,WACIumB,IACAnS,GAAqBD,IA+BDpU,MAAM,OACNE,UAAWE,KAAOuV,OAEtB,cAAC,EAAD,CAEI1V,QAAS,kBAAMsU,GAAe,IAC9BvU,MAAM,SACNE,UAAWE,KAAOwV,cAIlC,cAAC,KAAD,CAAW2P,YAAa5e,EAAK/J,IAAKkC,KAAK,mBAAvC,SACK,SAAC6mB,GAAD,OACG,sBAAKzlB,UAAWE,KAAOwlB,UAAWxZ,IAAKuZ,EAASE,SAAhD,UAEQlf,EAAKge,MAAMxjB,KAAI,SAAC4D,EAAS+B,GACrB,OACI,cAAC,KAAD,CAA6Bue,YAAatgB,EAAQnI,IAC9CkK,MAAOA,EADX,SAGK,SAAC6e,GAAD,OACG,gCACI,2DAASA,EAASI,iBAAqBJ,EAASK,gBAAhD,IAAgE5Z,IAAKuZ,EAASE,SAA9E,SACI,cAACQ,GAAD,CACIxN,KAAM9T,EACNiB,QAASA,EACTsgB,gBAAiBA,EACjB5L,YAAaA,OAGpBiL,EAASphB,iBAbNQ,EAAQnI,QAoBnC+oB,EAASphB,kBAItB,qBAAKrE,UAAWE,KAAO4mB,QAAvB,SAEQ1U,EACI,uBAAMlG,IAAKqa,EAASvmB,UAAWE,KAAO+D,UAAtC,UACI,uBACI8iB,WAAS,EACT/mB,UAAWE,KAAO,cAClBtB,KAAM,OACNM,MAAOsnB,EACPtiB,SAAU,SAAAC,GAAC,OAAIsiB,EAAYtiB,EAAEb,OAAOpE,UAExC,cAAC,EAAD,CAAaN,KAAK,SAASoB,UAAWE,KAAO8mB,QAASjnB,QAAS2mB,EAAS5mB,MAAM,aAAagG,QAASA,OAC9F,cAAC,EAAD,CAAa9F,UAAWE,KAAO,YAAaH,QAAS,kBAAMsS,GAAcD,IAAYtS,MAAM,oB,wBCxK9G,OAA0B,gC,8BCe1B,SAASmnB,GAAS1pB,GAC7B,IAAMgkB,EAAU5X,iBAAO,MADa,EAEAnM,mBAAS,MAFT,mBAE7BmlB,EAF6B,KAEjBC,EAFiB,OAGFplB,mBAAS,MAHP,mBAG7BoiB,EAH6B,KAGlBC,EAHkB,OAQZriB,mBAASD,EAAMkJ,KAAKzK,MARR,mBAQ7BA,EAR6B,KAQvBsG,EARuB,KAS9B1E,EAAUC,cACV2C,EAASH,IACT8M,EAAcxD,iBAAO,MAXS,EAYMzB,GAAsBiF,GAZ5B,mBAY7B+Z,EAZ6B,KAYdC,EAZc,OAaV3pB,mBAASD,EAAMkJ,KAAK5H,OAAS,WAbnB,mBAa7BA,EAb6B,KAatBuoB,EAbsB,OAcN5pB,oBAAS,GAdH,mBAc7B6Y,EAd6B,KAcpBC,EAdoB,KAe9B3T,EAAUpF,EAAMuI,QAAQgV,aACxB5X,EAAc5C,qBAAWrD,GACzB0Q,EAAYpQ,EAAMuI,QAAQpJ,IAC1Bod,EAASvc,EAAMkJ,KAAK/J,IAEpBqM,EADSD,cACOE,OApBc,SA0BrBvF,EA1BqB,8EA0BpC,WAA4BU,GAA5B,eAAAd,EAAA,6DACIc,EAAET,iBACI1F,EAAQjC,EAAU,gBAF5B,SAG2BkC,MAAM,uBAAD,OAAwB0P,EAAxB,YAAqCmM,GAAU,CACvE5b,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CAAErF,OAAM6C,YATrC,cAWkBR,IAGVmC,EAAOwD,KAAK,iBAAkBzG,EAAMuI,SACpCtF,EAAOwD,KAAK,mBAAoB+E,GAChCxL,EAAMwG,YAJNnG,EAAQU,KAAK,UAZrB,4CA1BoC,sBAsBpCK,qBAAU,WACN2X,EAAWyP,GAAY7iB,EAAY1G,KAAKC,GAAIkG,MAC7C,CAACA,EAASO,EAAY1G,KAAKC,KA0C9B,OAfAkC,qBAAU,WACN6F,YAAW,WACPoe,EAAcrB,EAAQjZ,QAAQ2a,aAAe,KAC9C,KACJ,IAYC,qBAAKjjB,UAAWE,KAAOiX,KAAvB,SACI,uBAAMnX,UAAWE,KAAO+D,UAAxB,UACI,cAAC,GAAD,CAAOjE,UAAWE,KAAOJ,MAAOA,MAAM,cAEtC,sBAAKE,UAAWE,KAAO,mBAAvB,UACI,sBAAMF,UAAWE,KAAOlE,KAAxB,mBAQA,0BACIkQ,IAAKqV,EACLvhB,UAAS,UAAKE,KAAO,cAAZ,YAA6BA,KAAOgjB,MAC7CjjB,MAAO,CAAE,OAAU0iB,GACnBzjB,MAAOlD,EACPiN,QAAS,kBAAM4W,EAAa7jB,IAC5BukB,UAAW,SAAApc,GAAC,OA7BH4e,EA6BuBzgB,EA7BX4J,EA6BoBqV,OA5BnC,KA4BuBpd,EA5BnCqc,UACNuC,EAAWnD,GACXpb,YAAW,WACP0H,EAAI5D,QAAQ0a,SACb,KALX,IAA6BD,EAAY7W,GA8BrBhI,SAAU,SAAAC,GACN7B,EAAQ6B,EAAEb,OAAOpE,OACjB0jB,EAAcrB,EAAQjZ,QAAQ2a,aAAe,IAEjD1e,OAAQ,SAACJ,GACDyb,IAAc5jB,GAClByH,EAAaU,SAIzB,sBAAKnE,UAAWE,KAAO,gBAAvB,UACI,sBAAMF,UAAWE,KAAO,eAAxB,mBAGA,sBAAMF,UAAWE,KAAO,cAAxB,SACI,cAAC,EAAD,CACIF,UAAWE,KAAO,gBAClBD,MAAO,CAAEonB,WAAW,GAAD,OAAKxoB,IACxBkB,QAAS,kBAAMonB,GAAkBD,WAI5CA,GAAiB,qBAAKhb,IAAKiB,EAAV,SACd,cAAC,KAAD,CAAcnN,UAAWE,KAAO,cAAerB,MAAOA,EAAOyoB,iBAhEvD,SAACzoB,GACnBuoB,EAASvoB,EAAM0oB,UAiEP,qBAAKvnB,UAAWE,KAAO,oBAAvB,SACKmW,GACG,cAAC,EAAD,CAAYtW,QAAS,SAACoE,GAAD,OAAKV,EAAaU,IAAIrE,MAAM,qBC3G1D,SAAS0nB,KACpB,IAAM3e,EAASC,cACTlL,EAAUC,cAFmB,EAGLL,mBAAS,IAHJ,mBAG5BmF,EAH4B,KAGnBC,EAHmB,OAIOpF,oBAAS,GAJhB,mBAI5BiqB,EAJ4B,KAIbC,EAJa,OAKelqB,oBAAS,GALxB,mBAK5BmqB,EAL4B,KAKTC,EALS,OAMHpqB,mBAAS,IANN,mBAM5BqqB,EAN4B,KAMlBC,EANkB,KAO7BlH,EAAUjX,iBAAO,MAPY,EAQHzB,GAAsB0Y,GARnB,mBAQ5BxY,EAR4B,KAQlBC,EARkB,KAS7B7H,EAASH,IACTqG,EAAiBpG,qBAAWmF,IAVC,EAWDjI,oBAAS,GAXR,mBAW5B4U,EAX4B,KAWjBC,EAXiB,OAYH7U,mBAAS,IAZN,mBAY5BuqB,EAZ4B,KAYlBvN,EAZkB,OAaHhd,mBAAS,IAbN,mBAa5BwqB,EAb4B,KAalBC,EAbkB,OAcLzqB,oBAAS,GAdJ,mBAc5B6Y,GAd4B,KAcnBC,GAdmB,QAeD9Y,oBAAS,GAfR,qBAe5B0qB,GAf4B,MAejBC,GAfiB,MAgB7B9c,GAAU/K,qBAAWrD,GACrB8L,GAASF,EAAOG,OAChBhL,GAAQjC,EAAU,gBAElBqsB,GAAgBrqB,uBAAY,SAAC+H,GAE/BY,EAAeX,WAAWD,GAE1B,IAAMuiB,EAAY,GAClBviB,EAAQgV,aAAa7Z,KAAI,SAAA4D,GACrB,OAAOwjB,EAAU/pB,KAAK,CAAE0c,MAAOnW,EAAQmW,MAAOze,SAAUsI,EAAQkW,SAASxe,cAG7EqG,EAAWylB,GACX3hB,EAAef,SAASG,EAAQJ,SACjC,CAACgB,IAIJ/H,qBAAU,WACN,IAAMlC,EAAKoM,EAAO0C,UAElB,GAAc,MAAV/K,EAKJ,OAHAA,EAAO+G,GAAG,kBAAmB6gB,IAE7B5nB,EAAOwD,KAAK,eAAgBvH,GACrB,kBAAM+D,EAAOgH,IAAI,sBACzB,CAAChH,EAAQ4nB,GAAevf,EAAO0C,YAKlC5M,qBAAU,WACN,GAAK+H,EAAeZ,SAAWY,EAAeZ,QAAQpJ,MAAQmM,EAAO0C,YAIjE2c,GAAJ,CAEA,IAAMG,EAAY,GAClB3hB,EAAeZ,QAAQgV,aAAa7Z,KAAI,SAAA4D,GACpC,OAAOwjB,EAAU/pB,KAAK,CAAE0c,MAAOnW,EAAQmW,MAAOze,SAAUsI,EAAQkW,SAASxe,SAAUE,GAAIoI,EAAQkW,SAASre,SAG5GkG,EAAWylB,GACX3hB,EAAef,SAASe,EAAeZ,QAAQJ,OAC/C,IAAMjD,EAAS4lB,EAAUzjB,MAAK,SAAAQ,GAAC,OAAIA,EAAE3I,KAAO4O,GAAQ7O,KAAKC,MAErDgG,GACA6T,GAAW7T,EAAOuY,UAGvB,CAACtU,EAAeZ,QAAS+C,EAAO0C,UAAW7E,EAAgB2E,GAAQ7O,KAAKC,GAAIyrB,KAG/E,IAAMI,GAA2BvqB,sBAAW,sBAAC,wCAAAsF,EAAA,yDACnCtC,EAASsK,GAAQ7O,KAAKC,GACxB8rB,EAFqC,eAElBld,GAAQ7O,SAC3BgsB,EAHqC,YAGxBD,EAAYxrB,iBAElBwG,OAAS,GAAKilB,EAAO,GAAG9rB,MAAQmM,EAAO0C,WALT,wDAOnCzH,EAAM0kB,EAAO/jB,QAAO,SAAAiI,GAAC,OAAIA,EAAEhQ,MAAQmM,EAAO0C,cAC5CjN,KAAK,CAAE5B,IAAKmM,EAAO0C,UAAWvP,KAAM0K,EAAeZ,QAAQ9J,OAE3D8H,EAAIP,OAAS,GACbO,EAAI2kB,QAXiC,UAgBlBxqB,MAAM,4BAAD,OAA6B8C,GAAU,CAC/D7C,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,IAClB2F,KAAMvC,KAAKC,UAAU,CACpBtE,eAAgB+G,MAtBiB,YAgBnCxH,EAhBmC,QAyB3B+B,GAzB2B,iBA0BrCT,EAAQU,KAAK,UA1BwB,yCA4BlBhC,EAASmC,OA5BS,QA4B/B+M,EA5B+B,OA6B/BhP,EAAOH,EAAWmP,GACxBH,GAAQjO,MAAMZ,GA9BuB,4CAgC1C,CAAC6O,GAASzN,EAASiL,EAAO0C,UAAW7E,EAAeZ,QAAS9H,KAWhE,GATAW,qBAAU,WACD+H,EAAeZ,SAAWY,EAAeZ,QAAQpJ,MAAQmM,EAAO0C,WAGjE+c,OAEL,CAACzf,EAAO0C,UAAW7E,EAAeZ,QAASwiB,MAGzC5hB,EAAeZ,SAAWY,EAAeZ,QAAQpJ,MAAQmM,EAAO0C,UACjE,OACI,cAAC,GAAD,UACI,cAAC,IAAD,CACI3M,KAAK,WACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,QA3HU,8CAkInC,WAA+B8V,GAA/B,yDAAAzR,EAAA,yDACSyR,EAAOmQ,YADhB,oDAGIkD,IAAa,GAEO,kBAAhBrT,EAAOlW,KALf,wBAMY8pB,EAAW5T,EAAOmQ,YAAYre,MAE5B+hB,EAAejiB,EAAehB,MAAMjB,QAAO,SAAAI,GAAO,OAAM6B,EAAed,YAAY9E,SAAS+D,EAAQnI,QACpGksB,EAAaD,EAAaD,EAAW,GAC3CA,EAAWhiB,EAAehB,MAAMmB,QAAQ+hB,GAAc,EAEhDC,EAZd,YAYgCniB,EAAehB,OAZ/C,EAagCmjB,EAAY/hB,OAAOgO,EAAOgU,OAAOliB,MAAO,GAbxE,mBAaemiB,EAbf,KAcQF,EAAY/hB,OAAOgO,EAAOmQ,YAAYre,MAAO,EAAGmiB,GAChDriB,EAAef,SAASkjB,GAfhC,UAiB+B5qB,MAAM,uBAAD,OAAwByI,EAAeZ,QAAQpJ,IAA/C,YAAsDoY,EAAOqQ,YAA7D,eAAuF,CAC/GjnB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,IAErB2F,KAAMvC,KAAKC,UAAU,CACjBqnB,WACA7jB,QAAS,WAzBzB,YAiBcvI,EAjBd,QA4BsB+B,GA5BtB,iBA6BYT,EAAQU,KAAK,UA7BzB,yCA+ByChC,EAASmC,OA/BlD,QA+BkBuqB,EA/BlB,OAgCYtiB,EAAeX,WAAWijB,GAhCtC,WAoCwB,qBAAhBlU,EAAOlW,KApCf,iBAqCc8pB,EAAW5T,EAAOmQ,YAAYre,MAC9BqiB,EAAcnU,EAAOgU,OAAOliB,MAC5BkiB,EAAShU,EAAOgU,OAAOzD,YACvBJ,EAAcnQ,EAAOmQ,YAAYI,YAEjCwD,EA1Cd,YA0CgCniB,EAAehB,OACnCwjB,EAAiB,GACjBC,EAAsB,GA5ClC,eA8CyBN,GA9CzB,IA8CQ,4BAASpiB,EAAqB,SACjB/J,MAAQosB,IAAQI,EAAiBL,EAAYhiB,QAAQJ,IAC1DA,EAAK/J,MAAQuoB,IAAakE,EAAsBN,EAAYhiB,QAAQJ,IAhDpF,uCAmDuBoiB,EAAYK,GAAgBzE,MAAM3d,OAAOmiB,EAAa,GAnD7E,mBAmDenF,EAnDf,KAoDQ+E,EAAYM,GAAqB1E,MAAM3d,OAAO4hB,EAAU,EAAG5E,GAC3Dpd,EAAef,SAASkjB,GArDhC,UAuD+B5qB,MAAM,uBAAD,OAAwByI,EAAeZ,QAAQpJ,IAA/C,YAAsDoY,EAAOqQ,YAA7D,eAAuF,CAC/GjnB,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,IAErB2F,KAAMvC,KAAKC,UAAU,CACjBqnB,WACA7jB,QAAS,OACTikB,SACA7D,kBAjEhB,eAoEsB5mB,IACVT,EAAQU,KAAK,UArEzB,QAyEIkC,EAAOwD,KAAK,iBAAkB0C,EAAeZ,SAC7CtF,EAAOwD,KAAK,mBAAoB+E,IAChCof,IAAa,GA3EjB,6CAlImC,sBAgNnC,IAAMiB,GAAO,uCAAG,WAAOjlB,GAAP,SAAAd,EAAA,yDACZc,EAAET,iBAEe,KAAbmkB,EAHQ,iEAMW5pB,MAAM,uBAAD,OAAwByI,EAAeZ,QAAQpJ,KAAO,CAC9EwB,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,IAErB2F,KAAMvC,KAAKC,UAAU,CAAErF,KAAM6rB,MAZrB,iBAcExpB,GAdF,wBAeRT,EAAQU,KAAK,UAfL,2BAkBR+J,GAAaD,GACb0f,EAAY,IACZtnB,EAAOwD,KAAK,iBAAkB0C,EAAeZ,SApBrC,4CAAH,sDA2Bb,OACI,cAAC,GAAD,UACI,sBAAK7F,MAAO,CAAEyoB,SAAU,YAAxB,UACKtW,GACG,8BACI,cAAC,GAAD,CAAarO,SAAU,kBAAMsO,GAAcD,IAA3C,SACI,cAACmQ,GAAD,CACIxe,SAAU,kBAAMsO,GAAcD,IAC9BoQ,YAAauF,EACbjO,OAAQkO,EACRliB,QAASY,EAAeZ,QACxBiD,OAAQA,GACRyR,YAAaA,QAK5BmN,GACG,8BACI,cAAC,GAAD,CAAa5jB,SAAU,kBAAM6jB,GAAsBD,IAAnD,SACI,cAACV,GAAD,CAAUljB,SAAU,kBAAM6jB,GAAsBD,IAAoBlhB,KAAMuhB,EAAUliB,QAASY,EAAeZ,cAIxH,cAAC,KAAD,CAAiB0f,UAnQM,6CAmQvB,SACI,cAAC,KAAD,CAAWH,YAAY,YAAYgE,UAAU,aAAazqB,KAAK,gBAA/D,SACK,SAAC6mB,GAAD,OACG,sBAAKzlB,UAAWE,KAAO,uBAAwBgM,IAAKuZ,EAASE,SAA7D,UACKjf,EAAehB,MACXjB,QAAO,SAAAI,GAAO,OAAM6B,EAAed,YAAY9E,SAAS+D,EAAQnI,QAChEuE,KAAI,SAAC4D,EAAS+B,GACX,OACI,cAAC,KAAD,CAA6Bue,YAAatgB,EAAQnI,IAAKkK,MAAOA,EAA9D,SACK,SAAC6e,GAAD,OACG,2DAASA,EAASI,iBAAqBJ,EAASK,gBAAhD,IAAgE5Z,IAAKuZ,EAASE,SAA9E,SACI,cAACU,GAAD,CACI5f,KAAM5B,EACNiB,QAASY,EAAeZ,QACxBuQ,QAASA,GACTiQ,aAAc,WACV2B,EAAYpjB,GACZ+iB,GAAsBD,IAE1BvB,gBAAiB,WACb6B,EAAYpjB,EAAQnI,KACpB2V,GAAcD,IAElBoI,YAAaA,SAfb3V,EAAQnI,QAuBnC+oB,EAASphB,YACTgS,IACG,qBAAKrW,UAAWE,KAAOuG,KAAvB,SACK2B,EACG,uBAAM8D,IAAK0U,EAAS5gB,UAAWE,KAAO+D,UAAtC,UACI,uBACI8iB,WAAS,EACT/mB,UAAWE,KAAO+E,MAClBrG,KAAM,OACNM,MAAO2oB,EACP3jB,SAAU,SAAAC,GAAC,OAAI2jB,EAAY3jB,EAAEb,OAAOpE,UAExC,cAAC,EAAD,CAAaN,KAAK,SAASoB,UAAWE,KAAO8mB,QAASjnB,QAASqpB,GAAStpB,MAAM,kBACxE,cAAC,EAAD,CAAaE,UAAWE,KAAO8mB,QAASjnB,QAAS,kBAAMsI,GAAaD,IAAWtI,MAAM,yBAS3H,cAAC,EAAD,CAAYA,MAAO,eAAgBC,QAAS,kBAAM2nB,GAAkBD,MAGnEA,GACG,8BACI,cAAC,GAAD,CAAa1jB,SAAU,kBAAM2jB,GAAkBD,IAA/C,SACI,cAACzB,GAAD,CAAajiB,SAAU,kBAAM2jB,GAAkBD,IAAgB3hB,QAASY,EAAeZ,QAASnD,QAASA,QAKrH,qBAAK3C,UAAWE,KAAOwkB,IAAK/c,IAAK+c,GAAK7c,IAAI,GAAG9I,MAAM,MAAMD,OAAO,a,oFChVjE,SAASwqB,GAAT,GAA8C,IAA1B3Q,EAAyB,EAAzBA,KAAMmB,EAAmB,EAAnBA,OAAQhU,EAAW,EAAXA,QAE1CqH,EAAcxD,iBAAO,MAFgC,EAG3BzB,GAAsBiF,GAHK,mBAGpD/E,EAHoD,KAG1CC,EAH0C,OAI3B7K,mBAASmb,EAAK3c,MAJa,mBAIpDwqB,EAJoD,KAI1CC,EAJ0C,KAKrD7oB,EAAUC,cACV2C,EAASH,IAET0I,EADSD,cACOE,OAEhBugB,EAAexrB,sBAAW,uCAAC,WAAOqF,GAAP,iBAAAC,EAAA,yDAChCD,EAAMM,iBAEAmW,EAASlB,EAAKjc,IAEH,KAAb8pB,EAL4B,uBAM/BnX,QAAQC,IAAI,UANmB,iCAS1BtR,EAAQjC,EAAU,gBATQ,SAUTkC,MAAM,6BAAD,OAA8B6b,EAA9B,YAAwCD,GAAU,CAC7E3b,OAAQ,MACRC,QAAS,CACR,eAAgB,mBAChB,cAAiBH,GAElB2F,KAAMvC,KAAKC,UAAU,CACpBrF,KAAMwqB,MAjBwB,iBAoBlBnoB,GApBkB,wBAqB/BT,EAAQU,KAAK,UArBkB,2BAwB/B+J,GAAaD,GACb5H,EAAOwD,KAAK,iBAAkB8B,GAC9BtF,EAAOwD,KAAK,mBAAoB+E,GA1BD,4CAAD,sDA6B7B,CAACnL,EAAS4oB,EAAUpe,EAAUC,EAAasQ,EAAKjc,IAAKod,EAAQhU,EAAStF,EAAQuI,IAGjF,OACC,8BACGX,EACD,qBAAM8D,IAAKiB,EAAanN,UAAWE,KAAOspB,cAAejlB,OAAQglB,EAAjE,SAEC,0BACCvpB,UAAWE,KAAOupB,iBAClBvqB,MAAOsnB,EACPtiB,SAAU,SAAAC,GAAC,OAAIsiB,EAAYtiB,EAAEb,OAAOpE,QACpCwqB,KAAM,MAIR,gCACC,sBAAM1pB,UAAWE,KAAO,yBAAxB,SACGyY,EAAKgI,aAAehI,EAAKgI,YAAYpd,OAAS,IAAM6E,GACrD,cAAC,GAAD,CACAuQ,KAAMA,EACN7S,QAASA,EACTiD,OAAQA,MAIV,qBAAK/I,UAAWE,KAAOypB,UAAW5pB,QAAS,kBAAMsI,GAAaD,IAA9D,SACEoe,SCpEQ,SAAS/G,GAAaliB,GAEjC,IAAM8gB,EAAQ+B,mBAAQ,kBAAM,IAAIpI,KAAKA,KAAK4R,KAAI,IAAI5R,MAAO4E,eAAe,IAAI5E,MAAO8D,YAAY,IAAI9D,MAAO+D,cAAa,IACjHpD,EAAOpb,EAAMob,KAHqB,EAIFnb,mBAASmb,EAAK/a,SAJZ,mBAIjCmhB,EAJiC,KAIpBW,EAJoB,KAMpCmK,EAAe,GACf7rB,EAFUT,EAAM2B,MAEFmb,MAAM,KAEpBrc,EAAMuF,OAAS,IACfsmB,EAAe7rB,EAAM,IAGzB,IAAMmP,EAAcxD,iBAAO,MAba,EAcRzB,GAAsBiF,GAdd,mBAcjC/E,EAdiC,KAcvBC,EAduB,OAeA7K,mBAASqsB,GAfT,mBAejCC,EAfiC,KAenBC,EAfmB,KAgBlCnsB,EAAUC,cACV2C,EAASH,IAET0I,EADSD,cACOE,OAGhBghB,EAAmBjsB,sBAAW,uCAAC,WAAOqF,GAAP,yBAAAC,EAAA,yDACjCD,EAAMM,iBAMAmW,EAASlB,EAAKjc,IACdod,EAASvc,EAAMuc,OAGhBgQ,EAX4B,oDAe3BG,EAAkBzK,OAAOsK,GACzBI,EAAkB/P,KAAKmG,IAAInG,KAAKC,IAAI6P,EAAiB,KAAM,IAC7DlG,MAAMkG,IAAoBC,IAAoBJ,EAjBjB,wDAqBjCC,EAAgBG,GAEVC,EAvB2B,sBAuBNpL,GAvBM,CAuBQ,CAAE3b,MAAM,YAAD,OAAc0mB,EAAd,KAA+BnO,KAAM0C,KACrFqB,EAAeyK,GAGTnsB,EAAQjC,EAAU,gBA3BS,UA4BVkC,MAAM,6BAAD,OAA8B6b,EAA9B,YAAwCD,GAAU,CAC1E3b,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBge,SAAUyK,EACVlsB,QAASusB,MApCgB,kBAwCnB9rB,GAxCmB,wBAyC7BT,EAAQU,KAAK,UAzCgB,2BA6CjC+J,GAAaD,GACb5H,EAAOwD,KAAK,iBAAkBzG,EAAMuI,SACpCtF,EAAOwD,KAAK,mBAAoB+E,GA/CC,4CAAD,sDAiDjC,CAACnL,EAASksB,EAAc1hB,EAAUC,EAAa0W,EAAaV,EAAO1F,EAAKjc,IAAKa,EAAMuc,OAAQvc,EAAMuI,QAAStF,EAAQuI,IA8BrH,SAASqhB,EAAmBlrB,GACxB,IAAImrB,EAAY,GAChB,QAAQ,GACJ,KAAgB,MAAVnrB,GAA2B,QAAVA,EACnBmrB,EAAY,UACZ,MACJ,KAAMnrB,EAAQ,GACVmrB,EAAY,UACZ,MACJ,KAAMnrB,EAAQ,IACVmrB,EAAY,UAKpB,OAAOA,EAKX,OACI,mCAGQjiB,EACI,qBAAK8D,IAAKiB,EAAanN,UAAWE,KAAOoqB,aAAc/lB,OAAQylB,EAA/D,SACI,uBACIhqB,UAAWE,KAAOqqB,wBAClBtqB,MAAO,CAAEsf,gBAAiB6K,EAAmBN,IAC7ClrB,KAAM,SACNM,MAAO4qB,EAEP5lB,SAAU,SAAAC,GAAC,OAAI4lB,EAAgB5lB,EAAEb,OAAOpE,QACxCkb,IAAI,IAAIkG,IAAI,MACZyG,WAAS,MAQjB,qBAAK/mB,UAAWE,KAAOoqB,aAAcvqB,QAAS,kBAAMsI,GAAaD,IAAjE,SArEhB,SAA0BlJ,GAEtB,OAAIA,GAAmB,SAAVA,EAEL,sBAAKe,MAAO,CACRsf,gBAAiB6K,EAAmBlrB,GACpCsrB,QAAS,MACTC,OAAQ,kBACRC,aAAc,MACdC,UAAW,OACX5rB,MAAO,OACP6rB,UAAW,SACXC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAVpB,cAWM7rB,EAXN,QAgBJ,qBAAKe,MAAO,CAAE4qB,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUjsB,OAAQ,QAAvF,mBAoDaksB,CAAiBnB,OC7I3B,SAAS/L,GAAYvgB,GAEhC,IAAM4P,EAAcxD,iBAAO,MAFY,EAGPzB,GAAsBiF,GAHf,mBAGhC/E,EAHgC,KAGtBC,EAHsB,OAID7K,mBAASD,EAAMygB,aAJd,mBAIhCA,EAJgC,KAInBC,EAJmB,OAKLzgB,oBAAS,GALJ,mBAKhC4U,EALgC,KAKrBC,EALqB,KAMjCzU,EAAUC,cACV2C,EAASH,IACTge,EAAQ,IAAIrG,MAAK,IAAIA,MAAO4E,eAAe,IAAI5E,MAAO8D,YAAY,IAAI9D,MAAO+D,WAE7EhT,EADSD,cACOE,OAGhB0V,EAAkB3gB,sBAAW,uCAAC,WAAO4d,GAAP,mBAAAtY,EAAA,yDAE5BwW,EAAStc,EAAMsc,OACfC,EAASvc,EAAMuc,OAEC,KAAhBkE,GAA+B,KAATrC,EALM,uBAM5BtM,QAAQC,IAAI,UANgB,iCAS1BtR,EAAQjC,EAAU,gBATQ,SAUTkC,MAAM,6BAAD,OAA8B6b,EAA9B,YAAwCD,GAAU,CAC1E3b,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjB0c,QAASpC,MAjBe,iBAoBlBtd,GApBkB,wBAqB5BT,EAAQU,KAAK,UArBe,2BAwB5B+J,GAAaD,GACb5H,EAAOwD,KAAK,iBAAkBzG,EAAMuI,SACpCtF,EAAOwD,KAAK,mBAAoBzG,EAAMwL,QA1BV,4CAAD,sDA6BhC,CAACnL,EAASogB,EAAa3V,EAAaD,EAAU7K,EAAMsc,OAAQtc,EAAMuc,OAAQvc,EAAMuI,QAAStF,EAAQjD,EAAMwL,SAOpG7J,EAAQ3B,EAAM2B,MAEpB,OACI,uBAAMc,UAAWE,KAAO+qB,aAAxB,UACI,cAAC,KAAD,CACIrM,SAAU1f,EAAQ8e,EAAcK,EAChCM,YACIzf,EACI,qBAAKc,UAAWE,KAAOgrB,kBAAvB,SACI,+BAAOhsB,MAEX,+CAERgF,SAlBc,SAACyX,GACvBsC,EAAetC,GACf+C,EAAgB/C,IAiBRvX,MAAM,aACNG,OAAQrF,EAAQ,kBAAMmJ,GAAaD,IAAY,KAC/CyW,gBAAgB,aAChBsM,cAAe,SAAAhnB,GAAC,OAAIA,EAAEb,SAAWpH,SAASkvB,uBAAuB,YAAY,MAG/EhZ,EACE,+BACI,cAAC,GAAD,CAAarO,SAAU,kBAAMsO,GAAcD,IAA3C,SACI,cAACmQ,GAAD,CACIxe,SAAU,kBAAMsO,GAAcD,IAC9BoQ,YAAajlB,EAAMob,KACnBmB,OAAQvc,EAAMuc,OACdhU,QAASvI,EAAMuI,QACfiD,OAAQA,QAKpB,+BACI,qBACI/I,UAAWE,KAAOyV,IAClBhO,IAAKgO,GACL9N,IAAI,MACJ9I,MAAM,KACND,OAAO,KACPiB,QAAS,kBAAMsS,GAAa,WClGpD,IAyCegZ,GAtCW,SAAC,GAAmF,IAAjF5nB,EAAgF,EAAhFA,aAAc6nB,EAAkE,EAAlEA,kBAAmBC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,eAAgBnnB,EAAkB,EAAlBA,YACjFgf,EAAW1Z,iBAAO,MADiF,EAErEnM,mBAAS,MAF4D,mBAElGmlB,EAFkG,KAEtFC,EAFsF,KAuBzG,OACI,0BACI1jB,MAAOqsB,EACPrf,IAAKmX,EACLhf,YAAaA,EACbrE,UAAWE,KAAOupB,iBAClBxpB,MAAO,CAAE,OAAU0iB,EAAY5jB,MAAO,QACtCwhB,UAjBc,SAACnd,GACnB,OAhBgB,KAgBZA,EAAMod,QACC8K,IAlBI,KAqBXloB,EAAMod,QACC/c,SADX,GAaIS,SA3Ba,SAACd,GAPH,KAQXA,EAAMod,UAIVgL,EAAepoB,EAAME,OAAOpE,OAC5B0jB,EAAcS,EAAS/a,QAAQ2a,aAAe,KAsB1C1e,OAAQd,EACRsjB,WAAS,KCjCN,SAAS0E,GAAT,GAA0D,IAAvC3R,EAAsC,EAAtCA,OAAQhU,EAA8B,EAA9BA,QAASwlB,EAAqB,EAArBA,kBAAqB,EACpC9tB,mBAAS,IAD2B,mBAC7DkuB,EAD6D,KACnDC,EADmD,KAE9DnrB,EAASH,IACTzC,EAAUC,cAEV4F,EAAY,uCAAG,4BAAAJ,EAAA,yDACZqoB,EADY,yCAENJ,KAFM,cAKXttB,EAAQjC,EAAU,gBALP,SAMMkC,MAAM,6BAAD,OAA8B6b,GAAU,CAChE5b,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CACjBrF,KAAM0vB,EACNrM,SAAU,OAdD,iBAkBHhhB,GAlBG,uBAmBbT,EAAQU,KAAK,UAnBA,0BAwBjBkC,EAAOwD,KAAK,iBAAkB8B,GAE9BwlB,IA1BiB,4CAAH,qDA6BlB,OACI,cAAC,GAAD,CACIC,YAAaG,EACbF,eAAgBG,EAChBloB,aAAcA,EACd6nB,kBAAmBA,EACnBjnB,YAAY,yBCxCT,SAASunB,GAAT,GAAkD,IAA/B9lB,EAA8B,EAA9BA,QAASwlB,EAAqB,EAArBA,kBAAqB,EAC5B9tB,mBAAS,IADmB,mBACrDqqB,EADqD,KAC3CC,EAD2C,KAEtDtnB,EAASH,IACTzC,EAAUC,cAGV4F,EAAe1F,sBAAW,sBAAC,8BAAAsF,EAAA,yDACvBsK,EAAY7H,EAAQpJ,IACrBmrB,EAFwB,yCAGlByD,KAHkB,cAMvBttB,EAAQjC,EAAU,gBANK,SAONkC,MAAM,uBAAD,OAAwB0P,GAAa,CAC7DzP,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiBH,GAErB2F,KAAMvC,KAAKC,UAAU,CAAErF,KAAM6rB,MAbJ,iBAgBfxpB,GAhBe,wBAiBzBT,EAAQU,KAAK,UAjBY,2BAqB7BkC,EAAOwD,KAAK,iBAAkB8B,GAC9BwlB,IAtB6B,4CAwB9B,CAAC1tB,EAASiqB,EAAU/hB,EAAQpJ,MAE/B,OACI,cAAC,GAAD,CACI6uB,YAAa1D,EACb2D,eAAgB1D,EAChBrkB,aAAcA,EACd6nB,kBAAmBA,EACnBjnB,YAAY,yBCxCxB,IAAMwnB,GACO,UADPA,GAEQ,UAFRA,GAGO,UAHPA,GAIQ,UAJRA,GAKQ,UALRA,GAMY,UAwQHC,GArQY,SAACC,GACxB,IAAMC,EAAc,IAAIhU,KACpBiU,EAAW,KAETC,EAAqB,SAACvd,EAAS9P,GAAmC,IAA5BstB,EAA2B,uDAAZ,QACjDC,EAAgB,CAClB/E,WAAYxoB,EACZA,MAAOstB,EACPptB,MAAO,OACPyrB,QAAS,MAETC,OAAQ,oBACRC,aAAc,MACdG,QAAS,OACTC,WAAY,SACZC,eAAgB,UAGpB,OACI,qBAAK/qB,UAAWE,KAAOmsB,cAAvB,SACI,qBAAKpsB,MAAOmsB,EAAZ,SACKzd,OAMX2d,EAAqB,SAACC,EAAYC,GACpC,IAAKD,EACD,MAAO,GAKW,IAAlBC,IACAP,EAAW7qB,KAAKwiB,MAAM2I,IAR4B,MAWlBN,EAA5BtQ,EAX8C,EAW9CA,KAAM/d,EAXwC,EAWxCA,QAASyhB,EAX+B,EAW/BA,SACjBoN,EAAWvQ,GAAkB6P,EAAWS,GAExCE,EAAc9uB,GAAWA,EAAQ+uB,OAAO7P,GAAW2P,EAAU,aAE7D1O,EAAUpC,EAAO,IAAI3D,KAAK2D,GAAQ,KAClCiR,EAAiB7O,GAAWR,GAAakP,EAAU1O,GAAW,EAC9D8O,EAAgBtP,GAAakP,EAAUT,GAAe,EAC5D,GAAIU,EAAa,CAAC,IAAD,EACmBA,EAAYtpB,MAAMiX,MAAM,KAD3C,mBACNyS,EADM,KACKC,EADL,KAGb,GAAkB,YAAdD,EACA,OAAOZ,EAAmBY,EAAWjB,IAGzC,GAAkB,aAAdiB,GAA4BC,GAA6B,SAAfA,EAC1C,OAAOb,EAAmB,WAAYL,IAG1C,GAAIgB,EACA,OAAOX,EAAmBQ,EAAYtpB,MAAOyoB,IAGjD,IAAMmB,EAAsBJ,EAAiBf,GAAsBA,GACnE,OAAOK,EAAmBQ,EAAYtpB,MAAO4pB,GAIjD,IAAMC,EAA6B,IAAlBT,EACXU,EAAetvB,GAAWA,EAAQuvB,gBAAgBrQ,GAAW2P,EAAU,UAC7E,GAAIQ,GAAY5N,GAAyB,MAAbA,GAAoB6N,EAE5C,OAAOhB,EAAmB,WAAYL,IAG1C,GAAI9N,EAAS,CACT,GAAIZ,GAAkBsP,EAAU1O,GAC5B,OAAIR,GAAayO,EAAajO,GAAW,EAE9BmO,EAAmB,UAAWL,IAGlCK,EAAmB,WAAYL,IAG1C,GAAItO,GAAakP,EAAU1O,GAAW,EAElC,OAAIkP,GAAY1P,GAAayO,EAAaS,GAAY,EAE3CP,EAAmB,UAAWL,IAGlC,GAjBF,IAoBHuB,EAA2CxvB,EAA3CwvB,aAAyBC,EAAkBzvB,EAA7BmuB,UAIpB,OAHAqB,EAAeA,GAAgB,IAAIpV,KAAKoV,GACxCC,EAAgBA,GAAiB,IAAIrV,KAAKqV,GAEtCD,GAAgB7P,GAAakP,EAAUW,GAAgB,EAEhD,GAGPH,GAAYI,GAAiB9P,GAAa8P,EAAetB,GAAa,EAE/D,GAQJG,EAFUe,EAAW,cAAgB,GAC1BJ,EAAgBhB,GAA2BA,IAIjE,MAAO,IAGLyB,EAAoB,SAACd,GACvB,IAAMe,EAAarR,GAAkB6P,EAAWS,GAC1C3tB,EAAQse,GAAkB6O,EAAauB,GAAc,UAAY,GAEjEC,EAAgB1Q,GAAWyQ,EAAY,SACvCE,EAAqB3Q,GAAWyQ,EAAY,MAElD,OACI,sBAAKttB,MAAO,CAAEsf,gBAAiB1gB,EAAOA,MAAO,SAA7C,UACI,qBAAKoB,MAAO,CAAEytB,WAAY,OAA1B,SAAoCD,IACpC,qBAAKxtB,MAAO,CAAE0tB,SAAU,OAAxB,SAAkCH,QAKxCI,EAAe,SAACC,GAClB,OACI,qBAAK5tB,MAAO,CACR6tB,WAAY,SACZC,aAAc,WACdnD,UAAW,OACX9rB,OAAQ,QAJZ,SAMK+uB,KAKb,MACI,CACI,CACIpkB,OAAQ,WACJ,OAAO,qBAAKzJ,UAAWE,KAAOqkB,OAAvB,mBAEXyJ,SAAU,OACVC,SAAU,IACVC,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAe0uB,EAAa1uB,IAClCivB,UAAU,EACVC,WAAW,GAEf,CACI3kB,OAAQ,WACJ,OAAO,qBAAKzJ,UAAWE,KAAOqkB,OAAvB,uBAEXyJ,SAAU,WACVC,SAAU,GACVI,SAAU,GACVH,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAe0uB,EAAa1uB,IAClCivB,UAAU,EACVC,WAAW,EACXE,WAAY,cAEhB,CACI7kB,OAAQ,WACJ,OAAO,qBAAKzJ,UAAWE,KAAOqkB,OAAvB,mBAEXyJ,SAAU,WACVC,SAAU,GACVI,SAAU,GACVH,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAe0uB,EAAa1uB,IAClCqvB,SAAU,SAACC,EAAOC,EAASC,GAAjB,MAA6B,CAAEzuB,MAAO,CAAEoM,SAAU,aAC5D8hB,UAAU,EACVC,WAAW,GAEf,CACI3kB,OAAQ6jB,EAAkB,GAC1BU,SAAU,SACVC,SAAU,GACVI,SAAU,IACVH,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAeotB,EAAmBptB,EAAO,IAC/CivB,UAAU,EACVC,WAAW,GAEf,CACI3kB,OAAQ6jB,EAAkB,GAC1BU,SAAU,UACVC,SAAU,GACVI,SAAU,IACVH,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAeotB,EAAmBptB,EAAO,IAC/CivB,UAAU,EACVC,WAAW,GAEf,CACI3kB,OAAQ6jB,EAAkB,GAC1BU,SAAU,YACVC,SAAU,GACVI,SAAU,IACVH,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAeotB,EAAmBptB,EAAO,IAC/CivB,UAAU,EACVC,WAAW,GAEf,CACI3kB,OAAQ6jB,EAAkB,GAC1BU,SAAU,WACVC,SAAU,GACVI,SAAU,IACVH,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAeotB,EAAmBptB,EAAO,IAC/CivB,UAAU,EACVC,WAAW,GAEf,CACI3kB,OAAQ6jB,EAAkB,GAC1BU,SAAU,SACVC,SAAU,GACVI,SAAU,IACVH,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAeotB,EAAmBptB,EAAO,IAC/CivB,UAAU,EACVC,WAAW,GAEf,CACI3kB,OAAQ6jB,EAAkB,GAC1BU,SAAU,WACVC,SAAU,GACVI,SAAU,IACVH,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAeotB,EAAmBptB,EAAO,IAC/CivB,UAAU,EACVC,WAAW,GAEf,CACI3kB,OAAQ6jB,EAAkB,GAC1BU,SAAU,SACVC,SAAU,GACVI,SAAU,IACVH,KAAM,gBAAGhvB,EAAH,EAAGA,MAAH,OAAeotB,EAAmBptB,EAAO,IAC/CivB,UAAU,EACVC,WAAW,GAEf,CACI3kB,OAAQ,WACJ,OAAO,qBAAKzJ,UAAWE,KAAOqkB,OAAvB,uBAEXyJ,SAAU,UACVC,SAAU,IACVI,SAAU,IACVF,UAAU,EACVC,WAAW,EACXE,WAAY,gB,+BCzPbK,GAfO,SAAC,GAA4C,IAA1CxvB,EAAyC,EAAzCA,SAAUiT,EAA+B,EAA/BA,UAAWwc,EAAoB,EAApBA,cAC1C,OACI,2BAAU5uB,UAAWE,KAAO+D,UAA5B,UACI,wBAAQjE,UAAWE,KAAO,kBAA1B,SACKkS,GACG,4BAAYpS,UAAWE,KAAO2uB,OAA9B,SACKD,MAIZzvB,M,oBCmEE2vB,GAzEO,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,cAAeC,EAAuD,EAAvDA,iBAAkBC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,YACnE/hB,EAAcxD,iBAAO,MADgE,EAE3DzB,GAAsBiF,GAFqC,mBAEpF/E,EAFoF,KAE1EC,EAF0E,KAGnFvC,EAAYxF,qBAAWmF,IAAvBK,QAEF4B,EAAU0Y,mBAAQ,WACpB,OAAOta,EAAQgV,aAAa7Z,KAAI,SAAAkuB,GAAE,MAAK,CACnCjwB,MAAOiwB,EAAGpU,SAASre,IACnB0yB,aAAcD,EAAGpU,SAASxe,eAE/B,CAACuJ,EAAQupB,cAcZ,OACI,cAAC,GAAD,CACIT,cAAc,qBACdxc,YAAc2c,EAFlB,SAII,sBAAK/uB,UAAWE,KAAO+D,UAAvB,UACI,sBAAKjE,UAAWE,KAAO,iBAAvB,UACI,cAAC,EAAD,CACIF,UAAWoI,EAAQ,UACV8mB,EADU,YACKH,GAAiB7uB,KAAO,eAD7B,YAC+CA,KAAO,gBADtD,UAEVgvB,EAFU,YAEKH,GAAiB7uB,KAAO,gBAChDH,QAAS,kBAAMsI,GAAaD,IAC5BtI,MAAQivB,GAAiBA,EAAc/yB,MAAS,uBAElD+yB,GACE,cAAC,EAAD,CACI/uB,UAAS,UAAKkvB,EAAL,YAAoBhvB,KAAO,cACpCJ,MAAM,IACNC,QAxBJ,WAChBkvB,IACA5mB,GAAY,SA0BHD,GACG,qBAAKpI,UAAWE,KAAOwH,QAASwE,IAAKiB,EAArC,SAQKzF,EAAQzG,KAAI,SAAAquB,GACT,OACI,qBAEItvB,UAAWE,KAAOovB,OAClBvvB,QAAS,kBAhDdwvB,EAgDsCD,EAAOpwB,MAhDhCswB,EAgDuCF,EAAOF,aA/ClFJ,EAAiBO,EAAaC,QAE9BnnB,GAAY,GAHU,IAACknB,EAAaC,GA6CZ,SAKKF,EAAOF,cAJHE,EAAOpwB,kB,qBC5BjCuwB,GA/BO,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,UAAWR,EAA+C,EAA/CA,YAAahrB,EAAkC,EAAlCA,SAAU+qB,EAAwB,EAAxBA,kBACvD,OACI,eAAC,GAAD,CACIL,cAAc,oBACdxc,YAAcsd,EAFlB,UAII,cAAC,KAAD,CACI9Q,SAAU8Q,EACV/Q,YACI,wBAAQ3e,UAAW0vB,EAAS,UACfR,EADe,YACAhvB,KAAO,gBADP,UAEfgvB,EAFe,YAEAhvB,KAAO,iBAFnC,SAIKwvB,EAAY5S,GAAW4S,EAAW,YAAc,gBAGzDC,iBAAiB,EACjBzrB,SAAUA,IAEZwrB,GACE,wBACI1vB,UAAS,UAAKkvB,EAAL,YAAoBhvB,KAAO,iBACpCH,QAASkvB,EAFb,mB,qBCTDW,GAdM,SAAC,GAAuD,IAArDxnB,EAAoD,EAApDA,SAAUynB,EAA0C,EAA1CA,aAAczrB,EAA4B,EAA5BA,MAAO0rB,EAAqB,EAArBA,eACnD,OACI,sBAAK9vB,UAAS,UAAKE,KAAO+D,UAAZ,YAAyB6rB,GAAvC,UACI,gCAAQ1rB,IACR,sBACIpE,UAAS,UAAKE,KAAO,oBAAZ,YAAmCkI,GAAYlI,KAAO,qBAC/DH,QAAS8vB,EAFb,SAII,sBAAM7vB,UAAWE,KAAO,wB,oBCgCzB6vB,GArCS,SAAC,GAA4C,IAA1Cb,EAAyC,EAAzCA,YAAac,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACvC9iB,EAAcxD,iBAAO,MADqC,EAEhCzB,GAAsBiF,GAFU,mBAEzD/E,EAFyD,KAE/CC,EAF+C,KAIhE,OACI,sBAAK6nB,MAAOhwB,KAAO+D,UAAnB,UACI,cAAC,EAAD,CACInE,MAAM,sBACNE,UAAWkvB,EACXnvB,QAAS,kBAAMsI,GAAaD,MAE9BA,GACF,sBAAKpI,UAAWE,KAAOiwB,SAAUjkB,IAAKiB,EAAtC,UACI,cAAC,GAAD,CACI/E,SAAU4nB,EAAQI,WAClBhsB,MAAM,cACNyrB,aAAc,kBAAMI,EAAa,eACjCH,eAAc,UAAK5vB,KAAO,mBAAZ,YAAkCA,KAAO,0BAE3D,cAAC,GAAD,CACIkI,SAAU4nB,EAAQK,WAClBjsB,MAAM,cACNyrB,aAAc,kBAAMI,EAAa,eACjCH,eAAgB5vB,KAAO,qBAE3B,cAAC,GAAD,CACIkI,SAAU4nB,EAAQM,KAClBlsB,MAAM,OACNyrB,aAAc,kBAAMI,EAAa,SACjCH,eAAc,UAAK5vB,KAAO,mBAAZ,YAAkCA,KAAO,oCCC5DqwB,GA9BK,SAAC,GAA2B,IAAzB9rB,EAAwB,EAAxBA,OAAQ+rB,EAAgB,EAAhBA,UAO3B,OACI,sBAAKxwB,UAAWE,KAAO,qBAAvB,UACI,cAAC,GAAD,CACIgvB,YAAahvB,KAAOuE,OACpBurB,QAASvrB,EAAO4a,SAChB4Q,aAXiB,SAACQ,GAC1B,IAAMC,EAAqBjsB,EAAO4a,SAAS,CAACoR,IAE5CD,EAAU,2BAAK/rB,GAAN,IAAc4a,SAAS,2BAAM5a,EAAO4a,UAAd,mBAAyBoR,GAAcC,UAUlE,cAAC,GAAD,CACI3B,cAAetqB,EAAOhC,OACtBusB,iBAAkB,SAACvyB,EAAIT,GAAL,OAAcw0B,EAAU,2BAAK/rB,GAAN,IAAchC,OAAQ,CAAEhG,KAAIT,YACrEizB,kBAAmB,kBAAMuB,EAAU,2BAAK/rB,GAAN,IAAchC,OAAQ,SACxDysB,YAAahvB,KAAOuE,SAExB,cAAC,GAAD,CACIirB,UAAWjrB,EAAOirB,UAClBR,YAAahvB,KAAOuE,OACpBP,SAAU,SAAAyX,GAAI,OAAI6U,EAAU,2BAAK/rB,GAAN,IAAcirB,UAAW/T,MACpDsT,kBAAmB,kBAAMuB,EAAU,2BAAK/rB,GAAN,IAAcirB,UAAW,e,oBC9B5D,OAA0B,yCCA1B,OAA0B,qCCmD1BiB,GA5Ca,SAAC,GAAkD,IAAhD5E,EAA+C,EAA/CA,UAAW6E,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,aACvD,OACI,sBAAK7wB,UAAWE,KAAO+D,UAAvB,UACI,cAAC,KAAD,CACI2a,SAAUmN,EACVpN,YACI,wBAAQ3e,UAAWE,KAAO4wB,gBAA1B,yBAKJnB,iBAAe,EACfzrB,SAAU,SAAAyX,GAAI,OAAIkV,EAAavU,GAAUX,OAE7C,wBAAQ3b,UAAWE,KAAO4wB,gBAAiB/wB,QAAS,kBAAM6wB,GAAiB,IAA3E,2BAIA,sBAAK5wB,UAAWE,KAAO6wB,aAAchxB,QAAS,kBAAM6wB,GAAiB,IAArE,UACI,qBACI5wB,UAAWE,KAAO8wB,kBAClBrpB,IAAKspB,GAAUppB,IAAI,QAEvB,qBAAK7H,UAAWE,KAAOgxB,aAAvB,6BAGJ,sBAAKlxB,UAAWE,KAAO6wB,aAAchxB,QAAS,kBAAM6wB,EAAgB,IAApE,UACI,qBACI5wB,UAAWE,KAAO8wB,kBAClBrpB,IAAKwpB,GAAMtpB,IAAI,QAEnB,qBAAK7H,UAAWE,KAAOgxB,aAAvB,yBAGJ,wBACIlxB,UAAWE,KAAO4wB,gBAClB/wB,QAAS,kBAAM6wB,EAAgB,IAFnC,2BCvCNQ,GAAa,SAACC,EAASC,GAAV,OAAsBD,EAAQr1B,KAAKgJ,cAAcssB,EAAQt1B,OAEtEu1B,GAAiB,SAACF,EAASC,GAC7B,IAAME,EAAaH,EAAQhS,UAAY,EACjCoS,EAAcH,EAAQjS,UAAY,EAExC,OAAImS,EAAaC,EACN,EACAD,EAAaC,GACZ,EAGL,GAGLC,GAAgB,SAACL,EAASC,GAC5B,IAAMK,EAAgBN,EAAQtT,QAAU,IAAI/F,KAAKqZ,EAAQtT,SAAW,IAAI/F,KAAK,cACvE4Z,EAAgBN,EAAQvT,QAAU,IAAI/F,KAAKsZ,EAAQvT,SAAW,IAAI/F,KAAK,cAE7E,OAAOuF,GAAaoU,EAAeC,IAyBjCC,GAAmB,SAACC,GACtB,MAAO,CACHhO,KAAMgO,EAAUhO,MAAQ,GACxBzE,SAAUyS,EAAUzS,UAAY,GAChC0S,SAAUD,EAAUC,UAAY,GAChCvV,OAAQsV,EAAUtV,QAAU,GAC5BwV,QAASF,EAAUE,SAAW,GAC9BC,UAAWH,EAAUG,WAAa,GAClCC,SAAUJ,EAAUI,UAAY,GAChCC,OAAQL,EAAUK,QAAU,GAC5BC,SAAUN,EAAUM,UAAY,GAChCC,OAAQP,EAAUO,QAAU,GAC5BtU,QAAS+T,EAAU/T,SAAW,KCyLvBuU,GA5NK,SAAC,GAAiB,IAAfxsB,EAAc,EAAdA,QACbY,EAAiBpG,qBAAWmF,IAC5BvC,EAAc5C,qBAAWrD,GACzB4L,EAASC,cAHkB,EAICtL,mBAAS8e,MAJV,mBAI1ByP,EAJ0B,KAIf8E,EAJe,OAKCrzB,mBAAS,IALV,mBAK1B+0B,EAL0B,KAKfC,EALe,OAMDh1B,mBAAS,IANR,mBAM1BwqB,EAN0B,KAMhBC,EANgB,OAOGzqB,mBAAS,MAPZ,mBAO1Bi1B,EAP0B,KAOdC,EAPc,OAQOl1B,mBAAS,CAAEm1B,WAAY,KAAMC,cAAc,IARlD,mBAQ1BC,EAR0B,KAQZC,EARY,OASLt1B,mBAAS,CACjC6hB,SAAU,CAAE+Q,YAAY,EAAMC,YAAY,EAAMC,MAAM,GACtD7tB,OAAQ,KACRitB,UAAW,KACXqD,QAAQ,IAbqB,mBAS1BtuB,EAT0B,KASlB+rB,EATkB,KAgB3BwC,EAAcj1B,uBAAY,SAAC0I,GAC7B,IAAMhE,EAASiE,EAAeZ,QAAQgV,aAAalW,MAAK,SAAAQ,GAAC,OACrCA,EAAE2V,SAASre,MAAQwG,EAAY1G,KAAKC,MAEpDgG,GAAUA,EAAOuY,OACjBiN,EAAYxhB,GAGhBC,EAAef,SAASe,EAAeZ,QAAQJ,SAChD,CAACgB,EAAgBxD,EAAY1G,KAAKC,KAE/Bw2B,EAAkBl1B,uBAAY,WAChC,IAAMyN,EAAO,GACP9F,EAAQI,EAAQJ,MACtBgB,EAAef,SAASD,GACxB,IAAMwtB,ED9Ba,SAACP,EAAYC,GACpC,IAAIO,EAAc,KAClB,OAAOR,GACH,IAAK,OACDQ,EAAc/B,GACd,MACJ,IAAK,WACD+B,EAAc5B,GACd,MACJ,IAAK,UACD4B,EAAczB,GACd,MACJ,QACI,OAAO,KAGf,OAAO,SAACF,EAAYC,GAChB,IAAM2B,EAAoBD,EAAY3B,EAAYC,GAClD,OAAOmB,GAAgBQ,EAAoBA,GCYnBC,CAAmBR,EAAaF,WAAYE,EAAaD,cAEjFltB,EAAMkI,SAAQ,SAACnH,EAAM6sB,GACjB,IAAI5sB,EAAed,YAAY9E,SAAS2F,EAAK/J,KAA7C,CAIA8O,EAAKlN,KAAKuzB,GAAiB,CACvB/N,KACI,qBAEI9jB,UAAWE,KAAOqzB,kBAClBtzB,MAAO,CAAEonB,WAAY5gB,EAAK5H,OAAS,WACnCkB,QAAS,kBAAMizB,EAAYvsB,IAJ/B,SAMI,sBAAMzG,UAAWE,KAAOszB,aAAxB,SACK/sB,EAAKzK,QANLs3B,GAUbvV,QACI,qBAAKhe,QAAS,kBAAM2yB,EAAc,CAAEe,QAAShtB,EAAK/J,OAAQsD,UAAWE,KAAOwzB,QAA5E,2BAOR,IAAIC,EAAYltB,EAAKge,MAAMhgB,QAAO,SAAAkU,GAAI,ODgCzB,SAACA,EAAMqX,GAC5B,IAAI4D,GAAqB,GACrB5D,EAAQ3Q,SAAS+Q,YACE,IAAlBzX,EAAK0G,UAAmB1G,EAAK0G,WAC9BuU,GAAqB,GAGrB5D,EAAQ3Q,SAASgR,YAAc1X,EAAK0G,SAAW,GAAK1G,EAAK0G,SAAW,MACpEuU,GAAqB,GAGrB5D,EAAQ3Q,SAASiR,MAA0B,MAAlB3X,EAAK0G,WAC9BuU,GAAqB,GAGzB,IAAMC,GAAqB7D,EAAQvtB,QACjBkW,EAAKhW,QAAQmxB,MAAK,SAAA1uB,GAAC,OAAIA,EAAE1I,MAAQszB,EAAQvtB,OAAOhG,MAG5Ds3B,GAAwB/D,EAAQN,WACpB/W,EAAKoF,SAAWR,GAAa,IAAIvF,KAAKW,EAAKoF,SAAUiS,EAAQN,YAAc,EAG7F,OAAOkE,GAAsBC,GAAsBE,ECvDDC,CAAiBrb,EAAMlU,MAC7DouB,EAAaF,aACbgB,EAAYA,EAAU7uB,KAAKouB,IAG/BS,EAAU/lB,SAAQ,SAAA+K,GACd,IAAMqF,EAAcrF,EAAKoF,QAAU,IAAI/F,KAAKW,EAAKoF,SAAW,GAItD8P,EAAW,CACblS,KAAMqC,EAENpgB,QDjCK,SAACmhB,GACtB,IAAKA,EACD,OAAO,KAGX,IALsC,EAKhCkV,EAAgB,CAAEtH,OAAQ,GAAIQ,gBAAiB,IALf,eAMlBpO,GANkB,IAMtC,2BAAiC,CAAC,IAAzBla,EAAwB,QACvBqvB,EAAc,IAAIlc,KAAKnT,EAAQ8W,MAEf,YAAlB9W,EAAQzB,QACR6wB,EAAclI,UAAYmI,GAG9BD,EAActH,OAAO7P,GAAWoX,EAAa,aAAervB,EAC5DovB,EAAc9G,gBAAgBrQ,GAAWoX,EAAa,WAAY,GAdhC,8BAiBtC,IAAMC,EAAmBpV,EAAYA,EAAYxb,OAAS,GAK1D,OAJI4wB,GAA+C,kBAA3BA,EAAiB/wB,QACrC6wB,EAAc7G,aAAe,IAAIpV,KAAKmc,EAAiBxY,OAGpDsY,ECM2BG,CAAiBzb,EAAK/a,SAMxCyhB,SAAU1G,EAAK0G,UAGbgV,EAAcjzB,KAAKC,UAAUwsB,GAEnCriB,EAAKlN,KAAKuzB,GAAiB,CACvB/N,KAEQ,cAACwF,GAAD,CAEI3Q,KAAMA,EAAMmB,OAAQrT,EAAK/J,IACzBoJ,QAASA,IAErBuZ,SAEQ,cAAC,GAAD,CACIngB,MAAOyZ,EAAK0G,SAAW,IAAM1G,EAAKjc,IAAM,IAAM+J,EAAK/J,IACnDod,OAAQrT,EAAK/J,IACboJ,QAASA,EAAS6S,KAAMA,IAEpCoZ,SAEQ,cAAC,GAAD,CACIpvB,QAASgW,EAAKhW,QACduX,UAAW,IAGvBsC,OAAQ6X,EACRrC,QAASqC,EACTpC,UAAWoC,EACXnC,SAAUmC,EACVlC,OAAQkC,EACRjC,SAAUiC,EACVhC,OAAQgC,EACRtW,QACI,cAAC,GAAD,CACI7e,MAAO8e,EAAclB,GAAWkB,EAAa,YAAc,GAC3DA,YAAaA,EACbnE,OAAQlB,EAAKjc,IACbod,OAAQrT,EAAK/J,IACboJ,QAASA,EACT6S,KAAMA,EACN5P,OAAQF,EAAOG,eAM3BypB,GAAcA,EAAWgB,SAAWhB,EAAWgB,UAAYhtB,EAAK/J,KAChE8O,EAAKlN,KAAKuzB,GAAiB,CACvB/N,KACI,cAAC2H,GAAD,CACI3R,OAAQrT,EAAK/J,IACboJ,QAASA,EACTwlB,kBAAmB,kBAAMoH,EAAc,gBAOvDD,GAAcA,EAAW6B,SACzB9oB,EAAKlN,KAAKuzB,GAAiB,CACvB/N,KACI,cAAC8H,GAAD,CAAS9lB,QAASA,EAASwlB,kBAAmB,kBAAMoH,EAAc,YAa9EF,EAAaK,EAAaD,aAAepnB,EAAKkC,UAAYlC,KAC3D,CAAC/G,EAAQuuB,EAAanqB,EAAOG,OAAQtC,EAAgBZ,EAAS2sB,EAAYI,EAAaF,WAAYE,EAAaD,eAEnHj0B,qBAAU,WACNs0B,MACD,CAACxuB,EAAQqB,EAASY,EAAed,YAAaitB,EAAcI,IAO/D,OACI,sBAAKjzB,UAAWE,KAAOq0B,cAAvB,UACMvM,GACM,8BACI,cAAC,GAAD,CAAajkB,SAAU,kBAAMkkB,EAAY,KAAzC,SACI,cAAChB,GAAD,CACIljB,SAAU,kBAAMkkB,EAAY,KAC5BxhB,KAAMuhB,EACLliB,QAASA,QAK9B,sBAAK9F,UAAWE,KAAOs0B,SAAvB,UACI,cAAC,GAAD,CAAa/vB,OAAQA,EAAQ+rB,UAAWA,IACxC,cAAC,GAAD,CACIzE,UAAWA,EACX8E,aAAcA,EACdD,gBAvBQ,SAAC6D,GACrB,IAAMC,EAAexY,GAAkB6P,EAAW0I,GAClD5D,EAAa6D,MAwBL,cAAC,EAAD,CACI10B,UAAWE,KAAOy0B,cAClB50B,QAAS,kBAAM2yB,EAAc,CAAE4B,SAAS,KACxCx0B,MAAM,kBAGd,8BAEI,cAAC,KAAD,CAII0L,KAAM+mB,EACNqC,QACI9I,GAAmBC,GAEvB8I,gBAAiB,GACjBC,SAAUvC,EAAUhvB,OACpBwxB,gBAAgB,EAChB1N,WACI,QAEJrnB,UAAS,UAAKE,KAAO80B,WAAZ,eACTC,cAAe,iBAAO,CAAEj1B,UAAWE,KAAOg1B,iBAC1CC,gBAAiB,iBAAO,CAAEn1B,UAAWE,KAAOk1B,oBAC5CC,eAAgB,SAACC,GAAc,IAAD,EACqBA,EAAS,GAA5C3C,EADc,EAClBl2B,GAAsBm2B,EADJ,EACF2C,KACxBzC,EAAgB,CAAEH,aAAYC,0BC/NvC,SAAS4C,KACpB,IAAM3sB,EAASC,cAETtI,EAASH,IACTqG,EAAiBpG,qBAAWmF,IAE5B2iB,EAAgBrqB,uBAAY,SAAC+H,GAC/BY,EAAeX,WAAWD,KAC3B,CAACY,IAaJ,OAXA/H,qBAAU,WACN,IAAMlC,EAAKoM,EAAO0C,UAElB,GAAc,MAAV/K,EAKJ,OAHAA,EAAO+G,GAAG,kBAAmB6gB,GAE7B5nB,EAAOwD,KAAK,eAAgBvH,GACrB,kBAAM+D,EAAOgH,IAAI,sBACzB,CAAChH,EAAQ4nB,EAAevf,EAAO0C,YAE7B7E,EAAeZ,SAAWY,EAAeZ,QAAQpJ,MAAQmM,EAAO0C,UAejE,cAAC,GAAD,CAAYuB,aAAc,CAAEb,OAAQ,yBAA0Bue,QAAS,GAAvE,SACI,qBAAKxqB,UAAWE,KAAOu1B,sBAAvB,SACI,8BACI,qBAAKz1B,UAAWE,KAAO,sBAAvB,SACI,cAAC,GAAD,CAAa4F,QAASY,EAAeZ,kBAjBjD,cAAC,GAAD,UACI,cAAC,IAAD,CACIlH,KAAK,WACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,QCvBd02B,OAbf,YAAwC,IAAbv2B,EAAY,EAAZA,SAAY,EACX3B,mBAAS,IADE,mBAC9BkI,EAD8B,KACvBC,EADuB,OAECnI,mBAAS,IAFV,mBAE9BoI,EAF8B,KAEjBC,EAFiB,OAGPrI,mBAAS,MAHF,mBAG9BsI,EAH8B,KAGrBC,EAHqB,OAICvI,mBAAS,UAJV,mBAI9Bm4B,EAJ8B,KAIjBC,EAJiB,KAMrC,OACE,cAAC,GAAe32B,SAAhB,CAAyBC,MAAQ,CAAEwG,QAAOC,WAAUC,cAAaC,iBAAgBC,UAASC,aAAY4vB,cAAaC,kBAAnH,SACGz2B,KCsDQ02B,OA1Df,YAAqC,IAAb12B,EAAY,EAAZA,SAAY,EACR3B,mBAAS,IADD,mBAC3Bb,EAD2B,KACpB2C,EADoB,OAEM9B,mBAAS,UAFf,mBAE3B+B,EAF2B,KAEbC,EAFa,OAGYhC,mBAAS,IAHrB,mBAG3BiP,EAH2B,KAGVqpB,EAHU,KAI5B5yB,EAAc5C,qBAAWrD,GACzBuD,EAASH,IAiBf1B,qBAAU,WACRW,EAAS4D,EAAY1G,KAAKG,SACzB,CAACuG,EAAY1G,KAAKG,QAErB,IAAMo5B,EAAah4B,sBAAW,sBAAC,kCAAAsF,EAAA,6DACvBrF,EAAQjC,EAAU,gBADK,SAEPkC,MAAM,aAAc,CACxCC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBH,KANQ,cAEvBQ,EAFuB,gBAUNA,EAAQC,OAVF,OAUvBnC,EAVuB,OAY7BgD,EAAShD,EAASK,OAEZH,EAAQH,EAAWC,GACzB4G,EAAY9F,MAAMZ,GAfW,4CAiB5B,CAAC0G,IAQJ,OANAvE,qBAAU,WACR,GAAc,MAAV6B,EAEJ,OADAA,EAAO+G,GAAG,eAAgBwuB,GACnB,kBAAMv1B,EAAOgH,IAAI,mBACvB,CAAChH,EAAQu1B,IAGV,cAAC,EAAY92B,SAAb,CAAsBC,MAAO,CAAEvC,QAAO2C,WAAUC,eAAcC,kBAAiBiN,kBAAiBqpB,qBAAoBjqB,mBA7CtH,SAA4B9C,GAC1B,IAAMT,EAAU3L,EAAMiI,MAAK,SAAA1D,GAAC,OAAIA,EAAExE,MAAQqM,KACtCT,GACFwtB,EAAmBxtB,EAAQgB,WA0C2GC,mBArC1I,SAA4BR,GAC1B,IAAMT,EAAU3L,EAAMiI,MAAK,SAAA1D,GAAC,OAAIA,EAAExE,MAAQqM,KACtCT,GACF9I,EAAgB8I,EAAQtM,QAkC1B,SACGmD,K,wCCrDQ,SAAS62B,GAAQz4B,GAAQ,IAAD,EACDC,oBAAS,GADR,mBAC5B4U,EAD4B,KACjBC,EADiB,KAE7BxJ,EAASC,cAEf,OACI,gCACKsJ,EACG,8BACI,cAAC,GAAD,CAAarO,SAAU,kBAAMsO,GAAcD,IAA3C,SACI,cAAC4T,GAAD,CAAajiB,SAAU,kBAAMsO,GAAcD,IAAYtM,QAASvI,EAAMuI,cAEpE,KAEd,sBAAK9F,UAAWE,KAAO+D,UAAvB,UACI,sBAAKjE,UAAWE,KAAO+1B,SAAvB,UACI,eAAC,IAAD,CAAM1wB,GAAE,yBAAoBsD,EAAOG,OAA3B,YAAqCzL,EAAMuI,QAAQpJ,KAAOsD,UAAWE,KAAO0B,IAApF,mBAA+F,sBAAM5B,UAAWE,KAAOhB,MAAxB,SAAgC3B,EAAMuI,QAAQ9J,UAE7I,sBAAKgE,UAAWE,KAAO0B,IAAvB,sBACa,sBAAM5B,UAAWE,KAAOhB,MAAxB,SAAgC3B,EAAMuI,QAAQ8Q,OAAOra,iBAKtE,qBAAKyD,UAAWE,KAAO8U,KAAvB,SACA,cAAC,EAAD,CAAYhV,UAAWE,KAAO,YAAaJ,MAAO,OAAQC,QAAS,kBAAMsS,GAAcD,cC/BxF,WAA0B,iCCwF1B8jB,GA3EE,WAAO,IAAD,EACe14B,oBAAS,GADxB,mBACZ4U,EADY,KACDC,EADC,OAEa7U,oBAAS,GAFtB,mBAEZ2S,EAFY,KAEFC,EAFE,OAGa5S,mBAAS,IAHtB,mBAGZwY,EAHY,KAGFC,EAHE,OAIazY,mBAAS,IAJtB,mBAIZ8L,EAJY,KAIF6a,EAJE,OAKW3mB,mBAAS,IALpB,mBAKZmF,EALY,KAKHC,EALG,OAMWpF,mBAAS,IANpB,mBAMZsY,EANY,KAMHI,EANG,KAObrN,EAASC,cACT5F,EAAc5C,qBAAWrD,GAc/B,OAZA0B,qBAAU,WACNuE,EAAY1G,KAAKG,MAAMiR,SAAQ,SAAA1M,GACvBA,EAAExE,MAAQmM,EAAOG,SACjBiN,EAAY/U,GACZijB,EAAYjjB,EAAEoI,UACd1G,EAAW1B,EAAEyB,SACbuT,EAAWhV,EAAE0C,gBAItB,CAACV,EAAa2F,IAGb,cAAC,GAAD,UACI,sBAAK7I,UAAWE,KAAO+D,UAAvB,UAEQmO,GACA,cAAC,GAAD,CAAarO,SAAU,kBAAMsO,GAAa,IAA1C,SACI,cAACzJ,GAAD,MAIJuH,GACA,cAAC,GAAD,CAAapM,SAAU,kBAAMqM,GAAY,IAAzC,SACI,cAAC2F,GAAD,CAAUC,SAAUA,EAAUjS,SAAU,WAAQqM,GAAY,QAGpE,qBAAKpQ,UAAWE,KAAOsN,KAAvB,SACI,qBAAKxN,UAAWE,KAAO2S,QAASlL,IAAK6F,GAAM3F,IAAI,OAInD,qBAAK7H,UAAWE,KAAO,aAAvB,SACI,8BACKoJ,EAASrI,KAAI,SAAC6E,EAASc,GACpB,OACI,cAACovB,GAAD,CAA2BpvB,MAAOA,EAAOd,QAASA,GAApCA,EAAQpJ,YAOtC,qBAAKsD,UAAWE,KAAO,cAAvB,SACI,sBAAKF,UAAWE,KAAO,mBAAvB,UACI,cAAC2V,GAAD,CACIlT,QAASA,EAASmT,QAASA,IAE/B,cAAC,EAAD,CAAY9V,UAAWE,KAAO,sBAAuBJ,MAAO,YAAaC,QAAS,kBAAMqQ,GAAY,MACpG,cAAC,EAAD,CAAYtQ,MAAO,cAAeC,QAAS,kBAAMsS,GAAa,iB,oBCyBvE8jB,GAxFU,WACrB,IAAMttB,EAASC,cACTlL,EAAUC,cAFW,EAGGL,oBAAS,GAHZ,mBAGpBE,EAHoB,KAGXC,EAHW,OAIGH,oBAAS,GAJZ,mBAIpB44B,EAJoB,KAIXC,EAJW,KAKrBnzB,EAAc5C,qBAAWrD,GACzBq5B,EAAoBpzB,EAAY1G,KAAKM,qBAIrCy5B,EAAex4B,sBAAW,sBAAC,4BAAAsF,EAAA,yDACvBrF,EAAQ6K,EAAO7K,MACA,kBAAjB6K,EAAO7K,MAFkB,qDAMzBkF,EAAY1G,KAAKK,YAAaqG,EAAY1G,KAAKM,qBANtB,iEAUvB+Q,GAAa,yBAA0B,OAAQ,CACjD7P,UACD,SAACxB,GACA0G,EAAY9F,MAAMZ,GAClBmB,GAAW,GACX04B,GAAW,MACZ,SAAC/5B,GACA+S,QAAQC,IAAI,QAAShT,MAjBI,2CAoB9B,CAACuM,EAAO7K,MAAOkF,IAOlB,OALAvE,qBAAU,WACN43B,MACD,CAACA,IAGiB,kBAAjB1tB,EAAO7K,MAEH,8BAEQs4B,EACI,sBAAKt2B,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAO+H,KAAvB,SACI,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,MAAMD,OAAO,UAElD,qBAAKkB,UAAWE,KAAOJ,MAAvB,yCACA,qBAAKE,UAAWE,KAAOgjB,KAAvB,6DACA,qBAAKljB,UAAWE,KAAOgjB,KAAvB,iHAIJ,sBAAKljB,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAO+H,KAAvB,SACI,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,MAAMD,OAAO,UAElD,qBAAKkB,UAAWE,KAAOJ,MAAvB,wCACA,qBAAKE,UAAWE,KAAOgjB,KAAvB,kEACA,qBAAKljB,UAAWE,KAAOgjB,KAAvB,oGASpB,gCACKxlB,GAAW,0DACVA,GAAW04B,GAAW,8BAEZ,sBAAKp2B,UAAWE,KAAO+D,UAAvB,UACI,qBAAKjE,UAAWE,KAAO+H,KAAvB,SACI,qBAAKN,IAAKM,EAAMJ,IAAI,OAAO9I,MAAM,MAAMD,OAAO,UAElD,qBAAKkB,UAAWE,KAAOJ,MAAvB,wBACA,qBAAKE,UAAWE,KAAOgjB,KAAvB,mDACA,cAAC,GAAD,CAAQpjB,MAAM,UAAUE,UAAWE,KAAO,kBAAmBH,QAAS,kBAAMnC,EAAQU,KAAK,QACzF,qBAAK0B,UAAWE,KAAOs2B,OAAvB,sBACA,qBAAKx2B,UAAWE,KAAO2D,KAAvB,6CCjBb4yB,GA/CI,WAEf,IAAMprB,EAAU/K,qBAAWrD,GACrBa,EAAWuN,EAAQ7O,KAAKsB,SAE9B,OACI,cAAC,IAAD,UACI,cAACyC,EAAD,CAAgB/D,KAAM6O,EAAQ7O,KAA9B,SACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,qBAAD,CAAmBkY,UAAWC,YAA9B,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOtO,KAAK,uBAAZ,SAAmC,cAAC,GAAD,OAChCvI,IAAauN,EAAQ7O,KAAKK,WACrBiB,IAAauN,EAAQ7O,KAAKM,uBAC7B,cAAC,IAAD,CAAUyI,GAAG,gCAClB,cAAC,IAAD,CAAOmxB,OAAK,EAACrwB,KAAK,IAAlB,SACKvI,EAAY,cAAC,GAAD,IAAa,cAAC,GAAD,MAE9B,cAAC,IAAD,CAAOuI,KAAK,mBAAZ,SACKvI,EAAY,cAAC,GAAD,IAAoB,cAAC,IAAD,CAAUyH,GAAG,QAElD,cAAC,IAAD,CAAOc,KAAK,iBAAZ,SACKvI,EAAY,cAAC,GAAD,IAAkB,cAAC,IAAD,CAAUyH,GAAG,QAEhD,cAAC,IAAD,CAAOc,KAAK,oBAAZ,SACKvI,EAAY,cAAC,GAAD,IAAoB,cAAC,IAAD,CAAUyH,GAAG,QAElD,cAAC,IAAD,CAAOc,KAAK,oCAAZ,SACKvI,EAAY,cAAC0pB,GAAD,IAAqB,cAAC,IAAD,CAAUjiB,GAAG,QAEnD,cAAC,IAAD,CAAOc,KAAK,mCAAZ,SACKvI,EAAY,cAAC03B,GAAD,IAAoB,cAAC,IAAD,CAAUjwB,GAAG,QAElD,cAAC,IAAD,CAAOc,KAAK,gBAAZ,SACKvI,EAAY,cAAC,GAAD,IAAiB,cAAC,IAAD,CAAUyH,GAAG,QAE/C,cAAC,IAAD,CAAOoxB,UAAW/R,mBCtDlDgS,IAAS/lB,OACP,cAAC,IAAMgmB,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJ36B,SAAS46B,eAAe,U,mBCZ1Bj7B,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,QAAU,gCAAgC,KAAO,6BAA6B,SAAW,iCAAiC,aAAe,qCAAqC,MAAQ,8BAA8B,QAAU,gCAAgC,QAAU,gCAAgC,cAAgB,sCAAsC,OAAS,+BAA+B,kBAAoB,0CAA0C,cAAgB,sCAAsC,aAAe,qCAAqC,WAAa,mCAAmC,eAAiB,uCAAuC,kBAAoB,0CAA0C,cAAgB,wC,mBCA5yBD,EAAOC,QAAU,CAAC,sBAAsB,iDAAiD,UAAY,uCAAuC,QAAU,qCAAqC,KAAO,kCAAkC,MAAQ,mCAAmC,QAAU,qCAAqC,OAAS,sC,mBCAvUD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,OAAS,+BAA+B,QAAU,gCAAgC,OAAS,+BAA+B,eAAe,qCAAqC,cAAc,oCAAoC,cAAc,oCAAoC,YAAY,kCAAkC,gBAAgB,wC,mBCAhZD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,IAAM,qBAAqB,MAAQ,uBAAuB,KAAO,sBAAsB,WAAW,4B,kBCA3JD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,KAAO,oBAAoB,UAAY,yBAAyB,OAAS,sBAAsB,OAAS,sBAAsB,OAAS,wB,mBCA1LD,EAAOC,QAAU,CAAC,IAAM,2BAA2B,sBAAsB,2CAA2C,KAAO,4BAA4B,QAAU,+BAA+B,MAAQ,6BAA6B,UAAY,iCAAiC,gBAAkB,yC,mBCApSD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,SAAW,kCAAkC,kBAAkB,yCAAyC,sBAAsB,6CAA6C,yBAAyB,kD,mBCArQD,EAAOC,QAAU,CAAC,aAAa,yBAAyB,kBAAkB,8BAA8B,UAAY,wBAAwB,KAAO,mBAAmB,YAAY,wBAAwB,qBAAqB,iCAAiC,QAAU,wB,mBCA1QD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,OAAS,+B,mBCAnED,EAAOC,QAAU,CAAC,UAAY,kCAAkC,WAAa,mCAAmC,MAAQ,8BAA8B,KAAO,6BAA6B,OAAS,iC,mBCAnMD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,YAAY,wBAAwB,OAAS,qBAAqB,YAAc,0BAA0B,SAAW,0B","file":"static/js/main.e48639e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"welcome_container__Q_7tA\",\"top-container\":\"welcome_top-container__Cx96Y\",\"top-div-container\":\"welcome_top-div-container__Nez3F\",\"header-nav\":\"welcome_header-nav__2lkBj\",\"logo\":\"welcome_logo__2Xqb5\",\"first-buttons\":\"welcome_first-buttons__3h1jo\",\"pic1\":\"welcome_pic1__qGdZx\",\"pic2\":\"welcome_pic2__1c6_d\",\"lower-div-container\":\"welcome_lower-div-container__1nI_u\",\"first-text\":\"welcome_first-text__2Z5OY\",\"login-button\":\"welcome_login-button__1567E\",\"sign-up-button\":\"welcome_sign-up-button__1wl2z\",\"headers\":\"welcome_headers__3K-We\",\"lucida\":\"welcome_lucida__ptbMc\",\"paragraph\":\"welcome_paragraph__2tZDv\",\"second-sign-up-button\":\"welcome_second-sign-up-button__2NbfZ\",\"second-container\":\"welcome_second-container__DAZ3V\",\"first-row\":\"welcome_first-row__2E0nZ\",\"second-text\":\"welcome_second-text__2SCAX\",\"third-sign-up-button\":\"welcome_third-sign-up-button__2LGI6\",\"pic3-container\":\"welcome_pic3-container__3n972\",\"picture\":\"welcome_picture__4oIrl\",\"second-row\":\"welcome_second-row__3YjEF\",\"second-row-colum\":\"welcome_second-row-colum__3KVao\",\"second-row-pic\":\"welcome_second-row-pic__2gXJQ\",\"pic4-container\":\"welcome_pic4-container__n3-74\",\"third-row\":\"welcome_third-row__VB9B_\",\"pic6-container\":\"welcome_pic6-container__3ke7Z\",\"content-wrap\":\"welcome_content-wrap__YVnx1\",\"footer\":\"welcome_footer__3gtAE\",\"footer-column\":\"welcome_footer-column__3uKqO\",\"footer-headers\":\"welcome_footer-headers__3gxEw\",\"footer-info\":\"welcome_footer-info__1_oxo\",\"last-column\":\"welcome_last-column__2w2xJ\",\"social-media-container\":\"welcome_social-media-container__S34p3\",\"social-media\":\"welcome_social-media__1w-xg\",\"sd2006\":\"welcome_sd2006__1n8Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMemb\":\"show-all-task-members_containerMemb__1lC9a\",\"allCardMembers\":\"show-all-task-members_allCardMembers__XzbKC\",\"eachMember\":\"show-all-task-members_eachMember__1zBth\",\"avatar\":\"show-all-task-members_avatar__3H3YY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attachment\":\"attachment_attachment__3h6P9\",\"att-picture\":\"attachment_att-picture__EmFiD\",\"format\":\"attachment_format__nn8jH\",\"name\":\"attachment_name__1qqTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"toggle-switch_container__1SHrj\",\"switch-container\":\"toggle-switch_switch-container__u2au8\",\"container-active\":\"toggle-switch_container-active__1cMtP\",\"state-circle\":\"toggle-switch_state-circle__1OnkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"header_navigation__fJ63T\",\"small\":\"header_small__1teZG\",\"container\":\"header_container__3KlHF\",\"links\":\"header_links__2hRFR\",\"margin\":\"header_margin__1o7ce\",\"options\":\"header_options__3k5mV\",\"first-option\":\"header_first-option__2kqDm\",\"last-option\":\"header_last-option__3QlKJ\",\"logout\":\"header_logout__Sqhs8\",\"input\":\"header_input__1xJ3o\",\"avatar\":\"header_avatar__2BJ1H\",\"font\":\"header_font__SQRRp\",\"select\":\"header_select__3fnVl\",\"view\":\"header_view__3reCI\",\"logout-position\":\"header_logout-position__3aXq5\",\"view-position\":\"header_view-position__2YHhc\",\"teams\":\"header_teams__28NdG\",\"teams-position\":\"header_teams-position__3RFVg\",\"team-options\":\"header_team-options__3EQGp\",\"overflow\":\"header_overflow__3pY44\",\"hover\":\"header_hover__1X08T\",\"flex\":\"header_flex__26aaz\",\"projects-position\":\"header_projects-position__KW8oY\",\"profile-picture\":\"header_profile-picture__19YCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__1p1bn\",\"left-container\":\"profile_left-container__39W7O\",\"pic-container\":\"profile_pic-container__3CjX9\",\"pic1\":\"profile_pic1__3QhRY\",\"teams\":\"profile_teams__3WNcc\",\"navigate-buttons\":\"profile_navigate-buttons__3etSr\",\"button-input-div\":\"profile_button-input-div__2qBDm\",\"button-input-div-tasks\":\"profile_button-input-div-tasks__1-zEB\",\"input-fields-tasks\":\"profile_input-fields-tasks__2YFdL\",\"input-fields-profile\":\"profile_input-fields-profile__3uu_S\",\"profile-pic\":\"profile_profile-pic__3FZTl\",\"load-pic-text\":\"profile_load-pic-text__1-aLV\",\"pen\":\"profile_pen__BlxgA\",\"profile-pic-container\":\"profile_profile-pic-container__U7RG3\",\"profile-picture\":\"profile_profile-picture__2qwPO\",\"save-button\":\"profile_save-button__1a4Dc\",\"button-div-save\":\"profile_button-div-save__1QmVw\",\"alerts\":\"profile_alerts__17g07\",\"new-pass-alert\":\"profile_new-pass-alert__3y3O0\",\"select-team-container\":\"profile_select-team-container__dJYD1\",\"teams-home\":\"profile_teams-home__2HaTN\",\"navigate-buttons-teams\":\"profile_navigate-buttons-teams__2_h-4\",\"edit\":\"profile_edit__1Xgrq\",\"delete\":\"profile_delete__31xju\",\"relative\":\"profile_relative__3StLS\",\"menu\":\"profile_menu__3eNZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"button-hide-list_submit__3IMBu\",\"name\":\"button-hide-list_name__yyff7\",\"opacity\":\"button-hide-list_opacity__1yCdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"page-layout_app__v-_Gs\",\"content\":\"page-layout_content__Cr_Mh\",\"small\":\"page-layout_small__208gw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"filter-wrapper_container__2MpXG\",\"legend-wrapper\":\"filter-wrapper_legend-wrapper__11Nws\",\"legend\":\"filter-wrapper_legend__3uKNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter-used\":\"filter-due-date_filter-used__1Wx2C\",\"filter-blank\":\"filter-due-date_filter-blank__3Puwk\",\"filter-clear\":\"filter-due-date_filter-clear__12ktu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columns\":\"calendar-data_columns__1QWXz\",\"task\":\"calendar-data_task__ZE6uj\",\"buttoDiv\":\"calendar-data_buttoDiv__2J87B\",\"listName\":\"calendar-data_listName__3lv8E\",\"container\":\"calendar-data_container__AkkwG\",\"nameContainer\":\"calendar-data_nameContainer__rkbae\",\"input\":\"calendar-data_input__1VVv0\",\"inputList\":\"calendar-data_inputList__18Si4\",\"addlist\":\"calendar-data_addlist__3ybnS\",\"dueDateField\":\"calendar-data_dueDateField__3nuYW\",\"dueDateFieldInput\":\"calendar-data_dueDateFieldInput__1csSW\",\"inputElementName\":\"calendar-data_inputElementName__1CaRY\",\"clean\":\"calendar-data_clean__ldBxu\",\"taskProgress\":\"calendar-data_taskProgress__1KRv2\",\"taskProgressButton\":\"calendar-data_taskProgressButton__3GJU6\",\"taskProgressButtonInput\":\"calendar-data_taskProgressButtonInput__3n9Rl\",\"tableText\":\"calendar-data_tableText__2Rt8E\",\"select\":\"calendar-data_select__21nQR\",\"pen\":\"calendar-data_pen__1ZWSl\",\"membersDiv\":\"calendar-data_membersDiv__3h7P0\",\"membersContainer\":\"calendar-data_membersContainer__3yEFo\",\"daylyProgress\":\"calendar-data_daylyProgress__2hXc9\",\"header\":\"calendar-data_header__3vmIu\",\"cursorPointer\":\"calendar-data_cursorPointer__i8FeY\",\"filter\":\"calendar-data_filter__vHt4c\",\"filters\":\"calendar-data_filters__2NQez\",\"filters-container\":\"calendar-data_filters-container__1o1Rp\",\"filters-clicked\":\"calendar-data_filters-clicked__35F0-\",\"list\":\"calendar-data_list__3hiib\",\"attachments-container\":\"calendar-data_attachments-container__2rC_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small-buttons\":\"edit-card-options_small-buttons__3l5_v\",\"pics\":\"edit-card-options_pics__1Rgep\",\"date\":\"edit-card-options_date__6HShF\",\"select\":\"edit-card-options_select__f8FQ6\",\"members\":\"edit-card-options_members__3YsY4\",\"history\":\"edit-card-options_history__2cvkB\",\"progress-input\":\"edit-card-options_progress-input__AQHwY\",\"progress-input-container\":\"edit-card-options_progress-input-container__2yjqC\",\"progress-bar\":\"edit-card-options_progress-bar__1Zy68\",\"bad-input\":\"edit-card-options_bad-input__1z2vs\",\"progress\":\"edit-card-options_progress__35yqq\",\"att-container\":\"edit-card-options_att-container__3s32p\",\"attachment\":\"edit-card-options_attachment__23zEM\",\"att-picture\":\"edit-card-options_att-picture__1vBGz\",\"format\":\"edit-card-options_format__3YF--\",\"remaining\":\"edit-card-options_remaining__1fXLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-team_container__3iIvO\",\"title\":\"edit-team_title__t532U\",\"input-container\":\"edit-team_input-container__3mGvs\",\"input-container-invite\":\"edit-team_input-container-invite__1-eJB\",\"input-name\":\"edit-team_input-name__NRn4U\",\"text-invite\":\"edit-team_text-invite__GSDwM\",\"input-invite\":\"edit-team_input-invite__3SGX9\",\"input-container-descr\":\"edit-team_input-container-descr__3puM-\",\"text-area-descr\":\"edit-team_text-area-descr__2Z5gO\",\"button-div\":\"edit-team_button-div__2IJzX\",\"create-button\":\"edit-team_create-button__1nkRd\",\"members-avatars\":\"edit-team_members-avatars__3Ugjl\",\"members-div\":\"edit-team_members-div__1VgUe\",\"invite-input\":\"edit-team_invite-input__10J8k\",\"select-for-invite\":\"edit-team_select-for-invite__1bgKl\",\"members\":\"edit-team_members__3Uqvp\",\"user\":\"edit-team_user__3k1aK\",\"email\":\"edit-team_email__1dRrH\",\"leave-team-btn-div\":\"edit-team_leave-team-btn-div__1v5qx\",\"leave-team-btn\":\"edit-team_leave-team-btn__34yGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"signup-form_container__pL3cY\",\"alerts\":\"signup-form_alerts__1NIfM\",\"inner-container\":\"signup-form_inner-container__hoTOj\",\"logo\":\"signup-form_logo__EYNAN\",\"right-side\":\"signup-form_right-side__3LkAs\",\"title\":\"signup-form_title__QLVot\",\"input-container\":\"signup-form_input-container__1qrTE\",\"sign-up-input\":\"signup-form_sign-up-input__1oZmY\",\"pass-instructions\":\"signup-form_pass-instructions__17Qkc\",\"sign-up-button\":\"signup-form_sign-up-button__1XVSK\",\"button-div-login\":\"signup-form_button-div-login__2fD7k\",\"text-div\":\"signup-form_text-div__1wJxN\",\"already-sign-up\":\"signup-form_already-sign-up__A2wg4\",\"sign-up-btn\":\"signup-form_sign-up-btn__56zNu\",\"button-div-google-login\":\"signup-form_button-div-google-login__2CAU5\",\"google-login-btn\":\"signup-form_google-login-btn__2VdiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"list-color_aside__27qHb\",\"list\":\"list-color_list__3JEd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members-avatars\":\"team-members_members-avatars__390KK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"progress-bar_bar__4DnDk\",\"progress\":\"progress-bar_progress__1WhBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"attachmentsLink_button__13r6n\",\"attachments\":\"attachmentsLink_attachments__JXZ-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectInfoContainer\":\"project-list_projectInfoContainer__3mRLd\",\"calendar-container\":\"project-list_calendar-container__3Tbzi\",\"table\":\"project-list_table__ibsXA\",\"column\":\"project-list_column__3rGR1\",\"columnChild\":\"project-list_columnChild__1AVvT\",\"daylyElement\":\"project-list_daylyElement__2Qz1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"my-tasks_title__glghp\",\"teams\":\"my-tasks_teams__1ifMW\",\"selected\":\"my-tasks_selected__2hBIa\",\"pic\":\"my-tasks_pic__37y99\",\"box\":\"my-tasks_box__19wXx\",\"project\":\"my-tasks_project__1KJap\",\"project-name\":\"my-tasks_project-name__2-cBX\",\"link\":\"my-tasks_link__3JjLA\",\"bold\":\"my-tasks_bold__3TzlB\",\"header\":\"my-tasks_header__3-wOE\",\"raw\":\"my-tasks_raw__31kUo\",\"container\":\"my-tasks_container__yU16j\",\"task-container\":\"my-tasks_task-container__svxEy\",\"list\":\"my-tasks_list__33WIh\",\"task\":\"my-tasks_task__tAkep\",\"progress\":\"my-tasks_progress__1ufVZ\",\"days\":\"my-tasks_days__2EVrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"create-team_container__2x5c_\",\"form\":\"create-team_form__31NMs\",\"title\":\"create-team_title___mRVu\",\"input-container\":\"create-team_input-container__120Le\",\"input-name\":\"create-team_input-name__wbZRq\",\"input-container-descr\":\"create-team_input-container-descr__1ODZz\",\"input-container-members\":\"create-team_input-container-members__1ufrx\",\"description-text\":\"create-team_description-text__1uRG8\",\"text-area-descr\":\"create-team_text-area-descr__2vq-U\",\"members-text\":\"create-team_members-text__2zmpj\",\"input-members\":\"create-team_input-members__bd9o9\",\"button-div\":\"create-team_button-div__w-R_d\",\"create-button\":\"create-team_create-button__1FHVI\",\"members-avatars\":\"create-team_members-avatars__dYqfC\",\"invite-input\":\"create-team_invite-input__2-X5E\",\"select-for-invite\":\"create-team_select-for-invite__3qZYT\",\"members-pop-up\":\"create-team_members-pop-up__1kwPP\",\"members\":\"create-team_members__32-cU\",\"user\":\"create-team_user__2icTP\",\"email\":\"create-team_email__lytiR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"form-forgot-password_container__26C4L\",\"alerts\":\"form-forgot-password_alerts__1fS5n\",\"inner-container\":\"form-forgot-password_inner-container__3W8lt\",\"logo\":\"form-forgot-password_logo__3Hu63\",\"right-side\":\"form-forgot-password_right-side__21XKQ\",\"title\":\"form-forgot-password_title__1KDRx\",\"input-container\":\"form-forgot-password_input-container__IW3bb\",\"emailInput\":\"form-forgot-password_emailInput__VJY2X\",\"passInput\":\"form-forgot-password_passInput__3nmAn\",\"loginButton\":\"form-forgot-password_loginButton__hdTg5\",\"buttonDivLogin\":\"form-forgot-password_buttonDivLogin__2xfcE\",\"textDiv\":\"form-forgot-password_textDiv__1uU55\",\"buttonDivGoogleLogin\":\"form-forgot-password_buttonDivGoogleLogin__2UhZA\",\"forgotPass\":\"form-forgot-password_forgotPass__3QNjx\",\"newToSmM\":\"form-forgot-password_newToSmM__3i_oO\",\"signUpBtn\":\"form-forgot-password_signUpBtn__Zc2y6\",\"googleLoginBtn\":\"form-forgot-password_googleLoginBtn__1cA2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login-form_container__DtpdL\",\"alerts\":\"login-form_alerts__3wIFj\",\"inner-container\":\"login-form_inner-container__7oZRt\",\"logo\":\"login-form_logo__2lNG1\",\"right-side\":\"login-form_right-side__1qmB_\",\"title\":\"login-form_title__I-Bu-\",\"input-container\":\"login-form_input-container__2Gp5r\",\"email-input\":\"login-form_email-input__2gYaE\",\"pass-input\":\"login-form_pass-input__35CUg\",\"login-button\":\"login-form_login-button__1uy1x\",\"button-div-login\":\"login-form_button-div-login__ErLQu\",\"text-div\":\"login-form_text-div__18MK_\",\"button-div-google-login\":\"login-form_button-div-google-login__259W1\",\"forgot-pass\":\"login-form_forgot-pass__2H5x8\",\"new-to-sm\":\"login-form_new-to-sm__2fzoU\",\"sign-up-btn\":\"login-form_sign-up-btn__gw4UI\",\"google-login-btn\":\"login-form_google-login-btn__3sp6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"add-project-member_container__22-qP\",\"form\":\"add-project-member_form__3qaBa\",\"current-members\":\"add-project-member_current-members__3RNVi\",\"admins-container\":\"add-project-member_admins-container__3JjPC\",\"admins\":\"add-project-member_admins__3tdXj\",\"big-container\":\"add-project-member_big-container__1j1-9\",\"members-container\":\"add-project-member_members-container__M6Z1p\",\"title\":\"add-project-member_title__3EGhe\",\"members\":\"add-project-member_members__8u9vO\",\"member-select\":\"add-project-member_member-select__2SrhS\",\"add-button\":\"add-project-member_add-button__2OOOi\",\"draggable\":\"add-project-member_draggable__3PkUN\",\"droppable\":\"add-project-member_droppable__XWc43\",\"droppable-members\":\"add-project-member_droppable-members__1iHfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"button-clean_clean__2SpL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-picture\":\"avatar-user_profile-picture__EodOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"create-project_container__3mplR\",\"title\":\"create-project_title__2N9HY\",\"input-container\":\"create-project_input-container__28w3g\",\"input-name\":\"create-project_input-name__eAV6y\",\"invite-input\":\"create-project_invite-input__3RmZ5\",\"select-for-invite\":\"create-project_select-for-invite__dgcCU\",\"members-input\":\"create-project_members-input__viVpd\",\"input-container-descr\":\"create-project_input-container-descr__2GHEX\",\"text-area-descr\":\"create-project_text-area-descr__1TOMF\",\"text-invite\":\"create-project_text-invite__3CPaO\",\"button-div\":\"create-project_button-div__L527l\",\"create-button\":\"create-project_create-button__1TcHh\",\"members-avatars\":\"create-project_members-avatars__1q9MH\",\"members\":\"create-project_members__2Uleh\",\"user\":\"create-project_user__6JmZH\",\"email\":\"create-project_email__1NcNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button-grey_button__2u67_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"link_link__3NAE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"transparent_transparent__30Vus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-container\":\"search-results_search-container__1aurP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__3Ce-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__3deuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3LYM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"inbox_title__3OZg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"confirmation_container__1bAwH\",\"logo\":\"confirmation_logo__r2fwd\",\"title\":\"confirmation_title__25J6O\",\"text\":\"confirmation_text__CrbGr\",\"cheers\":\"confirmation_cheers__2efBO\",\"team\":\"confirmation_team__DFO2_\",\"proceed-button\":\"confirmation_proceed-button__1MxlW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-card_container__2tYtI\",\"task-name\":\"edit-card_task-name__26wIw\",\"name-input\":\"edit-card_name-input___gxuh\",\"task-body\":\"edit-card_task-body__gBHAf\",\"text\":\"edit-card_text__3mvzJ\",\"left-side\":\"edit-card_left-side__CTqky\",\"right-side\":\"edit-card_right-side__1jdEh\",\"task-component\":\"edit-card_task-component__3DsaE\",\"description-input\":\"edit-card_description-input__3IEGO\",\"small-buttons\":\"edit-card_small-buttons__1ZE0w\",\"pics\":\"edit-card_pics__dtnBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"form-add-password_container__2yhI6\",\"alerts\":\"form-add-password_alerts__2d9EU\",\"innerContainer\":\"form-add-password_innerContainer__2zNNl\",\"logo\":\"form-add-password_logo__1HgWR\",\"rightSide\":\"form-add-password_rightSide__1LBUg\",\"title\":\"form-add-password_title__1kxgS\",\"inputContainer\":\"form-add-password_inputContainer__zhZU1\",\"passInstructions\":\"form-add-password_passInstructions__25RWw\",\"passInput\":\"form-add-password_passInput__1gXnd\",\"loginButton\":\"form-add-password_loginButton__3pupI\",\"buttonDivLogin\":\"form-add-password_buttonDivLogin__3aXeP\",\"textLogin\":\"form-add-password_textLogin__2noU-\",\"textDiv\":\"form-add-password_textDiv__3Bs4x\",\"forgotPass\":\"form-add-password_forgotPass__1Uo4N\",\"newToSmM\":\"form-add-password_newToSmM__3qN7U\",\"signUpBtn\":\"form-add-password_signUpBtn__2VXx2\",\"newPassAlert\":\"form-add-password_newPassAlert__1iW4i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__23Rsq\",\"row\":\"list_row__1A6HD\",\"button\":\"list_button__2gQ2b\",\"dots\":\"list_dots__wwSr4\",\"menu\":\"list_menu__1hArt\",\"edit\":\"list_edit__KXS03\",\"delete\":\"list_delete__1qqcq\",\"relative\":\"list_relative__2X72U\",\"add-task\":\"list_add-task__12pcF\",\"draggable\":\"list_draggable__2_1rW\",\"droppable\":\"list_droppable__cPWKr\",\"flexend\":\"list_flexend__3_V7F\",\"name\":\"list_name__33z_E\",\"container\":\"list_container__HKNpO\",\"input\":\"list_input__3Rjro\",\"task-input\":\"list_task-input__3Qgts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__fjBCo\",\"pic-container\":\"home_pic-container__19tLe\",\"pic1\":\"home_pic1__2nxZp\",\"welcome-user\":\"home_welcome-user__3-oPo\",\"left-buttons\":\"home_left-buttons__1hKu4\",\"right-buttons\":\"home_right-buttons__3sde6\",\"my-teams-container\":\"home_my-teams-container__2mSLR\",\"teams-home\":\"home_teams-home__3j3qr\",\"select-team-container\":\"home_select-team-container__SZWtV\",\"navigate-buttons\":\"home_navigate-buttons__2Lqc4\",\"navigate-buttons-teams\":\"home_navigate-buttons-teams__2zoCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-list_container__1PV_g\",\"form\":\"edit-list_form__1Ipgs\",\"title\":\"edit-list_title__1OmTv\",\"input-container\":\"edit-list_input-container__1Xk2M\",\"name\":\"edit-list_name__13OFB\",\"inputListName\":\"edit-list_inputListName__1l3BY\",\"change-color\":\"edit-list_change-color__3HL93\",\"color-title\":\"edit-list_color-title__JW9SN\",\"list-color\":\"edit-list_list-color__RxwCd\",\"color-pick\":\"edit-list_color-pick__3MYZG\",\"color-button\":\"edit-list_color-button__1duo6\",\"edit-list-button\":\"edit-list_edit-list-button__3kaw7\",\"name-input\":\"edit-list_name-input__3x8HX\",\"text\":\"edit-list_text__281s1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"aside_aside__3wMyb\",\"container\":\"aside_container__Qu0TM\",\"button\":\"aside_button__1Dg_A\",\"logo\":\"aside_logo__1AAc9\",\"top-left\":\"aside_top-left__-_vaI\",\"menu\":\"aside_menu__b_F-d\",\"top-right\":\"aside_top-right__191c3\",\"link\":\"aside_link__2o8o9\",\"bottom-right\":\"aside_bottom-right__1FKYl\",\"bell\":\"aside_bell__25Vva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"my-tasks-task_card__3BAWy\",\"task\":\"my-tasks-task_task__1lp6I\",\"progress\":\"my-tasks-task_progress__2gxJ6\",\"days\":\"my-tasks-task_days__fOUDh\",\"deadline\":\"my-tasks-task_deadline__2lfRD\",\"buttons-container\":\"my-tasks-task_buttons-container__3FXO0\",\"button\":\"my-tasks-task_button__QPAX8\",\"input\":\"my-tasks-task_input__2s3ei\",\"bad-input\":\"my-tasks-task_bad-input__3kwUX\",\"no-border\":\"my-tasks-task_no-border__1QKqD\",\"edit\":\"my-tasks-task_edit__1xVtt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"edit-project_form__u2u3o\",\"title\":\"edit-project_title__1LrjA\",\"buttons-div\":\"edit-project_buttons-div__EE1f6\",\"navigate-buttons\":\"edit-project_navigate-buttons__2Zfm7\",\"input-container\":\"edit-project_input-container__3FESj\",\"input-pr-name\":\"edit-project_input-pr-name__1gf5E\",\"input-container-descr\":\"edit-project_input-container-descr__1CK_p\",\"text-area-descr\":\"edit-project_text-area-descr__1EcWM\",\"edit-members\":\"edit-project_edit-members__3T8W2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"table-date-navigation_container__1uoG4\",\"navigateButtons\":\"table-date-navigation_navigateButtons__32aiq\",\"picContainer\":\"table-date-navigation_picContainer__3ZRkt\",\"centeredText\":\"table-date-navigation_centeredText__t9WtX\"};","const getCookie = (name) => {\r\n    const cookieValue = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n    return cookieValue ? cookieValue[2] : null;\r\n}\r\n\r\nexport default getCookie;","function userObject(response) {\r\n    return {\r\n        username: response.user.username,\r\n        id: response.user._id,\r\n        teams: response.teams,\r\n        inbox: response.user.inbox,\r\n        confirmed: response.user.confirmed,\r\n        newPasswordConfirmed: response.user.newPasswordConfirmed,\r\n        recentProjects: response.user.recentProjects,\r\n        image: response.user.image\r\n    }\r\n}\r\n\r\nexport default userObject","import React from \"react\"\r\n\r\nconst UserContext = React.createContext({\r\n    user: null,\r\n    logIn: () => {},\r\n    logOut: () => {}\r\n});\r\n\r\nexport default UserContext","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport getCookie from \"../utils/cookie\"\r\nimport userObject from \"../utils/userObject\"\r\nimport UserContext from \"./UserContext\"\r\n\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const history = useHistory()\r\n\r\n    const logIn = (user) => {\r\n        setUser({\r\n            ...user,\r\n            loggedIn: true\r\n        })\r\n    }\r\n\r\n    const logOut = useCallback(() => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        fetch('/api/user/logout', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        }).then(response => {\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            } else {\r\n                document.cookie = \"x-auth-token= ; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/;\"\r\n\r\n                setUser({\r\n                    loggedIn: false\r\n                })\r\n            }\r\n        })\r\n    }, [history])\r\n\r\n    const verifyLogin = useCallback(() => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        if (!token) {\r\n\r\n            setUser({\r\n                loggedIn: false\r\n            })\r\n\r\n            setLoading(false)\r\n            return;\r\n        }\r\n\r\n        fetch(\"/api/user/verify\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        }).then(promise => {\r\n            return promise.json()\r\n        }).then(response => {\r\n            if (response.status) {\r\n                logIn(userObject(response))\r\n            } else {\r\n                logOut()                \r\n            }\r\n\r\n            setLoading(false)\r\n        })\r\n    }, [logOut])\r\n\r\n    useEffect(() => {\r\n        verifyLogin()\r\n    }, [verifyLogin])\r\n\r\n    if (loading) {\r\n        return (\r\n            <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#363338\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            user,\r\n            setUser,\r\n            logIn,\r\n            logOut\r\n        }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider","import React from \"react\"\r\nimport UserProvider from \"./contexts/UserProvider\"\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n        <UserProvider>\r\n            {props.children}\r\n        </UserProvider>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\n\r\nconst TeamContext = React.createContext({\r\n  teams: [] ,\r\n  setTeams: () => {},\r\n  selectedTeam: 'Select' ,\r\n  setSelectedTeam: () => {},\r\n  getCurrentTeam: () => {},\r\n  currentTeam: '',\r\n  setCurrentTeam: () => {},\r\n  getTeams: () => {}\r\n})\r\n\r\nexport default TeamContext","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonClean = ( { title, onClick, type, className, children, style } ) => {\r\n    return (\r\n    <button type={type || 'button'} onClick={onClick} className={`${styles.clean} ${className}`} style={style} >{title}{children}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonClean","import React, { useContext, useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext)\r\n}\r\n\r\nexport function SocketProvider({ user, children }) {\r\n  const [socket, setSocket] = useState()\r\n  const url = window.location.href.includes('heroku') ? '/' : 'http://localhost:4000'\r\n    \r\n  useEffect(() => {\r\n    if (!user) {\r\n      return\r\n    }\r\n\r\n    if (!user.teams) {\r\n      return\r\n    }\r\n    const username = user.username\r\n    const userId = user.id\r\n    const teams = [...user.teams]\r\n    const teamsId = teams.map( t => t._id)\r\n    const teamsStr = JSON.stringify(teamsId)\r\n    const newSocket = io(\r\n      url, {\r\n        query: { teamsStr, username, userId },\r\n        transports: ['websocket']\r\n      }\r\n    )\r\n    setSocket(newSocket)\r\n\r\n    return () => newSocket.close()\r\n  }, [user, url])\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n}\r\n","import styles from \"./index.module.css\"\r\nimport Image from \"cloudinary-react/lib/components/Image\"\r\nimport Transformation from \"cloudinary-react/lib/components/Transformation\"\r\nimport Avatar from \"react-avatar\"\r\n\r\n\r\n\r\nexport default function AvatarUser({ user, onClick, className, key, size }) {\r\n\r\n    return (\r\n\r\n        user.image ?\r\n                <Image publicId={user.image.publicId} onClick={onClick}\r\n                    key={key}\r\n                    className={`${styles['profile-picture']} ${className}`}\r\n                >\r\n                    <Transformation width={size} height={size} gravity=\"faces\" crop=\"fill\" />\r\n                </Image>\r\n            :\r\n\r\n            <Avatar\r\n                key={key}\r\n                className={className}\r\n                onClick={onClick}\r\n                name={user.username}\r\n                size={size}\r\n                round={true}\r\n                maxInitials={2}\r\n            />\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonGrey = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonGrey","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AvatarUser from '../avatar-user'\r\nimport ButtonGrey from '../button-grey'\r\n\r\n\r\nexport default function CreateTeam(props) {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch('/api/user/get-all', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u._id !== input._id)\r\n        setMembers(arr)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch('/api/teams', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                requests: members\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const team = await response.json()\r\n            const arr = [...teamContext.teams]\r\n            arr.push(team)\r\n            // const userTeams = [...userContext.user.teams]\r\n            // userTeams.push(team)\r\n            teamContext.setTeams(arr)\r\n            teamContext.setSelectedTeam(team.name)\r\n            props.hideForm()\r\n            socket.emit('team-update', team._id)\r\n            socket.emit('multiple-messages-sent', members)\r\n            history.push(`/team/${team._id}`)\r\n        }\r\n\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    return (\r\n        // <div className={styles.form}>\r\n\r\n        <div className={styles.container}>\r\n\r\n\r\n            <div className={styles.title} >Create New Team</div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    placeholder='Team Name'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span className={styles['description-text']}> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label=\"Description\"\r\n                    id=\"description\"\r\n                    placeholder='Team Description'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-members']}>\r\n                <span className={styles['members-text']}> Invite Members</span>\r\n\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['input-members']}\r\n                        autoComplete=\"off\"\r\n                        value={member}\r\n                        onChange={inputMembers}\r\n                        label=\"Invite members\"\r\n                        id=\"members\"\r\n                        placeholder='username'\r\n                        onBlur={onBlur}\r\n\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            showMembers &&\r\n                            <div className={styles['members-pop-up']}>\r\n                                <div className={styles.members}>\r\n                                    {\r\n                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                            .filter((e) => {\r\n                                                const found = members.find(element => element.username === e.username)\r\n                                                if (found) {\r\n                                                    return false\r\n                                                } else {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                            .map(u => {\r\n                                                return (\r\n                                                    <ButtonClean\r\n                                                        key={u._id}\r\n                                                        className={styles.user}\r\n                                                        onClick={() => addMember(u)}\r\n                                                        title={<div>\r\n                                                            <div>{u.username}</div>\r\n                                                            <div className={styles.email}>{u.email}</div>\r\n                                                        </div>}\r\n                                                    />)\r\n                                            })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map(m => {\r\n                        return (\r\n                            <ButtonClean\r\n                                onClick={() => removeMember(m)}\r\n                                title={\r\n                                <AvatarUser user={m} size={40}/>\r\n                                }\r\n                            />\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n                {/* <button type='submit' className={styles['create-button']}>Create</button> */}\r\n                <ButtonGrey onClick={(e)=>handleSubmit(e)} title=\"Create\" className={styles['create-button']}/>\r\n                \r\n            </div>\r\n\r\n\r\n        </div>\r\n        // </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LinkComponent = ({ title, href, className, onClick }) => {\r\n    return (\r\n            <Link to={href} className={`${styles.link} ${className}`} onClick={onClick} >\r\n                {title}\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponent;","export default __webpack_public_path__ + \"static/media/logo.2beba198.svg\";","export default __webpack_public_path__ + \"static/media/menu.f66dcc80.svg\";","export default __webpack_public_path__ + \"static/media/home.05f82417.svg\";","export default __webpack_public_path__ + \"static/media/tasks.d514e762.svg\";","export default __webpack_public_path__ + \"static/media/inbox.6389f480.svg\";","export default __webpack_public_path__ + \"static/media/inbox-bell.959a963c.svg\";","import React from 'react'\r\n\r\nconst ProjectContext = React.createContext({\r\n  lists: [] ,\r\n  setLists: () => {},\r\n  hiddenLists: [],\r\n  setHiddenLists: () => {},\r\n  project: {},\r\n  setProject: () => {}\r\n})\r\n\r\nexport default ProjectContext\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ListColor({ color, type }) {\r\n    return (\r\n        <svg className={`${styles[type]}`} xmlns=\"http://www.w3.org/2000/svg\" width=\"110\" height=\"26.931\" viewBox=\"0 0 110 26.931\">\r\n            <g id=\"Layer_2\" data-name=\"Layer 2\" transform=\"translate(0.002 0.014)\">\r\n                <g id=\"Layer_1\" data-name=\"Layer 1\" transform=\"translate(-0.002 -0.014)\">\r\n                    <path \r\n                        className={styles.path} \r\n                        id=\"Path_60\" \r\n                        data-name=\"Path 60\" \r\n                        d=\"M4.208,22.578l-.277-.26c-.594-.366-.814-1.074-1.351-1.49-1-.749-1.14-2.214-2.352-2.784a1.237,1.237,0,0,1-.187-.391,1.628,1.628,0,0,1,.554-1.628,5.636,5.636,0,0,1,3.1-.456,6.862,6.862,0,0,0,1.083,0,.733.733,0,0,0,.765-.765c.049-.48-.057-.814-.586-.871a1.628,1.628,0,0,1-.513-.163c-.92-.456-.961-1.083-.106-1.7a3.256,3.256,0,0,0,.545-.448,1.27,1.27,0,0,1,.659-.383c.667-.244,1.538.3,2.027-.545a.651.651,0,0,0-.244-.374,6.894,6.894,0,0,1-.659-.554,1.278,1.278,0,0,1-.415-.814A1.9,1.9,0,0,0,5.022,6.933C4.2,6.509,3.6,5.891,4.411,4.881c2.263-1.628,4.933-1.937,7.57-2.328,1.27-.309,2.589-.187,3.858-.48a4.811,4.811,0,0,1,1.449-.09c.643.073,1.254.317,1.921-.147a2.011,2.011,0,0,1,1.718-.106,2.808,2.808,0,0,0,2.32-.2,3.394,3.394,0,0,1,2.2.122c1.628-.6,3.313-.391,4.957-.667.765-.147,1.563-.114,2.328-.3a8.873,8.873,0,0,1,3.557.13.252.252,0,0,0,.269,0A2.914,2.914,0,0,1,39.885.73h.277A2.182,2.182,0,0,1,42.075.307a22.922,22.922,0,0,0,3.883.057A34.326,34.326,0,0,0,56.165.2,1.75,1.75,0,0,1,57.85.51h.277C59.136-.3,60.276.054,61.383.128a28.856,28.856,0,0,0,4.436.26,8.669,8.669,0,0,1,2.751,0c1.188.317,2.442,0,3.606.244A22.083,22.083,0,0,0,75.7.917l.464.041a16.752,16.752,0,0,0,3.191.228h.464c1.083.057,2.157.285,3.256.269,1.351,0,2.678.3,4.021.309.814.171,1.685.2,2.523.334.545.269,1.254.065,1.709.578a4.746,4.746,0,0,0,1.9.309,26.545,26.545,0,0,1,4.548.392c1.166.211,2.347.235,3.527.333,1.091.3,2.271,0,3.329.5,1.408,0,2.825,0,4.241.081.3,0,.716.1.676.513s-.374.586-.814.383c-1.034-.09-2.059-.155-2.523,1.083-.317.814-.961.562-1.555.488-.537.228-1.14.147-1.677.358a5.576,5.576,0,0,1-.814.106,20.26,20.26,0,0,0-4.591.765c.814.676,1.245,1.555,2.255,1.758a1.934,1.934,0,0,1,1.424.334c-.057,1.026-.936.586-1.449.814a.578.578,0,0,1-.383-.065.057.057,0,0,0,0,.057h3.972a1.042,1.042,0,0,1,.92.448c-.244.814-1.058.521-1.587.814-.407.212-1.156.187-.545.961a4.613,4.613,0,0,0,.391.407,11.928,11.928,0,0,0,3,.155,5.421,5.421,0,0,1,.961,0c.814.147,1.058.44.407,1.156-1.074,1.188-2.442,2.165-3.012,3.769,1.742,0,3.565.041,5.389,0,.863.4.879.92.236,1.547a1.148,1.148,0,0,0-.3.814c.114.35.073.733.212,1.074.562,1.384.5,1.547-.863,2.068a13.569,13.569,0,0,1-2.637.814c-1.571.049-3.118.521-4.7.309-1.628-.554-3.329.212-4.99-.081a9.589,9.589,0,0,0-4.884.147,2.816,2.816,0,0,1-2.076.488H79.771a5.739,5.739,0,0,0-1.9.179,10.631,10.631,0,0,1-1.831.1c-4.485,0-8.954.081-13.455,0a4.933,4.933,0,0,0-1.758.187,9.247,9.247,0,0,1-2.507.106h-.529a28.6,28.6,0,0,1-3.126,0h-.48a6.137,6.137,0,0,1-1.726-.1,11.209,11.209,0,0,0-3.533-.2c-2.222.065-4.461-.106-6.675.163a6.658,6.658,0,0,1-1.929.081,4.168,4.168,0,0,1-.456,0c-1.286,0-2.572.106-3.858.049a12.474,12.474,0,0,0-3.394,0c-1.319.2-2.67-.138-3.98.187a16.768,16.768,0,0,1-2.556.236c-1.368-.366-2.711.342-4.07.106a2.133,2.133,0,0,1-.456-.073,9.475,9.475,0,0,0-2.711-.179c-1.213-.09-2.442-.236-3.63-.342a9.377,9.377,0,0,0-1.058-.228,17.6,17.6,0,0,0-2.068-.114c-1.335-.472-2.768-.22-4.119-.521a.969.969,0,0,1-.684-.814l-.594-.537c-.244-.236-.627-.26-.814-.529l-.529-.342A1.913,1.913,0,0,1,4.208,22.578Z\" \r\n                        transform=\"translate(0.002 0.014)\" \r\n                        fill={color} \r\n                    />\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport ProjectContext from \"../../contexts/ProjectContext\";\r\nimport ListColor from '../list-color'\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonHideList = ( { list, type } ) => {\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    function onClick() {\r\n        const newHiddenLists = [...projectContext.hiddenLists]\r\n        \r\n        if (newHiddenLists.includes(list._id)) {\r\n            const index = newHiddenLists.indexOf(list._id)\r\n            newHiddenLists.splice(index, 1)\r\n        } else {\r\n            newHiddenLists.push(list._id)\r\n        }\r\n        projectContext.setHiddenLists(newHiddenLists)\r\n    }\r\n\r\n    return (\r\n    <button onClick={onClick} className={`${styles.submit} ${projectContext.hiddenLists.includes(list._id) && styles.opacity}`} >\r\n        <ListColor color={list.color || '#A6A48E'} type={type} />\r\n        <div className={styles.name}>{list.name}</div>\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default ButtonHideList","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport LinkComponent from '../link'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport menu from '../../images/aside/menu.svg'\r\nimport home from '../../images/aside/home.svg'\r\nimport tasks from '../../images/aside/tasks.svg'\r\nimport inbox from '../../images/aside/inbox.svg'\r\nimport bell from '../../images/aside/inbox-bell.svg'\r\n// import settings from '../../images/aside/settings.svg'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport ButtonHideList from '../button-hide-list'\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport userObject from '../../utils/userObject'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\n\r\nexport default function Aside({ asideOn, setAsideOn }) {\r\n    const [listVisibility, setListVisibility] = useState(false)\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const logIn = userContext.logIn\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('project')) {\r\n            setListVisibility(true)\r\n        }\r\n    }, [])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        const user = userObject(response)\r\n        logIn(user)\r\n    }, [logIn])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <div className={styles.aside}>\r\n            <aside className={styles.container}>\r\n                <div className={styles['top-left']}>\r\n                    <ButtonClean\r\n                        onClick={() => setAsideOn(!asideOn)}\r\n                        title={<img className={styles.options} src={menu} alt=\"menu\" width=\"32\" height=\"24\" />}\r\n                    />\r\n                </div>\r\n                <LinkComponent\r\n                    href='/'\r\n                    title={<img src={home} alt=\"home\" width=\"34\" height=\"32\" />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/my-tasks/${userContext.user.id}`}\r\n                    title={<img src={tasks} alt=\"my-tasks\" width=\"30\" height=\"25\" />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/inbox/${userContext.user.id}`}\r\n                    title={<img src={inbox} alt=\"inbox\" width=\"33\" height=\"34\" />}\r\n                />\r\n                {/* <LinkComponent\r\n                    href={`/profile/${userContext.user.id}`}\r\n                    title={<img src={settings} alt=\"settings\" width=\"25\" height=\"25\" />}\r\n                /> */}\r\n                {\r\n                    userContext.user.inbox.length !== 0 &&\r\n                    <LinkComponent\r\n                        href={`/inbox/${userContext.user.id}`}\r\n                        title={<img src={bell} alt=\"inbox\" width=\"33\" height=\"34\" />}\r\n                        className={styles.bell}\r\n                    />\r\n                }\r\n            </aside>\r\n            {\r\n                asideOn &&\r\n                    <div className={styles.menu}>\r\n                        <div className={styles['top-right']}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width=\"87\" height=\"65\" />\r\n                            </div>\r\n                            <LinkComponent\r\n                                href='/'\r\n                                title='Home'\r\n                                className={styles.link}\r\n                            />\r\n                            <LinkComponent\r\n                                href={`/my-tasks/${userContext.user.id}`}\r\n                                title='My Tasks'\r\n                                className={styles.link}\r\n                            />\r\n                            <LinkComponent\r\n                                href={`/inbox/${userContext.user.id}`}\r\n                                title='Inbox'\r\n                                className={styles.link}\r\n                            />\r\n                            {/* <LinkComponent\r\n                                href={`/profile/${userContext.user.id}`}\r\n                                title='Settings'\r\n                                className={styles.link}\r\n                            /> */}\r\n                        </div>\r\n                        {listVisibility && <div className={styles['bottom-right']}>\r\n                            {\r\n                                projectContext.lists.map((element) => {\r\n                                    return (\r\n                                        <ButtonHideList key={element._id} list={element} type={'aside'} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>}\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\n\r\nexport const useDetectOutsideClick = (el) => {\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const onClick = e => {\r\n      // If the active element exists and is clicked outside of\r\n      if (el.current !== null && !el.current.contains(e.target)) {\r\n        setIsActive(!isActive)\r\n      }\r\n    }\r\n\r\n    // If the item is active (ie open) then listen for clicks outside\r\n    if (isActive) {\r\n      window.addEventListener(\"click\", onClick)\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", onClick)\r\n    }\r\n  }, [isActive, el])\r\n\r\n  return [isActive, setIsActive]\r\n}","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst Transparent = (props) => {\r\n    return (\r\n    <>\r\n    <div onClick={props.hideForm} className={styles.transparent}></div>\r\n    {props.children}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Transparent\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AvatarUser from '../avatar-user'\r\nimport ButtonGrey from '../button-grey'\r\n\r\nexport default function CreateProject({ hideForm }) {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const socket = useSocket()\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n        const teamId = params.teamid\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch('/api/projects', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                teamId,\r\n                members\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        } else {\r\n            const project = await response.json()\r\n            hideForm && hideForm()\r\n            socket.emit('team-update', teamId)\r\n            history.push(`/project-board/${teamId}/${project._id}`)\r\n        }\r\n    }\r\n\r\n    const onFocus = async () => {\r\n        setShowMembers(true)\r\n\r\n        const teamId = params.teamid\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch(`/api/teams/get-users/${teamId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users.members)\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u._id !== input._id)\r\n        setMembers(arr)\r\n    }\r\n\r\n    return (\r\n        // <div className={styles.form}>\r\n        <div className={styles.container} >\r\n\r\n\r\n\r\n            <div className={styles.title} >Create New Project</div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    placeholder='Project Name'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label=\"Description\"\r\n                    id=\"description\"\r\n                    placeholder='Project Description'\r\n\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span className={styles['text-invite']}> Invite Members</span>\r\n\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['members-input']}\r\n                        autoComplete=\"off\"\r\n                        value={member}\r\n                        onFocus={onFocus}\r\n                        onBlur={onBlur}\r\n                        onChange={(e) => setMember(e.target.value)}\r\n                        label=\"Invite members\"\r\n                        id=\"members\"\r\n                        placeholder='Teammate Username'\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            showMembers &&\r\n                            <div className={styles.members}>\r\n                                {\r\n                                    allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                        .filter((e) => {\r\n                                            const found = members.find(element => element.username === e.username)\r\n                                            if (found) {\r\n                                                return false\r\n                                            } else {\r\n                                                return true\r\n                                            }\r\n                                        })\r\n                                        .sort((a, b) => a.username.localeCompare(b.username))\r\n                                        .map(u => {\r\n                                            return (\r\n                                                <ButtonClean\r\n                                                    key={u._id}\r\n                                                    className={styles.user}\r\n                                                    onClick={() => addMember(u)}\r\n                                                    title={<div>\r\n                                                        <div>{u.username}</div>\r\n                                                        <div className={styles.email}>{u.email}</div>\r\n                                                    </div>}\r\n                                                />)\r\n                                        })\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map((m,index) => {\r\n                        return (\r\n                            <AvatarUser key={index} user={m} onClick={() => removeMember(m)} size={40}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n            <ButtonGrey onClick={(e)=>handleSubmit(e)} title=\"Create\" className={styles['create-button']}/>\r\n                {/* <button type='submit' className={styles['create-button']}>Create</button> */}\r\n            </div>\r\n\r\n        </div>\r\n        // </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\n\r\n\r\nexport default function SearchResults(props) {\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const teams = userContext.user.teams\r\n    const searchInput = props.searchInput\r\n\r\n    let resultArr = []\r\n\r\n    for (let index = 0; index < teams.length; index++) {\r\n        const team = teams[index];\r\n        let obj = { 'name': `Team: ${team.name}`, 'id': team._id, 'type': 'team' }\r\n        resultArr.push(obj)\r\n        for (let index = 0; index < team.projects.length; index++) {\r\n            const project = team.projects[index];\r\n            let obj = { 'name': `Project: ${project.name}`, 'id': project._id, 'type': 'project' }\r\n            resultArr.push(obj)\r\n        }\r\n    }\r\n\r\n    const gotToPage = (id) => {\r\n        for (let index = 0; index < teams.length; index++) {\r\n            const team = teams[index];\r\n            if (team._id === id) {\r\n                history.push(`/team/${id}`)\r\n                teamContext.updateSelectedTeam(team._id)\r\n                props.hideForm()\r\n            }\r\n            for (let index = 0; index < team.projects.length; index++) {\r\n                const project = team.projects[index];\r\n                if (project._id === id) {\r\n                    history.push(`/project-board/${team._id}/${project._id}`)\r\n                    teamContext.updateSelectedTeam(team._id)\r\n                    props.hideForm()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles['search-container']}>\r\n            {\r\n                resultArr.filter(u => u.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n                    .map((t, index) => {\r\n                        return (\r\n                            <div key={index} onClick={() => { gotToPage(t.id) }}>{t.name}</div>\r\n                        )\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useRef, useState, useEffect, useCallback } from \"react\"\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useDetectOutsideClick } from \"../../utils/useDetectOutsideClick\"\r\nimport LinkComponent from \"../link\"\r\nimport ButtonClean from \"../button-clean\"\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport Transparent from \"../transparent\"\r\nimport CreateTeam from \"../create-team\"\r\nimport ProjectContext from \"../../contexts/ProjectContext\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport CreateProject from \"../create-project\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport SearchResults from \"../search-results\"\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport AvatarUser from \"../avatar-user\"\r\n\r\nconst Header = ({ asideOn }) => {\r\n    const dropdownRefProfile = useRef(null)\r\n    const dropdownRefView = useRef(null)\r\n    const dropdownRefProject = useRef(null)\r\n    const dropdownRefTeam = useRef(null)\r\n    const dropdownRefSearch = useRef(null)\r\n    const [isProjectVisibble, setIsProjectVisibble] = useState(false)\r\n    const [isProjectActive, setIsProjectActive] = useDetectOutsideClick(dropdownRefProject)\r\n    const [isTeamActive, setIsTeamActive] = useDetectOutsideClick(dropdownRefTeam)\r\n    const [isViewVisibble, setIsViewVisibble] = useState(false)\r\n    const [isViewActive, setIsViewActive] = useDetectOutsideClick(dropdownRefView)\r\n    const [viewState, setViewState] = useState(null)\r\n    const [isProfileActive, setIsProfileActive] = useDetectOutsideClick(dropdownRefProfile)\r\n    const [showTeamForm, setShowTeamForm] = useState(false)\r\n    const [showSearchForm, setShowSearchForm] = useDetectOutsideClick(dropdownRefSearch)\r\n    const [searchInput, setSearchInput] = useState('')\r\n    const [showProjectForm, setShowProjectForm] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const projectContext = useContext(ProjectContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n\r\n    function selectTeam(teamId, teamName) {\r\n        teamContext.getCurrentProjects(teamId)\r\n        teamContext.setSelectedTeam(teamName)\r\n        setIsTeamActive(false)\r\n    }\r\n\r\n    const getData = useCallback(async () => {\r\n        const id = params.projectid\r\n        const token = getCookie(\"x-auth-token\");\r\n        const response = await fetch(`/api/projects/info/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            projectContext.setProject(data)\r\n        }\r\n    }, [history, params, projectContext])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) {\r\n            teamContext.setSelectedTeam('Select')\r\n        } else if (teamContext.selectedTeam === 'Select') {\r\n            const teamId = params.teamid\r\n            teamContext.updateSelectedTeam(teamId)\r\n        }\r\n\r\n        if (window.location.href.includes('project')) {\r\n            setIsViewVisibble(true)\r\n            setIsProjectVisibble(true)\r\n            teamContext.getCurrentProjects(params.teamid)\r\n\r\n            if (projectContext.project === null || projectContext.project._id !== params.projectid) {\r\n                getData()\r\n            }\r\n\r\n            if (window.location.href.includes('board')) {\r\n                setViewState('Board')\r\n            }\r\n            if (window.location.href.includes('list')) {\r\n                setViewState('List')\r\n            }\r\n        }\r\n    }, [getData, params, params.teamid, projectContext.project, teamContext,])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) return\r\n        if (socket == null) return\r\n        socket.on('team-deleted', goToHomePage)\r\n        return () => socket.off('team-deleted')\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!window.location.href.includes('project')) return\r\n        if (socket == null) return\r\n        socket.on('project-deleted', goToTeamPage)\r\n        return () => socket.off('project-deleted')\r\n    })\r\n\r\n    function goToHomePage(deletedTeamId) {\r\n        if (deletedTeamId !== params.teamid) return\r\n        history.push('/')\r\n    }\r\n\r\n    function goToTeamPage(deletedProjectId) {\r\n        if (deletedProjectId !== params.projectid) return\r\n        history.push(`/team/${params.teamid}`)\r\n    }\r\n\r\n    if (window.location.href.includes('project') && !projectContext.project) {\r\n        return null\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => (setShowSearchForm(false)), 120)\r\n    }\r\n\r\n    // const getFullImageUrl = (imagePath) => {\r\n    //     return `https://res.cloudinary.com/${process.env.REACT_APP_CLOUD_NAME}/image/upload/w_400,h_400,c_crop,g_face,r_max/w_200/${imagePath}`\r\n    // }\r\n\r\n    return (\r\n        <header className={`${styles.navigation} ${asideOn ? styles.small : ''}`} >\r\n            <div className={styles.container}>\r\n                <div className={styles.links}>\r\n\r\n                    <div className={styles.margin}>\r\n                        Team:\r\n                    </div>\r\n                    <div>\r\n                        <ButtonClean\r\n                            className={styles.teams}\r\n                            onClick={() => setIsTeamActive(!isTeamActive)}\r\n                            title={teamContext.selectedTeam}\r\n                        />\r\n                        {\r\n                            isTeamActive ? <div\r\n                                ref={dropdownRefTeam}\r\n                                className={`${styles.options} ${styles.font} ${styles['teams-position']}`}\r\n                            >\r\n                                {\r\n                                    teamContext.teams.map(t => (\r\n                                        <div key={t._id} className={styles['team-options']}>\r\n                                            <LinkComponent\r\n                                                href={`/team/${t._id}`}\r\n                                                title={t.name}\r\n                                                onClick={() => { selectTeam(t._id, t.name) }}\r\n                                                className={`${styles.overflow} ${styles.hover}`}\r\n                                            />\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                <div className={styles['last-option']}>\r\n                                    <ButtonClean\r\n                                        onClick={() => setShowTeamForm(true)}\r\n                                        title='Create Team'\r\n                                        className={styles.logout}\r\n                                    />\r\n                                </div>\r\n                            </div> : null\r\n                        }\r\n                    </div>\r\n                    {\r\n                        showTeamForm ? (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n                            <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n                        </Transparent>) : null\r\n                    }\r\n\r\n\r\n\r\n                    {isProjectVisibble && <div className={styles.flex}>\r\n                        <div className={styles.margin}>\r\n                            Project:\r\n                        </div>\r\n                        <div>\r\n                            <ButtonClean\r\n                                className={styles.teams}\r\n                                onClick={() => setIsProjectActive(!isProjectActive)}\r\n                                title={projectContext.project.name}\r\n                            />\r\n                            {\r\n                                isProjectActive ? <div\r\n                                    ref={dropdownRefProject}\r\n                                    className={`${styles.options} ${styles.font} ${styles['projects-position']}`}\r\n                                >\r\n                                    {\r\n                                        teamContext.currentProjects.map(p => (\r\n                                            <div key={p._id} className={styles['team-options']}>\r\n                                                <LinkComponent\r\n                                                    href={`/project-board/${params.teamid}/${p._id}`}\r\n                                                    title={p.name}\r\n                                                    onClick={() => { setIsProjectActive(false) }}\r\n                                                    className={`${styles.overflow} ${styles.hover}`}\r\n                                                />\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                    <div className={styles['last-option']}>\r\n                                        <ButtonClean\r\n                                            onClick={() => setShowProjectForm(true)}\r\n                                            title='Create Project'\r\n                                            className={styles.logout}\r\n                                        />\r\n                                    </div>\r\n                                </div> : null\r\n                            }\r\n                        </div>\r\n                        {\r\n                            showProjectForm && <Transparent hideForm={() => setShowProjectForm(false)}>\r\n                                <CreateProject hideForm={() => setShowProjectForm(false)} />\r\n                            </Transparent>\r\n                        }\r\n                    </div>}\r\n\r\n\r\n\r\n                    {isViewVisibble && <div className={styles.flex}>\r\n                        <div className={styles.margin}>\r\n                            View:\r\n                        </div>\r\n                        <div>\r\n                            <ButtonClean\r\n                                className={styles.view}\r\n                                onClick={() => setIsViewActive(!isViewActive)}\r\n                                title={viewState}\r\n                            />\r\n                            {\r\n                                isViewActive ? <div\r\n                                    ref={dropdownRefView}\r\n                                    className={`${styles.options} ${styles.font} ${styles['view-position']}`}\r\n                                >\r\n                                    <div className={styles['first-option']}>\r\n                                        <LinkComponent\r\n                                            href={`/project-board/${params.teamid}/${projectContext.project._id}`}\r\n                                            title='Board'\r\n                                            className={styles.hover}\r\n                                            onClick={() => { setIsViewActive(false) }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={styles['last-option']}>\r\n                                        <LinkComponent\r\n                                            href={`/project-list/${params.teamid}/${projectContext.project._id}`}\r\n                                            title='List'\r\n                                            className={styles.hover}\r\n                                            onClick={() => { setIsViewActive(false) }}\r\n                                        />\r\n                                    </div>\r\n                                </div> : null\r\n                            }\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n\r\n                <div className={`${styles.links} ${styles.font}`}>\r\n                    <span>\r\n                        <input className={styles.input} type='text'\r\n                            placeholder={!showSearchForm ? 'Search...' : 'Enter Project or Team name'}\r\n                            autoComplete=\"off\"\r\n                            value={searchInput}\r\n                            onChange={(e) => setSearchInput(e.target.value)}\r\n                            onClick={() => setShowSearchForm(true)}\r\n                            onBlur={onBlur}\r\n                        />\r\n                        {\r\n                            (\r\n                                searchInput.length > 0\r\n                                &&\r\n                                showSearchForm) ?\r\n                                <div ref={dropdownRefSearch}>\r\n                                    <SearchResults searchInput={searchInput} hideForm={() => { setShowSearchForm(!showSearchForm); setSearchInput('') }} />\r\n                                </div>\r\n                                : null\r\n                        }\r\n                    </span>\r\n                    <ButtonClean\r\n                        className={styles.avatar}\r\n                        onClick={() => setIsProfileActive(!isProfileActive)}\r\n                        title={\r\n                            <AvatarUser user={context.user} size={40}/>                            \r\n                        }\r\n                    />\r\n                    {\r\n                        isProfileActive ? <div\r\n                            ref={dropdownRefProfile}\r\n                            className={`${styles.options} ${styles['logout-position']}`}\r\n                        >\r\n                            <div className={styles['first-option']}>\r\n                                <LinkComponent\r\n                                    href={`/profile/${context.user && context.user.id}`}\r\n                                    title='Profile'\r\n                                    className={styles.hover}\r\n                                />\r\n                            </div>\r\n                            <div className={styles['last-option']}>\r\n                                <ButtonClean\r\n                                    onClick={context.logOut}\r\n                                    title='Log Out'\r\n                                    className={styles.logout}\r\n                                />\r\n                            </div>\r\n                        </div> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\nimport Aside from '../aside'\r\nimport Header from \"../header\"\r\nimport styles from \"./index.module.css\"\r\n\r\nconst PageLayout = ({ children, contentStyle }) => {\r\n  const [asideOn, setAsideOn] = useState(false)\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <Aside asideOn={asideOn} setAsideOn={setAsideOn} />\r\n      <Header asideOn={asideOn} />\r\n      <div \r\n        className={`${styles.content} ${asideOn ? styles.small : ''}`}\r\n        style={contentStyle && contentStyle}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageLayout","import React from \"react\"\r\nimport styles from \"./index.module.css\"\r\n\r\nconst Title = ( {title} ) => {\r\n    return (\r\n    <div className={styles.title}>{title}</div>\r\n    )\r\n}\r\n\r\nexport default Title","export default __webpack_public_path__ + \"static/media/home-page-pic.50bdb1b7.svg\";","import React, { useContext, useState, useRef } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport CreateTeam from \"../../components/create-team\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Title from \"../../components/title\"\r\nimport Transparent from \"../../components/transparent\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/home-page-pic.svg'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonGrey from \"../../components/button-grey\"\r\n\r\n\r\nconst Home = () => {\r\n  const dropdownRef = useRef(null)\r\n  const userContext = useContext(UserContext)\r\n  const history = useHistory()\r\n  const [showTeamForm, setShowTeamForm] = useState(false)\r\n  const [showTeamsVisibleForm, setShowTeamsVisibleForm] = useDetectOutsideClick(dropdownRef)\r\n  const userName = userContext.user.username\r\n  const userTeams = userContext.user.teams\r\n  const userId = userContext.user._id\r\n  const recentProjects = userContext.user.recentProjects\r\n\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n  const goToProject = (projectId) => {\r\n\r\n    userTeams.map(t => {\r\n      return (t.projects.forEach(element => {\r\n        if (element._id === projectId) {\r\n          history.push(`/project-board/${t._id}/${projectId}`)\r\n        }\r\n      }))\r\n    })\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <PageLayout>\r\n      <div>\r\n        {\r\n          showTeamForm ? (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n            <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n          </Transparent>) : null\r\n        }\r\n      </div>\r\n\r\n      <Title title='Home' />\r\n      <div className={styles.container}>\r\n\r\n        <span className={styles['left-buttons']}>\r\n\r\n          <div>\r\n            <ButtonGrey className={styles['navigate-buttons']} title={'My Tasks'} onClick={() => history.push(`/my-tasks/${userId}`)} />\r\n\r\n          </div>\r\n\r\n          <div>\r\n            {/* <div className={styles['my-teams-container']}> */}\r\n              <ButtonGrey className={styles['navigate-buttons']} title={'My Teams'} onClick={() => setShowTeamsVisibleForm(!showTeamsVisibleForm)} />\r\n\r\n\r\n            {/* </div> */}\r\n            <span>\r\n              <div className={styles['select-team-container']}>\r\n                {\r\n                  showTeamsVisibleForm ?\r\n                    <div className={styles['teams-home']} ref={dropdownRef}>\r\n                      {\r\n                        userTeams.length > 0\r\n                          ? userTeams.map((t, index) => {\r\n                            return (\r\n                              <span key={index}>\r\n                                <div\r\n                                  className={styles['navigate-buttons-teams']}\r\n                                  onClick={() => goToTeamPage(t._id)}\r\n\r\n                                >{t.name}</div>\r\n\r\n                              </span>\r\n                            )\r\n                          }\r\n                          )\r\n                          : \"You haven't joined any teams yet\"\r\n                      }\r\n                    </div>\r\n                    : null\r\n                }\r\n              </div>\r\n            </span>\r\n          </div>\r\n\r\n          <div>\r\n            <ButtonGrey className={styles['navigate-buttons']} title={'Create New Team'} onClick={() => setShowTeamForm(true)} />\r\n           \r\n          </div>\r\n\r\n        </span>\r\n\r\n        <div className={styles['pic-container']}>\r\n          <img className={styles.pic1} src={pic1} alt=\"\" />\r\n          <div className={styles['welcome-user']}>{`Welcome ${userName}!`}</div>\r\n        </div>\r\n\r\n        <span className={styles['right-buttons']}>\r\n          {\r\n            (recentProjects) ?\r\n              <div>\r\n                <div >{`Recent projects:`}</div>\r\n                {\r\n                  recentProjects.slice(0).reverse().map((p, index) => {\r\n                    return (\r\n                      <div key={p._id}>\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={p.name} onClick={() => goToProject(p._id)} />\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n\r\n\r\n              </div>\r\n              : null\r\n          }\r\n        </span>\r\n      </div>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default Home","export default __webpack_public_path__ + \"static/media/welcome-page-1.346d3517.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-2.73d5ef5e.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-3.5a073b3b.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-4.5b854b1a.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-5.a24b3016.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-6.2c79ee8c.svg\";","export default __webpack_public_path__ + \"static/media/instagram-icon.1043ced2.svg\";","export default __webpack_public_path__ + \"static/media/twitter-icon.0f92d6a5.svg\";","export default __webpack_public_path__ + \"static/media/facebook-icon.529cf39a.svg\";","import userObject from \"./userObject\"\r\n\r\nconst authenticate = async (url, method, body, onSuccess, onFailure) => {\r\n    try {\r\n        \r\n        const promise = await fetch(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        \r\n        const authToken = promise.headers.get(\"Authorization\")\r\n        const response = await promise.json()\r\n        \r\n        if (response.needPassword) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.wrongPassword) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.wrongUser) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.exist) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n\r\n        document.cookie = `x-auth-token=${authToken};path=/`\r\n\r\n\r\n        if (response.user.username && authToken) {\r\n            onSuccess(userObject(response));\r\n        } else {\r\n            onFailure(response)\r\n        }\r\n\r\n    } catch (e) {\r\n        onFailure(e)\r\n    }\r\n}\r\n\r\nexport default authenticate","import userObject from \"./userObject\"\r\n\r\nconst responseGoogle = async (googleResponse, onSuccess, onFailure) => {\r\n\r\n    try {\r\n        const tokenId = googleResponse.tokenId\r\n        const promise = await fetch(\"/api/user/google-login\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({tokenId}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        const authToken = promise.headers.get(\"Authorization\")\r\n        document.cookie = `x-auth-token=${authToken};path=/`\r\n\r\n        const response = await promise.json()\r\n\r\n        if (response.user.username && authToken) {\r\n            onSuccess(userObject(response))\r\n        } else {\r\n            onFailure(response)\r\n        }\r\n        \r\n    } catch (error) {\r\n        onFailure(error)\r\n    }\r\n}\r\n\r\nexport default responseGoogle","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div>\r\n            {props.alert ? (<div className={styles.alert}>\r\n                {props.message}\r\n            </div>) : null}\r\n        </div>\r\n    )\r\n}","import getCookie from \"./cookie\"\r\nimport userObject from \"./userObject\"\r\n\r\nconst authenticateUpdate = async (url, method, body, onSuccess, onFailure) => {\r\n\r\n    try {\r\n        \r\n        const cookie = getCookie('x-auth-token')\r\n    \r\n        const promise = await fetch(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": cookie\r\n            }\r\n        })\r\n        \r\n        const response = await promise.json()\r\n        if (response.user.username) {            \r\n            onSuccess(userObject(response))\r\n        } else {\r\n            onFailure()\r\n        }\r\n\r\n    } catch (e) {\r\n        onFailure(e)\r\n    }\r\n}\r\n\r\nexport default authenticateUpdate","import React, { useCallback, useContext, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Alert from '../alert'\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport authenticateUpdate from '../../utils/authenticate-update'\r\n\r\n\r\n\r\nexport default function AddPassword(props) {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rePassword, setRePassword] = useState(\"\")\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n\r\n    const userContext = useContext(UserContext)\r\n\r\n\r\n    const history = useHistory()\r\n    const userId = props.userId\r\n   \r\n\r\n\r\n    const handleSubmit = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n\r\n\r\n        if (!password || !rePassword) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n       \r\n\r\n        await authenticateUpdate(`/api/user/addNewPassword/${userId}`, 'PUT', {        //     \r\n            password        \r\n        }, (response) => {\r\n            userContext.logIn(response.user)\r\n            console.log(userContext.user);\r\n            history.push(\"/\")\r\n        })        \r\n\r\n    }, [history, userContext, password, rePassword, userId])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form className={styles.container} >\r\n\r\n            <div className={styles.innerContainer}>\r\n\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles.rightSide}>\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    </div>\r\n\r\n                    <div className={styles.title} >Add password to user</div>\r\n\r\n                    <div className={styles.inputContainer}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles.passInput}\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            label=\"New Password\"\r\n                            id=\"password\"\r\n                        />\r\n\r\n\r\n\r\n                        <div className={styles.passInstructions}>\r\n                            <p>Use 8 or more characters with a mix </p>\r\n                            <p>of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.inputContainer}>\r\n                        <div> Confirm Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles.passInput}\r\n                            type=\"password\"\r\n                            value={rePassword}\r\n                            onChange={e => setRePassword(e.target.value)}\r\n                            label=\"Confirm Password\"\r\n                            id=\"rePassword\"\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className={styles.newPassAlert}>\r\n                        Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n                        </div>\r\n\r\n                    <div className={styles.buttonDivLogin}>\r\n                        <button type='submit' className={styles.loginButton} onClick={handleSubmit}>Submit</button>\r\n                    </div>\r\n\r\n                    <div className={styles.textLogin}>User was registered with Google. Please add password for this Website</div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google.2cf12fa6.svg\";","import React, { useState, useContext } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from \"./index.module.css\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport Transparent from \"../transparent\"\r\nimport AddPassword from \"../form-add-password\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from \"../alert\"\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [userId, setUserId] = useState('')\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        await authenticate(\"/api/user/login\", 'POST', {\r\n            email,\r\n            password\r\n        }, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            if (response.needPassword) {\r\n                setUserId(response.userId)\r\n                setShowForm(true)\r\n            }\r\n            if (response.wrongPassword) {\r\n                setWrongPassAllert(true)\r\n            }\r\n            if (response.wrongUser) {\r\n                setWrongUserAllert(true)\r\n            }\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setShowForm(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                showForm ?\r\n                    <div>\r\n                        <Transparent hideForm={hideForm}>\r\n                            <AddPassword hideForm={hideForm} userId={userId} email={email} />\r\n                        </Transparent>\r\n                    </div> : null\r\n            }\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n                <div className={styles['inner-container']}>\r\n\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n                        <div className={styles.alerts}>\r\n                            <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                            <Alert alert={wrongPassAllert} message={'Wrong Password'} />\r\n                            <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                        </div>\r\n\r\n                        <div className={styles.title} >Log In with E-mail</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles['email-input']}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label=\"Email\"\r\n                                id=\"email\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Password:</div>\r\n                            <input\r\n                                className={styles['pass-input']}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label=\"Password\"\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['button-div-login']}>\r\n                            <button type='submit' className={styles['login-button']}>Log In</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['text-div']}>\r\n                            <p className={styles['forgot-pass']}\r\n                                onClick={() => { props.goToForgotPassword(); props.hideForm() }}>\r\n                                Forgot Password?\r\n                        </p>\r\n                            <p className={styles['new-to-sm']}>\r\n                                New to Smart Manager?\r\n                        <button className={styles['sign-up-btn']}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                        </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['button-div-google-login']}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles['google-login-btn']}\r\n                                    >\r\n                                        <img src={google} alt=\"logo\" width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText=\"Login\"\r\n                                onSuccess={handleGoogle}\r\n                                // onFailure={errorGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, { useContext, useState } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport styles from \"./index.module.css\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Alert from \"../alert\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\n\r\n\r\n\r\nconst SignupForm = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [userExist, setUserExist] = useState(false)\r\n    const [validEmailAlert, setValidEmailAlert] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n\r\n    function validateEmail(email) {\r\n        var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\r\n        return re.test(email);\r\n    }\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n\r\n\r\n        setValidEmailAlert(false)\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n        setUserExist(false)\r\n\r\n        const valid = validateEmail(email)\r\n        \r\n        if (!valid) {\r\n            setValidEmailAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n\r\n\r\n        if (!username || !password || !rePassword || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        await authenticate(\"/api/user/register\", 'POST', {\r\n            email,\r\n            username,\r\n            password\r\n        }, (user) => {\r\n            context.logIn(user);\r\n            history.push(\"/\");\r\n        }, (response) => {\r\n            if (response.exist) {\r\n                setUserExist(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n\r\n            <div className={styles['inner-container']}>\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={userExist} message={'User with this email already exists'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                        <Alert alert={validEmailAlert} message={'Please enter valid email address'} />\r\n                    </div>\r\n                    <div className={styles.title}  >Sign Up with E-mail</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Username:</div>\r\n                        <input\r\n                            placeholder='John Smith'\r\n                            className={styles['sign-up-input']}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            label=\"Username\"\r\n                            id=\"username\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Email:</div>\r\n                        <input\r\n                            placeholder='John@example.com'\r\n                            className={styles['sign-up-input']}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            label=\"Email\"\r\n                            id=\"email\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            label=\"Password\"\r\n                            id=\"password\"\r\n                        />\r\n                        <div className={styles['pass-instructions']}>\r\n                            <p>Use 8 or more characters with a</p>\r\n                            <p>mix of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Re-type Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type=\"password\"\r\n                            value={rePassword}\r\n                            onChange={(e) => setRePassword(e.target.value)}\r\n                            label=\"Re-Password\"\r\n                            id=\"re-password\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['button-div-login']}>\r\n                        <button type='submit' className={styles['sign-up-button']}>Get Started</button>\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <h3>\r\n                            or\r\n                        </h3>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles['button-div-google-login']}>\r\n                        <GoogleLogin\r\n                            render={renderProps => (\r\n                                <button onClick={renderProps.onClick}\r\n                                    className={styles['google-login-btn']}\r\n                                >\r\n                                    <img src={google} alt=\"logo\" width='25' height='25' />Sign Up with Google</button>\r\n                            )}\r\n                            clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                            buttonText=\"Sign up with Google\"\r\n                            onSuccess={handleGoogle}\r\n                            // onFailure={errorGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <p className={styles['already-sign-up']}>\r\n                            Already Sign Up?\r\n                        <button className={styles['sign-up-btn']} onClick={() => { props.goToLogin(); props.hideForm() }}>Log In</button>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SignupForm;","import React, { useState, useContext } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from \"../alert\"\r\nimport authenticateUpdate from \"../../utils/authenticate-update\"\r\n\r\n\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [rePassword, setRePassword] = useState(\"\")\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n        if (password !== rePassword) {\r\n            setWrongPassAllert(true)\r\n            return\r\n        }\r\n\r\n        const promise = await fetch(\"/api/user/login\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        const response = await promise.json()\r\n\r\n        if (response.wrongUser) {\r\n            setWrongUserAllert(true)\r\n            return\r\n        }\r\n        let userId\r\n        console.log(\"Error\", response)\r\n        if (response.user) {\r\n            userId = response.user._id\r\n        } else if (response.userId) {\r\n            userId = response.userId\r\n        }\r\n\r\n        authenticateUpdate(`/api/user/addNewPassword/${userId}`, 'PUT', {        //     \r\n            password\r\n        }, (response) => {\r\n            context.logIn(response.user)\r\n            history.push(\"/\")\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n                <div className={styles.alerts}>\r\n                    <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    <Alert alert={wrongPassAllert} message={'Passwords do not match'} />\r\n                    <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                </div>\r\n\r\n                <div className={styles['inner-container']}>\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n\r\n                        <div className={styles.title} >Forgot Password Form</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles.emailInput}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label=\"Email\"\r\n                                id=\"email\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label=\"Password\"\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>Re-type New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={rePassword}\r\n                                onChange={e => setRePassword(e.target.value)}\r\n                                label=\"Confirm Password\"\r\n                                id=\"rePassword\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles.buttonDivLogin}>\r\n                            <button type='submit' className={styles.loginButton}>Submit</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.textDiv}>\r\n\r\n                            <p className={styles.newToSmM}>\r\n                                New to Smart Manager?\r\n                        <button className={styles.signUpBtn}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                        </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.buttonDivGoogleLogin}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles.googleLoginBtn}\r\n                                    >\r\n                                        <img src={google} alt=\"logo\" width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText=\"Login\"\r\n                                onSuccess={handleGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordForm;","import React, { useState } from \"react\"\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport pic1 from '../../images/welcome-page/welcome-page-1.svg'\r\nimport pic2 from '../../images/welcome-page/welcome-page-2.svg'\r\nimport pic3 from '../../images/welcome-page/welcome-page-3.svg'\r\nimport pic4 from '../../images/welcome-page/welcome-page-4.svg'\r\nimport pic5 from '../../images/welcome-page/welcome-page-5.svg'\r\nimport pic6 from '../../images/welcome-page/welcome-page-6.svg'\r\nimport instagram from '../../images/welcome-page/instagram-icon.svg'\r\nimport twitter from '../../images/welcome-page/twitter-icon.svg'\r\nimport facebook from '../../images/welcome-page/facebook-icon.svg'\r\nimport LoginForm from \"../../components/login-form\"\r\nimport Transparent from \"../../components/transparent\"\r\nimport SignupForm from \"../../components/signup-form\"\r\nimport ForgotPasswordForm from \"../../components/form-forgot-password\"\r\n\r\n\r\nconst WelcomePage = () => {\r\n\r\n  const [isVisible, setIsVisible] = useState(false)\r\n  const [isVisibleSignUp, setIsVisibleSignUp] = useState(false)\r\n  const [isVisibleForgot, setIsVisibleForgot] = useState(false)\r\n\r\n\r\n  return (\r\n\r\n    <div className={styles.container}>\r\n        {isVisible ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n              <LoginForm hideForm={() => setIsVisible(!isVisible)} goToSignUp={()=>setIsVisibleSignUp(!isVisibleSignUp)} \r\n              goToForgotPassword={()=>setIsVisibleForgot(!isVisibleForgot)}/>\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n        {isVisibleSignUp ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisibleSignUp(!isVisibleSignUp)} >\r\n              <SignupForm hideForm={() => setIsVisibleSignUp(!isVisibleSignUp)} goToLogin={()=>setIsVisible(!isVisible)} />\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n        {isVisibleForgot ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisibleForgot(!isVisibleForgot)} >\r\n              <ForgotPasswordForm hideForm={() => setIsVisibleForgot(!isVisibleForgot)} goToSignUp={()=>setIsVisibleSignUp(!isVisibleSignUp)} />\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n\r\n      <div className={styles['content-wrap']}>\r\n        <div className={styles['top-container']}>\r\n          <div className={styles['top-div-container']}>\r\n            <div className={styles['header-nav']}>\r\n              <span className={styles.logo}>\r\n                <img src={logo} alt=\"logo\" width='100%' height='100%' />\r\n              </span>\r\n              <span className={styles['first-buttons']}>\r\n                <button className={styles['login-button']} onClick={()=>setIsVisible(!isVisible)}  >Log In</button>\r\n                <button className={styles['sign-up-button']} onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Sign Up</button>\r\n              </span>\r\n            </div>\r\n              <div className={styles.pic1}>\r\n                <img src={pic1} alt=\"\" width='100%' />\r\n              </div>\r\n              <div className={styles.pic2}>\r\n                <img src={pic2} alt=\"\" width='100%' />\r\n              </div>\r\n          </div>\r\n          <div className={styles['lower-div-container']}>\r\n            <div className={styles['first-text']}>\r\n              <p className={styles.headers}>Manage your work in a <span className={styles.lucida}>Smart</span> way! </p>\r\n              <div className={styles.paragraph}>\r\n                <p >The ideas get more clear, organized and focused on.</p>\r\n                <p >Flexible and time saving for the whole team. </p>\r\n                <button className={styles['second-sign-up-button']}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Free Sign Up</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles['second-container']}>\r\n          <div className={styles['first-row']}>\r\n            <div className={styles['second-text']}>\r\n              <p className={styles.headers}>Work and participate in different teams </p>\r\n              <div className={styles.paragraph}>\r\n                <p >Follow who and when is doing tasks. Be always</p>\r\n                <p >informed with the accomplishment of the projects. </p>\r\n                <button className={styles['third-sign-up-button']}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Try It Now</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles['pic3-container']}>\r\n              <img className={styles.picture} src={pic3} alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div className={styles['second-row']}>\r\n            <div className={styles['pic4-container']}>\r\n              <img className={styles.picture} src={pic4} alt=\"\" />\r\n            </div>\r\n            <div className={styles['second-row-colum']}>\r\n              <div className={styles['second-text']}>\r\n                <p className={styles.headers}>Еаsy to manage all the information</p>\r\n                <div className={styles.paragraph}>\r\n                  <p >Add stickers, notes, comments, attachments in your</p>\r\n                  <p >  Smart Manager.</p>\r\n                  <p >Collaborate with others in your Team.</p>\r\n                </div>\r\n              </div>\r\n              <div className={styles['second-row-pic']} >\r\n                <img className={styles.picture} src={pic5} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles['third-row']}>\r\n            <div className={styles['second-text']}>\r\n              <p className={styles.headers}>Start your <span className={styles.lucida}>Smart Manager</span> Now </p>\r\n              <div className={styles.paragraph}>\r\n                <p >Connect with other teams from <span className={styles.lucida}>The Smart Family</span>,</p>\r\n                <p > save time with more work done.</p>\r\n                <button className={styles['second-sign-up-button']}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Get Started</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles['pic6-container']}>\r\n              <img className={styles.picture} src={pic6} alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <footer className={styles.footer}>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>Contact Us</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>+359 52 317 395</p>\r\n            <p>smartmanager@gmail.com</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>SERVICES</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>Contact Us</p>\r\n            <p>Ordering & Payment FAQ</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>INFORMATION</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>About SMART MANAGER</p>\r\n            <p>Work With US</p>\r\n            <p>Privacy Policy</p>\r\n            <p>Terms & Conditions</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['last-column']}>\r\n          <div className={styles['social-media-container']}>\r\n            <span>\r\n              <img className={styles['social-media']} src={instagram} alt=\"\" />\r\n            </span>\r\n            <span>\r\n              <img className={styles['social-media']} src={twitter} alt=\"\" />\r\n            </span>\r\n            <span>\r\n              <img className={styles['social-media']} src={facebook} alt=\"\" />\r\n            </span>\r\n          </div>\r\n          <div className={styles.sd2006}>SD2006</div>\r\n\r\n        </div>\r\n\r\n      </footer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WelcomePage","export default __webpack_public_path__ + \"static/media/profile-page-pic.2c3455c2.svg\";","export default __webpack_public_path__ + \"static/media/pen.4b4021f9.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport ButtonGrey from '../button-grey'\r\n\r\n\r\n\r\n\r\nconst ConfirmDialog = (props) => {\r\n  return (\r\n    <>\r\n      <div className={styles['transparent-confirm']}></div>\r\n      <div className={styles.container}>\r\n\r\n        <div className={styles.content}>\r\n\r\n\r\n\r\n          <div className={styles.logo}>\r\n            <img src={logo} alt=\"logo\" width='194' height='142' />\r\n          </div>\r\n\r\n          <div className={styles.title}>{`Are you sure you want to ${props.title}?`}</div>\r\n          <div className={styles.buttons}>\r\n            <ButtonGrey\r\n              className={styles.button}\r\n              title={'Yes'}\r\n              onClick={() => {\r\n                props.hideConfirm();\r\n                props.onConfirm()\r\n              }\r\n              }\r\n            />\r\n            <ButtonGrey\r\n              className={styles.button}\r\n              title={'No'}\r\n              onClick={() => props.hideConfirm()}\r\n            />\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\nexport default ConfirmDialog;","import React, { useState, useEffect, useCallback, useContext, useRef } from \"react\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/profile-page-pic.svg'\r\nimport pen from '../../images/pen.svg'\r\nimport authenticateUpdate from '../../utils/authenticate-update';\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Title from \"../../components/title\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport Alert from \"../../components/alert\"\r\nimport ButtonGrey from '../../components/button-grey'\r\nimport ConfirmDialog from \"../../components/confirmation-dialog\"\r\nimport { Image, Transformation } from 'cloudinary-react';\r\n\r\n\r\nconst ProfilePage = () => {\r\n  const dropdownRef = useRef(null)\r\n  const userContext = useContext(UserContext)\r\n  const [userEmail, setUserEmail] = useState(null)\r\n  const [passwordActive, setPaswordActive] = useState(false)\r\n  const [userNameActive, setUserNameActive] = useState(false)\r\n  const [username, setUsername] = useState(userContext.user.username);\r\n  const [password, setPassword] = useState(null);\r\n  const [rePassword, setRePassword] = useState(null);\r\n  const [alert, setAlert] = useState(false)\r\n  const [showTeamsVisibleForm, setShowTeamsVisibleForm] = useDetectOutsideClick(dropdownRef)\r\n  const [isEditListActive, setIsEditListActive] = useDetectOutsideClick(dropdownRef)\r\n  const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n\r\n  const params = useParams()\r\n  const history = useHistory()\r\n\r\n\r\n  const userName = userContext.user.username\r\n  const userTeams = userContext.user.teams\r\n  const id = params.userid;\r\n\r\n\r\n\r\n  const getData = useCallback(async () => {\r\n\r\n    const response = await fetch(`/api/user/${id}`)\r\n    if (!response.ok) {\r\n      history.push(\"/error\")\r\n    } else {\r\n      const user = await response.json()\r\n      setUserEmail(user.email)\r\n\r\n    }\r\n  }, [history, id])\r\n\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    setAlert(false)\r\n    setPaswordActive(false)\r\n    setUserNameActive(false)\r\n\r\n\r\n\r\n    if (!username && !password) {\r\n      return\r\n    }\r\n\r\n    if (password !== rePassword) {\r\n      setAlert(true)\r\n      return\r\n    }\r\n\r\n    // if(password && rePassword){\r\n    //   setChangePassAlert(true)\r\n    // }\r\n\r\n    await authenticateUpdate(`/api/user/${id}`, 'PUT', {\r\n      username,\r\n      password\r\n    }, (user) => {\r\n      userContext.logIn(user)\r\n    }, (e) => {\r\n      console.log(\"Error\", e);\r\n    })\r\n    getData()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [getData])\r\n\r\n  if (!userName) {\r\n    return (\r\n      <PageLayout>\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#363338\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </PageLayout>\r\n    )\r\n  }\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n  // const getFullImageUrl = (imagePath) => {\r\n  //   return `https://res.cloudinary.com/${process.env.REACT_APP_CLOUD_NAME}/image/upload/${imagePath}`\r\n  // }\r\n\r\n  const widget = window.cloudinary.createUploadWidget({\r\n    cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n    uploadPreset: process.env.REACT_APP_UPLOAD_PRESET\r\n  }, (error, result) => {\r\n    if (result.event === 'success') {\r\n      const path = result.info.path\r\n      const publicId = result.info.public_id\r\n      const newImage = {\r\n        path,\r\n        publicId\r\n      }\r\n      authenticateUpdate(`/api/user/image/${id}`, 'PUT', {\r\n        newImage,\r\n        oldImage: userContext.user.image\r\n      }, (user) => {\r\n        userContext.logIn(user)\r\n      }, (e) => {\r\n        console.log(\"Error\", e);\r\n      })\r\n      getData()\r\n\r\n    }\r\n\r\n    if (error) {\r\n      //TODO: Handle errors\r\n\r\n      return\r\n    }\r\n  })\r\n\r\n  const deletePic = async () => {\r\n\r\n    await authenticateUpdate(`/api/user/image/${id}`, 'PUT', {\r\n      oldImage: userContext.user.image\r\n    }, (user) => {\r\n      userContext.logIn(user)\r\n    }, (e) => {\r\n      console.log(\"Error\", e);\r\n    })\r\n    getData()\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <PageLayout>\r\n\r\n      {confirmOpen &&\r\n        <ConfirmDialog\r\n          title={'delete this picture'}\r\n          hideConfirm={() => setConfirmOpen(false)}\r\n          onConfirm={() => deletePic()}\r\n        />\r\n      }\r\n\r\n\r\n      <Title title='Profile' />\r\n\r\n      <div className={styles.container}>\r\n\r\n        <div className={styles['left-container']}>\r\n\r\n\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey title={'Username:'} className={styles['navigate-buttons']}\r\n              onClick={() => { setUserNameActive(!userNameActive) }} />\r\n            < input\r\n              ref={function (input) {\r\n                if (input != null) {\r\n                  input.focus();\r\n                }\r\n              }}\r\n              value={username}\r\n              onChange={e => setUsername(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={userName}\r\n              disabled={!userNameActive}\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey title={'Change Password'} className={styles['navigate-buttons']}\r\n              onClick={() => { setPaswordActive(!passwordActive) }} />\r\n            < input\r\n              onChange={e => setPassword(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={'********'}\r\n              disabled={!passwordActive}\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className={styles.alerts}>\r\n            <Alert alert={alert} message={'Passwords do not match'} />\r\n          </div>\r\n\r\n          {passwordActive ?\r\n            <div className={styles['new-pass-alert']}>\r\n              Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n            </div> : null\r\n          }\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey title={'Confirm Password'} className={styles['navigate-buttons']}\r\n              onClick={() => { setPaswordActive(!passwordActive) }} />\r\n\r\n            < input\r\n              onChange={e => setRePassword(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={'********'}\r\n              disabled={!passwordActive}\r\n              type=\"password\"\r\n            />\r\n\r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n\r\n            <ButtonGrey title={'Email:'} className={styles['navigate-buttons']}\r\n            />\r\n\r\n            < input\r\n              className={styles['input-fields-profile']}\r\n              value={userEmail}\r\n              disabled={true}\r\n            // type=\"password\"\r\n            />\r\n\r\n          </div>\r\n\r\n          <div className={styles['button-input-div-tasks']}>\r\n            <ButtonGrey title={'My Tasks'} className={styles['navigate-buttons']}\r\n              onClick={() => history.push(`/my-tasks/${id}`)} />\r\n          < input\r\n              className={styles['input-fields-tasks']}\r\n              value={''}\r\n              disabled={true}\r\n            // type=\"password\"\r\n            />\r\n          \r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <div className={styles.myTeamsContainer}>\r\n\r\n              <ButtonGrey title={'My Teams'} className={styles['navigate-buttons']}\r\n                onClick={() => setShowTeamsVisibleForm(!showTeamsVisibleForm)} />\r\n              <div className={styles['select-team-container']}>\r\n                {\r\n                  showTeamsVisibleForm ?\r\n                    <div className={styles['teams-home']} ref={dropdownRef}>\r\n                      {userTeams.length > 0 ?\r\n                        userTeams.map((t, index) => {\r\n                          return (\r\n                            <span key={index}>\r\n                              <div\r\n                                className={styles['navigate-buttons-teams']}\r\n                                onClick={() => goToTeamPage(t._id)}\r\n                              >{t.name}</div>\r\n                            </span>\r\n                          )\r\n                        }\r\n                        )\r\n                        : \"You haven't joined any teams yet\"\r\n                      }\r\n                    </div>\r\n                    : null\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className={styles['button-div-save']}>\r\n            <ButtonGrey title={'SAVE'} className={styles['save-button']}\r\n               onClick={(e) => handleSubmit(e)}/>\r\n              {/* <button type='submit' className={styles['save-button']} onClick={(e) => handleSubmit(e)}>SAVE</button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className={styles['pic-container']}>\r\n\r\n\r\n          <div className={styles['profile-pic-container']}>\r\n            <div className={styles['profile-pic']}\r\n              onClick={() => {\r\n                userContext.user.image ?\r\n                  setIsEditListActive(!isEditListActive)\r\n                  : widget.open()\r\n              }}\r\n            >\r\n              {userContext.user.image ?\r\n\r\n                <div className={styles['profile-picture']}>\r\n                  {/* <img\r\n                    src={getFullImageUrl(userContext.user.image.path)}\r\n                    className={styles['profile-picture']} alt=''\r\n                  /> */}\r\n                  <Image publicId={userContext.user.image.publicId} className={styles['profile-picture']} >\r\n                    <Transformation width=\"250\" height=\"250\"\r\n                    //  gravity=\"faces\" crop=\"fill\"\r\n                    />\r\n                  </Image>\r\n\r\n\r\n                  <div className={styles.relative}>\r\n                    {isEditListActive && <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                      <ButtonGrey\r\n                        onClick={() => widget.open()}\r\n                        title='Edit'\r\n                        className={styles.edit}\r\n                      />\r\n                      <ButtonGrey\r\n                        onClick={() => {\r\n                          setConfirmOpen(true)\r\n                        }}\r\n                        title='Delete'\r\n                        className={styles.delete}\r\n                      />\r\n                    </div>}\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                  <p className={styles['load-pic-text']}>Load a profile picture</p>\r\n                  <img className={styles.pen}\r\n                    src={pen} alt=\"\" />\r\n                </div>\r\n              }\r\n\r\n            </div>\r\n\r\n            <p>{userName}</p>\r\n          </div>\r\n\r\n\r\n\r\n          <img className={styles.pic1} src={pic1} alt=\"\"\r\n          // width=\"80%\" height=\"80%\"\r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default ProfilePage;","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Button = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from \"../../components/button-clean\"\r\nimport AvatarUser from '../avatar-user'\r\n\r\n\r\nexport default function TeamMembers(props) {\r\n\r\n    const members = props.members\r\n    const invited = props.invited\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['members-avatars']}>\r\n                <div>\r\n                    Team Members:\r\n                </div>\r\n                {\r\n                    members.map((m, index) => {\r\n                        return (\r\n                            <ButtonClean\r\n                                key={index}\r\n                                title={\r\n                                <AvatarUser user={m}\r\n                                    key={m._id}\r\n                                    size={40}\r\n                                />}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                invited.length !== 0 &&\r\n                <div className={styles['members-avatars']}>\r\n                    <div>\r\n                        Invited Members:\r\n                        </div>\r\n                    {\r\n                        invited.map((m, index) => {\r\n                            return (\r\n                                <AvatarUser user={m}\r\n                                    key={index}\r\n                                    size={40}\r\n                                // onClick={() => { if (window.confirm('Are you sure you wish to delete this member?')) removeMember(m) }}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamMembers from '../team-members'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport AvatarUser from '../avatar-user'\r\n\r\n\r\nexport default function EditTeam(props) {\r\n    const [currTeam, setCurrTeam] = useState(props.currTeam)\r\n    const [name, setName] = useState(currTeam.name)\r\n    const [description, setDescription] = useState(currTeam.description)\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState(currTeam.members)\r\n    const [invited, setInvited] = useState(currTeam.requests)\r\n    const [forInvite, setForInvite] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n\r\n    const teamId = params.teamid\r\n\r\n    const getData = useCallback(() => {\r\n\r\n        userContext.user.teams.forEach(t => {\r\n            if (t._id === teamId) {\r\n                setCurrTeam(t)\r\n            }\r\n        })\r\n        let teamAuthor = currTeam.author\r\n        setMembers(currTeam.members)\r\n        setInvited(currTeam.requests)\r\n        setDescription(currTeam.description)\r\n        setName(currTeam.name)\r\n        if (userContext.user.id === teamAuthor) {\r\n            setIsAdmin(true)\r\n        }\r\n    }, [userContext.user.id, currTeam.author, currTeam.description, currTeam.members, currTeam.name, currTeam.requests, userContext.user.teams, teamId])\r\n\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [getData])\r\n\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch('/api/user/get-all', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...forInvite]\r\n        arr.push(input)\r\n        setForInvite(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = async (input) => {\r\n\r\n        const arr = await members.filter(u => u._id !== input._id)\r\n            .filter(u => u._id !== input.id)\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            socket.emit('team-update', teamId)\r\n            if (input.id === userContext.user.id) {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeInvited = async (input) => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                removeInvitation: input\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            getData()\r\n            socket.emit('team-update', teamId)\r\n            socket.emit('message-sent', input._id)\r\n        }\r\n    }\r\n\r\n    const removeForInvite = (input) => {\r\n        const arr = forInvite.filter(u => u._id !== input._id)\r\n        setForInvite(arr)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        // event.preventDefault()\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members,\r\n                requests: forInvite\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            teamContext.setSelectedTeam(name)\r\n            getData()\r\n            socket.emit('team-update', teamId)\r\n            socket.emit('multiple-messages-sent', forInvite)\r\n            props.hideForm()\r\n        }\r\n\r\n    }\r\n\r\n    async function deleteTeam() {\r\n\r\n        if (!window.confirm('You will lost all team information - projects, lists and tasks')) {\r\n            return\r\n        }\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const deletedTeam = await response.json()\r\n            const recievers = [...deletedTeam.members, ...deletedTeam.requests]\r\n            socket.emit('team-deleted', { id: teamId, recievers })\r\n            history.push(\"/\")\r\n            props.hideForm()\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    let confirmationObjectFunctions = {\r\n        'remove this member': removeForInvite,\r\n        'leave this team': removeMember,\r\n        'delete this member from team': removeMember,\r\n        'delete this member from invited': removeInvited,\r\n        'delete this team': deleteTeam\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n\r\n\r\n            <div className={styles.form}>\r\n                <div className={styles.container}>\r\n\r\n                    <div className={styles.title} >Team</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <span> Name</span>\r\n                        <input\r\n                            className={styles['input-name']}\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                            label=\"Name\"\r\n                            id=\"name\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container-descr']}>\r\n                        <span> Description</span>\r\n                        <textarea\r\n                            className={styles['text-area-descr']}\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            label=\"Description\"\r\n                            id=\"description\"\r\n                        />\r\n                    </div>\r\n                    {\r\n                        isAdmin ?\r\n                            <div className={styles['input-container-invite']}>\r\n                                <span className={styles['text-invite']}> Invite Members</span>\r\n\r\n                                <div className={styles['invite-input']}>\r\n                                    <input\r\n                                        className={styles['input-invite']}\r\n                                        autoComplete=\"off\"\r\n                                        value={member}\r\n                                        onChange={inputMembers}\r\n                                        label=\"Invite members\"\r\n                                        id=\"members\"\r\n                                        placeholder='username'\r\n                                        onBlur={onBlur}\r\n\r\n                                    />\r\n\r\n                                    <div className={styles['select-for-invite']}>\r\n                                        {\r\n                                            showMembers ?\r\n                                                <div className={styles.members}>\r\n                                                    {\r\n                                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                                            .filter((e) => {\r\n                                                                const found = members.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .filter((e) => {\r\n                                                                const found = invited.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .filter((e) => {\r\n                                                                const found = forInvite.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                                            .map((u, index) => {\r\n                                                                return (\r\n                                                                    <ButtonClean\r\n                                                                        key={index}\r\n                                                                        className={styles.user}\r\n                                                                        onClick={() => addMember(u)}\r\n                                                                        title={<div>\r\n                                                                            <div>{u.username}</div>\r\n                                                                            <div className={styles.email}>{u.email}</div>\r\n                                                                        </div>}\r\n                                                                    />)\r\n                                                            })\r\n                                                    }\r\n                                                </div> : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        isAdmin ?\r\n                            <div className={styles['members-div']}>\r\n\r\n\r\n\r\n                                <div className={styles['members-avatars']}>\r\n                                    <span>\r\n                                        <div>\r\n                                            Send Invitation:\r\n                                </div>\r\n                                        {\r\n                                            forInvite.map((m, index) => {\r\n                                                return (\r\n                                                    <AvatarUser user={m}\r\n                                                    size={40}\r\n                                                        key={index}\r\n                                                        onClick={() => {\r\n                                                            setConfirmOpen(true)\r\n                                                            setConfirmTitle('remove this member')\r\n                                                            setCurrElement(m)\r\n                                                        }} />\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div className={styles.membersAvatars}>\r\n                                        <div>\r\n                                            Team Members:\r\n                                    </div>\r\n                                        {\r\n                                            members.map((m, index) => {\r\n                                                return (\r\n                                                    <AvatarUser user={m} key={index} size={40}\r\n                                                        onClick={() => {\r\n                                                            setConfirmOpen(true)\r\n                                                            setConfirmTitle('delete this member from team')\r\n                                                            setCurrElement(m)\r\n                                                        }}\r\n                                                    />\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        (invited.length !== 0) ?\r\n\r\n                                            <div className={styles.membersAvatars}>\r\n                                                <div>\r\n                                                    Invited Members:\r\n                                            </div>\r\n                                                {\r\n                                                    invited.map((m, index) => {\r\n                                                        return (\r\n                                                            <AvatarUser user={m}\r\n                                                                key={index}\r\n                                                                size={40}\r\n                                                                onClick={() => {\r\n                                                                    setConfirmOpen(true)\r\n                                                                    setConfirmTitle('delete this member from invited')\r\n                                                                    setCurrElement(m)\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className={styles['button-div']}>\r\n                                    <ButtonGrey className={styles['create-button']} onClick={() => handleSubmit()} title={'Submit Changes'} />\r\n                                    <ButtonGrey className={styles['create-button']} title={'Delete Team'}\r\n                                        onClick={() => {\r\n                                            setConfirmOpen(true)\r\n                                            setConfirmTitle('delete this team')\r\n                                            setCurrElement('')\r\n                                        }}\r\n                                    />\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <TeamMembers\r\n                                    members={members} invited={invited}\r\n                                />\r\n\r\n                                <div className={styles['leave-team-btn-div']}>\r\n                                    <ButtonGrey title={'Leave Team'} className={styles['leave-team-btn']}\r\n                                        onClick={() => {\r\n                                            setConfirmOpen(true)\r\n                                            setConfirmTitle('leave this team')\r\n                                            setCurrElement(userContext.user)\r\n                                        }}\r\n\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\nimport EditTeam from '../edit-team'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TeamInvitationInbox({ message, setInbox, setInboxHistory, options }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const userId = params.userid\r\n\r\n    async function acceptInvitation(message, accepted) {\r\n        const response = await fetch(`/api/teams/invitations/${message.team.id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message,\r\n                accepted\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            socket.emit('team-update', message.team.id)\r\n            setInbox(user.inbox)\r\n            setInboxHistory(user.inboxHistory)\r\n            socket.emit('message-sent', userId)\r\n            socket.emit('message-sent', message.sendFrom._id)\r\n        }\r\n    }\r\n\r\n    async function moveToHistory() {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            await response.json()\r\n            socket.emit('message-sent', userId)\r\n        }\r\n    }\r\n\r\n    async function viewTeam() {\r\n\r\n        const response = await fetch(`/api/teams/${message.team.id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const team = await response.json()\r\n            setCurrTeam(team)\r\n        }\r\n        setShowEditTeamForm(true)\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                message.team.isDeleted ?\r\n                    <div>\r\n                        <div className={styles.bold}>Team deleted</div>\r\n                        <Button\r\n                            className={styles.button}\r\n                            onClick={moveToHistory}\r\n                            title='Move to History'\r\n                        />\r\n                    </div> :\r\n                    <div>\r\n                        <Button\r\n                            className={styles.button}\r\n                            onClick={() => acceptInvitation(message, true)}\r\n                            title='Accept'\r\n                        />\r\n                        <Button\r\n                            className={styles.button}\r\n                            onClick={() => acceptInvitation(message, false)}\r\n                            title='Decline'\r\n                        />\r\n                        <Button\r\n                            className={styles.button}\r\n                            onClick={viewTeam}\r\n                            title='View Team'\r\n                        />\r\n                    </div>\r\n            }\r\n\r\n            {\r\n                showEditTeamForm &&\r\n                <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                    <EditTeam currTeam={currTeam} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                </Transparent>\r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport EditTeam from '../edit-team'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TeamInvitationHistory({ message, options, setInboxHistory }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    async function deleteMessage() {\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }\r\n\r\n    async function viewTeam() {\r\n        const response = await fetch(`/api/teams/${message.team.id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const team = await response.json()\r\n            setCurrTeam(team)\r\n        }\r\n        setShowEditTeamForm(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => deleteMessage(currElement)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                {\r\n                    message.accepted === undefined ?\r\n                        <div className={styles.container}>\r\n                            <div className={styles.bold}>{message.subject}</div>\r\n                        </div> :\r\n                        <div className={styles.container}>\r\n                            <div className={styles.bold}>{message.subject}:</div>\r\n                            {message.accepted ? <div>Accepted</div> : <div>Declined</div>}\r\n                        </div>\r\n                }\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                message.team.isDeleted &&\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team deleted</div>\r\n            }\r\n            <div>\r\n                {\r\n                    !message.team.isDeleted &&\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={viewTeam}\r\n                        title='View Team'\r\n                    />\r\n                }\r\n                <Button\r\n                    className={styles.button}\r\n                    // onClick={() => { if (window.confirm('Are you sure you wish to delete this message?')) deleteMessage() }}\r\n                    onClick={() => {\r\n                        setConfirmOpen(true)                            \r\n                        setCurrElement(message)\r\n                    }} \r\n                    title='Delete Message'\r\n                />\r\n                {\r\n                    showEditTeamForm &&\r\n                    <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                        <EditTeam currTeam={currTeam} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                    </Transparent>\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TeamInvitationResponse({ message, setInboxHistory, options, isInbox }) {\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n    const userId = params.userid\r\n\r\n    async function moveToHistory() {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            await response.json()\r\n            socket.emit('message-sent', userId)\r\n        }\r\n    }\r\n\r\n    async function deleteMessage() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => deleteMessage(currElement)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>{message.subject}:</div>\r\n                    <span>{message.sendFrom.username}{message.accepted ? <span> accepted</span> : <span> declined</span>}</span>\r\n                </div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    isInbox &&\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={moveToHistory}\r\n                        title='Move to History'\r\n                    />\r\n                }\r\n                {\r\n                    !isInbox &&\r\n                    <Button\r\n                    className={styles.button}\r\n                    // onClick={() => { if (window.confirm('Are you sure you wish to delete this message?')) deleteMessage(message) }}\r\n                    onClick={() => {\r\n                        setConfirmOpen(true)                            \r\n                        setCurrElement(message)\r\n                    }} \r\n                    title='Delete Message'\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\n\r\nimport styles from './index.module.css'\r\n\r\nexport default function TaskAssignment({ message, setInboxHistory, options, isInbox }) {\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n    const userId = params.userid\r\n\r\n    async function moveToHistory() {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            await response.json()\r\n            socket.emit('message-sent', userId)\r\n        }\r\n    }\r\n\r\n    async function deleteMessage() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => deleteMessage(currElement)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Project:</div>\r\n                <div className={styles.inline}>{message.project.name}</div>\r\n                <div className={`${styles.bold} ${styles.inline} ${styles.margin}`}>List:</div>\r\n                <div className={styles.inline}>{message.list.name}</div>\r\n                <div className={`${styles.bold} ${styles.inline} ${styles.margin}`}>Task:</div>\r\n                <div className={styles.inline}>{message.card.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Assigned by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                (message.team.isDeleted || message.project.isDeleted) &&\r\n                <div className={styles.bold}>Project deleted</div>\r\n            }\r\n            <div>\r\n                {\r\n                    !message.team.isDeleted && !message.project.isDeleted &&\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={() => history.push(`/project-board/${message.team.id}/${message.project.id}`)}\r\n                        title='Go to Project'\r\n                    />\r\n                }\r\n                {\r\n                    isInbox ?\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={moveToHistory}\r\n                        title='Move to History'\r\n                    /> :\r\n                    <Button\r\n                        className={styles.button}\r\n                        // onClick={() => { if (window.confirm('Are you sure you wish to delete this message?')) deleteMessage(message) }}\r\n                        onClick={() => {\r\n                            setConfirmOpen(true)                            \r\n                            setCurrElement(message)\r\n                        }} \r\n                        title='Delete Message'\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TeamDeleted({ message, setInboxHistory, options, isInbox }) {\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n    const userId = params.userid\r\n\r\n    async function moveToHistory() {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            await response.json()\r\n            socket.emit('message-sent', userId)\r\n        }\r\n    }\r\n\r\n    async function deleteMessage() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => deleteMessage(currElement)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>Team {message.team.name} deleted</div>\r\n                </div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Deleted by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    isInbox &&\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={moveToHistory}\r\n                        title='Move to History'\r\n                    />\r\n                }\r\n                {\r\n                    !isInbox &&\r\n                    <Button\r\n                    className={styles.button}\r\n                    // onClick={() => { if (window.confirm('Are you sure you wish to delete this message?')) deleteMessage(message) }}\r\n                    onClick={() => {\r\n                        setConfirmOpen(true)                            \r\n                        setCurrElement(message)\r\n                    }} \r\n                    title='Delete Message'\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ProjectDeleted({ message, setInboxHistory, options, isInbox }) {\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const userId = params.userid\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    async function moveToHistory() {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            await response.json()\r\n            socket.emit('message-sent', userId)\r\n        }\r\n    }\r\n\r\n    async function deleteMessage() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => deleteMessage(currElement)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>Project {message.project.name} deleted</div>\r\n                </div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Deleted by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    isInbox &&\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={moveToHistory}\r\n                        title='Move to History'\r\n                    />\r\n                }\r\n                {\r\n                    !isInbox &&\r\n                    <Button\r\n                    className={styles.button}\r\n                    // onClick={() => { if (window.confirm('Are you sure you wish to delete this message?')) deleteMessage(message) }}\r\n                    onClick={() => {\r\n                        setConfirmOpen(true)                            \r\n                        setCurrElement(message)\r\n                    }} \r\n                    title='Delete Message'\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport EditTeam from '../edit-team'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TeamInvitationCanceled({ message, setInbox, setInboxHistory, options, isInbox }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n    const userId = params.userid\r\n\r\n    async function moveToHistory() {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            await response.json()\r\n            socket.emit('message-sent', userId)\r\n        }\r\n    }\r\n\r\n    async function viewTeam() {\r\n\r\n        const response = await fetch(`/api/teams/${message.team.id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const team = await response.json()\r\n            setCurrTeam(team)\r\n        }\r\n        setShowEditTeamForm(true)\r\n    }\r\n\r\n    async function deleteMessage() {\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => deleteMessage(currElement)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                message.team.isDeleted &&\r\n                <div className={styles.bold}>Team deleted</div>\r\n            }\r\n            {\r\n                !message.team.isDeleted &&\r\n                <Button\r\n                    className={styles.button}\r\n                    onClick={viewTeam}\r\n                    title='View Team'\r\n                />\r\n            }\r\n            {\r\n                isInbox ?\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={moveToHistory}\r\n                        title='Move to History'\r\n                    /> :\r\n                    <Button\r\n                        className={styles.button}\r\n                        // onClick={() => { if (window.confirm('Are you sure you wish to delete this message?')) deleteMessage() }}\r\n                        onClick={() => {\r\n                            setConfirmOpen(true)                            \r\n                            setCurrElement(message)\r\n                        }} \r\n                        title='Delete Message'\r\n                    />\r\n            }\r\n            {\r\n                showEditTeamForm &&\r\n                <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                    <EditTeam currTeam={currTeam} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                </Transparent>\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport TeamInvitationInbox from \"../../components/inbox/team-invitation-inbox\"\r\nimport TeamInvitationHistory from \"../../components/inbox/team-invitation-history\"\r\nimport TeamInvitationResponse from \"../../components/inbox/team-invitation-response\"\r\nimport TaskAssignment from \"../../components/inbox/task-assignment\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Title from \"../../components/title\"\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport styles from './index.module.css'\r\nimport TeamDeleted from \"../../components/inbox/team-deleted\"\r\nimport ProjectDeleted from \"../../components/inbox/project-deleted\"\r\nimport TeamInvitationCanceled from \"../../components/inbox/team-invitation-canceled\"\r\n\r\nconst InboxPage = () => {\r\n    const [inbox, setInbox] = useState([])\r\n    const [inboxHistory, setInboxHistory] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }\r\n\r\n    const getInbox = useCallback(async () => {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInbox(user.inbox)\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }, [history, token])\r\n\r\n    useEffect(() => {\r\n        getInbox()\r\n    }, [getInbox])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        setInbox(response.inboxUser.inbox)\r\n        setInboxHistory(response.inboxUser.inboxHistory)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div>\r\n                <Title title='Inbox' />\r\n                {\r\n                    inbox.length === 0 && <div className={styles.title}>Inbox is empty</div>\r\n                }\r\n                {\r\n                    [...inbox].reverse().map(m => {\r\n                        switch (m.subject) {\r\n                            case 'Team invitation':\r\n                                return <TeamInvitationInbox\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                />\r\n\r\n                            case 'Team invitation response':\r\n                                return <TeamInvitationResponse\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Team invitation canceled':\r\n                                return <TeamInvitationCanceled\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Task assignment':\r\n                                return <TaskAssignment\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Team deleted':\r\n                                return <TeamDeleted\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Project deleted':\r\n                                return <ProjectDeleted\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            default:\r\n                                break\r\n                        }\r\n                        return ''\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {\r\n                inboxHistory.length !== 0 &&\r\n                <div>\r\n                    <Title title='History' />\r\n                    {\r\n                        [...inboxHistory].reverse().map(m => {\r\n                            switch (m.subject) {\r\n                                case 'Team invitation':\r\n                                    return <TeamInvitationHistory\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                    />\r\n\r\n                                case 'Team invitation response':\r\n                                    return <TeamInvitationResponse\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team invitation canceled':\r\n                                    return <TeamInvitationCanceled\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Task assignment':\r\n                                    return <TaskAssignment\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team deleted':\r\n                                    return <TeamDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Project deleted':\r\n                                    return <ProjectDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            return ''\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default InboxPage;","export default __webpack_public_path__ + \"static/media/my-tasks.a0bdac2a.svg\";","export default __webpack_public_path__ + \"static/media/pic6.68bb366f.svg\";","export default __webpack_public_path__ + \"static/media/pic1.06557b43.svg\";","export default __webpack_public_path__ + \"static/media/pic12.cb5bf992.svg\";","export default __webpack_public_path__ + \"static/media/pic10.b95e708c.svg\";","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport styles from './index.module.css'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport AvatarUser from '../avatar-user'\r\n\r\n\r\nexport default function ShowAllTaskMembers({ members, deleteMemberOption, deleteMemberObj }) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    function onClick(m) {\r\n        if (deleteMemberOption) {\r\n            setConfirmOpen(true)\r\n            setCurrElement(m)\r\n        }\r\n    }\r\n\r\n\r\n    const updateSocket = () => {\r\n        const project = deleteMemberObj.project\r\n        const teamId = deleteMemberObj.teamId\r\n\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        const cardMembers = deleteMemberObj.cardMembers\r\n        const setCardMembers = deleteMemberObj.setCardMembers\r\n        const cardId = deleteMemberObj.cardId\r\n        const listId = deleteMemberObj.listId\r\n\r\n        var index = cardMembers.indexOf(member)\r\n        let arr = [...cardMembers]\r\n\r\n        if (index !== -1) {\r\n            arr.splice(index, 1)\r\n        }\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                members: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateSocket()\r\n            setCardMembers(arr)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this member'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteMember(currElement)}\r\n                />\r\n            }\r\n\r\n            <div className={styles.allCardMembers}>\r\n\r\n                {\r\n                    members.map((m, index) => {\r\n                        return (\r\n                            <div key={index} className={styles.eachMember} onClick={() => onClick(m)} >\r\n                                <span className={styles.avatar} key={m._id}>\r\n                                    <AvatarUser user={m}\r\n                                        size={30}\r\n                                        className={styles.avatar}\r\n                                    />\r\n                                </span>\r\n                                <span>{m.username}</span>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useRef } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport AvatarUser from '../avatar-user'\r\nimport ShowAllTaskMembers from '../show-all-task-members'\r\nimport styles from './index.module.css'\r\n\r\nconst MembersList = ({ members, maxLength, deleteMemberOption, deleteMemberObj }) => {\r\n    const ref = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(ref)\r\n\r\n    maxLength = Math.min(maxLength, members.length)\r\n\r\n    return (\r\n        <div\r\n            className={styles.members}\r\n            onClick={() => setIsActive(true)}\r\n            ref={ref}\r\n        >\r\n            { isActive &&\r\n                <ShowAllTaskMembers\r\n                    members={members}\r\n                    deleteMemberOption={deleteMemberOption}\r\n                    deleteMemberObj={deleteMemberObj}\r\n                />\r\n            }\r\n            {(members.length > maxLength) ?\r\n                <>\r\n                    {members.slice(0, maxLength - 1).map(member => {\r\n                        return (\r\n                            <span \r\n                            className={styles.avatar} \r\n                            key={member._id}>\r\n                                <AvatarUser user={member}\r\n                                    size={30}\r\n                                    className={styles.avatar}\r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                    <span className={styles.avatar}>\r\n                        <Avatar\r\n                            color={'grey'}\r\n                            // split number of remaining members (and + sign) with spaces in b/n\r\n                            // so that they are correctly displayed by the Avatar component\r\n                            name={['+', ...(`${members.length - maxLength + 1}`.split(''))].join(' ')}\r\n                            size={30}\r\n                            round={true}\r\n                            maxInitials={3}\r\n                            className={styles.avatar}\r\n                        />\r\n                    </span>\r\n                </>\r\n                :\r\n                <>\r\n                    {members.map(element => {\r\n                        return (\r\n                            <span className={styles.avatar} key={element._id}>\r\n                                <AvatarUser\r\n                                user={element}\r\n                                    key={element._id}\r\n                                    size={30}                                  \r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MembersList","import React, { useEffect, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic10 from '../../images/edit-card/pic10.svg'\r\nimport MembersList from '../members-list'\r\n\r\n\r\nexport default function TaskMembers({ card, listId, project, teamId, setCurrCard }) {\r\n    const ref = useRef(null);\r\n    const [cardMembers, setCardMembers] = useState(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(ref)\r\n    const [users, setUsers] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const token = getCookie(\"x-auth-token\")\r\n\r\n    useEffect(() => {\r\n        setCardMembers(card.members)\r\n    }, [card.members])\r\n\r\n    const getTeamUsers = async () => {\r\n\r\n        const response = await fetch(`/api/teams/get-users/${teamId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        }\r\n        const data = await response.json()\r\n\r\n        let filtered = data.members\r\n\r\n        for (let member in cardMembers) {\r\n            filtered = filtered.filter((obj) => obj._id !== cardMembers[member]._id)\r\n        }\r\n        setUsers(filtered)\r\n\r\n    }\r\n\r\n    const handleSelect = async (id) => {\r\n\r\n        if (id === 'select') return\r\n\r\n        const selectedUser = users.filter(obj => obj._id === id)[0]\r\n\r\n        const result = project.membersRoles.filter(obj => obj.memberId._id === selectedUser._id)[0]\r\n\r\n        if (!result) {\r\n            if (!window.confirm(`Do you want to add ${selectedUser.username} to project?`)) return\r\n\r\n            const responseAdd = await fetch(`/api/projects/${project._id}/user`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    member: selectedUser,\r\n                    admin: false\r\n                })\r\n            })\r\n            if (!responseAdd.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n        }\r\n\r\n        let arr = [...cardMembers]\r\n\r\n        arr.push(selectedUser)\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                members: arr,\r\n                newMember: selectedUser,\r\n                teamId,\r\n                projectId: project._id,\r\n                cardId: card._id,\r\n                listId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            setIsActive(!isActive)\r\n            setCardMembers(arr)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n            socket.emit('message-sent', selectedUser._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['small-buttons']} onClick={() => { getTeamUsers(); setIsActive(!isActive) }} >\r\n                <img className={styles.pics} src={pic10} alt=\"pic10\" />\r\n                Add Teammate\r\n            </div>\r\n            { isActive && <form ref={ref} >\r\n                <select className={styles.select} onChange={e => { handleSelect(e.target.value) }}>\r\n                    <option value={'select'}>Select</option>\r\n                    {users.map(m => (\r\n                        <option key={m._id} value={m._id}>{m.username}</option>\r\n                    ))}\r\n                </select>\r\n            </form>}\r\n            { !isActive && card.members.length > 0 && <div className={styles.members}>\r\n                <MembersList\r\n                    members={card.members}\r\n                    maxLength={4}\r\n                    deleteMemberOption={true}\r\n                    deleteMemberObj={{\r\n                        cardMembers,\r\n                        setCardMembers,\r\n                        cardId: card._id,\r\n                        listId,\r\n                        project,\r\n                        teamId\r\n                    }}\r\n                />\r\n            </div>}\r\n        </div >\r\n    )\r\n}\r\n\r\n","const FORMAT_REGEX = /%[aAbBdmwyY]/g\r\n\r\nconst MONTHS = [ \r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', \r\n    'August', 'September', 'October', 'November', 'December'\r\n]\r\n\r\nconst WEEKDAYS = [ \r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', \r\n    'Thursday', 'Friday', 'Saturday', 'Sunday'\r\n]\r\n\r\nconst MILLISECONDS_IN_DAY = 86400000\r\n\r\nconst FORMAT_OPTIONS = {\r\n    'y': (date) => date.getUTCFullYear().toString().slice(-2),      // short year (2018 => 18)\r\n    'Y': (date) => date.getUTCFullYear(),                           // full year (2018 => 2018)\r\n    'm': (date) => `0${date.getMonth() + 1}`.slice(-2),             // month as a number (01 - 12)\r\n    'b': (date) => MONTHS[date.getMonth()].slice(0, 3),             // month, short (Dec, Apr etc.)\r\n    'B': (date) => MONTHS[date.getMonth()],                         // month, long (December)\r\n    'd': (date) => `0${date.getDate()}`.slice(-2),                  // day of month (01 - 31)\r\n    'a': (date) => WEEKDAYS[date.getDay()].slice(0, 3),             // weekday, short (Mon, Wed)\r\n    'A': (date) => WEEKDAYS[date.getDay()],                         // weekday, long (Monday)\r\n    'w': (date) => getWeekNumber(date),                             // week number of the year (1-53)\r\n}\r\n\r\nconst getDateWithOffset = (initialDate, daysOffset) => {\r\n    return new Date(initialDate.getTime() + daysOffset * MILLISECONDS_IN_DAY)\r\n}\r\n\r\nconst getMonday = (date) => {\r\n    date = date || new Date()\r\n\r\n    // need to change to 7 in case date is Sunday (which in JS is 0, while Monday is 1)\r\n    const dateDay = date.getDay() || 7\r\n    const monday = new Date(date)\r\n    monday.setDate(date.getDate() - (dateDay - 1))\r\n\r\n    return monday\r\n}\r\n\r\nconst getWeekNumber = (date) => {\r\n    // Thursday in current week decides the year\r\n    // (each week's year is the Gregorian year in which the Thursday falls)\r\n    const currWeekThursday = getDateWithOffset(getMonday(date), 3)\r\n\r\n    // January 4th is always in week 1\r\n    const week1 = new Date(date.getFullYear(), 0, 4)\r\n    const week1Thursday = getDateWithOffset(getMonday(week1), 3)\r\n\r\n    return 1 + Math.round((currWeekThursday.getTime() - week1Thursday.getTime()) / ( 7 * MILLISECONDS_IN_DAY))\r\n}\r\n\r\n/*  Receives a Javascript date as a first parameter and a format string \r\nas a second parameter and returns a string representing the date in \r\nthe desired format. The format string has several options which can be\r\nseen in the \"FORMAT_OPTIONS\" constant above. \r\n!!! Every format option must be preceded by a percentage sign (%)\r\nExamples: \r\n    In: (date: new Date('2021-01-28'), formatString: '%y_%B_%d')\r\n   Out: '21_January_28'\r\n\r\n   In: (date: new Date('2020-05-12), formatString: '%a, %d %b, %Y')\r\n  Out: 'Tue, 12 May, 2020'\r\n */\r\nconst formatDate = (date, formatString) => {\r\n    return formatString.replace(FORMAT_REGEX, (substr) => {\r\n        const formatType = substr[1]\r\n        const result = FORMAT_OPTIONS[formatType](date)\r\n        return result\r\n    })\r\n}\r\n\r\n/* Returns true if the year, month and day of two dates are the same,\r\nand false otherwise (i.e. ignores time)\r\n*/\r\nconst checkDateEquality = (firstDate, secondDate) => {\r\n    return firstDate.getYear() === secondDate.getYear() \r\n        && firstDate.getMonth() === secondDate.getMonth() \r\n        && firstDate.getDate() === secondDate.getDate()\r\n}\r\n\r\n/* Returns 1 if firstDate is larger, -1 if secondDate is larger\r\nand 0 if the year, month and day of both dates are equal (ignores time)\r\n*/\r\nconst compareDates = (firstDate, secondDate) => {\r\n    const firstDateYear = firstDate.getYear()\r\n    const secondDateYear = secondDate.getYear()\r\n\r\n    if (firstDateYear !== secondDateYear) {\r\n        return 1 - 2 * (secondDateYear > firstDateYear)\r\n    }\r\n\r\n    const firstDateMonth = firstDate.getMonth()\r\n    const secondDateMonth = secondDate.getMonth() \r\n    \r\n    if (firstDateMonth !== secondDateMonth) {\r\n        return 1 - 2 * (secondDateMonth > firstDateMonth)\r\n    }\r\n\r\n    const firstDateDay = firstDate.getDate()\r\n    const secondDateDay = secondDate.getDate()\r\n\r\n    if (firstDateDay !== secondDateDay) {\r\n        return 1 - 2 * (secondDateDay > firstDateDay)\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nexport {\r\n    formatDate,\r\n    checkDateEquality,\r\n    compareDates,\r\n    getDateWithOffset,\r\n    getMonday\r\n}","export default __webpack_public_path__ + \"static/media/pic5.e6817eda.svg\";","import React, { useCallback, useState, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport DatePicker from \"react-datepicker\"\r\nimport { formatDate } from '../../utils/date'\r\nimport pic5 from '../../images/edit-card/pic5.svg'\r\n\r\n\r\n\r\nexport default function TaskDueDate({ dueDate, card, listId, project, teamId, setCurrCard }) {\r\n\r\n    const [cardDueDate, setCardDueDate] = useState(null)\r\n    const [taskDueDate, setTaskDueDate] = useState(null)\r\n    const [width, setWindowWidth] = useState(0)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n\r\n\r\n    useEffect( () => {\r\n      updateDimensions()\r\n      window.addEventListener(\"resize\", updateDimensions)\r\n      return () => window.removeEventListener(\"resize\", updateDimensions)\r\n    }, [])\r\n  \r\n    const updateDimensions = () => {\r\n      const innerWidth = window.innerWidth\r\n      setWindowWidth(innerWidth)\r\n    }\r\n\r\n    function datePickerPosition(w) {\r\n        if (w > 750) {\r\n            return 'bottom-end'\r\n        } else {\r\n            return 'bottom-start'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCardDueDate(dueDate)\r\n        if (cardDueDate) {\r\n            const date = cardDueDate.getTime() ? formatDate(cardDueDate, '%d-%m-%Y') : ''\r\n            setTaskDueDate(date)\r\n        }\r\n    }, [dueDate, cardDueDate])\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }, [socket, project, teamId])\r\n\r\n    const editCardDueDate = async (date) => {\r\n\r\n        if (cardDueDate === \"\" && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                dueDate: date,\r\n                teamId: teamId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            updateProjectSocket()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DatePicker\r\n                customInput={\r\n                    <div className={styles['small-buttons']} >\r\n                        <img className={styles.pics} src={pic5} alt=\"pic5\" />\r\n                        Due Date\r\n                    </div>\r\n                }\r\n                selected={taskDueDate ? cardDueDate : today}\r\n                onChange={(date) => { setCardDueDate(date); editCardDueDate(date) }}\r\n                label=\"Go to date\"\r\n                popperPlacement={datePickerPosition(width)}\r\n            />\r\n            {\r\n                taskDueDate && <div className={styles.date}>{taskDueDate}</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TaskHistory({ taskHistory }) {\r\n\r\n    let arr = []\r\n\r\n    if (taskHistory) {\r\n        for (let i = 0; i < taskHistory.length; i++) {\r\n            let currElement = taskHistory[i]\r\n\r\n            if (i === taskHistory.length - 1) {\r\n                arr.push(currElement)\r\n                break;\r\n            }\r\n\r\n            if (currElement.event.slice(0, 8) === taskHistory[i + 1].event.slice(0, 8) && currElement.date === taskHistory[i + 1].date) {\r\n\r\n            } else {\r\n                arr.push(currElement)\r\n            }\r\n        }\r\n    }\r\n\r\n    function showDate(currDate) {\r\n        let currDay = new Date(currDate)      \r\n        let date = (('0' + currDay.getDate())).slice(-2) + '.' + ('0' + (currDay.getMonth() + 1)).slice(-2) + '.' + currDay.getFullYear()\r\n        return (date)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.history}>\r\n            { taskHistory ?\r\n                arr.reverse().map((m, index) => (\r\n                    <div key={index} >\r\n                        {`${showDate(m['date'])} - ${m['event']}`}\r\n                    </div>\r\n                ))\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/pic2.da7b02c6.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ProgressBar({ progress }) {\r\n\r\n    const progressColor = (input) => {\r\n        if (Number(input) <= 20) {\r\n            return 'red'\r\n        }\r\n        if (Number(input) <= 40) {\r\n            return 'orange'\r\n        }\r\n        if (Number(input) <= 80) {\r\n            return 'blue'\r\n        }\r\n        if (Number(input) > 80) {\r\n            return 'green'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.bar}>\r\n            <div\r\n                style={{\r\n                    width: `${progress}%`,\r\n                    backgroundColor: progressColor(progress)\r\n                }}\r\n                className={styles.progress}\r\n            /></div>\r\n    )\r\n}\r\n","import React, { useRef, useState, useMemo, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic2 from '../../images/edit-card/pic2.svg'\r\nimport ProgressBar from '../progress-bar'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function TaskProgress({ card, listId, project, teamId, taskHistory, setTaskHistory, setCurrCard }) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const ref = useRef(null)\r\n    const [progress, setProgress] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const [isInputActive, setIsInputActive] = useDetectOutsideClick(ref)\r\n    const [isInputVisible, setIsInputVisible] = useState(false)\r\n    const today = useMemo(() => new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()), [])\r\n\r\n    useEffect(() => {\r\n        setIsInputVisible(card.progress !== null)\r\n        setProgress(card.progress)\r\n    }, [card.progress])\r\n\r\n    const changeProgress = async () => {\r\n        if (progress === null) {\r\n            setIsInputVisible(false)\r\n            setIsInputActive(false)\r\n            return\r\n        }\r\n\r\n        if (currInput === progress || !isInputOk) {\r\n            setProgress(currInput)\r\n            setIsInputOk(true)\r\n            return\r\n        }\r\n\r\n        let arr = [...taskHistory]\r\n        arr.push({\r\n            'event': `Progress ${progress}%`,\r\n            'date': today\r\n        })\r\n        setTaskHistory(arr)\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n\r\n    }\r\n\r\n    function onEscPressed(event) {\r\n        if (event.keyCode === 27) {\r\n            setProgress(currInput)\r\n            setIsInputActive(false)\r\n            setIsInputOk(true)\r\n            if (progress === null) setIsInputVisible(false)\r\n        }\r\n    }\r\n\r\n    function onKeyUp() {\r\n        if (!progress || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n        } else {\r\n            setIsInputOk(true)\r\n        }\r\n    }\r\n\r\n    function onClick() {\r\n        setIsInputVisible(true)\r\n        setIsInputActive(true)\r\n        setCurrInput(progress)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles['small-buttons']} onClick={onClick} >\r\n                <img className={styles.pics} src={pic2} alt=\"\" />\r\n                Progress\r\n            </div>\r\n            <div className={styles['progress-bar']} >\r\n                {card.progress !== null ? <ProgressBar progress={card.progress} /> : null}\r\n            </div>\r\n            <div className={styles['progress-input-container']}>\r\n                {isInputVisible && <>\r\n                    {isInputActive ? <span ref={ref}>\r\n                        <input\r\n                            ref={function (input) {\r\n                                if (input != null) {\r\n                                    input.focus();\r\n                                }\r\n                            }}\r\n                            id='progress'\r\n                            type='number'\r\n                            min=\"0\"\r\n                            max=\"100\"\r\n                            className={`${styles['progress-input']} ${!isInputOk && styles['bad-input']}`}\r\n                            value={progress}\r\n                            onKeyDown={e => onEscPressed(e)}\r\n                            onKeyUp={onKeyUp}\r\n                            onChange={e => setProgress(e.target.value)}\r\n                            onBlur={changeProgress}\r\n                        /><span>%</span>\r\n                        </span> : <div className={styles.progress} onClick={onClick}>{progress}%</div>}\r\n                </>}\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/download.1cad53f3.svg\";","export default __webpack_public_path__ + \"static/media/remove.3a2c6cb2.svg\";","import React, { useState, useEffect } from 'react'\r\nimport ButtonClean from '../button-clean'\r\nimport styles from './index.module.css'\r\nimport download from '../../images/edit-card/download.svg'\r\nimport remove from '../../images/edit-card/remove.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\n\r\nexport default function AttachmentList({ attachments, listRef, card, project, teamId, setCurrCard }) {\r\n    const socket = useSocket()\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const [attachmentsArr, setAttachmentsArr] = useState([])\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    useEffect(() => {\r\n        setAttachmentsArr(attachments)\r\n    }, [attachments])\r\n\r\n    const getFullDocumentUrl = (att) => {\r\n        return `https://res.cloudinary.com/${process.env.REACT_APP_CLOUD_NAME}/raw/upload/fl_attachment/${att.path}`\r\n    }\r\n\r\n    async function deteleAttachment(att) {\r\n        const response = await fetch(`/api/projects/lists/cards/attachments/${card._id}/${att._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            setAttachmentsArr(updatedCard.attachments)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='remove this attachment'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => deteleAttachment(currElement)}\r\n            />\r\n        }\r\n        <div ref={listRef} className={styles.container}>\r\n            <div className={styles.title}>Task Attachments</div>\r\n            {attachmentsArr.map((att, index) => (\r\n                <div key={index} className={styles.attachment}>\r\n                    <div className={styles.name}>{att.name}.{att.format}</div>\r\n                    <div>\r\n                        <ButtonClean title={<img className={styles.button} src={download} alt=\"Download\" />} onClick={() => window.open(getFullDocumentUrl(att), \"_blank\")} />\r\n                        <ButtonClean title={<img className={styles.button} src={remove} alt=\"Remove\" />}\r\n                         onClick={() => {\r\n                            setConfirmOpen(true)                            \r\n                            setCurrElement(att)\r\n                        }} \r\n                        //  onClick={() => deteleAttachment(att)} \r\n                         />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\nimport AttachmentList from '../attachmentList'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Transparent from '../transparent'\r\n\r\n\r\nexport default function Attachment({ att, attachments, card, project, teamId, setCurrCard }) {\r\n    const ref = useRef(null)\r\n    const nameRef = useRef(null)\r\n    const listRef = useRef(null)\r\n    const [isNameVisible, setIsNameVisible] = useState(false)\r\n    const [nameWidth, setNameWidth] = useState(null)\r\n    const [isListVisible, setIsListVisible] = useDetectOutsideClick(listRef)\r\n\r\n    // hover is equal to 'hidden' only if mouse is still over the attachment\r\n    const onMouseEnter = () => {\r\n        setTimeout(() => {\r\n            if (ref.current) {\r\n                const hover = window.getComputedStyle(ref.current).getPropertyValue('border-top-style')\r\n                if (hover === \"hidden\") setIsNameVisible(true)\r\n            }\r\n        }, 700);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (nameRef.current) {\r\n            setNameWidth(window.getComputedStyle(nameRef.current).getPropertyValue('width'))\r\n        }\r\n    }, [isNameVisible])\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className={styles.attachment}\r\n                ref={ref}\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={() => setIsNameVisible(false)}\r\n                onClick={() => setIsListVisible(true)}\r\n            >\r\n                <img src={pic1} alt=\"\" className={styles['att-picture']} />\r\n                <div className={styles.format}>{att.format}</div>\r\n                {isNameVisible &&\r\n                    <div\r\n                        ref={nameRef}\r\n                        className={styles.name}\r\n                        style={{ '--width': `${nameWidth}` }}\r\n                    >{att.name}</div>\r\n                }\r\n            </div>\r\n            {isListVisible && <Transparent hideForm={() => setIsListVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                    setCurrCard={setCurrCard}\r\n                />\r\n            </Transparent >}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic6 from '../../images/edit-card/pic6.svg'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport Attachment from '../attachment'\r\n\r\nexport default function TaskAttach({ card, project, teamId, setCurrCard }) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [attachments, setAttachments] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setAttachments(card.attachments)\r\n    }, [card.attachments])\r\n\r\n    function addAttachment() {\r\n        const widget = window.cloudinary.createUploadWidget({\r\n            cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n            uploadPreset: process.env.REACT_APP_UPLOAD_PRESET,\r\n            resourceType: 'raw'\r\n\r\n        }, async (error, result) => {\r\n            if (result.event === 'success') {\r\n                const path = result.info.path\r\n                const name = result.info.original_filename\r\n                let format = result.info.format\r\n                if (!format) {\r\n                    format = path.split('.')[1]\r\n                }\r\n                const publicId = result.info.public_id\r\n                const attachment = { path, name, format, publicId }\r\n\r\n\r\n                const response = await fetch(`/api/projects/lists/cards/attachments/${card._id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token\r\n                    },\r\n                    body: JSON.stringify({\r\n                        attachment\r\n                    })\r\n                })\r\n                if (!response.ok) {\r\n                    history.push(\"/error\")\r\n                } else {\r\n                    const updatedCard = await response.json()\r\n                    setAttachments(updatedCard.attachments)\r\n                    socket.emit('project-update', project)\r\n                    socket.emit('task-team-update', teamId)\r\n                }\r\n            }\r\n\r\n            if (error) {\r\n                //TODO: Handle errors\r\n\r\n                return\r\n            }\r\n        })\r\n\r\n        widget.open()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['small-buttons']} onClick={addAttachment}>\r\n                <img className={styles.pics} src={pic6} alt=\"pic6\" />\r\n                Attach File\r\n            </div>\r\n            { attachments && <div className={styles['att-container']}>\r\n                {attachments.length <= 4 ? attachments.map(att => (\r\n                    <Attachment key={att._id} att={att} attachments={attachments} card={card} project={project} teamId={teamId} setCurrCard={setCurrCard} />\r\n                )) :\r\n                <>\r\n                {attachments.slice(0, 3).map(att => (\r\n                    <Attachment key={att._id} att={att} attachments={attachments} card={card} project={project} teamId={teamId} setCurrCard={setCurrCard} />\r\n                ))}\r\n                <div className={`${styles.remaining} ${styles.attachment}`}>\r\n                    +{attachments.length - 3}\r\n                </div>\r\n                </>\r\n                }\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState, useMemo, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\n// import pic2 from '../../images/edit-card/pic2.svg'\r\n// import pic3 from '../../images/edit-card/pic3.svg'\r\n// import pic4 from '../../images/edit-card/pic4.svg'\r\n// import pic5 from '../../images/edit-card/pic5.svg'\r\n// import pic6 from '../../images/edit-card/pic6.svg'\r\n// import pic7 from '../../images/edit-card/pic7.svg'\r\n// import pic8 from '../../images/edit-card/pic8.svg'\r\n// import pic9 from '../../images/edit-card/pic9.svg'\r\n// import pic10 from '../../images/edit-card/pic10.svg'\r\n// import pic11 from '../../images/edit-card/pic11.svg'\r\nimport pic12 from '../../images/edit-card/pic12.svg'\r\n// import pic13 from '../../images/edit-card/pic13.svg'\r\n// import pic14 from '../../images/edit-card/pic14.svg'\r\nimport TaskMembers from '../edit-card-options/taskMembers'\r\nimport TaskDueDate from \"../edit-card-options/taskDueDate\"\r\nimport TaskHistory from '../edit-card-options/taskHistory'\r\nimport TaskProgress from '../edit-card-options/taskProgress'\r\nimport TaskAttach from '../edit-card-options/taskAttach'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\n\r\n\r\nexport default function EditCard({ listId, initialCard, project, teamId, hideForm, setCurrCard }) {\r\n    const nameRef = useRef(null)\r\n    const descriptionRef = useRef(null)\r\n    const [card, setCard] = useState(null)\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [taskHistory, setTaskHistory] = useState(null)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const dueDate = useMemo(() => new Date(initialCard.dueDate), [initialCard.dueDate])\r\n    const token = getCookie(\"x-auth-token\")\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCard(initialCard)\r\n        setName(initialCard.name)\r\n        setDescription(initialCard.description)\r\n        setTaskHistory(initialCard.history)\r\n    }, [initialCard])\r\n\r\n\r\n    const deleteCard = async () => {\r\n\r\n        // if (!window.confirm('Are you sure you wish to delete this item?')) return\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n            hideForm()\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            // const updatedCard = await response.json()\r\n            // setCard(updatedCard)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n            // setProgressChanged(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setNameHeight(nameRef.current.scrollHeight + 2)\r\n        }, 1);\r\n    }, [])\r\n\r\n    function onEscPressed(event, setElement, ref) {\r\n        if (event.keyCode === 27) {\r\n            setElement(currInput)\r\n            setTimeout(() => {\r\n                ref.current.blur()\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.menu}>\r\n\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this task'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteCard()}\r\n                />\r\n            }\r\n\r\n            <div className={styles.container}>\r\n\r\n                <div className={styles['task-name']}>\r\n                    <span>\r\n                        <img src={pic1} alt=\"pic1\" />\r\n                    </span>\r\n                    <textarea\r\n                        ref={nameRef}\r\n                        className={`${styles['name-input']} ${styles.text}`}\r\n                        style={{ 'height': nameHeight }}\r\n                        value={name}\r\n                        onFocus={() => setCurrInput(name)}\r\n                        onKeyDown={e => onEscPressed(e, setName, nameRef)}\r\n                        onChange={e => {\r\n                            setName(e.target.value)\r\n                            setNameHeight(nameRef.current.scrollHeight + 2)\r\n                        }}\r\n                        onBlur={() => {\r\n                            if (currInput === name) return\r\n                            handleSubmit()\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles['task-body']} >\r\n\r\n                    <div className={styles['left-side']}>\r\n                        <div>\r\n                            <div className={styles.text}>Description</div>\r\n                            <textarea className={styles['description-input']}\r\n                                ref={descriptionRef}\r\n                                value={description}\r\n                                onFocus={() => setCurrInput(description)}\r\n                                onKeyDown={e => onEscPressed(e, setDescription, descriptionRef)}\r\n                                onChange={e => setDescription(e.target.value)}\r\n                                onBlur={() => {\r\n                                    if (currInput === description) return\r\n                                    handleSubmit()\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className={styles['task-component']}>\r\n                            <div className={styles.text}>History</div>\r\n                            <TaskHistory taskHistory={taskHistory} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n\r\n                        <div className={styles['task-component']}>\r\n                            <div className={styles.text}>Manage</div>\r\n                            <TaskDueDate\r\n                                dueDate={dueDate}\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <TaskMembers\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <TaskProgress\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                taskHistory={taskHistory}\r\n                                setTaskHistory={setTaskHistory}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <TaskAttach\r\n                                card={initialCard}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <button className={styles['small-buttons']} \r\n                            // onClick={deleteCard} \r\n                            onClick={() => {\r\n                                setConfirmOpen(true)                            \r\n                            }}\r\n                            title=\"Delete Task\" >\r\n                                <img className={styles.pics} src={pic12} alt=\"pic12\" />\r\n                            Delete Task\r\n                        </button>\r\n\r\n\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic3} alt=\"pic3\" />\r\n                            Join\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic4} alt=\"pic4\" />\r\n                            Stickers\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic5} alt=\"pic5\" />\r\n                            Due Date\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic7} alt=\"pic7\" />\r\n                            Reports\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic10} alt=\"pic10\" />\r\n                            Add Teammate\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic11} alt=\"pic11\" />\r\n                            Make Template\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic13} alt=\"pic13\" />\r\n                            Remove List\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic8} alt=\"pic8\" />\r\n                            Settings\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic9} alt=\"pic9\" />\r\n                            View\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic14} alt=\"pic14\" />\r\n                            Archive\r\n                        </div> */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport ButtonClean from '../button-clean'\r\nimport pen from '../../images/pen.svg'\r\nimport attPic from '../../images/edit-card/pic6.svg'\r\nimport styles from \"./index.module.css\"\r\nimport Transparent from '../transparent'\r\nimport EditCard from '../edit-card'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AttachmentList from '../attachmentList'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function MyTasksTask({ currTeam, project, list, card }) {\r\n    const inputRef = useRef(null)\r\n    const listRef = useRef(null)\r\n    const [isInputActive, setIsInputActive] = useState(false)\r\n    const [showEditCard, setShowEditCard] = useState(false)\r\n    const [showAttachments, setShowAttachments] = useDetectOutsideClick(listRef)\r\n    const [progress, setProgress] = useState('')\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const days = Math.ceil((Date.parse(card.dueDate) - Date.now()) / 1000 / 3600 / 24)\r\n\r\n    useEffect(() => {\r\n        if (card.progress === null) {\r\n            setProgress('Add')\r\n            return\r\n        }\r\n        setProgress(card.progress + '%')\r\n    }, [setProgress, card.progress])\r\n\r\n    async function onBlur() {\r\n        setIsInputActive(false)\r\n        if (!isInputOk || Number(progress) === card.progress) {\r\n            setProgress(card.progress + '%')\r\n            setIsInputOk(true)\r\n            return\r\n        }\r\n\r\n        if (progress === '') {\r\n            if (card.progress === null) {\r\n                setProgress('Add')\r\n                return\r\n            }\r\n            setProgress(card.progress + '%')\r\n        }\r\n\r\n        const today = new Date(Date.now())\r\n        let arr = [...card.history]\r\n\r\n        arr.push({\r\n            'event': `Progress ${progress}%`,\r\n            'date': today\r\n        })\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${list._id}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress: progress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', currTeam._id)\r\n        }\r\n    }\r\n\r\n    function onKeyUp() {\r\n        if (Number.isNaN(Number(progress)) || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n        } else {\r\n            setIsInputOk(true)\r\n        }\r\n    }\r\n\r\n    function onFocus() {\r\n        setIsInputActive(true)\r\n        if (progress === 'Add') {\r\n            setProgress('')\r\n            return\r\n        }\r\n        setProgress(Number(progress.slice(0, -1)))\r\n    }\r\n\r\n    return (\r\n        <div key={card._id} className={styles.card}>\r\n            <div className={styles.task}>{card.name}</div>\r\n            <div className={styles.progress}>\r\n                <input\r\n                    ref={inputRef}\r\n                    type={'text'}\r\n                    className={`${styles.input} ${!isInputOk && styles['bad-input']} ${!isInputActive && styles['no-border']}`}\r\n                    autoComplete=\"off\"\r\n                    value={progress}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onKeyUp={onKeyUp}\r\n                    onChange={e => setProgress(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={styles.days}>\r\n                {\r\n                    card.progress === 100 ? (<div>Done</div>) :\r\n                        Date.parse(card.dueDate) === 0 || card.dueDate === null ? (<div>No Deadline</div>) :\r\n                            days < 0 ? (<div className={styles.deadline}>Deadline Passed</div>) :\r\n                                <div>{days}</div>\r\n                }\r\n            </div>\r\n            <div className={styles['buttons-container']}>\r\n                {card.attachments.length > 0 && <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setShowAttachments(true)}\r\n                    title={<img src={attPic} alt=\"\" width=\"14\" />}\r\n                />}\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setShowEditCard(true)}\r\n                    title={<img src={pen} alt=\"\" width=\"14\" />}\r\n                />\r\n            </div>\r\n            {showAttachments && <Transparent hideForm={() => setShowAttachments(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={card.attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={currTeam._id}\r\n                />\r\n            </Transparent >}\r\n            {showEditCard && <div className={styles.edit}>\r\n                <Transparent hideForm={() => setShowEditCard(!showEditCard)} >\r\n                    <EditCard\r\n                        hideForm={() => setShowEditCard(!showEditCard)}\r\n                        initialCard={card}\r\n                        listId={list._id}\r\n                        project={project}\r\n                        teamId={currTeam._id}\r\n                    />\r\n                </Transparent>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect, useCallback } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport ButtonClean from \"../../components/button-clean\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Title from \"../../components/title\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport styles from './index.module.css'\r\nimport myTasks from '../../images/my-tasks/my-tasks.svg'\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport MyTasksTask from \"../../components/my-tasks-task\"\r\n\r\nconst MyTasksPage = () => {\r\n    const userContext = useContext(UserContext)\r\n    const [currTeam, setCurrTeam] = useState('')\r\n    const [projects, setProjects] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n\r\n    const selectTeam = useCallback(async (team) => {\r\n        setCurrTeam(team)\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const response = await fetch(`/api/user/tasks/${team._id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            setProjects(data)\r\n        }\r\n    }, [history])\r\n\r\n    useEffect(() => {\r\n        if (!currTeam || socket == null) return\r\n\r\n        const id = currTeam._id\r\n\r\n        socket.on('task-team-updated', taskTeamUpdate)\r\n        socket.on('task-update-team', (teamId) => {\r\n            if (teamId === id) {\r\n                const team = { ...currTeam }\r\n                selectTeam(team)\r\n            }\r\n        })\r\n\r\n        socket.emit('task-team-join', id)\r\n        return () => {\r\n            socket.off('task-team-updated')\r\n            socket.off('task-update-team')\r\n        }\r\n    }, [currTeam, socket, selectTeam])\r\n\r\n    function taskTeamUpdate(projects) {\r\n        setProjects(projects)\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Title title='My Tasks' />\r\n            <div>\r\n                <span className={styles.title}>Teams:</span>\r\n                {userContext.user.teams.map(team => {\r\n                    return (<ButtonClean\r\n                        key={team._id}\r\n                        title={team.name}\r\n                        onClick={() => selectTeam(team)}\r\n                        className={`${styles.teams} ${currTeam._id === team._id && styles.selected}`}\r\n                    />)\r\n                })}\r\n            </div>\r\n            {!currTeam ? <div className={styles.title}>Select a team</div> :\r\n                <div className={styles.box}>\r\n                    {projects.length === 0 ? <div className={styles.title}>There is no current tasks</div> :\r\n                        projects.map(project => {\r\n                            return (\r\n                                <div key={project._id} className={styles.project}>\r\n                                    <div className={styles['project-name']}>\r\n                                        <Link to={`/project-board/${currTeam._id}/${project._id}`} className={styles.link}>\r\n                                            <span className={styles.bold}>Project:</span> {project.name}\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className={`${styles.header} ${styles.raw}`}>\r\n                                        <div className={styles.list}>List:</div>\r\n                                        <div className={styles.container}>\r\n                                            <div className={styles.task}>Task:</div>\r\n                                            <div className={styles.progress}>Progress (%):</div>\r\n                                            <div className={styles.days}>Days Till End:</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {project.lists.map(list => {\r\n                                        return (\r\n                                            <div key={list._id} className={styles.raw}>\r\n                                                <div className={styles.list}>{list.name}</div>\r\n                                                <div className={styles['task-container']}>\r\n                                                    {list.cards.map(card => {\r\n                                                        return (\r\n                                                            <MyTasksTask\r\n                                                                key={card._id}\r\n                                                                currTeam={currTeam}\r\n                                                                project={project}\r\n                                                                list={list}\r\n                                                                card={card}\r\n                                                            />\r\n                                                        )\r\n                                                    })}\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n            {(!currTeam || projects.length === 0) &&\r\n                <div className={styles.pic}>\r\n                    <img src={myTasks} alt='' />\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default MyTasksPage","import React from \"react\";\r\nimport PageLayout from \"../../components/page-layout\";\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <PageLayout>\r\n            <h3>Error Page</h3>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React, { useCallback, useContext, useRef, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport AvatarUser from '../avatar-user'\r\n\r\n\r\nexport default function AddMember(props) {\r\n\r\n    const socket = useSocket()\r\n    const members = props.members\r\n    const [users, setUsers] = useState([])\r\n    const [selectedUser, setSelectedUser] = useState('')\r\n    const context = useContext(UserContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const isAdmin = props.admin\r\n    const history = useHistory()\r\n    const projectId = props.project._id\r\n    const params = useParams()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('team-update', params.teamid)\r\n    }, [socket, props.project, params.teamid])\r\n\r\n\r\n    const getTeamUsers = async () => {\r\n        let currentTeamId = ''\r\n\r\n        teamContext.teams.map(t => {\r\n            return (\r\n                t.projects.map(p => {\r\n                    if (p._id === projectId) {\r\n                        currentTeamId = t._id\r\n                    }\r\n                    return currentTeamId\r\n                })\r\n            )\r\n        })\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/get-users/${currentTeamId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        }\r\n        const data = await response.json()\r\n\r\n        let teamUsers = data.members\r\n\r\n        const filtered = teamUsers.filter((e) => {\r\n            const found = members.find(element => element.memberId.username === e.username)\r\n            if (found) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        })\r\n\r\n        setUsers(filtered)\r\n\r\n    }\r\n\r\n    async function handleOnDragEnd(result) {\r\n\r\n        if (!result.destination) {\r\n            console.log('no destination');\r\n            return\r\n        }\r\n\r\n        const memberRoleId = result.draggableId\r\n\r\n        const member = members.filter(a => a._id === memberRoleId)[0]['memberId']\r\n\r\n        if (member._id === context.user.id) {\r\n            console.log('can`t move self');\r\n            return\r\n        }\r\n\r\n        const memberAdmin = members.filter(a => a._id === memberRoleId)[0]['admin']\r\n\r\n\r\n        if (result.destination.droppableId === 'admins' && memberAdmin) {\r\n            return\r\n        }\r\n        if (result.destination.droppableId === 'members' && !memberAdmin) {\r\n            return\r\n        }\r\n\r\n        // if (!memberAdmin) {\r\n        //     if (!window.confirm(`Are you sure you wish to make ${member.username} admin ?`))\r\n        //         return\r\n        // }\r\n\r\n        // if (memberAdmin) {\r\n        //     if (!window.confirm(`Are you sure you wish to remove ${member.username} from  admins ?`))\r\n        //         return\r\n        // }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const response = await fetch(`/api/projects/${projectId}/user-roles`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                userRole: memberRoleId,\r\n                isAdmin: !memberAdmin\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n        }\r\n    }\r\n\r\n    const handleSelect = (id) => {\r\n        const result = users.filter(obj => {\r\n            return obj._id === id\r\n        })[0]\r\n        setSelectedUser(result)\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        const projectId = props.project._id\r\n\r\n        if (member._id === context.user.id) {\r\n            return\r\n        }\r\n        const memberId = member._id\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${projectId}/user-remove`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                memberId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleAdd = async (event) => {\r\n        event.preventDefault()\r\n\r\n\r\n        if (!selectedUser) {\r\n            setIsActive(!isActive)\r\n\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const member = selectedUser\r\n\r\n        const response = await fetch(`/api/projects/${projectId}/user`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                member,\r\n                admin: false\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n            setIsActive(!isActive)\r\n            setSelectedUser('')\r\n        }\r\n    }\r\n\r\n    let confirmationObjectFunctions = {        \r\n        'delete this member': deleteMember   \r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n\r\n            <div className={styles['big-container']} >\r\n                {isAdmin ?\r\n                    <span>\r\n                        {isActive ?\r\n                            <div className={styles.members} ref={dropdownRef}>\r\n                                {\r\n                                    (users.length > 0) ?\r\n                                    \r\n                                        <div>\r\n                                                Add Member to Project\r\n                                \r\n                                            <div>\r\n                                                <select className={styles['member-select']}\r\n                                                    onChange={(e) => { handleSelect(e.target.value) }}>\r\n                                                    <option >Select user</option>\r\n                                                    {\r\n                                                        users.map((element) => (\r\n                                                            <option key={element._id} value={element._id}>{element.username}</option>\r\n                                                        ))\r\n\r\n                                                    }\r\n                                                </select>\r\n                                            <span className={styles['add-button']} onClick={handleAdd} >Add</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <div>There are no more members in your team</div>                                      \r\n                                    \r\n                                }\r\n                            </div>\r\n                            :\r\n                            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n\r\n\r\n                            <div className={styles['admins-container']}>\r\n                                <span className={styles.title}>Admins:</span>\r\n                                <Droppable droppableId={\"admins\"}>\r\n                                    {(provided) => (\r\n                                        <div className={styles.droppable} ref={provided.innerRef}  {...provided.droppableProps} >\r\n                                            {\r\n                                                members.filter(a => a.admin === true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index}>\r\n                                                            {(provided) => (\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >                                                                   \r\n                                                                    <AvatarUser user={element.memberId} \r\n                                                                      size={40}  />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className={styles['members-container']}>\r\n                                <span className={styles.title}>Members:</span>\r\n                                <Droppable droppableId={\"members\"}>\r\n                                    {(provided) => (\r\n                                        <div className={styles['droppable-members']} ref={provided.innerRef} {...provided.droppableProps}>\r\n                                            {\r\n                                                members.filter(a => a.admin !== true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index} >\r\n                                                            {(provided) => (\r\n\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                    <AvatarUser user={element.memberId}  key={index}  size={40} round={true}                                                                       \r\n                                                                        onClick={() => {\r\n                                                                            setConfirmOpen(true)\r\n                                                                            setConfirmTitle('delete this member')\r\n                                                                            setCurrElement(element.memberId)\r\n                                                                        }}\r\n                                                                        />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                                <span className={styles['add-button']} onClick={() => { setIsActive(!isActive); getTeamUsers() }} >Add</span>\r\n                            </div>\r\n\r\n\r\n                            </DragDropContext>\r\n                        \r\n                        }\r\n                    </span >\r\n                    :\r\n                    <div>\r\n                        <div className={styles['admins-container']}>\r\n                            <span className={styles.title}>Admins:</span>\r\n                            <div className={styles.droppable}>\r\n                                {\r\n                                    members.filter(a => a.admin === true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index} >\r\n                                                <AvatarUser user={element.memberId}  size={40}  />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={styles['admins-container']}>\r\n                            <span className={styles.title}>Members:</span>\r\n                            <div className={styles.droppable}>\r\n\r\n                                {\r\n                                    members.filter(a => a.admin !== true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index}>                                                                                                <AvatarUser user={element.memberId}  size={40}  />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","function isUserAdmin(id, members) {\r\n    \r\n    const member = members.find( m => m.memberId._id === id )\r\n    if (!member) {\r\n        return false\r\n    }\r\n\r\n    return member.admin\r\n}\r\n\r\nexport default isUserAdmin\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AddProjectMember from '../add-project-member'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\n\r\n\r\nexport default function EditProject(props) {\r\n    const [name, setName] = useState(props.project.name)\r\n    const [description, setDescription] = useState(props.project.description)\r\n    const members = props.project.membersRoles\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n\r\n    const projectId = props.project._id\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n    }, [socket, props.project])\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id, props])\r\n\r\n\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${projectId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n            props.hideForm()\r\n            socket.emit('team-update', params.teamid)\r\n        }\r\n    }\r\n\r\n    async function deleteProject() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${props.project._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            props.hideForm()\r\n            const obj = {\r\n                projectId: props.project._id,\r\n                teamId: params.teamid\r\n            }\r\n            socket.emit('project-deleted', obj)\r\n            history.push(`/team/${params.teamid}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this project'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteProject()}\r\n                />\r\n            }\r\n\r\n            <div className={styles.container} >\r\n                <div className={styles.title} >Project</div>\r\n                \r\n                <div className={styles['input-container']}>\r\n                    <span> Name</span>\r\n                    <input\r\n                        className={styles['input-pr-name']}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label=\"Name\"\r\n                        id=\"name\"\r\n                    />\r\n                </div>\r\n                <div className={styles['input-container-descr']}>\r\n                    <span> Description</span>\r\n                    <textarea\r\n                        className={styles['text-area-descr']}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        label=\"Description\"\r\n                        id=\"description\"\r\n                        placeholder='Project Description'\r\n                    />\r\n                </div>\r\n                <div className={styles['edit-members']}>\r\n                    <AddProjectMember admin={isAdmin} project={props.project} members={props.project.membersRoles} />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {isAdmin ?\r\n                    <div className={styles['buttons-div']}>\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Edit'} onClick={handleSubmit}/>\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Delete Project'} \r\n                        onClick={() => {\r\n                            setConfirmOpen(true)                            \r\n                        }}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useRef } from 'react'\r\nimport ButtonClean from '../button-clean'\r\nimport styles from './index.module.css'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nimport attPic from '../../images/edit-card/pic6.svg'\r\nimport Transparent from '../transparent'\r\nimport AttachmentList from '../attachmentList'\r\n\r\nconst AttachmentsLink = ({ card, project, teamId }) => {\r\n    const listRef = useRef(null)\r\n    const [isVisible, setIsVisible] = useDetectOutsideClick(listRef)\r\n\r\n    return (\r\n        <>\r\n        <ButtonClean\r\n            className={`${styles.attachments} ${styles.button}`}\r\n            onClick={() => setIsVisible(true)}\r\n            title={<img src={attPic} alt=\"\" width='14px' />}\r\n        />\r\n        { isVisible &&\r\n            <Transparent hideForm={() => setIsVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={card.attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                />\r\n            </Transparent >\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttachmentsLink","import React, { useRef } from 'react'\r\nimport styles from './index.module.css'\r\nimport pen from '../../images/pen.svg'\r\nimport ButtonClean from '../button-clean'\r\nimport MembersList from '../members-list'\r\nimport ProgressBar from '../progress-bar'\r\nimport Transparent from '../transparent'\r\nimport AttachmentList from '../attachmentList'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport attPic from '../../images/edit-card/pic6.svg'\r\nimport { useParams } from 'react-router-dom'\r\nimport AttachmentsLink from '../attachmentsLink'\r\n\r\nexport default function Card({ card, project, showCurrentCard, setCurrCard }) {\r\n    const listRef = useRef(null)\r\n    const [isListVisible, setIsListVisible] = useDetectOutsideClick(listRef)\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <div>\r\n                {((card.progress && card.progress !== 0) || card.members.length > 0 || card.attachments.length > 0) ?\r\n                    <div className={styles.container}>\r\n                        {card.progress ? <div className={styles.progress}><ProgressBar progress={card.progress} /></div> : <div></div>}\r\n                        <div className={styles.container}>\r\n                            {card.attachments.length > 0 && \r\n                                <AttachmentsLink card={card} project={project} teamId={teamId} />\r\n                            }\r\n                            <MembersList\r\n                                members={card.members}\r\n                                maxLength={2}\r\n                            />\r\n                        </div>\r\n                    </div> : null\r\n                }\r\n                <div className={styles['card-name']}>\r\n                    {card.name}\r\n                </div>\r\n            </div>\r\n            <ButtonClean\r\n                className={styles.button}\r\n                onClick={() => {\r\n                    showCurrentCard()\r\n                    setCurrCard(card)\r\n                }}\r\n                title={<img src={pen} alt=\"\" width=\"11.5\" height=\"11.5\" />}\r\n            />\r\n            {isListVisible && <Transparent hideForm={() => setIsListVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={card.attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                />\r\n            </Transparent >}\r\n        </div >\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/dots.d2d443b8.svg\";","import React, { useCallback, useRef, useState } from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Card from '../card'\r\nimport styles from './index.module.css'\r\nimport dots from '../../images/dots.svg'\r\nimport ButtonClean from '../button-clean'\r\nimport ListColor from '../list-color'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\n\r\n\r\nexport default function List( { isAdmin, project, list, showEditList, showCurrentCard, setCurrCard }) {\r\n    const dropdownRef = useRef(null);\r\n    const cardRef = useRef(null);\r\n    const [isVisible, setIsVisible] = useDetectOutsideClick(cardRef)\r\n    const [isEditListActive, setIsEditListActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardName, setCardName] = useState('')\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n\r\n    const updateSocket = useCallback(() => {\r\n        socket.emit('project-update', project)\r\n    }, [socket, project])\r\n\r\n    async function deleteList() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/${project._id}/${list._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateSocket()\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n    }\r\n\r\n    const addCard = useCallback(async (event) => {\r\n        event.preventDefault()\r\n        if (cardName === '') {\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${list._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name: cardName,\r\n                description: '',\r\n                dueDate: '',\r\n                progress: '',\r\n                members: []\r\n\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsVisible(!isVisible)\r\n            setCardName('')\r\n            updateSocket()\r\n        }\r\n\r\n    }, [history, cardName, list._id, updateSocket, isVisible, setIsVisible])\r\n\r\n    function editList() {\r\n        showEditList()\r\n        setIsEditListActive(!isEditListActive)\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={styles.list}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'you wish to delete this list'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteList()}\r\n                />\r\n            }\r\n            <div className={styles.row}>\r\n                <div>\r\n                    <div className={styles.name}>{list.name}</div>\r\n                    <ListColor color={list.color || '#A6A48E'} type={'list'} />\r\n                </div>\r\n                {\r\n                    isAdmin &&\r\n                    <ButtonClean\r\n                        className={styles.button}\r\n                        onClick={() => setIsEditListActive(!isEditListActive)}\r\n                        title={<img className={styles.dots} src={dots} alt=\"...\" width=\"20\" height=\"6\" />}\r\n                    />\r\n                }\r\n            </div>\r\n            <div className={styles.relative}>\r\n                {isEditListActive && <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                        <ButtonGrey\r\n                            onClick={editList}\r\n                            title='Edit'\r\n                            className={styles.edit}\r\n                        />\r\n                        <ButtonGrey\r\n                        \r\n                            onClick={() => setConfirmOpen(true)}\r\n                            title='Delete'\r\n                            className={styles.delete}\r\n                        />\r\n                </div>}\r\n            </div>\r\n            <Droppable droppableId={list._id} type='droppableSubItem'>\r\n                {(provided) => (\r\n                    <div className={styles.droppable} ref={provided.innerRef}>\r\n                        {\r\n                            list.cards.map((element, index) => {\r\n                                return (\r\n                                    <Draggable key={element._id} draggableId={element._id}\r\n                                        index={index}\r\n                                    >\r\n                                        {(provided) => (\r\n                                            <div>\r\n                                                <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                    <Card\r\n                                                        card={element}\r\n                                                        project={project}\r\n                                                        showCurrentCard={showCurrentCard}\r\n                                                        setCurrCard={setCurrCard}\r\n                                                    />\r\n                                                </div>\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                )\r\n                            })\r\n                        }\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n            <div className={styles.flexend} >\r\n                {\r\n                    isVisible ?\r\n                        <form ref={cardRef} className={styles.container} >\r\n                            <input\r\n                                autoFocus\r\n                                className={styles['task-input']}\r\n                                type={'text'}\r\n                                value={cardName}\r\n                                onChange={e => setCardName(e.target.value)}\r\n                            />\r\n                            <ButtonClean type='submit' className={styles.addlist} onClick={addCard} title='+ Add Task' project={project} />\r\n                        </form> : <ButtonClean className={styles['add-task']} onClick={() => setIsVisible(!isVisible)} title='+ Add Task' />\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic.260e1407.svg\";","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport Title from '../title'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ButtonClean from '../button-clean'\r\nimport { SketchPicker } from 'react-color'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\nimport ButtonGrey from '../button-grey'\r\n\r\n\r\nexport default function EditList(props) {\r\n    const nameRef = useRef(null)\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n\r\n\r\n\r\n\r\n    const [name, setName] = useState(props.list.name)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const dropdownRef = useRef(null)\r\n    const [isColorActive, setIsColorActive] = useDetectOutsideClick(dropdownRef)\r\n    const [color, setColor] = useState(props.list.color || '#A6A48E')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const members = props.project.membersRoles\r\n    const userContext = useContext(UserContext)\r\n    const projectId = props.project._id\r\n    const listId = props.list._id\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id])\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/${projectId}/${listId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({ name, color })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', teamId)\r\n            props.hideForm()\r\n        }\r\n    }\r\n\r\n    const onColorChange = (color) => {\r\n        setColor(color.hex)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setNameHeight(nameRef.current.scrollHeight + 2)\r\n        }, 1);\r\n    }, [])\r\n\r\n    function onEscPressed(event, setElement, ref) {\r\n        if (event.keyCode === 27) {\r\n            setElement(currInput)\r\n            setTimeout(() => {\r\n                ref.current.blur()\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            <form className={styles.container} >\r\n                <Title className={styles.title} title=\"Edit List\" />\r\n\r\n                <div className={styles['input-container']}>\r\n                    <span className={styles.name}> Name</span>\r\n                    {/* <input\r\n                        className={styles.inputListName}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label=\"Name\"\r\n                        id=\"name\"\r\n                    /> */}\r\n                    <textarea\r\n                        ref={nameRef}\r\n                        className={`${styles['name-input']} ${styles.text}`}\r\n                        style={{ 'height': nameHeight }}\r\n                        value={name}\r\n                        onFocus={() => setCurrInput(name)}\r\n                        onKeyDown={e => onEscPressed(e, setName, nameRef)}\r\n                        onChange={e => {\r\n                            setName(e.target.value)\r\n                            setNameHeight(nameRef.current.scrollHeight + 2)\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            if (currInput === name) return\r\n                            handleSubmit(e)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles['change-color']}>\r\n                    <span className={styles['color-title']}>\r\n                        Color\r\n                    </span>\r\n                    <span className={styles['list-color']}>\r\n                        <ButtonClean\r\n                            className={styles['color-button']}\r\n                            style={{ background: `${color}` }}\r\n                            onClick={() => setIsColorActive(!isColorActive)}\r\n                        />\r\n                    </span>\r\n                </div>\r\n                {isColorActive && <div ref={dropdownRef} >\r\n                    <SketchPicker className={styles['color-pick']} color={color} onChangeComplete={onColorChange} />\r\n                </div>}\r\n                <div className={styles['edit-list-button']}>\r\n                    {isAdmin &&\r\n                        <ButtonGrey onClick={(e)=>handleSubmit(e)} title=\"Edit List\" />\r\n\r\n                    }\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useCallback, useContext, useEffect, useState, useRef } from 'react'\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport EditProject from '../../components/edit-project'\r\nimport List from '../../components/list'\r\nimport PageLayout from '../../components/page-layout'\r\nimport Transparent from '../../components/transparent'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport styles from './index.module.css'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport pic from '../../images/pic.svg'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Loader from 'react-loader-spinner'\r\nimport ButtonClean from '../../components/button-clean'\r\nimport EditCard from '../../components/edit-card'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport EditList from '../../components/edit-list'\r\nimport userObject from '../../utils/userObject'\r\nimport ButtonGrey from '../../components/button-grey'\r\n\r\n\r\nexport default function ProjectBoard() {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [members, setMembers] = useState([])\r\n    const [IsVisibleEdit, setIsVisibleEdit] = useState(false)\r\n    const [isVisibleEditList, setIsVisibleEditList] = useState(false)\r\n    const [listName, setListName] = useState('')\r\n    const listRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(listRef)\r\n    const socket = useSocket()\r\n    const projectContext = useContext(ProjectContext)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [currCard, setCurrCard] = useState('')\r\n    const [currList, setCurrList] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [dndActive, setDndActive] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const teamId = params.teamid\r\n    const token = getCookie(\"x-auth-token\")\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n\r\n        projectContext.setProject(project)\r\n\r\n        const memberArr = []\r\n        project.membersRoles.map(element => {\r\n            return memberArr.push({ admin: element.admin, username: element.memberId.username })\r\n\r\n        })\r\n        setMembers(memberArr)\r\n        projectContext.setLists(project.lists)\r\n    }, [projectContext])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const id = params.projectid\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, params.projectid])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n            return\r\n        }\r\n\r\n        if (dndActive) return\r\n\r\n        const memberArr = []\r\n        projectContext.project.membersRoles.map(element => {\r\n            return memberArr.push({ admin: element.admin, username: element.memberId.username, id: element.memberId._id })\r\n\r\n        })\r\n        setMembers(memberArr)\r\n        projectContext.setLists(projectContext.project.lists)\r\n        const member = memberArr.find(m => m.id === context.user.id)\r\n\r\n        if (member) {\r\n            setIsAdmin(member.admin)\r\n        }\r\n\r\n    }, [projectContext.project, params.projectid, projectContext, context.user.id, dndActive])\r\n\r\n\r\n    const updateUserRecentProjects = useCallback(async () => {\r\n        const userId = context.user.id\r\n        let updatedUser = { ...context.user }\r\n        let oldArr = [...updatedUser.recentProjects]\r\n\r\n        if (oldArr.length > 2 && oldArr[2]._id === params.projectid) return\r\n\r\n        const arr = oldArr.filter(p => p._id !== params.projectid)\r\n        arr.push({ _id: params.projectid, name: projectContext.project.name })\r\n\r\n        if (arr.length > 3) {\r\n            arr.shift()\r\n        }\r\n\r\n        // updatedUser.recentProjects = arr\r\n\r\n        const response = await fetch(`/api/user/recentProjects/${userId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }, body: JSON.stringify({\r\n                recentProjects: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            const user = userObject(data)\r\n            context.logIn(user)\r\n        }\r\n    }, [context, history, params.projectid, projectContext.project, token])\r\n\r\n    useEffect(() => {\r\n        if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n            return\r\n        } else {\r\n            updateUserRecentProjects()\r\n        }\r\n    }, [params.projectid, projectContext.project, updateUserRecentProjects])\r\n\r\n\r\n    if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n        return (\r\n            <PageLayout>\r\n                <Loader\r\n                    type=\"TailSpin\"\r\n                    color=\"#363338\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n\r\n    async function handleOnDragEnd(result) {\r\n        if (!result.destination) return\r\n\r\n        setDndActive(true)\r\n\r\n        if (result.type === 'droppableItem') {\r\n            let position = result.destination.index\r\n\r\n            const filteredList = projectContext.lists.filter(element => !(projectContext.hiddenLists.includes(element._id)))\r\n            const previousId = filteredList[position - 1]\r\n            position = projectContext.lists.indexOf(previousId) + 1\r\n\r\n            const newListsArr = [...projectContext.lists]\r\n            const [reorderedList] = newListsArr.splice(result.source.index, 1)\r\n            newListsArr.splice(result.destination.index, 0, reorderedList)\r\n            projectContext.setLists(newListsArr)\r\n\r\n            const response = await fetch(`/api/projects/lists/${projectContext.project._id}/${result.draggableId}/dnd-update`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    position,\r\n                    element: 'list',\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            } else {\r\n                const updatedProject = await response.json()\r\n                projectContext.setProject(updatedProject)\r\n            }\r\n        }\r\n\r\n        if (result.type === 'droppableSubItem') {\r\n            const position = result.destination.index\r\n            const oldPosition = result.source.index\r\n            const source = result.source.droppableId\r\n            const destination = result.destination.droppableId\r\n\r\n            const newListsArr = [...projectContext.lists]\r\n            let sourcePosition = ''\r\n            let destinationPosition = ''\r\n\r\n            for (let list of newListsArr) {\r\n                if (list._id === source) sourcePosition = newListsArr.indexOf(list)\r\n                if (list._id === destination) destinationPosition = newListsArr.indexOf(list)\r\n            }\r\n\r\n            const [task] = newListsArr[sourcePosition].cards.splice(oldPosition, 1)\r\n            newListsArr[destinationPosition].cards.splice(position, 0, task)\r\n            projectContext.setLists(newListsArr)\r\n\r\n            const response = await fetch(`/api/projects/lists/${projectContext.project._id}/${result.draggableId}/dnd-update`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    position,\r\n                    element: 'card',\r\n                    source,\r\n                    destination\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n        }\r\n\r\n        socket.emit('project-update', projectContext.project)\r\n        socket.emit('task-team-update', teamId)\r\n        setDndActive(false)\r\n    }\r\n\r\n    const addList = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (listName === \"\") {\r\n            return\r\n        }\r\n        const response = await fetch(`/api/projects/lists/${projectContext.project._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            setListName('')\r\n            socket.emit('project-update', projectContext.project)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div style={{ position: 'absolute' }}>\r\n                {isVisible &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                            <EditCard\r\n                                hideForm={() => setIsVisible(!isVisible)}\r\n                                initialCard={currCard}\r\n                                listId={currList}\r\n                                project={projectContext.project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                        </Transparent >\r\n                    </div >\r\n                }\r\n                {isVisibleEditList &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setIsVisibleEditList(!isVisibleEditList)} >\r\n                            <EditList hideForm={() => setIsVisibleEditList(!isVisibleEditList)} list={currList} project={projectContext.project} />\r\n                        </Transparent >\r\n                    </div >\r\n                }\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId='droppable' direction='horizontal' type='droppableItem'>\r\n                        {(provided) => (\r\n                            <div className={styles['container-droppable']} ref={provided.innerRef} >\r\n                                {projectContext.lists\r\n                                    .filter(element => !(projectContext.hiddenLists.includes(element._id)))\r\n                                    .map((element, index) => {\r\n                                        return (\r\n                                            <Draggable key={element._id} draggableId={element._id} index={index}>\r\n                                                {(provided) => (\r\n                                                    <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                        <List\r\n                                                            list={element}\r\n                                                            project={projectContext.project}\r\n                                                            isAdmin={isAdmin}\r\n                                                            showEditList={() => {\r\n                                                                setCurrList(element)\r\n                                                                setIsVisibleEditList(!isVisibleEditList)\r\n                                                            }}\r\n                                                            showCurrentCard={() => {\r\n                                                                setCurrList(element._id)\r\n                                                                setIsVisible(!isVisible)\r\n                                                            }}\r\n                                                            setCurrCard={setCurrCard}\r\n                                                        />\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {provided.placeholder}\r\n                                {isAdmin &&\r\n                                    <div className={styles.list} >\r\n                                        {isActive ?\r\n                                            <form ref={listRef} className={styles.container} >\r\n                                                <input\r\n                                                    autoFocus\r\n                                                    className={styles.input}\r\n                                                    type={'text'}\r\n                                                    value={listName}\r\n                                                    onChange={e => setListName(e.target.value)}\r\n                                                />\r\n                                                <ButtonClean type='submit' className={styles.addlist} onClick={addList} title='+ Add List' />\r\n                                            </form> : <ButtonClean className={styles.addlist} onClick={() => setIsActive(!isActive)} title='+ Add List' />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n                <ButtonGrey title={'View Project'} onClick={() => setIsVisibleEdit(!IsVisibleEdit)} />\r\n                {/* <button className={styles.navigateButtons} onClick={() => setIsVisibleEdit(!IsVisibleEdit)} >View Project</button> */}\r\n\r\n                {IsVisibleEdit &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setIsVisibleEdit(!IsVisibleEdit)} >\r\n                            <EditProject hideForm={() => setIsVisibleEdit(!IsVisibleEdit)} project={projectContext.project} members={members} />\r\n                        </Transparent >\r\n                    </div >\r\n                }\r\n\r\n                <img className={styles.pic} src={pic} alt=\"\" width=\"373\" height=\"312\" />\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}","import React, { useCallback, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketProvider';\r\n\r\nimport AttachmentsLink from '../attachmentsLink';\r\n\r\nexport default function TaskName({ card, listId, project }) {\r\n\r\n\tconst dropdownRef = useRef(null);\r\n\tconst [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n\tconst [cardName, setCardName] = useState(card.name)\r\n\tconst history = useHistory()\r\n\tconst socket = useSocket()\r\n\tconst params = useParams()\r\n\tconst teamId = params.teamid\r\n\r\n\tconst editCardName = useCallback(async (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst cardId = card._id\r\n\r\n\t\tif (cardName === \"\") {\r\n\t\t\tconsole.log('return');\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst token = getCookie(\"x-auth-token\")\r\n\t\tconst response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Authorization\": token\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: cardName\r\n\t\t\t})\r\n\t\t})\r\n\t\tif (!response.ok) {\r\n\t\t\thistory.push(\"/error\")\r\n\t\t\treturn\r\n\t\t} else {\r\n\t\t\tsetIsActive(!isActive)\r\n\t\t\tsocket.emit('project-update', project)\r\n\t\t\tsocket.emit('task-team-update', teamId)\r\n\t\t}\r\n\r\n\t}, [history, cardName, isActive, setIsActive, card._id, listId, project, socket, teamId])\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ isActive ?\r\n\t\t\t\t< div ref={dropdownRef} className={styles.nameContainer} onBlur={editCardName} >\r\n\t\t\t\t\t{/* <input className={styles.inputElementName} type={'text'} value={cardName} onChange={e => setCardName(e.target.value)} /> */}\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName={styles.inputElementName}\r\n\t\t\t\t\t\tvalue={cardName}\r\n\t\t\t\t\t\tonChange={e => setCardName(e.target.value)}\r\n\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<span className={styles['attachments-container']}>\r\n\t\t\t\t\t\t{(card.attachments && card.attachments.length > 0 && !isActive) &&\r\n\t\t\t\t\t\t\t<AttachmentsLink\r\n\t\t\t\t\t\t\tcard={card}\r\n\t\t\t\t\t\t\tproject={project}\r\n\t\t\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className={styles.tableText} onClick={() => setIsActive(!isActive)}>\r\n\t\t\t\t\t\t{cardName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n\r\n\r\n}\r\n\r\n","import React, { useCallback, useMemo, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketProvider';\r\n\r\nexport default function TaskProgress(props) {\r\n\r\n    const today = useMemo(() => new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())), [])\r\n    const card = props.card\r\n    const [taskHistory, setTaskHistory] = useState(card.history)\r\n    const value = props.value\r\n    let taskprogress = ''\r\n    let token = value.split('/')\r\n\r\n    if (token.length > 1) {\r\n        taskprogress = token[0]\r\n    }\r\n\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardProgress, setCardProgress] = useState(taskprogress)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n    const editCardProgress = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        // let data = props.value.split('/')\r\n        // let cardId = data[1]\r\n        // let listId = data[2]\r\n\r\n        const cardId = card._id\r\n        const listId = props.listId\r\n\r\n\r\n        if (!cardProgress) {\r\n            return\r\n        } \r\n        \r\n        const cardProgressNum = Number(cardProgress)\r\n        const newCardProgress = Math.max(Math.min(cardProgressNum, 100), 0)\r\n        if (isNaN(cardProgressNum) || newCardProgress === cardProgress) {\r\n            return\r\n        } \r\n\r\n        setCardProgress(newCardProgress)\r\n\r\n        const newTaskHistory = [...taskHistory,  { event: `Progress ${cardProgress}%`, date: today }]\r\n        setTaskHistory(newTaskHistory)\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress: cardProgress,\r\n                history: newTaskHistory\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        }\r\n\r\n        setIsActive(!isActive)\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('task-team-update', teamId)\r\n\r\n    }, [history, cardProgress, isActive, setIsActive, taskHistory, today, card._id, props.listId, props.project, socket, teamId])\r\n\r\n\r\n    function showTaskProgress(value) {\r\n        \r\n        if (value && value !== 'null') {\r\n            return (\r\n                <div style={{\r\n                    backgroundColor: getBackGroundColor(value),\r\n                    padding: '5px',\r\n                    border: 'solid black 1px',\r\n                    borderRadius: '5px',\r\n                    minHeight: '2rem', \r\n                    width: '100%', \r\n                    textAlign: 'center',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }} > {value} %</div>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\r\n                + Add\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    function getBackGroundColor(value) {\r\n        let currColor = ''\r\n        switch (true) {\r\n            case (value === 100 || value === '100'):\r\n                currColor = '#0E8D27';\r\n                break;\r\n            case (value < 20):\r\n                currColor = '#EF2D2D'\r\n                break;\r\n            case (value < 100):\r\n                currColor = '#5E9DDC'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return currColor\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n                isActive ?\r\n                    <div ref={dropdownRef} className={styles.taskProgress} onBlur={editCardProgress}>\r\n                        <input\r\n                            className={styles.taskProgressButtonInput}\r\n                            style={{ backgroundColor: getBackGroundColor(cardProgress) }}\r\n                            type={'number'}\r\n                            value={cardProgress}\r\n                            // placeholder={'%'}\r\n                            onChange={e => setCardProgress(e.target.value)}\r\n                            min=\"0\" max=\"100\"\r\n                            autoFocus\r\n                        />\r\n                    </div >\r\n                    :\r\n                    // <div>\r\n                    // { \r\n                    //     (taskprogress!== null)?\r\n\r\n                    <div className={styles.taskProgress} onClick={() => setIsActive(!isActive)}>\r\n                        {/* <button className={styles.taskProgressButton}  */}\r\n                        {/* > */}\r\n                        {showTaskProgress(taskprogress)}\r\n                        {/* </button> */}\r\n                    </div >\r\n                    // : <span>Add Progress</span>\r\n                    // }\r\n                    // </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pen from '../../images/pen.svg'\r\nimport DatePicker from \"react-datepicker\"\r\nimport Transparent from \"../transparent\"\r\nimport EditCard from '../edit-card'\r\n\r\n\r\nexport default function TaskDueDate(props) {\r\n\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardDueDate, setCardDueDate] = useState(props.cardDueDate)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n    const editCardDueDate = useCallback(async (date) => {\r\n\r\n        let cardId = props.cardId\r\n        let listId = props.listId\r\n\r\n        if (cardDueDate === \"\" && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                dueDate: date\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', props.teamId)\r\n        }\r\n\r\n    }, [history, cardDueDate, setIsActive, isActive, props.cardId, props.listId, props.project, socket, props.teamId])\r\n\r\n    const changeCardDueDate = (date) => {\r\n        setCardDueDate(date)\r\n        editCardDueDate(date)\r\n    } \r\n\r\n    const value = props.value\r\n\r\n    return (\r\n        <span className={styles.dueDateField}>\r\n            <DatePicker\r\n                selected={value ? cardDueDate : today}\r\n                customInput={\r\n                    value\r\n                    ?   <div className={styles.dueDateFieldInput}>\r\n                            <span>{value}</span>\r\n                        </div>\r\n                    :   <span>Select date</span>\r\n                }\r\n                onChange={changeCardDueDate}\r\n                label=\"Go to date\"\r\n                onBlur={value ? () => setIsActive(!isActive) : null}\r\n                popperPlacement='bottom-end'\r\n                closeOnScroll={e => e.target === document.getElementsByClassName('rt-tbody')[0]}\r\n            />\r\n\r\n            { isVisible ?\r\n                < span >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditCard\r\n                            hideForm={() => setIsVisible(!isVisible)}\r\n                            initialCard={props.card}\r\n                            listId={props.listId}\r\n                            project={props.project}\r\n                            teamId={teamId}\r\n                        />\r\n                    </Transparent >\r\n                </span >\r\n                :\r\n                <span>\r\n                    <img \r\n                        className={styles.pen} \r\n                        src={pen} \r\n                        alt=\"...\" \r\n                        width=\"13\" \r\n                        height=\"13\" \r\n                        onClick={() => setIsVisible(true)} \r\n                    />\r\n                </span>\r\n            }\r\n        </span>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ENTER_KEY_CODE = 13\r\nconst ESCAPE_KEY_CODE = 27\r\n\r\nconst AddProjectElement = ({ handleSubmit, handleInputRemove, elementName, setElementName, placeholder }) => {\r\n    const inputRef = useRef(null)\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n\r\n    const handleChange = (event) => {\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return\r\n        }\r\n\r\n        setElementName(event.target.value)\r\n        setNameHeight(inputRef.current.scrollHeight + 2)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return handleSubmit()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            value={elementName}\r\n            ref={inputRef}\r\n            placeholder={placeholder}\r\n            className={styles.inputElementName}\r\n            style={{ 'height': nameHeight, width: '100%' }}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={handleChange}\r\n            onBlur={handleSubmit}\r\n            autoFocus\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddProjectElement","import React, { useState } from 'react'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddProjectElement from './add-project-element'\r\n\r\nexport default function AddTask({ listId, project, handleInputRemove }) {\r\n    const [taskName, setTaskName] = useState('')\r\n    const socket = useSocket()\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async () => {\r\n        if (!taskName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        const token = getCookie('x-auth-token')\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({\r\n                name: taskName,\r\n                progress: ''\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n            \r\n        // const updatedCard = await response.json()\r\n        socket.emit('project-update', project)\r\n\r\n        handleInputRemove()\r\n    }\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={taskName}\r\n            setElementName={setTaskName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new task name:'\r\n        />\r\n    )\r\n}","import React, { useCallback, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport AddProjectElement from './add-project-element'\r\n\r\nexport default function AddList({ project, handleInputRemove }) {\r\n    const [listName, setListName] = useState('')\r\n    const socket = useSocket()\r\n    const history = useHistory()     \r\n\r\n\r\n    const handleSubmit = useCallback(async () => {\r\n        const projectId = project._id\r\n        if (!listName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        const token = getCookie('x-auth-token')\r\n        const response = await fetch(`/api/projects/lists/${projectId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        socket.emit('project-update', project)\r\n        handleInputRemove()\r\n            \r\n    }, [history, listName, project._id])\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={listName}\r\n            setElementName={setListName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new list name:'\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport { checkDateEquality, compareDates, getDateWithOffset, formatDate } from '../../utils/date'\r\n\r\nconst CELL_COLORS = {\r\n    CREATED: '#0E8D27',\r\n    DUE_DATE: '#EF2D2D',\r\n    DELAYED: '#EF2D2D',\r\n    FINISHED: '#0E8D27',\r\n    PROGRESS: '#5E9DDC',\r\n    PROGRESS_OLD: '#A2A7B0',\r\n}\r\n\r\nconst assembleColumnData = (startDate) => {\r\n    const currentDate = new Date()\r\n    let cardData = null\r\n\r\n    const getWeekdayCellHtml = (message, color, messageColor = 'black') => {\r\n        const progressStyle = { \r\n            background: color, \r\n            color: messageColor,\r\n            width: '100%',\r\n            padding: '5px', \r\n            // fontSize: '14px',\r\n            border: '1px solid #363338',\r\n            borderRadius: '5px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        }\r\n\r\n        return (\r\n            <div className={styles.daylyProgress}>\r\n                <div style={progressStyle}>\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getWeekdayCellData = (dataString, numDaysOffset) => {\r\n        if (!dataString) {\r\n            return ''\r\n        }\r\n\r\n        // if cell is first to be displayed for this card, parse the incoming data\r\n        // else, it should already have been parsed so we can use it directly\r\n        if (numDaysOffset === 0) {\r\n            cardData = JSON.parse(dataString)\r\n        }\r\n\r\n        const { date, history, progress } = cardData\r\n        const cellDate = getDateWithOffset(startDate, numDaysOffset)\r\n        \r\n        const eventInCell = history && history.events[formatDate(cellDate, '%d/%m/%y')]\r\n\r\n        const dueDate = date ? new Date(date) : null\r\n        const isAfterDueDate = dueDate && compareDates(cellDate, dueDate) > 0\r\n        const isBeforeToday = compareDates(cellDate, currentDate) < 0\r\n        if (eventInCell) {\r\n            const [eventType, eventValue] = eventInCell.event.split(' ')\r\n\r\n            if (eventType === 'Created') {\r\n                return getWeekdayCellHtml(eventType, CELL_COLORS.CREATED)\r\n            }\r\n\r\n            if (eventType === 'Progress' && eventValue && eventValue === '100%') {\r\n                return getWeekdayCellHtml('Finished', CELL_COLORS.FINISHED)\r\n            }\r\n\r\n            if (isBeforeToday) {\r\n                return getWeekdayCellHtml(eventInCell.event, CELL_COLORS.PROGRESS_OLD)\r\n            }\r\n\r\n            const cellBackgroundColor = isAfterDueDate ? CELL_COLORS.DELAYED : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(eventInCell.event, cellBackgroundColor)\r\n        }\r\n\r\n        // if we get to here, we know that there are no new events on the day of the cell\r\n        const isMonday = numDaysOffset === 0\r\n        const eventsInWeek = history && history.hasEventsInWeek[formatDate(cellDate, '%w/%y')]\r\n        if (isMonday && progress && progress === 100 && eventsInWeek) {\r\n            // progress for task is 100% and no new events happen during the week\r\n            return getWeekdayCellHtml('Finished', CELL_COLORS.FINISHED)\r\n        }\r\n\r\n        if (dueDate) {\r\n            if (checkDateEquality(cellDate, dueDate)) {\r\n                if (compareDates(currentDate, dueDate) > 0) {\r\n                    // cell date is the task due date and current date is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return getWeekdayCellHtml('Due Date', CELL_COLORS.DUE_DATE)\r\n            }\r\n\r\n            if (compareDates(cellDate, dueDate) > 0) {\r\n                // cell date is after due date\r\n                if (isMonday && compareDates(currentDate, cellDate) > 0) {\r\n                    // cell is first shown column (usually Monday) and today is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return ''\r\n            }\r\n\r\n            let { finishedDate, startDate: taskStartDate } = history\r\n            finishedDate = finishedDate && new Date(finishedDate)\r\n            taskStartDate = taskStartDate && new Date(taskStartDate)\r\n\r\n            if (finishedDate && compareDates(cellDate, finishedDate) > 0) {\r\n                // task has finished in the past and cell date is later than date of finish\r\n                return ''\r\n            }\r\n\r\n            if (isMonday && taskStartDate && compareDates(taskStartDate, startDate) > 0) {\r\n                // task has started, but first displayed date is earlier than task start date\r\n                return ''\r\n            }\r\n\r\n            \r\n            // task is neither Finished, nor Delayed, but has a Due Date\r\n            // therefore, it's In Progress\r\n            const cellText = isMonday ? 'In Progress' : ''\r\n            const cellColor = isBeforeToday ? CELL_COLORS.PROGRESS_OLD : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(cellText, cellColor)\r\n        }\r\n\r\n        return ''\r\n    }\r\n        \r\n    const getHeaderDateHtml = (numDaysOffset) => {\r\n        const headerDate = getDateWithOffset(startDate, numDaysOffset)\r\n        const color = checkDateEquality(currentDate, headerDate) ? \"#CFE2EC\" : ''\r\n\r\n        const displayedDate = formatDate(headerDate, '%d.%m')\r\n        const displayedDayOfWeek = formatDate(headerDate, '%A')\r\n\r\n        return (\r\n            <div style={{ backgroundColor: color, color: 'black' }}>\r\n                <div style={{ fontWeight: '600' }}>{displayedDayOfWeek}</div>\r\n                <div style={{ fontSize: '80%' }}>{displayedDate}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const wrapCellData = (cellData) => {\r\n        return (\r\n            <div style={{ \r\n                whiteSpace: 'normal', \r\n                overflowWrap: 'anywhere', \r\n                textAlign: 'left',\r\n                height: '100%'}}\r\n            >\r\n                {cellData}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        [\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Task</div>\r\n                },\r\n                accessor: \"task\",\r\n                minWidth: 350,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Progress</div>\r\n                },\r\n                accessor: \"progress\",\r\n                minWidth: 65,\r\n                maxWidth: 75,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {}  // needed to override default sorting\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Team</div>\r\n                },\r\n                accessor: \"assigned\",\r\n                minWidth: 75,\r\n                maxWidth: 80,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                getProps: (state, rowInfo, column) => ({ style: { overflow: 'visible' } }),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(0),\r\n                accessor: \"monday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 0),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(1),\r\n                accessor: \"tuesday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 1),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(2),\r\n                accessor: \"wednesday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 2),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(3),\r\n                accessor: \"thursday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 3),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(4),\r\n                accessor: \"friday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 4),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(5),\r\n                accessor: \"saturday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 5),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(6),\r\n                accessor: \"sunday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 6),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Due Date</div>\r\n                },\r\n                accessor: \"dueDate\",\r\n                minWidth: 100,\r\n                maxWidth: 130,\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {} // needed to override default sorting\r\n            }\r\n        ]\r\n    )\r\n}\r\n\r\n\r\nexport default assembleColumnData\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst FilterWrapper = ({ children, isVisible, legendContent }) => {\r\n    return (\r\n        <fieldset className={styles.container}>\r\n            <legend className={styles['legend-wrapper']}>\r\n                {isVisible && \r\n                    <blockquote className={styles.legend}>\r\n                        {legendContent}\r\n                    </blockquote>\r\n                }\r\n            </legend>\r\n            {children}\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default FilterWrapper","import React, { useContext, useMemo, useRef } from 'react'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonClean from '../button-clean'\r\nimport FilterWrapper from '../filter-wrapper'\r\nimport styles from './index.module.css'\r\n\r\nconst MembersFilter = ({ membersFilter, setMembersFilter, handleFilterClear, buttonStyle }) => {\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const { project } = useContext(ProjectContext)\r\n\r\n    const options = useMemo(() => {\r\n        return project.membersRoles.map(mr => ({\r\n            value: mr.memberId._id,\r\n            displayValue: mr.memberId.username\r\n        }))\r\n    }, [project.memberRoles])\r\n\r\n    const handleOptionClick = (optionValue, optionDisplay) => {\r\n        setMembersFilter(optionValue, optionDisplay)\r\n\r\n        setIsActive(false)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        handleFilterClear()\r\n        setIsActive(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks assigned to:'\r\n            isVisible={!!(membersFilter)}\r\n        >\r\n            <div className={styles.container}>\r\n                <div className={styles['btn-container']}>\r\n                    <ButtonClean\r\n                        className={isActive\r\n                            ? `${buttonStyle} ${membersFilter && styles['btn-partial']} ${styles['btn-clicked']}`\r\n                            : `${buttonStyle} ${membersFilter && styles['btn-partial']}`}\r\n                        onClick={() => setIsActive(!isActive)}\r\n                        title={(membersFilter && membersFilter.name) || 'Tasks Assigned To:'}\r\n                    />\r\n                    { membersFilter &&\r\n                        <ButtonClean\r\n                            className={`${buttonStyle} ${styles['btn-clear']}`}\r\n                            title='X'\r\n                            onClick={handleClear}\r\n                        />\r\n                    }\r\n                </div>\r\n                {isActive &&\r\n                    <div className={styles.options} ref={dropdownRef}>\r\n                        {/* <div\r\n                            key='clear options'\r\n                            className={`${styles.option} ${styles['option-blank']}`}\r\n                            onClick={handleOptionClear}\r\n                        >\r\n                            Leave blank\r\n                        </div> */}\r\n                        {options.map(option => {\r\n                            return (\r\n                                <div\r\n                                    key={option.value}\r\n                                    className={styles.option}\r\n                                    onClick={() => handleOptionClick(option.value, option.displayValue)}\r\n                                >\r\n                                    {option.displayValue}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </FilterWrapper>\r\n    )\r\n}\r\n\r\nexport default MembersFilter","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport DatePicker from 'react-datepicker'\r\nimport { formatDate } from '../../utils/date'\r\nimport FilterWrapper from '../filter-wrapper'\r\n\r\nconst DueDateFilter = ({ dueBefore, buttonStyle, onChange, handleFilterClear }) => {\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks due before:'\r\n            isVisible={!!(dueBefore)}\r\n        >\r\n            <DatePicker\r\n                selected={dueBefore}\r\n                customInput={\r\n                    <button className={dueBefore \r\n                            ? `${buttonStyle} ${styles['filter-used']}`\r\n                            : `${buttonStyle} ${styles['filter-blank']}`}\r\n                    >\r\n                        {dueBefore ? formatDate(dueBefore, '%d-%m-%Y') : 'Due Before:'}\r\n                    </button>\r\n                }\r\n                showWeekNumbers={true}\r\n                onChange={onChange}\r\n            />\r\n            { dueBefore &&\r\n                <button \r\n                    className={`${buttonStyle} ${styles['filter-clear']}`}\r\n                    onClick={handleFilterClear}\r\n                >\r\n                    X\r\n                </button>\r\n            }\r\n        </FilterWrapper>\r\n    )\r\n}\r\n\r\nexport default DueDateFilter","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ToggleSwitch = ({ isActive, toggleStatus, label, containerStyle }) => {\r\n    return (\r\n        <div className={`${styles.container} ${containerStyle}`}>\r\n            <label>{label}</label>\r\n            <span \r\n                className={`${styles['switch-container']} ${isActive && styles['container-active']}`}\r\n                onClick={toggleStatus}\r\n            >\r\n                <span className={styles['state-circle']}></span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleSwitch","import React, { useRef } from 'react'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonClean from '../button-clean'\r\nimport ToggleSwitch from '../toggle-switch'\r\nimport styles from './index.module.css'\r\n\r\nconst ProgressFilters = ({ buttonStyle, filters, toggleFilter }) => {\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n\r\n    return (\r\n        <div class={styles.container}>\r\n            <ButtonClean \r\n                title='Filter By Progress:' \r\n                className={buttonStyle}\r\n                onClick={() => setIsActive(!isActive)}\r\n            />\r\n            { isActive &&\r\n            <div className={styles.dropdown} ref={dropdownRef}>\r\n                <ToggleSwitch \r\n                    isActive={filters.notStarted} \r\n                    label='Not Started' \r\n                    toggleStatus={() => toggleFilter('notStarted')}\r\n                    containerStyle={`${styles['progress-switch']} ${styles['progress-switch-top']}`} \r\n                />\r\n                <ToggleSwitch \r\n                    isActive={filters.inProgress} \r\n                    label='In Progress' \r\n                    toggleStatus={() => toggleFilter('inProgress')}\r\n                    containerStyle={styles['progress-switch']} \r\n                />\r\n                <ToggleSwitch \r\n                    isActive={filters.done} \r\n                    label='Done' \r\n                    toggleStatus={() => toggleFilter('done')}\r\n                    containerStyle={`${styles['progress-switch']} ${styles['progress-switch-bottom']}`} \r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressFilters","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport MembersFilter from '../filter-members'\r\nimport DueDateFilter from '../filter-due-date'\r\nimport ProgressFilters from '../filter-progress'\r\n\r\nconst TaskFilters = ({ filter, setFilter }) => {\r\n    const toggleProgressFilter = (filterName) => {\r\n        const currentFilterValue = filter.progress[[filterName]]\r\n\r\n        setFilter({ ...filter, progress: { ...filter.progress, [filterName]: !currentFilterValue } })\r\n    }\r\n\r\n    return (\r\n        <div className={styles['filters-container']}>\r\n            <ProgressFilters \r\n                buttonStyle={styles.filter} \r\n                filters={filter.progress} \r\n                toggleFilter={toggleProgressFilter} \r\n            />\r\n            <MembersFilter\r\n                membersFilter={filter.member}\r\n                setMembersFilter={(id, name) => setFilter({ ...filter, member: { id, name } })}\r\n                handleFilterClear={() => setFilter({ ...filter, member: null })}\r\n                buttonStyle={styles.filter}\r\n            />\r\n            <DueDateFilter\r\n                dueBefore={filter.dueBefore}\r\n                buttonStyle={styles.filter}\r\n                onChange={date => setFilter({ ...filter, dueBefore: date })}\r\n                handleFilterClear={() => setFilter({ ...filter, dueBefore: null })}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskFilters","export default __webpack_public_path__ + \"static/media/previous-day.e04a7658.svg\";","export default __webpack_public_path__ + \"static/media/next-day.2584bb08.svg\";","import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport styles from './index.module.css'\r\nimport { getMonday } from '../../utils/date'\r\nimport previous from '../../images/project-list/previous-day.svg'\r\nimport next from '../../images/project-list/next-day.svg'\r\n\r\nconst TableDateNavigation = ({ startDate, changeStartDate, setStartDate }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <DatePicker\r\n                selected={startDate}\r\n                customInput={\r\n                    <button className={styles.navigateButtons}>\r\n                        Choose Week\r\n                    </button>\r\n                }\r\n                // className={styles.reactDatepicker}\r\n                showWeekNumbers\r\n                onChange={date => setStartDate(getMonday(date))}\r\n            />\r\n            <button className={styles.navigateButtons} onClick={() => changeStartDate(-7)}>\r\n                Previous week\r\n            </button>\r\n\r\n            <div className={styles.picContainer} onClick={() => changeStartDate(-1)}>\r\n                <img\r\n                    className={styles.buttonPreviousDay}\r\n                    src={previous} alt=\"...\"\r\n                />\r\n                <div className={styles.centeredText}>Previous day</div>\r\n            </div>\r\n\r\n            <div className={styles.picContainer} onClick={() => changeStartDate(1)}>\r\n                <img\r\n                    className={styles.buttonPreviousDay}\r\n                    src={next} alt=\"...\"\r\n                />\r\n                <div className={styles.centeredText}>Next day</div>\r\n            </div>\r\n\r\n            <button\r\n                className={styles.navigateButtons}\r\n                onClick={() => changeStartDate(7)}\r\n            >\r\n                Next week\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDateNavigation","import { compareDates, formatDate } from \"../../utils/date\"\r\n\r\nconst sortByTask = (cardOne, cardTwo) => cardOne.name.localeCompare(cardTwo.name)\r\n\r\nconst sortByProgress = (cardOne, cardTwo) => {\r\n    const firstValue = cardOne.progress || 0\r\n    const secondValue = cardTwo.progress || 0\r\n\r\n    if (firstValue > secondValue) {\r\n        return 1\r\n    } else if (firstValue < secondValue) {\r\n        return -1\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nconst sortByDueDate = (cardOne, cardTwo) => {\r\n    const parsedDateOne = cardOne.dueDate ? new Date(cardOne.dueDate) : new Date('1970-01-01')\r\n    const parsedDateTwo = cardTwo.dueDate ? new Date(cardTwo.dueDate) : new Date('1970-01-01')\r\n\r\n    return compareDates(parsedDateOne, parsedDateTwo)\r\n}\r\n\r\nconst getCardsSortMethod = (columnName, isDescending) => {\r\n    let sortingFunc = null\r\n    switch(columnName) {\r\n        case 'task':\r\n            sortingFunc = sortByTask\r\n            break\r\n        case 'progress':\r\n            sortingFunc = sortByProgress\r\n            break\r\n        case 'dueDate':\r\n            sortingFunc = sortByDueDate\r\n            break\r\n        default:\r\n            return null\r\n    }\r\n\r\n    return (firstValue, secondValue) => {\r\n        const sortingEvaluation = sortingFunc(firstValue, secondValue)\r\n        return isDescending ? -sortingEvaluation : sortingEvaluation\r\n    }\r\n}\r\n\r\nconst createTableEntry = (entryData) => {\r\n    return {\r\n        task: entryData.task || '',\r\n        progress: entryData.progress || '',\r\n        assigned: entryData.assigned || '',\r\n        monday: entryData.monday || '',\r\n        tuesday: entryData.tuesday || '',\r\n        wednesday: entryData.wednesday || '',\r\n        thursday: entryData.thursday || '',\r\n        friday: entryData.friday || '',\r\n        saturday: entryData.saturday || '',\r\n        sunday: entryData.sunday || '',\r\n        dueDate: entryData.dueDate || ''\r\n    }\r\n}\r\n\r\nconst parseCardHistory = (taskHistory) => {\r\n    if (!taskHistory) {\r\n        return null\r\n    }\r\n\r\n    const historyByDate = { events: {}, hasEventsInWeek: {} }\r\n    for (let element of taskHistory) {\r\n        const elementDate = new Date(element.date)\r\n\r\n        if (element.event === 'Created') {\r\n            historyByDate.startDate = elementDate\r\n        }\r\n\r\n        historyByDate.events[formatDate(elementDate, '%d/%m/%y')] = element\r\n        historyByDate.hasEventsInWeek[formatDate(elementDate, '%w/%y')] = true\r\n    }\r\n\r\n    const lastHistoryEvent = taskHistory[taskHistory.length - 1]\r\n    if (lastHistoryEvent && lastHistoryEvent.event === 'Progress 100%') {\r\n        historyByDate.finishedDate = new Date(lastHistoryEvent.date)\r\n    }\r\n    \r\n    return historyByDate\r\n\r\n    // const historyArr = []\r\n    // for (let histIndex = 0; histIndex < taskHistory.length; histIndex++) {\r\n    //     const currElement = taskHistory[histIndex]\r\n    //     const nextElement = taskHistory[histIndex + 1]\r\n        \r\n    //     const currEventType = currElement.event.split(' ')[0]\r\n        \r\n    //     let shouldIncludeEvent = true\r\n    //     if (nextElement) {\r\n    //         const nextEventType = nextElement.event.split(' ')[0]\r\n\r\n    //         if (nextEventType === currEventType && \r\n    //             currElement.date === nextElement.date) {\r\n    //             shouldIncludeEvent = false\r\n    //         }\r\n    //     }\r\n\r\n    //     if (shouldIncludeEvent) {\r\n    //         historyArr.push({\r\n    //             event: currElement.event,\r\n    //             date: currElement.date\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // return historyArr\r\n}\r\n\r\nconst applyCardFilters = (card, filters) => {\r\n    let isCardFilterPassed = false\r\n    if (filters.progress.notStarted && \r\n        (card.progress === 0 || !card.progress)) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    if (filters.progress.inProgress && card.progress > 0 && card.progress < 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n    \r\n    if (filters.progress.done && card.progress === 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    const isUserFilterPassed = filters.member \r\n                    ? card.members.some(m => m._id === filters.member.id) \r\n                    : true\r\n\r\n    const isDueDateFilterPassed = filters.dueBefore\r\n                    ? card.dueDate && compareDates(new Date(card.dueDate), filters.dueBefore) <= 0\r\n                    : true\r\n\r\n    return isCardFilterPassed && isUserFilterPassed && isDueDateFilterPassed\r\n}\r\n\r\nexport {\r\n    createTableEntry,\r\n    parseCardHistory,\r\n    applyCardFilters,\r\n    getCardsSortMethod\r\n}","import React, { useCallback, useEffect, useState, useContext } from \"react\"\r\nimport styles from './index.module.css'\r\nimport ReactTable from \"react-table\"\r\nimport \"react-table/react-table.css\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport TaskName from '../calendar-data/task-name'\r\nimport TaskProgress from \"../calendar-data/task-progress\"\r\nimport TaskDueDate from \"../calendar-data/task-dueDate\"\r\nimport AddTask from \"../calendar-data/add-task\"\r\nimport AddList from \"../calendar-data/add-list\"\r\nimport ProjectContext from \"../../contexts/ProjectContext\"\r\nimport assembleColumnData from \"../calendar-data/column-data\"\r\nimport Transparent from \"../transparent\"\r\nimport EditList from \"../edit-list\"\r\nimport UserContext from '../../contexts/UserContext'\r\nimport TaskFilters from '../calendar-data/task-filters'\r\nimport MembersList from '../members-list'\r\nimport TableDateNavigation from '../table-date-navigation'\r\nimport ButtonClean from '../button-clean'\r\nimport { formatDate, getDateWithOffset, getMonday } from '../../utils/date'\r\nimport { createTableEntry, parseCardHistory, applyCardFilters, getCardsSortMethod } from './utils'\r\n\r\nconst TableDndApp = ({ project }) => {\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const params = useParams()\r\n    const [startDate, setStartDate] = useState(getMonday())\r\n    const [tableData, setTableData] = useState([])\r\n    const [currList, setCurrList] = useState('')\r\n    const [newEntries, setNewEntries] = useState(null)\r\n    const [sortCriteria, setSortCriteria] = useState({ columnName: null, isDescending: false })\r\n    const [filter, setFilter] = useState({\r\n        progress: { notStarted: true, inProgress: true, done: true },\r\n        member: null,\r\n        dueBefore: null,\r\n        isUsed: false\r\n    })\r\n\r\n    const onListClick = useCallback((list) => {\r\n        const member = projectContext.project.membersRoles.find(m => \r\n                            m.memberId._id === userContext.user.id)                    \r\n\r\n        if (member && member.admin) {\r\n            setCurrList(list)\r\n        }\r\n\r\n        projectContext.setLists(projectContext.project.lists)\r\n    }, [projectContext, userContext.user.id])\r\n\r\n    const updateTableData = useCallback(() => {\r\n        const data = []\r\n        const lists = project.lists\r\n        projectContext.setLists(lists)\r\n        const cardsSortMethod = getCardsSortMethod(sortCriteria.columnName, sortCriteria.isDescending)\r\n\r\n        lists.forEach((list, histIndex) => {\r\n            if (projectContext.hiddenLists.includes(list._id)) {\r\n                return\r\n            }\r\n\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <div \r\n                        key={histIndex} \r\n                        className={styles.listNameContainer} \r\n                        style={{ background: list.color || '#A6A48E' }}\r\n                        onClick={() => onListClick(list)}\r\n                    >\r\n                        <span className={styles.listNameText} >\r\n                            {list.name}\r\n                        </span>\r\n                    </div>\r\n                ),\r\n                dueDate: (\r\n                    <div onClick={() => setNewEntries({ newTask: list._id })} className={styles.addTask}>\r\n                        {/* <AddTask listId={list._id} project={project} /> */}\r\n                        + Add Task\r\n                    </div>\r\n                )\r\n            }))\r\n\r\n            let listCards = list.cards.filter(card => applyCardFilters(card, filter))\r\n            if (sortCriteria.columnName) {\r\n                listCards = listCards.sort(cardsSortMethod)\r\n            }\r\n\r\n            listCards.forEach(card => {\r\n                const cardDueDate = card.dueDate ? new Date(card.dueDate) : ''\r\n                // const historyArr2 = parseCardHistory(card.history)\r\n                const historyByDate = parseCardHistory(card.history)\r\n\r\n                const cellData = {\r\n                    date: cardDueDate,\r\n                    // history: historyArr2,\r\n                    history: historyByDate,\r\n                    progress: card.progress\r\n                }\r\n\r\n                const weekdayData = JSON.stringify(cellData)\r\n\r\n                data.push(createTableEntry({\r\n                    task:\r\n                        (\r\n                            <TaskName\r\n                                // value={card.name + '/' + card._id + '/' + list._id}\r\n                                card={card} listId={list._id}\r\n                                project={project} />\r\n                        ),\r\n                    progress:\r\n                        (\r\n                            <TaskProgress\r\n                                value={card.progress + '/' + card._id + '/' + list._id}\r\n                                listId={list._id}\r\n                                project={project} card={card} />\r\n                        ),\r\n                    assigned:\r\n                        (\r\n                            <MembersList\r\n                                members={card.members}\r\n                                maxLength={2}\r\n                            />\r\n                        ),\r\n                    monday: weekdayData,\r\n                    tuesday: weekdayData,\r\n                    wednesday: weekdayData,\r\n                    thursday: weekdayData,\r\n                    friday: weekdayData,\r\n                    saturday: weekdayData,\r\n                    sunday: weekdayData,\r\n                    dueDate: (\r\n                        <TaskDueDate\r\n                            value={cardDueDate ? formatDate(cardDueDate, '%d-%m-%Y') : ''}\r\n                            cardDueDate={cardDueDate}\r\n                            cardId={card._id}\r\n                            listId={list._id}\r\n                            project={project}\r\n                            card={card}\r\n                            teamId={params.teamid}\r\n                        />\r\n                    )\r\n                }))\r\n            })\r\n\r\n            if (newEntries && newEntries.newTask && newEntries.newTask === list._id) {\r\n                data.push(createTableEntry({\r\n                    task: (\r\n                        <AddTask\r\n                            listId={list._id}\r\n                            project={project}\r\n                            handleInputRemove={() => setNewEntries(null)}\r\n                        />\r\n                    )\r\n                }))\r\n            }\r\n        })\r\n\r\n        if (newEntries && newEntries.newList) {\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <AddList project={project} handleInputRemove={() => setNewEntries(null)} />\r\n                )\r\n            }))\r\n        }\r\n\r\n        /* \r\n        Rows need to be reversed if descending sort as by default ReactTable simply reverses \r\n        the data if descending sort is selected, expecting the data to already be sorted in \r\n        ascending order. However, this puts the list names below their respective tasks, \r\n        so we need to do this terrible hack of pre-reversing the data in that case.\r\n        Possible solution to avoid this \"hack\" is to switch to subcomponents in ReactTable\r\n        and make each list a subtable. Then the sort should act per-subcomponent \r\n        */\r\n        setTableData(sortCriteria.isDescending ? data.reverse() : data)\r\n    }, [filter, onListClick, params.teamid, projectContext, project, newEntries, sortCriteria.columnName, sortCriteria.isDescending])\r\n\r\n    useEffect(() => {\r\n        updateTableData()\r\n    }, [filter, project, projectContext.hiddenLists, sortCriteria, updateTableData])\r\n\r\n    const changeStartDate = (dayDiff) => {\r\n        const newStartDate = getDateWithOffset(startDate, dayDiff)\r\n        setStartDate(newStartDate)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageContainer}>\r\n            { currList &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setCurrList('')} >\r\n                            <EditList \r\n                                hideForm={() => setCurrList('')} \r\n                                list={currList}\r\n                                 project={project} \r\n                            />\r\n                        </Transparent >\r\n                    </div >\r\n            }\r\n            <div className={styles.buttoDiv}>\r\n                <TaskFilters filter={filter} setFilter={setFilter} />\r\n                <TableDateNavigation \r\n                    startDate={startDate}\r\n                    setStartDate={setStartDate}\r\n                    changeStartDate={changeStartDate}\r\n                />\r\n                {/* <AddList project={project} /> */}\r\n                <ButtonClean   \r\n                    className={styles.addListButton} \r\n                    onClick={() => setNewEntries({ newList: true })} \r\n                    title='+ Add List'\r\n                />\r\n            </div>\r\n            <div>\r\n                {/* <DragDropContext onDragEnd={handleDragEnd} > */}\r\n                <ReactTable\r\n                    // TrComponent={DragTrComponent}\r\n                    // TbodyComponent={DropTbodyComponent}\r\n                    // getTrProps={getTrProps}\r\n                    data={tableData}\r\n                    columns={\r\n                        assembleColumnData(startDate)\r\n                    }\r\n                    defaultPageSize={10}\r\n                    pageSize={tableData.length}\r\n                    showPagination={false}\r\n                    background={\r\n                        'white'\r\n                    }\r\n                    className={`${styles.reactTable} -highlight`}\r\n                    getTbodyProps={() => ({ className: styles.reactTableBody })}\r\n                    getTrGroupProps={() => ({ className: styles.reactTableTrGroup })}\r\n                    onSortedChange={(sortInfo) => {\r\n                        const { id: columnName, desc: isDescending } = sortInfo[0]\r\n                        setSortCriteria({ columnName, isDescending })\r\n                    }}\r\n                />\r\n\r\n                {/* </DragDropContext> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDndApp\r\n\r\n\r\n","import React, { useCallback, useEffect, useContext } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport PageLayout from '../../components/page-layout'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport TableDndApp from '../../components/calendar-table'\r\nimport Loader from 'react-loader-spinner'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\n\r\n\r\nexport default function ProjectList() {\r\n    const params = useParams()\r\n\r\n    const socket = useSocket()\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n        projectContext.setProject(project)\r\n    }, [projectContext])\r\n\r\n    useEffect(() => {\r\n        const id = params.projectid\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, params.projectid])\r\n\r\n    if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n        return (\r\n            <PageLayout>\r\n                <Loader\r\n                    type=\"TailSpin\"\r\n                    color=\"#363338\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PageLayout contentStyle={{ margin: '5.6rem 0.2rem 0 3.5rem', padding: 0 }}>\r\n            <div className={styles.calendarPageContainer}>\r\n                <div>\r\n                    <div className={styles['calendar-container']}>\r\n                        <TableDndApp project={projectContext.project} />\r\n                        {/* <TableDndApp2 filter={filter} /> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PageLayout >\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport ProjectContext from './ProjectContext'\r\n\r\nfunction ProjectProvider({ children }) {\r\n  const [lists, setLists] = useState([])\r\n  const [hiddenLists, setHiddenLists] = useState([])\r\n  const [project, setProject] = useState(null)\r\n  const [projectName, setProjectName] = useState('Select')\r\n  \r\n  return (\r\n    <ProjectContext.Provider value={ { lists, setLists, hiddenLists, setHiddenLists, project, setProject, projectName, setProjectName } }>\r\n      {children}\r\n    </ProjectContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ProjectProvider\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport getCookie from '../utils/cookie'\r\nimport userObject from '../utils/userObject'\r\nimport { useSocket } from './SocketProvider'\r\nimport TeamContext from './TeamContext'\r\nimport UserContext from './UserContext'\r\n\r\nfunction TeamProvider({ children }) {\r\n  const [teams, setTeams] = useState([])\r\n  const [selectedTeam, setSelectedTeam] = useState('Select')\r\n  const [currentProjects, setCurrentProjects] = useState([])\r\n  const userContext = useContext(UserContext)\r\n  const socket = useSocket()\r\n\r\n  function getCurrentProjects(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setCurrentProjects(current.projects)\r\n    }\r\n  }\r\n\r\n\r\n  function updateSelectedTeam(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setSelectedTeam(current.name)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTeams(userContext.user.teams)\r\n  }, [userContext.user.teams])\r\n\r\n  const teamUpdate = useCallback(async () => {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const promise = await fetch(\"/api/teams\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token\r\n      }\r\n    })\r\n\r\n    const response = await promise.json()\r\n\r\n    setTeams(response.teams)\r\n\r\n    const user =  userObject(response)\r\n    userContext.logIn(user)\r\n\r\n  }, [userContext])\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return\r\n    socket.on('team-updated', teamUpdate)\r\n    return () => socket.off('team-updated')\r\n  }, [socket, teamUpdate])\r\n\r\n  return (\r\n    <TeamContext.Provider value={{ teams, setTeams, selectedTeam, setSelectedTeam, currentProjects, setCurrentProjects, getCurrentProjects, updateSelectedTeam }}>\r\n      {children}\r\n    </TeamContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TeamProvider\r\n","import React, { useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport ButtonGrey from '../button-grey'\r\nimport EditProject from '../edit-project'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Project(props) {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const params = useParams()\r\n\r\n    return (\r\n        <div>\r\n            {isVisible ?\r\n                < div >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditProject hideForm={() => setIsVisible(!isVisible)} project={props.project} />\r\n                    </Transparent >\r\n                </div > : null\r\n            }\r\n            <div className={styles.container}>\r\n                <div className={styles.leftSide}>\r\n                    <Link to={`/project-board/${params.teamid}/${props.project._id}`} className={styles.key}>Name: <span className={styles.value}>{props.project.name}</span></Link>\r\n\r\n                    <div className={styles.key}>\r\n                        Creator: <span className={styles.value}>{props.project.author.username}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div className={styles.info} >\r\n                <ButtonGrey className={styles['info-btn']} title={'Info'} onClick={() => setIsVisible(!isVisible)}/>\r\n                \r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic1.5bdefb31.svg\";","import React, { useState, useContext, useEffect } from \"react\"\r\nimport styles from './index.module.css'\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Project from '../../components/project'\r\nimport Transparent from \"../../components/transparent\"\r\nimport CreateProject from '../../components/create-project'\r\nimport { useParams } from \"react-router-dom\"\r\nimport EditTeam from \"../../components/edit-team\"\r\nimport TeamMembers from \"../../components/team-members\"\r\nimport pic1 from '../../images/team-page/pic1.svg'\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport ButtonGrey from \"../../components/button-grey\"\r\n\r\nconst TeamPage = () => {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [projects, setProjects] = useState([])\r\n    const [members, setMembers] = useState([])\r\n    const [invited, setInvited] = useState([])\r\n    const params = useParams()\r\n    const userContext = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        userContext.user.teams.forEach(t => {\r\n            if (t._id === params.teamid) {\r\n                setCurrTeam(t)\r\n                setProjects(t.projects)\r\n                setMembers(t.members)\r\n                setInvited(t.requests)\r\n            }\r\n        })\r\n\r\n    }, [userContext, params])\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div className={styles.container}>\r\n                {\r\n                    isVisible &&\r\n                    <Transparent hideForm={() => setIsVisible(false)}>\r\n                        <CreateProject />\r\n                    </Transparent>\r\n                }\r\n                {\r\n                    showForm &&\r\n                    <Transparent hideForm={() => setShowForm(false)}>\r\n                        <EditTeam currTeam={currTeam} hideForm={() => { setShowForm(false) }} />\r\n                    </Transparent>\r\n                }\r\n                <div className={styles.pic1}>\r\n                    <img className={styles.picture} src={pic1} alt=\"\" />\r\n                </div>\r\n\r\n\r\n                <div className={styles['left-side']}>\r\n                    <div>\r\n                        {projects.map((project, index) => {\r\n                            return (\r\n                                <Project key={project._id} index={index} project={project} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles['right-side-team']}>\r\n                        <TeamMembers\r\n                            members={members} invited={invited}\r\n                        />\r\n                        <ButtonGrey className={styles['new-project-button']} title={'View Team'} onClick={() => setShowForm(true)} />\r\n                        <ButtonGrey title={'New Project'} onClick={() => setIsVisible(true)} />\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default TeamPage;","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport Button from \"../../components/button\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport logo from '../../images/logo.svg'\r\n\r\n\r\nconst ConfirmationPage = () => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [loading, setLoading] = useState(true)\r\n    const [success, setSuccess] = useState(false)\r\n    const userContext = useContext(UserContext)\r\n    const firstRegistration = userContext.user.newPasswordConfirmed\r\n\r\n\r\n\r\n    const confirmToken = useCallback(async () => {\r\n        const token = params.token\r\n        if (params.token === 'not-confirmed') {\r\n            return\r\n        }\r\n\r\n        if (userContext.user.confirmed && userContext.user.newPasswordConfirmed) {\r\n            return\r\n        }\r\n\r\n        await authenticate('/api/user/confirmation', 'POST', {\r\n            token\r\n        }, (user) => {\r\n            userContext.logIn(user)\r\n            setLoading(false)\r\n            setSuccess(true)\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n\r\n    }, [params.token, userContext])\r\n\r\n    useEffect(() => {\r\n        confirmToken()\r\n    }, [confirmToken])\r\n\r\n\r\n    if (params.token === 'not-confirmed') {\r\n        return (\r\n            <div>\r\n                {\r\n                    firstRegistration ?\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}> Confirm your email address</div >\r\n                            <div className={styles.text}>Please check your email to confirm your account</div>\r\n                            <div className={styles.text}>Once confirmed, this email address will be uniquely associated with your Smart Manager  account.</div>\r\n                            \r\n                        </div>\r\n                        :\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}> Confirm your new password</div >\r\n                            <div className={styles.text}>Please check your email to confirm your new password</div>\r\n                            <div className={styles.text}>Once confirmed, your new password will be active for your Smart Manager  account.</div>\r\n                            \r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && <div>Validating your email.</div>}\r\n            {!loading && success && <div>\r\n                \r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}> Thank you</div >\r\n                            <div className={styles.text}>You can continue to Smart Manager now</div>\r\n                            <Button title='Proceed' className={styles['proceed-button']} onClick={() => history.push('/')} />\r\n                            <div className={styles.cheers}> Cheers,</div >\r\n                            <div className={styles.team}>The Smart Manager Team</div>\r\n                        </div>\r\n                       \r\n\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage;","import React, { useContext } from \"react\"\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\"\r\n\r\nimport Home from \"./pages/home\"\r\nimport WelcomePage from \"./pages/welcome\"\r\nimport ProfilePage from \"./pages/profile\"\r\nimport InboxPage from \"./pages/inbox\"\r\nimport MyTasksPage from \"./pages/my-tasks\"\r\nimport ErrorPage from \"./pages/error\"\r\nimport UserContext from \"./contexts/UserContext\"\r\nimport ProjectBoard from \"./pages/project-board\"\r\nimport ProjectList from \"./pages/project-list\"\r\nimport { SocketProvider } from \"./contexts/SocketProvider\"\r\nimport ProjectProvider from \"./contexts/ProjectProvider\"\r\nimport TeamProvider from \"./contexts/TeamProvider\"\r\nimport TeamPage from \"./pages/team\"\r\nimport ConfirmationPage from \"./pages/confirmation\"\r\nimport {CloudinaryContext} from 'cloudinary-react'\r\n\r\nconst Navigation = () => {\r\n\r\n    const context = useContext(UserContext)\r\n    const loggedIn = context.user.loggedIn\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <SocketProvider user={context.user}>\r\n                <ProjectProvider>\r\n                    <TeamProvider>\r\n                        <CloudinaryContext cloudName={process.env.REACT_APP_CLOUD_NAME}>\r\n                            <Switch>\r\n                                <Route path=\"/confirmation/:token\"><ConfirmationPage /></Route>\r\n                                {((loggedIn && !context.user.confirmed)\r\n                                    || (loggedIn && !context.user.newPasswordConfirmed)\r\n                                ) && <Redirect to=\"/confirmation/not-confirmed\" />}\r\n                                <Route exact path=\"/\" >\r\n                                    {loggedIn ? (<Home />) : (<WelcomePage />)}\r\n                                </Route>\r\n                                <Route path=\"/profile/:userid\">\r\n                                    {loggedIn ? (<ProfilePage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/inbox/:userid\">\r\n                                    {loggedIn ? (<InboxPage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/my-tasks/:userid\">\r\n                                    {loggedIn ? (<MyTasksPage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/project-board/:teamid/:projectid\">\r\n                                    {loggedIn ? (<ProjectBoard />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/project-list/:teamid/:projectid\">\r\n                                    {loggedIn ? (<ProjectList />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/team/:teamid\">\r\n                                    {loggedIn ? (<TeamPage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route component={ErrorPage} />\r\n                            </Switch>\r\n                        </CloudinaryContext>\r\n                    </TeamProvider>\r\n                </ProjectProvider>\r\n            </SocketProvider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css';\r\nimport Navigation from \"./navigation\"\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App>\r\n      <Navigation />\r\n    </App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"calendar-table_pageContainer__2rJk8\",\"columns\":\"calendar-table_columns__2r7c1\",\"task\":\"calendar-table_task__1tz91\",\"buttoDiv\":\"calendar-table_buttoDiv__AB2Qr\",\"addTaskField\":\"calendar-table_addTaskField__3Yb0t\",\"input\":\"calendar-table_input__214q3\",\"addlist\":\"calendar-table_addlist__3I9s5\",\"addTask\":\"calendar-table_addTask__T6HLg\",\"daylyProgress\":\"calendar-table_daylyProgress__3j-CE\",\"header\":\"calendar-table_header__1AROC\",\"listNameContainer\":\"calendar-table_listNameContainer__1-WSQ\",\"listNameColor\":\"calendar-table_listNameColor__2hEFD\",\"listNameText\":\"calendar-table_listNameText__YPqg0\",\"reactTable\":\"calendar-table_reactTable__3vx2L\",\"reactTableBody\":\"calendar-table_reactTableBody__5ycqq\",\"reactTableTrGroup\":\"calendar-table_reactTableTrGroup__196RR\",\"addListButton\":\"calendar-table_addListButton__2wO7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent-confirm\":\"confirmation-dialog_transparent-confirm__OWWYi\",\"container\":\"confirmation-dialog_container__1zecx\",\"content\":\"confirmation-dialog_content__2cu-I\",\"logo\":\"confirmation-dialog_logo__28wb0\",\"title\":\"confirmation-dialog_title__ePYJq\",\"buttons\":\"confirmation-dialog_buttons__H0JMo\",\"button\":\"confirmation-dialog_button__3-63i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"filter-members_container__XNrP9\",\"filter\":\"filter-members_filter__2z-EO\",\"options\":\"filter-members_options__35nPG\",\"option\":\"filter-members_option___b8vh\",\"option-blank\":\"filter-members_option-blank__3ZSz_\",\"btn-clicked\":\"filter-members_btn-clicked__1R62N\",\"btn-partial\":\"filter-members_btn-partial__18SZI\",\"btn-clear\":\"filter-members_btn-clear__1Z90F\",\"btn-container\":\"filter-members_btn-container__1X7Mx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"project_container__2Nl29\",\"key\":\"project_key__2DKXD\",\"value\":\"project_value__1hM7g\",\"info\":\"project_info__16VKJ\",\"info-btn\":\"project_info-btn__27yl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"inbox_message__2rJZ5\",\"bold\":\"inbox_bold__dWoq7\",\"container\":\"inbox_container__2TzHF\",\"button\":\"inbox_button__1lhQJ\",\"inline\":\"inbox_inline__2bJwy\",\"margin\":\"inbox_margin__28-x8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pic\":\"project-board_pic__3YRcb\",\"container-droppable\":\"project-board_container-droppable__20aMa\",\"list\":\"project-board_list__jeXIy\",\"addlist\":\"project-board_addlist__-i_Vu\",\"input\":\"project-board_input__ljKcM\",\"container\":\"project-board_container__1yKm3\",\"navigateButtons\":\"project-board_navigateButtons__2-7tX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"filter-progress_container__2p9DD\",\"dropdown\":\"filter-progress_dropdown__1nz79\",\"progress-switch\":\"filter-progress_progress-switch__3yAu6\",\"progress-switch-top\":\"filter-progress_progress-switch-top__1jez0\",\"progress-switch-bottom\":\"filter-progress_progress-switch-bottom__3Lb7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"right-side\":\"team_right-side__ZnE1z\",\"right-side-team\":\"team_right-side-team__3Zfil\",\"container\":\"team_container__6u9Hq\",\"pic1\":\"team_pic1__2NH3f\",\"left-side\":\"team_left-side__3BmL8\",\"new-project-button\":\"team_new-project-button__1xvQt\",\"picture\":\"team_picture__3lgLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members\":\"members-list_members__3UTNX\",\"avatar\":\"members-list_avatar__ZxnGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"attachmentList_container__3I7fF\",\"attachment\":\"attachmentList_attachment__QQusp\",\"title\":\"attachmentList_title__3E_EC\",\"name\":\"attachmentList_name__3FRuS\",\"button\":\"attachmentList_button__1j5ui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__35DiC\",\"container\":\"card_container__11kTq\",\"card-name\":\"card_card-name__2TOpL\",\"button\":\"card_button__Is0Nh\",\"attachments\":\"card_attachments__3gUvc\",\"progress\":\"card_progress__S2h6J\"};"],"sourceRoot":""}