{"version":3,"sources":["components/List/index.module.css","components/CalendarData/TableDateNavigation/index.module.css","pages/Welcome/index.module.css","pages/ProjectBoard/index.module.css","components/ListDropdown/index.module.css","components/AddProjectBoardTask/index.module.css","components/AddProjectBoardList/index.module.css","components/ToggleSwitch/index.module.css","components/HeaderDropdowns/index.module.css","components/CalendarData/index.module.css","pages/Profile/index.module.css","components/ButtonHideList/index.module.css","components/PageLayout/index.module.css","components/Attachment/index.module.css","pages/Error/index.module.css","pages/ProjectList/index.module.css","components/FilterWrapper/index.module.css","pages/MyTasks/index.module.css","components/EditCardOptions/index.module.css","components/EditTeam/index.module.css","components/SignupForm/index.module.css","components/ListColor/index.module.css","components/SearchResults/index.module.css","components/MyTeamsMenu/index.module.css","components/TeamMembers/index.module.css","components/ProgressBar/index.module.css","components/AddProjectMember/index.module.css","components/AttachmentsLink/index.module.css","components/CalendarData/FilterDueDate/index.module.css","pages/GetStarted/index.module.css","components/CreateTeam/index.module.css","components/FormForgotPassword/index.module.css","components/LoginForm/index.module.css","components/Link/index.module.css","components/ButtonClean/index.module.css","components/Transparent/index.module.css","components/ButtonGrey/index.module.css","components/CreateProject/index.module.css","components/AvatarUser/index.module.css","components/LinkTitle/index.module.css","components/ButtonCleanTitle/index.module.css","components/Title/index.module.css","components/ButtonGreyTitle/index.module.css","components/Alert/index.module.css","pages/Inbox/index.module.css","pages/Confirmation/index.module.css","components/Inputs/ProjectBoardInput/index.module.css","components/Button/index.module.css","components/Aside/index.module.css","components/FormAddPassword/index.module.css","components/EditCard/index.module.css","pages/Home/index.module.css","components/EditProject/index.module.css","components/MyTasksTask/index.module.css","pages/Team/index.module.css","components/EditList/index.module.css","utils/cookie.js","services/useUserServices.js","contexts/UserContext.js","contexts/UserProvider.js","App.js","components/Link/index.js","images/logo.svg","images/aside/menu.svg","images/aside/home.svg","images/aside/tasks.svg","images/aside/inbox.svg","images/aside/inbox-bell.svg","images/aside/project-info.svg","contexts/ProjectContext.js","components/ListColor/index.js","components/ButtonHideList/index.js","components/ButtonClean/index.js","contexts/SocketProvider.js","components/Transparent/index.js","contexts/TeamContext.js","components/ButtonGrey/index.js","components/ConfirmationDialog/index.js","components/AvatarUser/index.js","services/useProjectsServices.js","services/useTeamServices.js","components/AddProjectMember/index.js","utils/isUserAdmin.js","components/EditProject/index.js","components/Aside/index.js","utils/useDetectOutsideClick.js","components/SearchResults/index.js","images/search.svg","components/SearchField/index.js","components/LinkTitle/index.js","components/CreateTeam/index.js","components/ButtonCleanTitle/index.js","components/HeaderDropdowns/TeamDropdown.js","components/CreateProject/index.js","components/HeaderDropdowns/ProjectDropdown.js","components/HeaderDropdowns/ViewDropdown.js","components/HeaderDropdowns/ProfileDropdown.js","components/Header/index.js","components/PageLayout/index.js","components/Title/index.js","components/ButtonGreyTitle/index.js","images/home-page-pic.svg","components/MyTeamsMenu/index.js","pages/Home/index.js","components/Alert/index.js","components/FormAddPassword/index.js","images/welcome-page/google.svg","components/LoginForm/index.js","components/SignupForm/index.js","components/FormForgotPassword/index.js","images/welcome-page/welcome-page-1.svg","images/welcome-page/welcome-page-2.svg","images/welcome-page/welcome-page-3.svg","images/welcome-page/welcome-page-4.svg","images/welcome-page/welcome-page-5.svg","images/welcome-page/welcome-page-6.svg","images/welcome-page/twitter-icon.svg","images/welcome-page/facebook-icon.svg","images/welcome-page/instagram-icon.svg","pages/Welcome/index.js","images/profile-page-pic.svg","images/pen.svg","pages/Profile/index.js","components/TeamMembers/index.js","components/EditTeam/index.js","components/Inbox/useInboxUtils.js","components/Inbox/TeamInvitationInbox.js","components/Inbox/TeamInvitationHistory.js","components/Inbox/TeamInvitationResponse.js","components/Inbox/TaskAssignment.js","components/Inbox/TeamDeleted.js","components/Inbox/ProjectDeleted.js","components/Inbox/TeamInvitationCanceled.js","pages/Inbox/index.js","images/my-tasks/my-tasks.svg","images/edit-card/pic1.svg","images/edit-card/pic12.svg","images/edit-card/pic10.svg","services/useCardsServices.js","components/ShowAllTaskMembers/index.js","components/MembersList/index.js","components/EditCardOptions/TaskMembers.js","utils/date.js","images/edit-card/pic5.svg","components/EditCardOptions/TaskDueDate.js","components/EditCardOptions/TaskHistory.js","images/edit-card/pic2.svg","components/ProgressBar/index.js","components/EditCardOptions/TaskProgress.js","images/edit-card/pic6.svg","images/edit-card/download.svg","images/edit-card/remove.svg","components/AttachmentList/index.js","components/Attachment/index.js","components/EditCardOptions/TaskAttach.js","components/EditCard/index.js","components/AttachmentsLink/index.js","components/MyTasksTask/index.js","pages/MyTasks/index.js","images/error-page.svg","pages/Error/index.js","images/get-started/pic1.svg","images/get-started/pic2.svg","images/get-started/pic3.svg","images/get-started/pic4.svg","pages/GetStarted/index.js","components/Card/index.js","services/useListsServices.js","components/EditList/index.js","components/ListDropdown/index.js","components/Inputs/ProjectBoardInput/index.js","components/AddProjectBoardTask/index.js","images/dots.svg","components/List/index.js","images/project-board.svg","utils/useUpdateUserLastTeam.js","components/AddProjectBoardList/index.js","pages/ProjectBoard/index.js","components/ResponsiveTextarea/index.js","components/CalendarData/TaskName/index.js","components/CalendarData/TaskProgress/index.js","components/CalendarData/TaskDueDate/index.js","components/CalendarData/AddProjectElement/index.js","components/CalendarData/AddTask/index.js","components/CalendarData/AddList/index.js","components/CalendarData/columnData.js","components/FilterWrapper/index.js","components/CalendarData/FilterMembers/index.js","components/CalendarData/FilterDueDate/index.js","components/ToggleSwitch/index.js","components/CalendarData/FilterProgress/index.js","components/CalendarData/TaskFilters/index.js","images/project-list/previous-day.svg","images/project-list/next-day.svg","components/CalendarData/TableDateNavigation/index.js","components/CalendarTable/utils.js","components/CalendarTable/index.js","pages/ProjectList/index.js","contexts/ProjectProvider.js","contexts/TeamProvider.js","components/Project/index.js","images/team-page/pic1.svg","pages/Team/index.js","components/Button/index.js","pages/Confirmation/index.js","navigation.js","index.js","components/SearchField/index.module.css","components/CalendarTable/index.module.css","components/Project/index.module.css","components/CalendarData/FilterProgress/index.module.css","components/Inbox/index.module.css","components/ConfirmationDialog/index.module.css","components/ShowAllTaskMembers/index.module.css","components/CalendarData/FilterMembers/index.module.css","components/Header/index.module.css","components/MembersList/index.module.css","components/AttachmentList/index.module.css","components/Card/index.module.css"],"names":["module","exports","getCookie","name","cookieValue","document","cookie","match","USER_URL","useUserServices","history","useHistory","getHeaders","getUser","useCallback","userId","a","fetch","method","response","ok","push","json","getAllUsers","headers","updateUser","username","body","JSON","stringify","updateUserPassword","password","updateUserImage","newImage","oldImage","addNewPassword","userLogin","email","promise","authToken","get","user","moveMessageToHistory","message","deleteUserMessage","_id","confirmToken","token","registerUser","logoutUser","verifyLogin","getUserInbox","getUserTasks","teamId","data","updateRecentProjects","recentProjects","googleLoginUser","tokenId","UserContext","React","createContext","logIn","logOut","UserProvider","props","useState","setUser","loading","setLoading","id","teams","inbox","confirmed","newPasswordConfirmed","image","lastTeamSelected","loggedIn","handleVerifyLogin","status","useEffect","type","color","height","width","timeout","Provider","value","children","App","LinkComponent","title","href","className","onClick","to","styles","link","ProjectContext","lists","setLists","hiddenLists","setHiddenLists","project","setProject","ListColor","xmlns","viewBox","data-name","transform","d","fill","ButtonHideList","list","projectContext","useContext","newHiddenLists","includes","index","indexOf","splice","submit","opacity","ButtonClean","style","clean","SocketContext","useSocket","SocketProvider","socket","setSocket","url","window","location","teamsId","map","t","teamsStr","newSocket","io","query","transports","close","Transparent","hideForm","transparent","TeamContext","setTeams","selectedTeam","setSelectedTeam","getCurrentTeam","currentTeam","setCurrentTeam","getTeams","ButtonGrey","button","ConfirmDialog","hideConfirm","onConfirm","onDecline","container","logo","src","alt","buttons","AvatarUser","size","publicId","gravity","crop","round","maxInitials","PROJECTS_URL","useProjectsServices","getProjectInfo","projectId","createProject","description","members","editProject","isFinished","deleteProject","changeUserRole","memberRoleId","memberAdmin","userRole","isAdmin","addProjectMember","member","admin","removeProjectMember","memberId","TEAMS_URL","useTeamServices","getTeamUsers","currentTeamId","createTeam","requests","team","updateTeam","updatedTeam","removeTeamInvitations","removeInvitation","console","log","deleteTeam","deletedTeam","teamInvitations","accepted","getTeamInvitationInfo","getUserTeams","AddProjectMember","users","setUsers","context","teamContext","isActive","setIsActive","showMembers","setShowMembers","setMember","membersRoles","setMembers","params","useParams","confirmOpen","setConfirmOpen","confirmTitle","setConfirmTitle","currElement","setCurrElement","updateProjectSocket","emit","teamid","result","destination","draggableId","filter","droppableId","arr","newArr","m","updatedUser","deleteMember","handleAdd","memberRole","onFocus","length","projects","p","teamUsers","filtered","e","find","element","confirmationObjectFunctions","autoComplete","onBlur","setTimeout","onChange","target","label","placeholder","u","toLowerCase","sort","b","localeCompare","onDragEnd","provided","droppable","ref","innerRef","droppableProps","dragHandleProps","draggableProps","isUserAdmin","EditProject","setName","setDescription","setIsFinished","setIsAdmin","userContext","deletedProject","form","handleDeleteProject","spellCheck","Aside","asideOn","setAsideOn","listVisibility","setListVisibility","editProjectVisibility","setEditProjectVisibility","editProjectButtonVisibility","setEditProjectButtonVisibility","on","off","aside","hamburger","options","menu","Link","home","tasks","bell","settings","projectInfo","useDetectOutsideClick","useRef","current","contains","addEventListener","removeEventListener","SearchResults","searchInput","resultArr","obj","updateSelectedTeam","gotToPage","SearchField","setSearchInput","showSearchForm","setShowSearchForm","dropdownRefSearch","showSearchInput","setShowSearchInput","searchImg","input","LinkComponentTitle","CreateTeam","allUsers","setAllUsers","inputMembers","event","handleSubmit","preventDefault","autocomplete","addMember","removeMember","ButtonCleanTitle","TeamDropdown","showTeamForm","setShowTeamForm","isTeamActive","setIsTeamActive","teamRef","dropdown","teamName","getCurrentProjects","CreateProject","areMembersShown","setAreMembersShown","allTeamMembers","setAllTeamMembers","membersArray","ProjectDropdown","showProjectForm","setShowProjectForm","showOldProjects","setShowOldProjects","isProjectActive","setIsProjectActive","projectRef","currentProjects","undefined","reverse","ViewDropdown","isViewActive","setIsViewActive","viewRef","viewState","setViewState","ProfileDropdown","isProfileActive","setIsProfileActive","profileRef","avatar","profile","Header","isProjectVisibble","setIsProjectVisibble","isViewVisibble","setIsViewVisibble","getData","projectid","goToHomePage","deletedTeamId","goToTeamPage","deletedProjectId","navigation","small","links","font","PageLayout","contentClassName","app","content","Title","ButtonGreyTitle","MyTeamsMenu","userTeams","Home","isTeamFormShown","setIsTeamFormShown","areUserTeamsShown","setAreUserTeamsShown","dropdownRef","userName","userRecentProjects","pic1","homePagePicture","slice","forEach","Alert","alert","AddPassword","setPassword","rePassword","setRePassword","setAlert","fillAlert","setFillAlert","alerts","LoginForm","setEmail","showForm","setShowForm","setUserId","wrongPassAllert","setWrongPassAllert","wrongUserAllert","setWrongUserAllert","needPassword","wrongPassword","wrongUser","handleGoogle","googleResponse","onSubmit","goToForgotPassword","goToSignUp","render","renderProps","google","clientId","buttonText","onSuccess","cookiePolicy","SignupForm","setUsername","userExist","setUserExist","validEmailAlert","setValidEmailAlert","validateEmail","test","exist","goToLogin","ForgotPasswordForm","changePassResponse","emailInput","passInput","buttonDivLogin","loginButton","textDiv","newToSmM","signUpBtn","buttonDivGoogleLogin","googleLoginBtn","WelcomePage","isLogInFormShown","setIsLogInFormShown","isSignUpFormShown","setIsSignUpFormShown","isForgotPassFormShown","setIsForgotPassFormShown","welcomePagePic1","pic2","welcomePagePic2","lucida","paragraph","picture","welcomePagePic3","welcomePagePic4","welcomePagePic5","welcomePagePic6","footer","instagram","twitter","facebook","sd2006","ProfilePage","userEmail","setUserEmail","isPasswordActive","setIsPaswordActive","isUserNameActive","setIsUserNameActive","isAlertOn","setIsAlertOn","isEditPictureActive","setIsEditPictureActive","isConfirmOpen","setIsConfirmOpen","userid","userImage","handleUpdateUser","changeProfilePicture","cloudinary","createUploadWidget","cloudName","process","uploadPreset","error","path","info","public_id","open","deletePic","focus","disabled","myTeamsContainer","relative","edit","delete","pen","profilePagePic","TeamMembers","invited","EditTeam","currTeam","setCurrTeam","setInvited","forInvite","setForInvite","teamAuthor","author","removeTeamMember","updatedMembers","membersForInvite","confirm","recievers","membersAvatars","isMessage","useInboxUtils","isMoveActive","setIsMoveActive","moveToHistory","deleteMessage","setInboxHistory","inboxHistory","viewTeam","setShowEditTeamForm","TeamInvitationInbox","setInbox","showEditTeamForm","utils","acceptInvitation","sendFrom","bold","subject","Date","createdAt","toLocaleDateString","inline","isDeleted","TeamInvitationHistory","TeamInvitationResponse","isInbox","TaskAssignment","margin","card","TeamDeleted","ProjectDeleted","TeamInvitationCanceled","InboxPage","weekday","year","month","day","getInbox","inboxUser","CARDS_URL","useCardsServices","createTask","listId","taskName","progress","editTask","cardId","editedFields","deleteTask","addTaskMember","selectedUser","newMember","addAttachment","attachment","removeAttachment","attachmentId","ShowAllTaskMembers","deleteMemberOption","deleteMemberObj","updateSocket","cardMembers","setCardMembers","MembersList","maxLength","Math","min","setCurrCard","split","join","TaskMembers","handleGetTeamUsers","handleSelect","pics","pic10","select","FORMAT_REGEX","MONTHS","WEEKDAYS","MILLISECONDS_IN_DAY","FORMAT_OPTIONS","date","getUTCFullYear","toString","getMonth","getDate","getDay","getWeekNumber","getDateWithOffset","initialDate","daysOffset","getTime","getMonday","dateDay","monday","setDate","currWeekThursday","week1","getFullYear","week1Thursday","formatDate","formatString","replace","substr","formatType","checkDateEquality","firstDate","secondDate","getYear","compareDates","firstDateYear","secondDateYear","firstDateMonth","secondDateMonth","firstDateDay","secondDateDay","TaskDueDate","dueDate","cardDueDate","setCardDueDate","taskDueDate","setTaskDueDate","setWindowWidth","today","updateDimensions","innerWidth","w","editCardDueDate","customInput","pic5","selected","popperPlacement","TaskHistory","taskHistory","i","showDate","currDate","currDay","ProgressBar","bar","backgroundColor","Number","TaskProgress","setTaskHistory","setProgress","currInput","setCurrInput","isInputOk","setIsInputOk","isInputActive","setIsInputActive","isInputVisible","setIsInputVisible","useMemo","changeProgress","max","onKeyDown","keyCode","onKeyUp","AttachmentList","attachments","listRef","setIsDragCardDisabled","setIsDragListDisabled","attachmentsArr","setAttachmentsArr","att","updatedCard","format","download","getFullDocumentUrl","remove","handleDeteleAttachment","Attachment","isListVisible","setIsListVisible","TaskAttach","setAttachments","resourceType","original_filename","pic6","remaining","EditCard","initialCard","nameRef","descriptionRef","setCard","nameHeight","setNameHeight","handleDeleteTask","onEscPressed","setElement","blur","scrollHeight","text","pic12","AttachmentsLink","isVisible","setIsVisible","attPic","MyTasksTask","inputRef","showEditCard","setShowEditCard","days","ceil","parse","now","task","isNaN","deadline","MyTasksPage","setProjects","selectTeam","taskTeamUpdate","box","header","raw","cards","pic","myTasks","ErrorPage","errorPic","GetStarted","getStartedPagePic1","getStartedPagePic2","pic3","getStartedPagePic3","getStartedPagePic4","greeting","Card","LISTS_URL","useListsServices","createList","listName","editList","deleteList","dragAndDropList","position","dragAndDropCard","source","EditList","isColorActive","setIsColorActive","setColor","background","onChangeComplete","hex","ListDropdown","isDropdownActive","setIsDropdownActive","isVisibleEditList","setIsVisibleEditList","handleDeleteList","ProjectBoardInput","setValue","onEnter","onEscape","autoFocus","AddProjectBoardTask","setTaskName","isAddTaskVisible","setIsAddTaskVisible","cardRef","addTask","List","isDragCardDisabled","dotsPic","isDragDisabled","useUpdateUserLastTeam","AddProjectBoardList","setListName","isAddListActive","setIsAddListActive","addList","ProjectBoard","isDndActive","setIsDndActive","isDragListDisabled","projectUpdate","updateUserRecentProjects","newRecentProjects","shift","memberArr","handleDragAndDropList","filteredList","previousId","newListsArr","reorderedList","updatedProject","handleDragAndDropCard","oldPosition","sourcePosition","destinationPosition","handleOnDragEnd","direction","draggable","projectBoardPic","ResponsiveTextArea","toggleActive","areaHeight","setAreaHeight","currValue","setCurrValue","TaskName","cardName","setCardName","editCardName","commonStyles","nameContainer","tableText","UTC","taskprogress","cardProgress","setCardProgress","editCardProgress","cardProgressNum","newCardProgress","newTaskHistory","getBackGroundColor","currColor","taskProgress","taskProgressButtonInput","padding","border","borderRadius","minHeight","textAlign","display","alignItems","justifyContent","showTaskProgress","dueDateField","dueDateFieldInput","closeOnScroll","getElementsByClassName","AddProjectElement","handleInputRemove","elementName","setElementName","AddTask","AddList","CELL_COLORS","assembleColumnData","startDate","currentDate","cardData","getWeekdayCellHtml","messageColor","progressStyle","daylyProgress","getWeekdayCellData","dataString","numDaysOffset","cellDate","taskStartDate","eventInCell","events","isAfterDueDate","isBeforeToday","eventType","eventValue","cellText","cellColor","lastEventDate","cellBackgroundColor","isMonday","eventsInWeek","hasEventsInWeek","finishedDate","getHeaderDateHtml","headerDate","displayedDate","displayedDayOfWeek","fontWeight","fontSize","wrapCellData","cellData","whiteSpace","overflowWrap","accessor","minWidth","Cell","sortable","resizable","maxWidth","sortMethod","getProps","state","rowInfo","column","overflow","FilterWrapper","legendContent","legend","MembersFilter","membersFilter","setMembersFilter","handleFilterClear","mr","displayValue","buttonStyles","option","optionValue","optionDisplay","DueDateFilter","dueBefore","showWeekNumbers","ToggleSwitch","toggleStatus","containerStyle","ProgressFilters","filters","toggleFilter","notStarted","inProgress","done","TaskFilters","setFilter","filterName","currentFilterValue","TableDateNavigation","changeStartDate","setStartDate","previous","next","sortByTask","cardOne","cardTwo","sortByProgress","firstValue","secondValue","sortByDueDate","parsedDateOne","parsedDateTwo","createTableEntry","entryData","assigned","tuesday","wednesday","thursday","friday","saturday","sunday","TableDndApp","tableData","setTableData","currList","setCurrList","newEntries","setNewEntries","columnName","isDescending","sortCriteria","setSortCriteria","isUsed","onListClick","updateTableData","cardsSortMethod","sortingFunc","sortingEvaluation","getCardsSortMethod","histIndex","listNameContainer","listNameText","newTask","listCards","isCardFilterPassed","isUserFilterPassed","some","isDueDateFilterPassed","applyCardFilters","historyByDate","elementDate","lastHistoryEvent","parseCardHistory","weekdayData","newList","pageContainer","buttoDiv","dayDiff","newStartDate","addListButton","columns","defaultPageSize","pageSize","showPagination","reactTable","getTbodyProps","reactTableBody","getTrGroupProps","reactTableTrGroup","onSortedChange","sortInfo","desc","ProjectList","calendarPageContainer","ProjectProvider","projectName","setProjectName","TeamProvider","setCurrentProjects","teamUpdate","Project","isEditTeamShown","setIsEditTeamShown","key","TeamPage","isCreateProjectFormVisible","setIssCreateProjectFormVisible","isEditTeamFormVisible","setIsEditTeamFormVisible","areOldProjectsShown","setAreOldProjectsShown","teamPagePicture","Button","ConfirmationPage","isLoading","setIsLoading","isFirstRegistration","handleConfirmToken","cheers","Navigation","Confirmation","exact","Welcome","Profile","Inbox","MyTasks","Team","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.939d4316.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3CC1i\",\"header\":\"List_header__16_c6\",\"name\":\"List_name__2pQkI\",\"button\":\"List_button__2JdEh\",\"droppable\":\"List_droppable__rjf6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TableDateNavigation_container__2gKbz\",\"pic-container\":\"TableDateNavigation_pic-container__3PBX_\",\"text-centered\":\"TableDateNavigation_text-centered__Tg_5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Welcome_container__Blv2d\",\"top-container\":\"Welcome_top-container__1kWsD\",\"top-div-container\":\"Welcome_top-div-container__wAc50\",\"header-nav\":\"Welcome_header-nav__23dVS\",\"logo\":\"Welcome_logo__1FHqc\",\"first-buttons\":\"Welcome_first-buttons__1zNCr\",\"pic1\":\"Welcome_pic1__WdSLj\",\"pic2\":\"Welcome_pic2__3kR7y\",\"lower-div-container\":\"Welcome_lower-div-container__11mp2\",\"first-text\":\"Welcome_first-text__2wMqP\",\"login-button\":\"Welcome_login-button__2aVK9\",\"sign-up-button\":\"Welcome_sign-up-button__2DTaq\",\"headers\":\"Welcome_headers__YqCjW\",\"lucida\":\"Welcome_lucida__3OQA8\",\"paragraph\":\"Welcome_paragraph__2xlYA\",\"second-sign-up-button\":\"Welcome_second-sign-up-button__3YQut\",\"second-container\":\"Welcome_second-container__3oB5N\",\"first-row\":\"Welcome_first-row__kdO8F\",\"second-text\":\"Welcome_second-text__wGxh7\",\"third-sign-up-button\":\"Welcome_third-sign-up-button__E-21v\",\"pic3-container\":\"Welcome_pic3-container__3y42i\",\"picture\":\"Welcome_picture__1LfpA\",\"second-row\":\"Welcome_second-row__2gFr0\",\"second-row-colum\":\"Welcome_second-row-colum__1QPMm\",\"second-row-pic\":\"Welcome_second-row-pic__25QT9\",\"pic4-container\":\"Welcome_pic4-container__31mTt\",\"third-row\":\"Welcome_third-row__2pG7q\",\"pic6-container\":\"Welcome_pic6-container__1SSNA\",\"content-wrap\":\"Welcome_content-wrap__2dveJ\",\"footer\":\"Welcome_footer__2XGx5\",\"footer-column\":\"Welcome_footer-column__1v0eJ\",\"footer-headers\":\"Welcome_footer-headers__3JwzT\",\"footer-info\":\"Welcome_footer-info__1Sdrd\",\"last-column\":\"Welcome_last-column__1XKLT\",\"social-media-container\":\"Welcome_social-media-container__3rB36\",\"social-media\":\"Welcome_social-media__14Zva\",\"sd2006\":\"Welcome_sd2006__1n8bn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProjectBoard_container__QRlM3\",\"container-droppable\":\"ProjectBoard_container-droppable__3rdHA\",\"draggable\":\"ProjectBoard_draggable__1PYpJ\",\"pic\":\"ProjectBoard_pic__1BIrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relative\":\"ListDropdown_relative__nqt0j\",\"menu\":\"ListDropdown_menu__3Jgqi\",\"edit\":\"ListDropdown_edit__DMJG_\",\"delete\":\"ListDropdown_delete__1MpOF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"AddProjectBoardTask_task__1T3CX\",\"container\":\"AddProjectBoardTask_container__3_jAn\",\"button\":\"AddProjectBoardTask_button__1cM8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"AddProjectBoardList_list__1gIwy\",\"container\":\"AddProjectBoardList_container__1ZqCq\",\"button\":\"AddProjectBoardList_button__3vR1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ToggleSwitch_container__1XYXK\",\"switch-container\":\"ToggleSwitch_switch-container__2fcJU\",\"container-active\":\"ToggleSwitch_container-active__2KlxI\",\"state-circle\":\"ToggleSwitch_state-circle__27vlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HeaderDropdowns_container__29rcz\",\"dropdown-container\":\"HeaderDropdowns_dropdown-container__3wSui\",\"button\":\"HeaderDropdowns_button__X-O6a\",\"title\":\"HeaderDropdowns_title__sf-dL\",\"dropdown\":\"HeaderDropdowns_dropdown__314x4\",\"options-container\":\"HeaderDropdowns_options-container__2j26N\",\"options\":\"HeaderDropdowns_options__1fdRp\",\"last-option\":\"HeaderDropdowns_last-option__1epJE\",\"avatar\":\"HeaderDropdowns_avatar__2YMoE\",\"profile\":\"HeaderDropdowns_profile__3KVLR\",\"team-media\":\"HeaderDropdowns_team-media__iRnD9\",\"project-media\":\"HeaderDropdowns_project-media__2geIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columns\":\"CalendarData_columns__-FIu9\",\"task\":\"CalendarData_task__3pGoD\",\"buttoDiv\":\"CalendarData_buttoDiv__38O5Q\",\"listName\":\"CalendarData_listName__vvNl9\",\"container\":\"CalendarData_container__2gTLe\",\"nameContainer\":\"CalendarData_nameContainer__ah6Fk\",\"input\":\"CalendarData_input__3BvDQ\",\"inputList\":\"CalendarData_inputList__-v8qO\",\"addlist\":\"CalendarData_addlist__19KFm\",\"dueDateField\":\"CalendarData_dueDateField__2Eunf\",\"dueDateFieldInput\":\"CalendarData_dueDateFieldInput__fpgRy\",\"input-name\":\"CalendarData_input-name__3R2GJ\",\"clean\":\"CalendarData_clean__1Tt9q\",\"taskProgress\":\"CalendarData_taskProgress__8JSPb\",\"taskProgressButton\":\"CalendarData_taskProgressButton__25BRW\",\"taskProgressButtonInput\":\"CalendarData_taskProgressButtonInput__3ZWW2\",\"tableText\":\"CalendarData_tableText__3cXyB\",\"select\":\"CalendarData_select__2NTIx\",\"pen\":\"CalendarData_pen__1j8xF\",\"membersDiv\":\"CalendarData_membersDiv__3pToC\",\"membersContainer\":\"CalendarData_membersContainer__1x6pF\",\"daylyProgress\":\"CalendarData_daylyProgress__137iX\",\"header\":\"CalendarData_header__2Ssi7\",\"cursorPointer\":\"CalendarData_cursorPointer__3Gmkm\",\"filter\":\"CalendarData_filter__2FDSG\",\"filters-container\":\"CalendarData_filters-container__UBo34\",\"list\":\"CalendarData_list__1yfKY\",\"attachments-container\":\"CalendarData_attachments-container__3WW0v\",\"nav-buttons\":\"CalendarData_nav-buttons__13sz9\",\"filter-clear\":\"CalendarData_filter-clear__3I8E6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2jn1d\",\"inputs-container\":\"Profile_inputs-container__1ZyQB\",\"pic-container\":\"Profile_pic-container__NkUuW\",\"pic1\":\"Profile_pic1__10iGJ\",\"teams\":\"Profile_teams__3rU3V\",\"navigate-buttons\":\"Profile_navigate-buttons__2i3f7\",\"button-input-div\":\"Profile_button-input-div__3nxTZ\",\"button-input-div-tasks\":\"Profile_button-input-div-tasks__2vLJs\",\"input-fields-tasks\":\"Profile_input-fields-tasks__1EyeJ\",\"input-fields-profile\":\"Profile_input-fields-profile__2meLO\",\"profile-pic\":\"Profile_profile-pic__dcZ5p\",\"no-pic\":\"Profile_no-pic__3_Mll\",\"load-pic-text\":\"Profile_load-pic-text__3xgzd\",\"pen\":\"Profile_pen__3-PuD\",\"profile-pic-container\":\"Profile_profile-pic-container__YugLK\",\"profile-picture\":\"Profile_profile-picture__2uOYt\",\"save-button\":\"Profile_save-button__1J0CK\",\"button-div-save\":\"Profile_button-div-save__1Cq3-\",\"alerts\":\"Profile_alerts__9_8ch\",\"new-pass-alert\":\"Profile_new-pass-alert__3-5pw\",\"select-team-container\":\"Profile_select-team-container__gkHJ_\",\"teams-home\":\"Profile_teams-home__GLM5A\",\"navigate-buttons-teams\":\"Profile_navigate-buttons-teams__1Pcy1\",\"edit\":\"Profile_edit__2Bn-c\",\"delete\":\"Profile_delete__3CAmX\",\"relative\":\"Profile_relative__tYXFt\",\"menu\":\"Profile_menu__3K4CG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"ButtonHideList_submit__3glNU\",\"name\":\"ButtonHideList_name__24VGN\",\"opacity\":\"ButtonHideList_opacity__2oef5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"PageLayout_app__2ictT\",\"content\":\"PageLayout_content__2RzM6\",\"small\":\"PageLayout_small__1Mq-R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attachment\":\"Attachment_attachment__1LGL-\",\"att-picture\":\"Attachment_att-picture__2rF6n\",\"format\":\"Attachment_format__1ATQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Error_title__1VvYs\",\"errorPic\":\"Error_errorPic__1gUzF\",\"text\":\"Error_text__3jaPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectInfoContainer\":\"ProjectList_projectInfoContainer__2--XA\",\"calendar-container\":\"ProjectList_calendar-container__2tN25\",\"layout-container\":\"ProjectList_layout-container__1xU4h\",\"table\":\"ProjectList_table__3UAlN\",\"column\":\"ProjectList_column__3etaq\",\"columnChild\":\"ProjectList_columnChild__1r7DM\",\"daylyElement\":\"ProjectList_daylyElement__vjLXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterWrapper_container__2mc8F\",\"legend-wrapper\":\"FilterWrapper_legend-wrapper__2H0G_\",\"legend\":\"FilterWrapper_legend__2ixJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyTasks_title__1C8P6\",\"button-container\":\"MyTasks_button-container__3ojpk\",\"team-buttons\":\"MyTasks_team-buttons__rwLN9\",\"teams\":\"MyTasks_teams__bacAI\",\"projects-button\":\"MyTasks_projects-button__QEKL1\",\"selected\":\"MyTasks_selected__2L6Mh\",\"pic\":\"MyTasks_pic__2sXbq\",\"box\":\"MyTasks_box__3GKSN\",\"project\":\"MyTasks_project__3TwfE\",\"project-name\":\"MyTasks_project-name__3GHcB\",\"link\":\"MyTasks_link__2yCTm\",\"bold\":\"MyTasks_bold__15RaX\",\"header\":\"MyTasks_header__mroLj\",\"raw\":\"MyTasks_raw__20QEV\",\"container\":\"MyTasks_container__3KSqs\",\"task-container\":\"MyTasks_task-container__2V5Yb\",\"list\":\"MyTasks_list__2iT9e\",\"task\":\"MyTasks_task__1dbTY\",\"progress\":\"MyTasks_progress__3nBUU\",\"days\":\"MyTasks_days__3bCTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small-buttons\":\"EditCardOptions_small-buttons__1hy9d\",\"pics\":\"EditCardOptions_pics__SnHKl\",\"date\":\"EditCardOptions_date__3hXp1\",\"select\":\"EditCardOptions_select__3Kx68\",\"members\":\"EditCardOptions_members__1ONdZ\",\"history\":\"EditCardOptions_history__1o3UV\",\"progress-input\":\"EditCardOptions_progress-input__1OQoV\",\"progress-input-container\":\"EditCardOptions_progress-input-container__1v_MB\",\"progress-bar\":\"EditCardOptions_progress-bar__nxvKF\",\"bad-input\":\"EditCardOptions_bad-input__2WT7C\",\"progress\":\"EditCardOptions_progress__2EHw4\",\"att-container\":\"EditCardOptions_att-container__GBRn5\",\"attachment\":\"EditCardOptions_attachment__1_JhW\",\"att-picture\":\"EditCardOptions_att-picture__11VOZ\",\"format\":\"EditCardOptions_format__1DJu8\",\"remaining\":\"EditCardOptions_remaining__360yd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditTeam_container__jOWEK\",\"title\":\"EditTeam_title__1SlVn\",\"input-container\":\"EditTeam_input-container__20E2D\",\"input-container-invite\":\"EditTeam_input-container-invite__34vji\",\"input-name\":\"EditTeam_input-name__3l4BG\",\"text-invite\":\"EditTeam_text-invite__2pe88\",\"input-invite\":\"EditTeam_input-invite__2Bo-1\",\"input-container-descr\":\"EditTeam_input-container-descr__oVXbs\",\"text-area-descr\":\"EditTeam_text-area-descr__1zqXP\",\"button-div\":\"EditTeam_button-div__3L4JE\",\"create-button\":\"EditTeam_create-button__--HPe\",\"members-div\":\"EditTeam_members-div__2htec\",\"invite-input\":\"EditTeam_invite-input__1YcA-\",\"select-for-invite\":\"EditTeam_select-for-invite__3CS0n\",\"members\":\"EditTeam_members__39VP2\",\"user\":\"EditTeam_user__WOpOa\",\"email\":\"EditTeam_email__3ZwGR\",\"leave-team-btn-div\":\"EditTeam_leave-team-btn-div__zLSrF\",\"leave-team-btn\":\"EditTeam_leave-team-btn__l6dJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignupForm_container__1EUzX\",\"alerts\":\"SignupForm_alerts__3SVKz\",\"inner-container\":\"SignupForm_inner-container__3WHa3\",\"logo\":\"SignupForm_logo__3kCbY\",\"right-side\":\"SignupForm_right-side__11WBG\",\"title\":\"SignupForm_title__Fapvf\",\"input-container\":\"SignupForm_input-container__2Ab8N\",\"sign-up-input\":\"SignupForm_sign-up-input__Qllfz\",\"pass-instructions\":\"SignupForm_pass-instructions__3dV59\",\"sign-up-button\":\"SignupForm_sign-up-button__30sA_\",\"button-div-login\":\"SignupForm_button-div-login__1VwbR\",\"text-div\":\"SignupForm_text-div__2HDuw\",\"already-sign-up\":\"SignupForm_already-sign-up__lhjkC\",\"sign-up-btn\":\"SignupForm_sign-up-btn__1IrDl\",\"button-div-google-login\":\"SignupForm_button-div-google-login__20p6X\",\"google-login-btn\":\"SignupForm_google-login-btn__1dUjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"ListColor_aside__3JtLX\",\"list\":\"ListColor_list__Vd3bu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-container\":\"SearchResults_search-container__MlAXI\",\"result\":\"SearchResults_result__3ytDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teams-container\":\"MyTeamsMenu_teams-container__1_QNt\",\"buttons-teams\":\"MyTeamsMenu_buttons-teams__3JXxm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members-avatars\":\"TeamMembers_members-avatars__1huAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"ProgressBar_bar__3HFkM\",\"progress\":\"ProgressBar_progress__17L3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddProjectMember_container__1Yv-E\",\"form\":\"AddProjectMember_form__25ZT2\",\"current-members\":\"AddProjectMember_current-members__24r6z\",\"admins-container\":\"AddProjectMember_admins-container__1B9Ro\",\"admins\":\"AddProjectMember_admins__17_bM\",\"big-container\":\"AddProjectMember_big-container__3NFuQ\",\"members-container\":\"AddProjectMember_members-container__36xCp\",\"title\":\"AddProjectMember_title__3Sqes\",\"select-for-invite\":\"AddProjectMember_select-for-invite__3sFhG\",\"members\":\"AddProjectMember_members__3NmI1\",\"member-select\":\"AddProjectMember_member-select__3rsJu\",\"add-button\":\"AddProjectMember_add-button__1ASmv\",\"draggable\":\"AddProjectMember_draggable__3_zby\",\"droppable\":\"AddProjectMember_droppable__21y0a\",\"droppable-members\":\"AddProjectMember_droppable-members__qZCTH\",\"input-container\":\"AddProjectMember_input-container__22Seg\",\"text-invite\":\"AddProjectMember_text-invite__2PZAa\",\"invite-input\":\"AddProjectMember_invite-input__2USeg\",\"members-input\":\"AddProjectMember_members-input__1AohK\",\"user\":\"AddProjectMember_user__1z2g4\",\"email\":\"AddProjectMember_email__1wPCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AttachmentsLink_button__dAzPs\",\"attachments\":\"AttachmentsLink_attachments__33y53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter-used\":\"FilterDueDate_filter-used__3i-jX\",\"filter-blank\":\"FilterDueDate_filter-blank__3fwmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GetStarted_container__2H_7b\",\"title\":\"GetStarted_title__TgCLw\",\"paragraph\":\"GetStarted_paragraph__1CUHy\",\"logo-div\":\"GetStarted_logo-div__1-6bQ\",\"logo\":\"GetStarted_logo__LHiNS\",\"pic-div\":\"GetStarted_pic-div__1Jy4O\",\"navigate-buttons\":\"GetStarted_navigate-buttons__bbFe8\",\"pic\":\"GetStarted_pic__3Ntuu\",\"pic3\":\"GetStarted_pic3__GgMVL\",\"greeting\":\"GetStarted_greeting__aNbMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateTeam_container__2WhLz\",\"form\":\"CreateTeam_form__24Mfc\",\"title\":\"CreateTeam_title__1PJSO\",\"input-container\":\"CreateTeam_input-container__2KxsA\",\"input-name\":\"CreateTeam_input-name__1aoJu\",\"input-container-descr\":\"CreateTeam_input-container-descr__Ub7xw\",\"input-container-members\":\"CreateTeam_input-container-members__2ykPg\",\"description-text\":\"CreateTeam_description-text__2gAfb\",\"text-area-descr\":\"CreateTeam_text-area-descr__1bd9_\",\"members-text\":\"CreateTeam_members-text__1r2Kf\",\"input-members\":\"CreateTeam_input-members__2RQGG\",\"button-div\":\"CreateTeam_button-div__1biFv\",\"create-button\":\"CreateTeam_create-button__-2tDq\",\"members-avatars\":\"CreateTeam_members-avatars__17gAf\",\"invite-input\":\"CreateTeam_invite-input__h19QP\",\"select-for-invite\":\"CreateTeam_select-for-invite__nSIlB\",\"members-pop-up\":\"CreateTeam_members-pop-up__1CTGn\",\"members\":\"CreateTeam_members__1ErPS\",\"user\":\"CreateTeam_user__2cHWm\",\"email\":\"CreateTeam_email__1DwA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormForgotPassword_container__1NEtt\",\"alerts\":\"FormForgotPassword_alerts__28_6E\",\"inner-container\":\"FormForgotPassword_inner-container__1oKG5\",\"logo\":\"FormForgotPassword_logo__3W4yw\",\"right-side\":\"FormForgotPassword_right-side__1Q0k3\",\"title\":\"FormForgotPassword_title__U05Qo\",\"input-container\":\"FormForgotPassword_input-container__5c-Sk\",\"emailInput\":\"FormForgotPassword_emailInput__3vKfR\",\"passInput\":\"FormForgotPassword_passInput__1W_mV\",\"loginButton\":\"FormForgotPassword_loginButton__-Fujb\",\"buttonDivLogin\":\"FormForgotPassword_buttonDivLogin__xk6yS\",\"textDiv\":\"FormForgotPassword_textDiv__1a0R_\",\"buttonDivGoogleLogin\":\"FormForgotPassword_buttonDivGoogleLogin__2IzTS\",\"forgotPass\":\"FormForgotPassword_forgotPass__2RBW2\",\"newToSmM\":\"FormForgotPassword_newToSmM__2tAK-\",\"signUpBtn\":\"FormForgotPassword_signUpBtn__381qn\",\"googleLoginBtn\":\"FormForgotPassword_googleLoginBtn__2TldA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginForm_container__3mSDm\",\"alerts\":\"LoginForm_alerts__3oX4D\",\"inner-container\":\"LoginForm_inner-container__2sUKy\",\"logo\":\"LoginForm_logo__3hg3V\",\"right-side\":\"LoginForm_right-side__3C-eo\",\"title\":\"LoginForm_title__3njFN\",\"input-container\":\"LoginForm_input-container__2m6Dv\",\"email-input\":\"LoginForm_email-input__1_iak\",\"pass-input\":\"LoginForm_pass-input__24yg5\",\"login-button\":\"LoginForm_login-button__3pm-s\",\"button-div-login\":\"LoginForm_button-div-login__2im8C\",\"text-div\":\"LoginForm_text-div__1i1zE\",\"button-div-google-login\":\"LoginForm_button-div-google-login__1zFxo\",\"forgot-pass\":\"LoginForm_forgot-pass__2GUJp\",\"new-to-sm\":\"LoginForm_new-to-sm__1eNbD\",\"sign-up-btn\":\"LoginForm_sign-up-btn__OvfKJ\",\"google-login-btn\":\"LoginForm_google-login-btn__HJ--x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__2v7Ip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"ButtonClean_clean__MmpNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"Transparent_transparent__3eLJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonGrey_button__22yhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateProject_container__3yvf3\",\"title\":\"CreateProject_title__p1t6m\",\"input-container\":\"CreateProject_input-container__-X6Hn\",\"input-name\":\"CreateProject_input-name__3d2jC\",\"invite-input\":\"CreateProject_invite-input__1aTwm\",\"select-for-invite\":\"CreateProject_select-for-invite__1pqBV\",\"members-input\":\"CreateProject_members-input__3L2Zm\",\"input-container-descr\":\"CreateProject_input-container-descr__3uWP2\",\"text-area-descr\":\"CreateProject_text-area-descr__1p4fI\",\"text-invite\":\"CreateProject_text-invite__JdBCK\",\"button-div\":\"CreateProject_button-div__3eNE3\",\"create-button\":\"CreateProject_create-button__6x5pZ\",\"members-avatars\":\"CreateProject_members-avatars__2s-RG\",\"members\":\"CreateProject_members__2wR8K\",\"user\":\"CreateProject_user__sHVQv\",\"email\":\"CreateProject_email__lk9sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-picture\":\"AvatarUser_profile-picture__BQ0ww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkTitle_link__3986T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"ButtonCleanTitle_clean__3CTSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__31TWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonGreyTitle_button__19TJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__Wb40V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Inbox_title__2V72A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Confirmation_container__1twF0\",\"logo\":\"Confirmation_logo__1cPi0\",\"title\":\"Confirmation_title__2GTN6\",\"text\":\"Confirmation_text__1c54f\",\"cheers\":\"Confirmation_cheers__3-74p\",\"team\":\"Confirmation_team__2Ws9D\",\"proceed-button\":\"Confirmation_proceed-button__2BlXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ProjectBoardInput_input__374jY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3Y-q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Aside_aside__2Njbe\",\"container\":\"Aside_container__2dzBw\",\"button\":\"Aside_button__djeVy\",\"logo\":\"Aside_logo__2fhgX\",\"top-left\":\"Aside_top-left__OTH7h\",\"menu\":\"Aside_menu__2LcGf\",\"top-right\":\"Aside_top-right__2oRKj\",\"link\":\"Aside_link__3_X5_\",\"bottom-right\":\"Aside_bottom-right__8HfKT\",\"bell\":\"Aside_bell__21fDz\",\"hamburger\":\"Aside_hamburger__3YfcW\",\"settings\":\"Aside_settings__1GECq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormAddPassword_container__kt31_\",\"alerts\":\"FormAddPassword_alerts__26Enm\",\"inner-container\":\"FormAddPassword_inner-container__2lYc6\",\"logo\":\"FormAddPassword_logo__3hGrj\",\"right-side\":\"FormAddPassword_right-side__3Vb4J\",\"title\":\"FormAddPassword_title__1yoyV\",\"input-container\":\"FormAddPassword_input-container__eszIy\",\"pass-instructions\":\"FormAddPassword_pass-instructions__3wv_r\",\"pass-input\":\"FormAddPassword_pass-input__1RvQT\",\"login-button\":\"FormAddPassword_login-button__7QZcK\",\"button-div-login\":\"FormAddPassword_button-div-login__n04Yh\",\"text-login\":\"FormAddPassword_text-login__2FLj3\",\"new-pass-alert\":\"FormAddPassword_new-pass-alert__2lx9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditCard_container__36pBB\",\"task-name\":\"EditCard_task-name__3HFFc\",\"name-input\":\"EditCard_name-input__296eI\",\"task-body\":\"EditCard_task-body__MN9SU\",\"text\":\"EditCard_text__3svz-\",\"left-side\":\"EditCard_left-side__1VJBW\",\"right-side\":\"EditCard_right-side__24WUw\",\"task-component\":\"EditCard_task-component__edf0Y\",\"description-input\":\"EditCard_description-input__3QJ0k\",\"small-buttons\":\"EditCard_small-buttons__1sxed\",\"pics\":\"EditCard_pics__RNsxt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1xEq7\",\"pic-container\":\"Home_pic-container__3V468\",\"pic1\":\"Home_pic1__1KI5l\",\"welcome-user\":\"Home_welcome-user__3PicL\",\"left-buttons\":\"Home_left-buttons__18tIE\",\"right-buttons\":\"Home_right-buttons__1WbYz\",\"my-teams-container\":\"Home_my-teams-container__3vSsH\",\"teams-home\":\"Home_teams-home__3znif\",\"select-team-container\":\"Home_select-team-container__1xTnE\",\"navigate-buttons\":\"Home_navigate-buttons__1vBH_\",\"navigate-buttons-teams\":\"Home_navigate-buttons-teams__1O_HP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditProject_form__2Zerv\",\"title\":\"EditProject_title__1us1P\",\"buttons-div\":\"EditProject_buttons-div__3Yg3P\",\"navigate-buttons\":\"EditProject_navigate-buttons__1t3PE\",\"input-container\":\"EditProject_input-container__2IfEj\",\"input-pr-name\":\"EditProject_input-pr-name__1c4Fa\",\"input-container-descr\":\"EditProject_input-container-descr__Iroze\",\"text-area-descr\":\"EditProject_text-area-descr__1LiJL\",\"edit-members\":\"EditProject_edit-members__XwwXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MyTasksTask_card__7SxjV\",\"task\":\"MyTasksTask_task__3jiD9\",\"progress\":\"MyTasksTask_progress__1_nbW\",\"days\":\"MyTasksTask_days__PYXHu\",\"deadline\":\"MyTasksTask_deadline__1snIh\",\"buttons-container\":\"MyTasksTask_buttons-container__1QSJP\",\"button\":\"MyTasksTask_button__2kM0-\",\"input\":\"MyTasksTask_input__O7BKr\",\"bad-input\":\"MyTasksTask_bad-input__3Fw81\",\"no-border\":\"MyTasksTask_no-border__2hPaR\",\"edit\":\"MyTasksTask_edit__1SH_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Team_container__1NMEF\",\"title\":\"Team_title__20bpO\",\"left-side\":\"Team_left-side__7jKvf\",\"right-side\":\"Team_right-side__3QAvM\",\"right-side-team\":\"Team_right-side-team__2EGTD\",\"team-page-picture\":\"Team_team-page-picture__2MZSb\",\"button-div\":\"Team_button-div__2OcBw\",\"team-page-button\":\"Team_team-page-button__2Zwn8\",\"picture\":\"Team_picture__PQLrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditList_container__1b94R\",\"input-container\":\"EditList_input-container__36jfK\",\"name\":\"EditList_name__2Hhat\",\"name-input\":\"EditList_name-input__1gg6i\",\"change-color\":\"EditList_change-color__3EZry\",\"color-title\":\"EditList_color-title__3pzlD\",\"color-pick\":\"EditList_color-pick__LMc5r\",\"color-button\":\"EditList_color-button__3CEZF\",\"edit-list-button\":\"EditList_edit-list-button__1k-qo\",\"text\":\"EditList_text__CXAIj\"};","const getCookie = (name) => {\r\n    const cookieValue = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n    return cookieValue ? cookieValue[2] : null;\r\n}\r\n\r\nexport default getCookie;","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from \"../utils/cookie\"\r\n\r\nconst USER_URL = '/api/user'\r\n\r\nexport default function useUserServices() {\r\n    const history = useHistory()\r\n\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const getUser = useCallback(async (userId) => {\r\n\r\n        const response = await fetch(`${USER_URL}/${userId}`, {\r\n            method: 'GET'\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const getAllUsers = useCallback(async () => {\r\n        const response = await fetch(`${USER_URL}/get-all`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const updateUser = useCallback(async (userId, username) => {\r\n\r\n        const response = await fetch(`${USER_URL}/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                username: username,\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n\r\n    }, [history])\r\n\r\n    const updateUserPassword = useCallback(async (userId, password) => {\r\n\r\n        const response = await fetch(`${USER_URL}/password/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                password: password\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n\r\n    }, [history])\r\n\r\n    const updateUserImage = useCallback(async (userId, newImage, oldImage) => {\r\n\r\n        const response = await fetch(`${USER_URL}/image/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                newImage,\r\n                oldImage\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n\r\n    }, [history])\r\n\r\n    const addNewPassword = useCallback(async (userId, password) => {\r\n\r\n        const response = await fetch(`${USER_URL}/addNewPassword/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                password\r\n            })\r\n        })\r\n\r\n\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n\r\n    }, [history])\r\n\r\n    const userLogin = useCallback(async (email, password) => {\r\n\r\n        const promise = await fetch(`${USER_URL}/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const authToken = promise.headers.get('Authorization')\r\n        const response = await promise.json()\r\n\r\n        if (response.user && response.user.username && authToken) {\r\n            document.cookie = `x-auth-token=${authToken};path=/`\r\n        }\r\n\r\n        return response\r\n    }, [])\r\n\r\n    const moveMessageToHistory = useCallback(async (message) => {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n    }, [history])\r\n\r\n    const deleteUserMessage = useCallback(async (message) => {\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders(),\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const confirmToken = useCallback(async (token) => {\r\n\r\n        const promise = await fetch(`${USER_URL}/confirmation`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                token\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const authToken = promise.headers.get('Authorization')\r\n        const response = await promise.json()\r\n        \r\n        if (response.user && response.user.username && authToken) {\r\n            document.cookie = `x-auth-token=${authToken};path=/`\r\n            return response\r\n        }\r\n    }, [])\r\n\r\n    const registerUser = useCallback(async (email, username, password) => {\r\n\r\n        const promise = await fetch(`${USER_URL}/register`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email,\r\n                username,\r\n                password\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const authToken = promise.headers.get('Authorization')\r\n        const response = await promise.json()\r\n\r\n        if (response.user && response.user.username && authToken) {\r\n            document.cookie = `x-auth-token=${authToken};path=/`\r\n        }\r\n\r\n        return response\r\n    }, [])\r\n\r\n    const logoutUser = useCallback(async () => {\r\n\r\n        const response = await fetch(`${USER_URL}/logout`, {\r\n            method: 'POST',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        } else {\r\n            document.cookie = 'x-auth-token= ; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/;'\r\n\r\n            return response\r\n        }\r\n    }, [history])\r\n\r\n    const verifyLogin = useCallback(async () => {\r\n        const response = await fetch(`${USER_URL}/verify`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        }\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const getUserInbox = useCallback(async () => {\r\n        const response = await fetch(`${USER_URL}/inbox`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        const user = await response.json()\r\n        return user\r\n\r\n    }, [history])\r\n\r\n    const getUserTasks = useCallback(async (teamId) => {\r\n        const response = await fetch(`${USER_URL}/tasks/${teamId}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        }\r\n        const data = await response.json()\r\n        return data\r\n    }, [history])\r\n    \r\n    const updateRecentProjects = useCallback(async (userId, recentProjects) => {\r\n        const response = await fetch(`${USER_URL}/recentProjects/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({ recentProjects })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const googleLoginUser = useCallback(async (tokenId) => {\r\n\r\n        const promise = await fetch(`${USER_URL}/google-login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ tokenId }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        const authToken = promise.headers.get(\"Authorization\")\r\n        const response = await promise.json()\r\n        \r\n        if (response.user && response.user.username && authToken) {\r\n            document.cookie = `x-auth-token=${authToken};path=/`\r\n        }\r\n\r\n        return response\r\n    }, [])\r\n\r\n    return {\r\n        getUser,\r\n        getAllUsers,\r\n        updateUser,\r\n        updateUserPassword,\r\n        updateUserImage,\r\n        addNewPassword,\r\n        userLogin,\r\n        moveMessageToHistory,\r\n        deleteUserMessage,\r\n        confirmToken,\r\n        registerUser,\r\n        logoutUser,\r\n        verifyLogin,\r\n        getUserInbox,\r\n        getUserTasks,\r\n        updateRecentProjects,\r\n        googleLoginUser\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nconst UserContext = React.createContext({\r\n    user: null,\r\n    logIn: () => {},\r\n    logOut: () => {}\r\n});\r\n\r\nexport default UserContext","import React, { useState, useEffect, useCallback } from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nimport useUserServices from '../services/useUserServices'\r\nimport getCookie from '../utils/cookie'\r\nimport UserContext from './UserContext'\r\n\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const { logoutUser, verifyLogin } = useUserServices()\r\n    const token = getCookie('x-auth-token')\r\n\r\n\r\n    const logIn = (response) => {\r\n        const user = {\r\n            username: response.user.username,\r\n            id: response.user._id,\r\n            teams: response.teams,\r\n            inbox: response.user.inbox,\r\n            confirmed: response.user.confirmed,\r\n            newPasswordConfirmed: response.user.newPasswordConfirmed,\r\n            recentProjects: response.user.recentProjects,\r\n            image: response.user.image,\r\n            lastTeamSelected: response.user.lastTeamSelected\r\n        }\r\n\r\n        setUser({\r\n            ...user,\r\n            loggedIn: true\r\n        })\r\n    }\r\n\r\n    const logOut = useCallback(async () => {\r\n        if (!token) {\r\n            return\r\n        }\r\n        await logoutUser()\r\n        setUser({\r\n            loggedIn: false\r\n        })\r\n    }, [logoutUser, token])\r\n\r\n    const handleVerifyLogin = useCallback(async () => {\r\n        if (!loading) {\r\n            return\r\n        }\r\n        if (!token) {\r\n            setUser({\r\n                loggedIn: false\r\n            })\r\n            setLoading(false)\r\n            return\r\n        }\r\n        const response = await verifyLogin()\r\n        if (response.status) {\r\n            logIn(response)\r\n        } else {\r\n            logOut()\r\n        }\r\n        setLoading(false)\r\n    }, [verifyLogin, logOut, loading, token])\r\n\r\n    useEffect(() => {\r\n        handleVerifyLogin()\r\n    }, [handleVerifyLogin])\r\n\r\n    if (loading) {\r\n        return (\r\n            <Loader\r\n                type='TailSpin'\r\n                color='#363338'\r\n                height={100}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            user,\r\n            setUser,\r\n            logIn,\r\n            logOut\r\n        }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider","import React from 'react'\r\nimport UserProvider from './contexts/UserProvider'\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n        <UserProvider>\r\n            {props.children}\r\n        </UserProvider>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport styles from './index.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinkComponent = ({ title, href, className, onClick }) => {\r\n    return (\r\n            <Link to={href} className={`${styles.link} ${className}`} onClick={onClick} >\r\n                {title}\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponent;","export default __webpack_public_path__ + \"static/media/logo.11e90948.svg\";","export default __webpack_public_path__ + \"static/media/menu.c7591865.svg\";","export default __webpack_public_path__ + \"static/media/home.f4ff998e.svg\";","export default __webpack_public_path__ + \"static/media/tasks.3208aed2.svg\";","export default __webpack_public_path__ + \"static/media/inbox.c6537480.svg\";","export default __webpack_public_path__ + \"static/media/inbox-bell.7f4fc855.svg\";","export default __webpack_public_path__ + \"static/media/project-info.eb151f7e.svg\";","import React from 'react'\r\n\r\nconst ProjectContext = React.createContext({\r\n  lists: [] ,\r\n  setLists: () => {},\r\n  hiddenLists: [],\r\n  setHiddenLists: () => {},\r\n  project: {},\r\n  setProject: () => {}\r\n})\r\n\r\nexport default ProjectContext\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ListColor({ color, type }) {\r\n    if (type === 'aside') {\r\n        return (\r\n            <svg className={`${styles[type]}`} xmlns='http://www.w3.org/2000/svg' width='110' height='26.931' viewBox='0 0 110 26.931'>\r\n                <g id='Layer_2' data-name='Layer 2' transform='translate(0.002 0.014)'>\r\n                    <g id='Layer_1' data-name='Layer 1' transform='translate(-0.002 -0.014)'>\r\n                        <path\r\n                            id='Path_60'\r\n                            data-name='Path 60'\r\n                            d='M4.208,22.578l-.277-.26c-.594-.366-.814-1.074-1.351-1.49-1-.749-1.14-2.214-2.352-2.784a1.237,1.237,0,0,1-.187-.391,1.628,1.628,0,0,1,.554-1.628,5.636,5.636,0,0,1,3.1-.456,6.862,6.862,0,0,0,1.083,0,.733.733,0,0,0,.765-.765c.049-.48-.057-.814-.586-.871a1.628,1.628,0,0,1-.513-.163c-.92-.456-.961-1.083-.106-1.7a3.256,3.256,0,0,0,.545-.448,1.27,1.27,0,0,1,.659-.383c.667-.244,1.538.3,2.027-.545a.651.651,0,0,0-.244-.374,6.894,6.894,0,0,1-.659-.554,1.278,1.278,0,0,1-.415-.814A1.9,1.9,0,0,0,5.022,6.933C4.2,6.509,3.6,5.891,4.411,4.881c2.263-1.628,4.933-1.937,7.57-2.328,1.27-.309,2.589-.187,3.858-.48a4.811,4.811,0,0,1,1.449-.09c.643.073,1.254.317,1.921-.147a2.011,2.011,0,0,1,1.718-.106,2.808,2.808,0,0,0,2.32-.2,3.394,3.394,0,0,1,2.2.122c1.628-.6,3.313-.391,4.957-.667.765-.147,1.563-.114,2.328-.3a8.873,8.873,0,0,1,3.557.13.252.252,0,0,0,.269,0A2.914,2.914,0,0,1,39.885.73h.277A2.182,2.182,0,0,1,42.075.307a22.922,22.922,0,0,0,3.883.057A34.326,34.326,0,0,0,56.165.2,1.75,1.75,0,0,1,57.85.51h.277C59.136-.3,60.276.054,61.383.128a28.856,28.856,0,0,0,4.436.26,8.669,8.669,0,0,1,2.751,0c1.188.317,2.442,0,3.606.244A22.083,22.083,0,0,0,75.7.917l.464.041a16.752,16.752,0,0,0,3.191.228h.464c1.083.057,2.157.285,3.256.269,1.351,0,2.678.3,4.021.309.814.171,1.685.2,2.523.334.545.269,1.254.065,1.709.578a4.746,4.746,0,0,0,1.9.309,26.545,26.545,0,0,1,4.548.392c1.166.211,2.347.235,3.527.333,1.091.3,2.271,0,3.329.5,1.408,0,2.825,0,4.241.081.3,0,.716.1.676.513s-.374.586-.814.383c-1.034-.09-2.059-.155-2.523,1.083-.317.814-.961.562-1.555.488-.537.228-1.14.147-1.677.358a5.576,5.576,0,0,1-.814.106,20.26,20.26,0,0,0-4.591.765c.814.676,1.245,1.555,2.255,1.758a1.934,1.934,0,0,1,1.424.334c-.057,1.026-.936.586-1.449.814a.578.578,0,0,1-.383-.065.057.057,0,0,0,0,.057h3.972a1.042,1.042,0,0,1,.92.448c-.244.814-1.058.521-1.587.814-.407.212-1.156.187-.545.961a4.613,4.613,0,0,0,.391.407,11.928,11.928,0,0,0,3,.155,5.421,5.421,0,0,1,.961,0c.814.147,1.058.44.407,1.156-1.074,1.188-2.442,2.165-3.012,3.769,1.742,0,3.565.041,5.389,0,.863.4.879.92.236,1.547a1.148,1.148,0,0,0-.3.814c.114.35.073.733.212,1.074.562,1.384.5,1.547-.863,2.068a13.569,13.569,0,0,1-2.637.814c-1.571.049-3.118.521-4.7.309-1.628-.554-3.329.212-4.99-.081a9.589,9.589,0,0,0-4.884.147,2.816,2.816,0,0,1-2.076.488H79.771a5.739,5.739,0,0,0-1.9.179,10.631,10.631,0,0,1-1.831.1c-4.485,0-8.954.081-13.455,0a4.933,4.933,0,0,0-1.758.187,9.247,9.247,0,0,1-2.507.106h-.529a28.6,28.6,0,0,1-3.126,0h-.48a6.137,6.137,0,0,1-1.726-.1,11.209,11.209,0,0,0-3.533-.2c-2.222.065-4.461-.106-6.675.163a6.658,6.658,0,0,1-1.929.081,4.168,4.168,0,0,1-.456,0c-1.286,0-2.572.106-3.858.049a12.474,12.474,0,0,0-3.394,0c-1.319.2-2.67-.138-3.98.187a16.768,16.768,0,0,1-2.556.236c-1.368-.366-2.711.342-4.07.106a2.133,2.133,0,0,1-.456-.073,9.475,9.475,0,0,0-2.711-.179c-1.213-.09-2.442-.236-3.63-.342a9.377,9.377,0,0,0-1.058-.228,17.6,17.6,0,0,0-2.068-.114c-1.335-.472-2.768-.22-4.119-.521a.969.969,0,0,1-.684-.814l-.594-.537c-.244-.236-.627-.26-.814-.529l-.529-.342A1.913,1.913,0,0,1,4.208,22.578Z'\r\n                            transform='translate(0.002 0.014)'\r\n                            fill={color}\r\n                        />\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        )\r\n    }\r\n\r\n    if (type === 'list') {\r\n        return (\r\n            <svg className={`${styles[type]}`} xmlns='http://www.w3.org/2000/svg' width='267.316' height='26.931' viewBox='0 0 267.316 26.931'>\r\n                <path\r\n                    id='Path_60'\r\n                    data-name='Path 60'\r\n                    d='M10.229,22.578l-.673-.26c-1.444-.366-1.978-1.074-3.284-1.49C3.84,20.079,3.5,18.614.556,18.044A1.347,1.347,0,0,1,.1,17.653c-.341-.6.18-1.235,1.345-1.628,2.334-.61,4.985-.431,7.537-.456.876.029,1.755.029,2.631,0a3.5,3.5,0,0,0,1.34-.214c.354-.146.542-.346.52-.551.119-.48-.138-.814-1.424-.871A8.487,8.487,0,0,1,10.8,13.77c-2.235-.456-2.334-1.083-.257-1.7a10.411,10.411,0,0,0,1.325-.448,5.16,5.16,0,0,1,1.6-.383c1.622-.244,3.739.3,4.926-.545a1.011,1.011,0,0,0-.593-.374q-.842-.256-1.6-.554c-.569-.211-.928-.5-1.009-.814.269-.877-.97-1.715-2.987-2.019-2-.423-3.462-1.042-1.484-2.051,5.5-1.628,11.987-1.937,18.4-2.328,3.086-.309,6.29-.187,9.376-.48a28.141,28.141,0,0,1,3.521-.09,13.688,13.688,0,0,0,4.668-.147,11.345,11.345,0,0,1,4.174-.106,15.811,15.811,0,0,0,5.638-.2,19.52,19.52,0,0,1,5.341.122c3.956-.6,8.051-.391,12.047-.667,1.859-.147,3.8-.114,5.657-.3a51.868,51.868,0,0,1,8.644.13,1.4,1.4,0,0,0,.653,0A15.916,15.916,0,0,1,96.93.73H97.6a11.592,11.592,0,0,1,4.649-.423c3.136.129,6.292.148,9.436.057A201.717,201.717,0,0,0,136.493.2a9.383,9.383,0,0,1,4.095.309h.673c2.453-.814,5.222-.456,7.913-.383,3.572.2,7.176.288,10.781.26a50.926,50.926,0,0,1,6.686,0c2.888.317,5.934,0,8.763.244,2.832.189,5.7.284,8.565.285L185.1.958c2.561.178,5.158.254,7.754.228h1.128c2.631.057,5.242.285,7.913.269,3.284,0,6.508.3,9.772.309,1.978.171,4.095.2,6.132.334,1.325.269,3.046.065,4.154.578a26.89,26.89,0,0,0,4.609.309c3.714,0,7.407.131,11.052.392,2.834.211,5.7.235,8.571.333,2.651.3,5.519,0,8.091.5,3.422,0,6.864,0,10.306.081.732,0,1.741.1,1.642.513s-.91.586-1.978.383c-2.512-.09-5-.155-6.132,1.083-.771.814-2.334.562-3.778.488-1.306.228-2.769.147-4.075.358-.652.055-1.313.091-1.978.106-3.778.078-7.522.335-11.157.765,1.978.676,3.027,1.555,5.479,1.758a10.354,10.354,0,0,1,3.462.334c-.138,1.026-2.275.586-3.521.814a3.213,3.213,0,0,1-.93-.065.031.031,0,0,0,0,.057h9.653a4.468,4.468,0,0,1,2.235.448c-.593.814-2.572.521-3.857.814-.989.212-2.809.187-1.325.961q.444.215.949.407a69.98,69.98,0,0,0,7.28.155c.777-.028,1.558-.028,2.334,0,1.978.147,2.572.44.989,1.156-2.611,1.188-5.934,2.165-7.319,3.769,4.233,0,8.664.041,13.1,0,2.1.4,2.136.92.574,1.547-.493.221-.756.514-.732.814.277.35.178.733.514,1.074,1.365,1.384,1.207,1.547-2.1,2.068-2.064.36-4.211.633-6.409.814-3.818.049-7.576.521-11.434.309-3.956-.554-8.091.212-12.126-.081a55.789,55.789,0,0,0-11.869.147,15.064,15.064,0,0,1-5.044.488H193.858a33.325,33.325,0,0,0-4.609.179c-1.474.085-2.963.118-4.451.1-10.9,0-21.759.081-32.7,0a28.531,28.531,0,0,0-4.273.187,54.277,54.277,0,0,1-6.093.106h-1.286q-3.8.085-7.6,0h-1.167a35.951,35.951,0,0,1-4.194-.1,65.578,65.578,0,0,0-8.585-.2c-5.4.065-10.84-.106-16.221.163A39.063,39.063,0,0,1,98,26.289q-.553.012-1.108,0c-3.125,0-6.251.106-9.376.049a73.383,73.383,0,0,0-8.249,0c-3.2.2-6.488-.138-9.673.187-2.053.144-4.129.223-6.211.236-3.323-.366-6.587.342-9.891.106-.375-.008-.746-.032-1.108-.073a55.413,55.413,0,0,0-6.587-.179c-2.947-.09-5.934-.236-8.822-.342q-1.269-.144-2.572-.228c-1.668-.079-3.346-.117-5.024-.114-3.244-.472-6.726-.22-10.009-.521-.9-.111-1.551-.431-1.662-.814l-1.444-.537c-.593-.236-1.523-.26-1.978-.529L13,23.188A8.056,8.056,0,0,1,10.229,22.578Z'\r\n                    transform='translate(0.002 0.014)'\r\n                    fill={color} />\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport ProjectContext from '../../contexts/ProjectContext';\r\nimport ListColor from '../ListColor'\r\nimport styles from './index.module.css';\r\n\r\nconst ButtonHideList = ( { list, type } ) => {\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    function onClick() {\r\n        const newHiddenLists = [...projectContext.hiddenLists]\r\n        \r\n        if (newHiddenLists.includes(list._id)) {\r\n            const index = newHiddenLists.indexOf(list._id)\r\n            newHiddenLists.splice(index, 1)\r\n        } else {\r\n            newHiddenLists.push(list._id)\r\n        }\r\n        projectContext.setHiddenLists(newHiddenLists)\r\n    }\r\n\r\n    return (\r\n    <button onClick={onClick} className={`${styles.submit} ${projectContext.hiddenLists.includes(list._id) && styles.opacity}`} >\r\n        <ListColor color={list.color || '#A6A48E'} type={type} />\r\n        <div className={styles.name} title={list.name} >{list.name}</div>\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default ButtonHideList","import React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst ButtonClean = ({ title, onClick, type, className, children, style }) => {\r\n    return (\r\n        <button\r\n            type={type || 'button'}\r\n            onClick={onClick}\r\n            className={`${styles.clean} ${className}`}\r\n            style={style}\r\n        >\r\n            {title}{children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonClean","import React, { useContext, useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext)\r\n}\r\n\r\nexport function SocketProvider({ user, children }) {\r\n  const [socket, setSocket] = useState()\r\n  const url = window.location.href.includes('heroku') ? '/' : 'http://localhost:4000'\r\n    \r\n  useEffect(() => {\r\n    if (!user) {\r\n      return\r\n    }\r\n\r\n    if (!user.teams) {\r\n      return\r\n    }\r\n    const username = user.username\r\n    const userId = user.id\r\n    const teams = [...user.teams]\r\n    const teamsId = teams.map( t => t._id)\r\n    const teamsStr = JSON.stringify(teamsId)\r\n    const newSocket = io(\r\n      url, {\r\n        query: { teamsStr, username, userId },\r\n        transports: ['websocket']\r\n      }\r\n    )\r\n    setSocket(newSocket)\r\n\r\n    return () => newSocket.close()\r\n  }, [user, url])\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst Transparent = (props) => {\r\n    return (\r\n    <>\r\n    <div onClick={props.hideForm} className={styles.transparent}></div>\r\n    {props.children}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Transparent\r\n","import React from 'react'\r\n\r\nconst TeamContext = React.createContext({\r\n  teams: [] ,\r\n  setTeams: () => {},\r\n  selectedTeam: 'Select' ,\r\n  setSelectedTeam: () => {},\r\n  getCurrentTeam: () => {},\r\n  currentTeam: '',\r\n  setCurrentTeam: () => {},\r\n  getTeams: () => {}\r\n})\r\n\r\nexport default TeamContext","import React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst ButtonGrey = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonGrey","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport ButtonGrey from '../ButtonGrey'\r\n\r\nconst ConfirmDialog = ({ title, hideConfirm, onConfirm, onDecline }) => {\r\n    const accept = () => {\r\n        hideConfirm()\r\n        onConfirm()\r\n    }\r\n\r\n    const decline = () => {\r\n        hideConfirm()\r\n        if (onDecline) onDecline()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles['transparent-confirm']}></div>\r\n            <div className={styles.container}>\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt='logo' width='194' height='142' />\r\n                </div>\r\n                <div className={styles.title}>{`Are you sure you want to ${title}?`}</div>\r\n                <div className={styles.buttons}>\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        title={'Yes'}\r\n                        onClick={accept}\r\n                    />\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        title={'No'}\r\n                        onClick={decline}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfirmDialog","import styles from './index.module.css'\r\nimport Image from 'cloudinary-react/lib/components/Image'\r\nimport Transformation from 'cloudinary-react/lib/components/Transformation'\r\nimport Avatar from 'react-avatar'\r\n\r\nexport default function AvatarUser({ user, onClick, className, size }) {\r\n\r\n    return (\r\n\r\n        user.image ?\r\n                <Image\r\n                    publicId={user.image.publicId}\r\n                    onClick={onClick}\r\n                    className={`${styles['profile-picture']} ${className}`}\r\n                    title={user.username}\r\n                >\r\n                    <Transformation width={size} height={size} gravity='faces' crop='fill' />\r\n                </Image>\r\n\r\n            :\r\n\r\n            <Avatar\r\n                className={className}\r\n                onClick={onClick}\r\n                name={user.username}\r\n                size={size}\r\n                round={true}\r\n                maxInitials={2}\r\n            />\r\n    )\r\n}","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from '../utils/cookie'\r\n\r\nconst PROJECTS_URL = '/api/projects'\r\n\r\nexport default function useProjectsServices() {\r\n    const history = useHistory()\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const getProjectInfo = useCallback(async (projectId) => {\r\n        const response = await fetch(`${PROJECTS_URL}/info/${projectId}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const createProject = useCallback(async (name, description, teamId, members) => {\r\n        const response = await fetch(`${PROJECTS_URL}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                teamId,\r\n                members\r\n            })\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const editProject = useCallback(async (projectId, name, description, isFinished) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                isFinished\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const deleteProject = useCallback(async (projectId) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const changeUserRole = useCallback(async (projectId, memberRoleId, memberAdmin) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}/user-roles`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                userRole: memberRoleId,\r\n                isAdmin: !memberAdmin\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n    \r\n    const addProjectMember = useCallback(async (projectId, member) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}/user`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                member,\r\n                admin: false\r\n            })\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        \r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const removeProjectMember = useCallback(async (projectId, memberId) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}/user-remove`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                memberId\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    return {\r\n        getProjectInfo,\r\n        createProject,\r\n        editProject,\r\n        deleteProject,\r\n        changeUserRole,\r\n        addProjectMember,\r\n        removeProjectMember\r\n    }\r\n}","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from '../utils/cookie'\r\n\r\nconst TEAMS_URL = '/api/teams'\r\n\r\nexport default function useTeamServices() {\r\n    const history = useHistory()\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const getTeamUsers = useCallback(async (currentTeamId) => {\r\n        const response = await fetch(`${TEAMS_URL}/get-users/${currentTeamId}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        }\r\n        const data = await response.json()\r\n        return data\r\n    },[history])\r\n\r\n    const createTeam = useCallback(async (name, description, requests) => {\r\n        const response = await fetch(`${TEAMS_URL}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                requests\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        const team = await response.json()\r\n        return team\r\n    },[history])\r\n\r\n    const updateTeam = useCallback(async (teamId, name, description, members, requests) => {\r\n\r\n        const response = await fetch(`${TEAMS_URL}/${teamId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members,\r\n                requests\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        const updatedTeam = await response.json()\r\n        return updatedTeam\r\n    },[history])\r\n\r\n    const removeTeamInvitations = useCallback(async (teamId, removeInvitation) => {\r\n\r\n        const response = await fetch(`${TEAMS_URL}/removeInvitations/${teamId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({ removeInvitation })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        console.log('success');\r\n    },[history])\r\n\r\n    const deleteTeam = useCallback(async (teamId) => {\r\n        const response = await fetch(`${TEAMS_URL}/${teamId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        }\r\n        const deletedTeam = await response.json()\r\n        return deletedTeam\r\n    },[history])\r\n\r\n    const teamInvitations = useCallback(async (teamId, message, accepted) => {\r\n        const response = await fetch(`${TEAMS_URL}/invitations/${teamId}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                message,\r\n                accepted\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        const user = await response.json()\r\n        return user\r\n    },[history])\r\n\r\n    const getTeamInvitationInfo = useCallback(async (teamId) => {\r\n        const response = await fetch(`${TEAMS_URL}/${teamId}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        const team = await response.json()\r\n        return team\r\n    },[history])\r\n\r\n    const getUserTeams = useCallback(async () => {\r\n        const promise = await fetch(`${TEAMS_URL}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n        if (!promise.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        const response = await promise.json()\r\n        return response\r\n    },[history])\r\n\r\n\r\n\r\n    return {\r\n        getTeamUsers,\r\n        createTeam,\r\n        updateTeam,\r\n        removeTeamInvitations,\r\n        deleteTeam,\r\n        teamInvitations,\r\n        getTeamInvitationInfo,\r\n        getUserTeams\r\n    }\r\n}","import React, { useCallback, useContext, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ButtonClean from '../ButtonClean'\r\nimport useProjectsServices from '../../services/useProjectsServices'\r\nimport useTeamServices from '../../services/useTeamServices'\r\n\r\n\r\nexport default function AddProjectMember(props) {\r\n\r\n    const socket = useSocket()\r\n    const [users, setUsers] = useState([])\r\n    const context = useContext(UserContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState(props.project.membersRoles)\r\n    const isAdmin = props.admin\r\n    const projectId = props.project._id\r\n    const params = useParams()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n    const { changeUserRole, addProjectMember, removeProjectMember } = useProjectsServices()\r\n    const { getTeamUsers } = useTeamServices()\r\n\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('team-update', params.teamid)\r\n    }, [socket, props, params.teamid])\r\n\r\n    async function handleOnDragEnd(result) {\r\n\r\n        if (!result.destination) {\r\n            console.log('no destination');\r\n            return\r\n        }\r\n\r\n        const memberRoleId = result.draggableId\r\n\r\n        const member = members.filter(a => a._id === memberRoleId)[0]['memberId']\r\n\r\n        if (member._id === context.user.id) {\r\n            console.log('can`t move self');\r\n            return\r\n        }\r\n\r\n        const memberAdmin = members.filter(a => a._id === memberRoleId)[0]['admin']\r\n\r\n        if (result.destination.droppableId === 'admins' && memberAdmin) {\r\n            return\r\n        }\r\n\r\n        if (result.destination.droppableId === 'members' && !memberAdmin) {\r\n            return\r\n        }\r\n\r\n        let arr = [...members]\r\n        let newArr = arr.filter(m => m._id !== memberRoleId)\r\n        let updatedUser = members.filter(a => a._id === memberRoleId)[0]\r\n        updatedUser.admin = !memberAdmin\r\n        newArr.push(updatedUser)\r\n        setMembers(newArr)\r\n\r\n        await changeUserRole(projectId, memberRoleId, memberAdmin)\r\n\r\n        updateProjectSocket()\r\n\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        if (member._id === context.user.id) {\r\n            return\r\n        }\r\n\r\n        await removeProjectMember(projectId, member._id)\r\n\r\n        updateProjectSocket()\r\n        let arr = [...members]\r\n        let newArr = arr.filter(m => m.memberId._id !== member._id)\r\n        setMembers(newArr)\r\n    }\r\n\r\n    const handleAdd = async (member) => {\r\n\r\n        if (!member) {\r\n            setIsActive(!isActive)\r\n            return\r\n        }\r\n\r\n        const memberRole = await addProjectMember(projectId, member)\r\n        updateProjectSocket()\r\n        memberRole.memberId = member\r\n        setIsActive(!isActive)\r\n        let arr = [...members]\r\n        arr.push(memberRole)\r\n        setMembers(arr)\r\n        setUsers([])\r\n    }\r\n\r\n    const onFocus = async () => {\r\n\r\n        if (users.length === 0) {\r\n            let currentTeamId = ''\r\n\r\n            teamContext.teams.map(t => {\r\n                return (\r\n                    t.projects.map(p => {\r\n                        if (p._id === projectId) {\r\n                            currentTeamId = t._id\r\n                        }\r\n                        return currentTeamId\r\n                    })\r\n                )\r\n            })\r\n\r\n            const data = await getTeamUsers(currentTeamId)\r\n\r\n            let teamUsers = data.members\r\n\r\n            const filtered = teamUsers.filter((e) => {\r\n                const found = members.find(element => element.memberId.username === e.username)\r\n                if (found) {\r\n                    return false\r\n                } else {\r\n                    return true\r\n                }\r\n            })\r\n\r\n            setUsers(filtered)\r\n        }\r\n\r\n        setShowMembers(true)\r\n\r\n\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n\r\n    let confirmationObjectFunctions = {\r\n        'delete this member': deleteMember\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n            <div className={styles['big-container']}>\r\n                {isAdmin ?\r\n                    <div>\r\n                        <div className={styles['input-container']}>\r\n                            <span className={styles['text-invite']}>Add Members</span>\r\n                            <div className={styles['invite-input']}>\r\n                                <input\r\n                                    className={styles['members-input']}\r\n                                    autoComplete='off'\r\n                                    value={member}\r\n                                    onFocus={onFocus}\r\n                                    onBlur={onBlur}\r\n                                    onChange={(e) => setMember(e.target.value)}\r\n                                    label='Invite members'\r\n                                    id='members'\r\n                                    placeholder='Teammate Username'\r\n                                />\r\n                                <div className={styles['select-for-invite']}>\r\n                                    {\r\n                                        showMembers &&\r\n                                        <div className={styles.members}>\r\n                                            {\r\n                                                users.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(context.user.username))\r\n                                                    .filter((e) => {\r\n                                                        const found = members.find(element => element.username === e.username)\r\n                                                        if (found) {\r\n                                                            return false\r\n                                                        } else {\r\n                                                            return true\r\n                                                        }\r\n                                                    })\r\n                                                    .sort((a, b) => a.username.localeCompare(b.username))\r\n                                                    .map(u => {\r\n                                                        return (\r\n                                                            <ButtonClean\r\n                                                                key={u._id}\r\n                                                                className={styles.user}\r\n                                                                onClick={() => { handleAdd(u) }}\r\n                                                                title={<div>\r\n                                                                    <div>{u.username}</div>\r\n                                                                    <div className={styles.email}>{u.email}</div>\r\n                                                                </div>}\r\n                                                            />)\r\n                                                    })\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                            <div className={styles['admins-container']}>\r\n                                <span className={styles.title}>Admins:</span>\r\n                                <Droppable droppableId={'admins'}>\r\n                                    {(provided) => (\r\n                                        <div className={styles.droppable} ref={provided.innerRef}  {...provided.droppableProps} >\r\n                                            {\r\n                                                members.filter(a => a.admin === true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index}>\r\n                                                            {(provided) => (\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                    <AvatarUser user={element.memberId}\r\n                                                                        size={40} />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n\r\n                            <div className={styles['members-container']}>\r\n                                <span className={styles.title}>Members:</span>\r\n                                <Droppable droppableId={'members'}>\r\n                                    {(provided) => (\r\n                                        <div className={styles['droppable-members']} ref={provided.innerRef} {...provided.droppableProps}>\r\n                                            {\r\n                                                members.filter(a => a.admin !== true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index} >\r\n                                                            {(provided) => (\r\n\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                    <AvatarUser user={element.memberId}\r\n                                                                        // key={index} \r\n                                                                        size={40} round={true}\r\n                                                                        onClick={() => {\r\n                                                                            setConfirmOpen(true)\r\n                                                                            setConfirmTitle('delete this member')\r\n                                                                            setCurrElement(element.memberId)\r\n                                                                        }}\r\n                                                                    />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n                        </DragDropContext>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className={styles['admins-container']}>\r\n                            <span className={styles.title}>Admins:</span>\r\n                            <div className={styles.droppable}>\r\n                                {\r\n                                    members.filter(a => a.admin === true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index} >\r\n                                                <AvatarUser user={element.memberId} size={40} />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={styles['admins-container']}>\r\n                            <span className={styles.title}>Members:</span>\r\n                            <div className={styles.droppable}>\r\n                                {\r\n                                    members.filter(a => a.admin !== true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index}>                                                                                                <AvatarUser user={element.memberId} size={40} />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","function isUserAdmin(id, members) {\r\n    \r\n    const member = members.find( m => m.memberId._id === id )\r\n    if (!member) {\r\n        return false\r\n    }\r\n\r\n    return member.admin\r\n}\r\n\r\nexport default isUserAdmin\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AddProjectMember from '../AddProjectMember'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport useProjectsServices from '../../services/useProjectsServices'\r\n\r\n\r\nexport default function EditProject(props) {\r\n    const [name, setName] = useState(props.project.name)\r\n    const [description, setDescription] = useState(props.project.description)\r\n    const [isFinished, setIsFinished] = useState(props.project.isFinished)\r\n    const members = props.project.membersRoles\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const { editProject, deleteProject } = useProjectsServices()\r\n\r\n    const projectId = props.project._id\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n    }, [socket, props])\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id, props])\r\n\r\n\r\n\r\n    async function handleSubmit() {\r\n        await editProject(projectId, name, description, isFinished)\r\n        updateProjectSocket()\r\n        props.hideForm()\r\n        socket.emit('team-update', params.teamid)\r\n    }\r\n\r\n    async function handleDeleteProject() {\r\n        await deleteProject(projectId)\r\n        props.hideForm()\r\n        const deletedProject = {\r\n            projectId: props.project._id,\r\n            teamId: params.teamid\r\n        }\r\n        socket.emit('project-deleted', deletedProject)\r\n        history.push(`/team/${params.teamid}`)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this project'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => handleDeleteProject()}\r\n                />\r\n            }\r\n\r\n            <div className={styles.container} >\r\n                <div className={styles.title} >Project</div>\r\n\r\n                <div className={styles['input-container']}>\r\n                    <span> Name</span>\r\n                    <input\r\n                        className={styles['input-pr-name']}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label='Name'\r\n                        id='name'\r\n                    />\r\n                </div>\r\n                <div className={styles['input-container-descr']}>\r\n                    <span> Description</span>\r\n                    <textarea\r\n                        className={styles['text-area-descr']}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        label='Description'\r\n                        id='description'\r\n                        placeholder='Project Description'\r\n                        spellCheck='false'\r\n                    />\r\n                </div>\r\n                <div className={styles['edit-members']}>\r\n                    <AddProjectMember admin={isAdmin} project={props.project} members={members} />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {isAdmin ?\r\n                    <div className={styles['buttons-div']}>\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Edit'} onClick={handleSubmit} />\r\n                        <ButtonGrey className={styles['navigate-buttons']}\r\n                            title={isFinished ?\r\n                                'Set Current' : 'Set Finished'}\r\n                            onClick={() => setIsFinished(!isFinished)} />\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Delete Project'}\r\n                            onClick={() => {\r\n                                setConfirmOpen(true)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport LinkComponent from '../Link'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport menu from '../../images/aside/menu.svg'\r\nimport home from '../../images/aside/home.svg'\r\nimport tasks from '../../images/aside/tasks.svg'\r\nimport inbox from '../../images/aside/inbox.svg'\r\nimport bell from '../../images/aside/inbox-bell.svg'\r\nimport projectInfo from '../../images/aside/project-info.svg'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport ButtonHideList from '../ButtonHideList'\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport Transparent from '../Transparent'\r\nimport EditProject from '../EditProject'\r\n\r\nexport default function Aside({ asideOn, setAsideOn }) {\r\n    const [listVisibility, setListVisibility] = useState(false)\r\n    const [editProjectVisibility, setEditProjectVisibility] = useState(false)\r\n    const [editProjectButtonVisibility, setEditProjectButtonVisibility] = useState(false)\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const logIn = userContext.logIn\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('project')) {\r\n            setListVisibility(true)\r\n            setEditProjectButtonVisibility(true)\r\n        }\r\n    }, [])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        logIn(response)\r\n    }, [logIn])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <div className={styles.aside}>\r\n            <aside className={styles.container}>\r\n                <div className={styles['top-left']}>\r\n                    <ButtonClean\r\n                        className={styles.hamburger}\r\n                        onClick={() => setAsideOn(!asideOn)}\r\n                        title={<img className={styles.options} src={menu} alt='menu' width='32' height='24' />}\r\n                    />\r\n                </div>\r\n                <LinkComponent\r\n                    href='/'\r\n                    title={<img src={home} alt='home' width='34' height='32' />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/my-tasks/${userContext.user.id}`}\r\n                    title={<img src={tasks} alt='my-tasks' width='30' height='25' />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/inbox/${userContext.user.id}`}\r\n                    title={<>\r\n                        <img src={inbox} alt='inbox' width='33' height='34' />\r\n                        {userContext.user.inbox.length !== 0 &&\r\n                            <img className={styles.bell} src={bell} alt='inbox' width='33' height='34' />\r\n                        }\r\n                    </>}\r\n                />\r\n                {editProjectButtonVisibility &&\r\n                    <ButtonClean\r\n                        className={styles.settings}\r\n                        onClick={() => setEditProjectVisibility(!editProjectVisibility)}\r\n                        title={<img className={styles.options} src={projectInfo} alt='' width='40' />}\r\n                    />\r\n                }\r\n            </aside>\r\n            {asideOn &&\r\n                <div className={styles.menu}>\r\n                    <div className={styles['top-right']}>\r\n                        <div className={styles.logo}>\r\n                            <img src={logo} alt='logo' width='87' height='65' />\r\n                        </div>\r\n                        <LinkComponent\r\n                            href='/'\r\n                            title='Home'\r\n                            className={styles.link}\r\n                        />\r\n                        <LinkComponent\r\n                            href={`/my-tasks/${userContext.user.id}`}\r\n                            title='My Tasks'\r\n                            className={styles.link}\r\n                        />\r\n                        <LinkComponent\r\n                            href={`/inbox/${userContext.user.id}`}\r\n                            title='Inbox'\r\n                            className={styles.link}\r\n                        />\r\n                        {editProjectButtonVisibility &&\r\n                            <ButtonClean\r\n                                className={styles.link}\r\n                                onClick={() => setEditProjectVisibility(!editProjectVisibility)}\r\n                                title={'Settings'}\r\n                            />\r\n                        }\r\n                    </div>\r\n                    {listVisibility && <div className={styles['bottom-right']}>\r\n                        {\r\n                            projectContext.lists.map((element) => {\r\n                                return (\r\n                                    <ButtonHideList key={element._id} list={element} type={'aside'} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>}\r\n                </div>\r\n            }\r\n\r\n            {editProjectVisibility &&\r\n                < div >\r\n                    <Transparent hideForm={() => setEditProjectVisibility(!editProjectVisibility)} >\r\n                        <EditProject hideForm={() => setEditProjectVisibility(!editProjectVisibility)} project={projectContext.project} />\r\n                    </Transparent >\r\n                </div >\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const useDetectOutsideClick = () => {\r\n  const [isActive, setIsActive] = useState(false)\r\n  const ref = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const onClick = e => {\r\n      // If the active element exists and is clicked outside of\r\n      if (ref.current !== null && !ref.current.contains(e.target)) {\r\n        setIsActive(!isActive)\r\n      }\r\n    }\r\n\r\n    // If the item is active (ie open) then listen for clicks outside\r\n    if (isActive) {\r\n      window.addEventListener('click', onClick)\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('click', onClick)\r\n    }\r\n  }, [isActive])\r\n\r\n  return [isActive, setIsActive, ref]\r\n}","import React, { useContext } from 'react'\r\nimport styles from './index.module.css'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport TeamContext from '../../contexts/TeamContext'\r\n\r\n\r\nexport default function SearchResults(props) {\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const teams = userContext.user.teams\r\n    const searchInput = props.searchInput\r\n\r\n    let resultArr = []\r\n\r\n    for (let index = 0; index < teams.length; index++) {\r\n        const team = teams[index];\r\n        let obj = { 'name': `Team: ${team.name}`, 'id': team._id, 'type': 'team' }\r\n        resultArr.push(obj)\r\n        for (let index = 0; index < team.projects.length; index++) {\r\n            const project = team.projects[index];\r\n            let obj = { 'name': `Project: ${project.name}`, 'id': project._id, 'type': 'project' }\r\n            resultArr.push(obj)\r\n        }\r\n    }\r\n\r\n    const gotToPage = (id) => {\r\n        for (let index = 0; index < teams.length; index++) {\r\n            const team = teams[index];\r\n            if (team._id === id) {\r\n                history.push(`/team/${id}`)\r\n                teamContext.updateSelectedTeam(team._id)\r\n                props.hideForm()\r\n            }\r\n            for (let index = 0; index < team.projects.length; index++) {\r\n                const project = team.projects[index];\r\n                if (project._id === id) {\r\n                    history.push(`/project-board/${team._id}/${project._id}`)\r\n                    teamContext.updateSelectedTeam(team._id)\r\n                    props.hideForm()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles['search-container']}>\r\n            {\r\n                resultArr.filter(u => u.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n                    .map((t, index) => {\r\n                        return (\r\n                            <div key={index} className={styles.result} onClick={() => { gotToPage(t.id) }}>{t.name}</div>\r\n                        )\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/search.eabb7a59.svg\";","import React, { useState } from 'react'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport SearchResults from '../SearchResults'\r\nimport styles from './index.module.css'\r\nimport searchImg from '../../images/search.svg'\r\n\r\n\r\nconst SearchField = ({ asideOn }) => {\r\n    const [searchInput, setSearchInput] = useState('')\r\n    const [showSearchForm, setShowSearchForm, dropdownRefSearch] = useDetectOutsideClick()\r\n    const [showSearchInput, setShowSearchInput] = useState(false)\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => (setShowSearchForm(false)), 120)\r\n        setTimeout(() => (setShowSearchInput(!showSearchInput)),120)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles['search-button']} onClick={() => setShowSearchInput(!showSearchInput)} >\r\n                <img className={styles['search-icon']} src={searchImg} alt='search' />\r\n            </div>\r\n            <div className={showSearchInput ? \r\n                ( asideOn? \r\n                    (`${styles['new-line']} ${styles['search-fields']} ${styles['small']} `)\r\n                    :(`${styles['new-line']} ${styles['search-fields']}`)) \r\n                : styles['search-fields']} >\r\n                <input \r\n                    className={styles.input} \r\n                    type='text'\r\n                    placeholder={!showSearchForm ? 'Search...' : 'Enter Project or Team name'}\r\n                    autoComplete='off'\r\n                    value={searchInput}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                    onClick={() => setShowSearchForm(true)}\r\n                    onBlur={onBlur}\r\n                />\r\n                {\r\n                    (\r\n                        searchInput.length > 0\r\n                        &&\r\n                        showSearchForm) ?\r\n                        <div ref={dropdownRefSearch}>\r\n                            <SearchResults searchInput={searchInput} hideForm={() => { setShowSearchForm(!showSearchForm); setSearchInput('') }} />\r\n                        </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchField","import React from 'react';\r\nimport styles from './index.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinkComponentTitle = ({ title, href, className, onClick }) => {\r\n    return (\r\n            <Link to={href} className={`${styles.link} ${className}`} onClick={onClick} title={title} >\r\n                {title}\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponentTitle","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport useUserServices from '../../services/useUserServices'\r\nimport useTeamServices from '../../services/useTeamServices'\r\n\r\n\r\nexport default function CreateTeam(props) {\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const { getAllUsers } = useUserServices()\r\n    const { createTeam } = useTeamServices()\r\n\r\n\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const users = await getAllUsers()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u._id !== input._id)\r\n        setMembers(arr)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }    \r\n        const team = await createTeam(name, description, members)\r\n        const arr = [...teamContext.teams]\r\n        arr.push(team)        \r\n        teamContext.setTeams(arr)\r\n        teamContext.setSelectedTeam(team.name)\r\n        props.hideForm()\r\n        socket.emit('team-update', team._id)\r\n        socket.emit('multiple-messages-sent', members)\r\n        history.push(`/team/${team._id}`)\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n\r\n            <div className={styles.title} >Create New Team</div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label='Name'\r\n                    id='name'\r\n                    placeholder='Team Name'\r\n                    autocomplete='off'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span className={styles['description-text']}> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label='Description'\r\n                    id='description'\r\n                    placeholder='Team Description'\r\n                    spellCheck='false'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-members']}>\r\n                <span className={styles['members-text']}> Invite Members</span>\r\n\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['input-members']}\r\n                        autoComplete='off'\r\n                        value={member}\r\n                        onChange={inputMembers}\r\n                        label='Invite members'\r\n                        id='members'\r\n                        placeholder='username'\r\n                        onBlur={onBlur}\r\n\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            showMembers &&\r\n                            <div className={styles['members-pop-up']}>\r\n                                <div className={styles.members}>\r\n                                    {\r\n                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                            .filter((e) => {\r\n                                                const found = members.find(element => element.username === e.username)\r\n                                                if (found) {\r\n                                                    return false\r\n                                                } else {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                            .map(u => {\r\n                                                return (\r\n                                                    <ButtonClean\r\n                                                        key={u._id}\r\n                                                        className={styles.user}\r\n                                                        onClick={() => addMember(u)}\r\n                                                        title={<div>\r\n                                                            <div>{u.username}</div>\r\n                                                            <div className={styles.email}>{u.email}</div>\r\n                                                        </div>}\r\n                                                    />)\r\n                                            })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map(m => {\r\n                        return (\r\n                            <ButtonClean\r\n                                onClick={() => removeMember(m)}\r\n                                title={\r\n                                    <AvatarUser user={m} size={40} />\r\n                                }\r\n                            />\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n                <ButtonGrey onClick={(e) => handleSubmit(e)} title='Create' className={styles['create-button']} />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst ButtonCleanTitle = ({ title, onClick, type, className, children, style }) => {\r\n    return (\r\n        <button\r\n            type={type || 'button'}\r\n            onClick={onClick}\r\n            className={`${styles.clean} ${className}`} style={style}\r\n            title={title}\r\n        >{title}{children}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonCleanTitle","import React, { useContext, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport LinkComponentTitle from '../LinkTitle'\r\nimport ButtonClean from '../ButtonClean'\r\nimport Transparent from '../Transparent'\r\nimport CreateTeam from '../CreateTeam'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonCleanTitle from '../ButtonCleanTitle'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function TeamDropdown() {\r\n    const teamContext = useContext(TeamContext)\r\n    const [showTeamForm, setShowTeamForm] = useState(false)\r\n    const [isTeamActive, setIsTeamActive, teamRef] = useDetectOutsideClick()\r\n\r\n    function selectTeam(teamId, teamName) {\r\n        teamContext.getCurrentProjects(teamId)\r\n        teamContext.setSelectedTeam(teamName)\r\n        setIsTeamActive(false)\r\n    }\r\n\r\n    return (\r\n        <div className={`${styles.container} ${styles['team-media']}`}>\r\n            <div className={styles.title}>Team:</div>\r\n            <div className={styles['dropdown-container']}>\r\n                <ButtonCleanTitle\r\n                    className={styles.button}\r\n                    onClick={() => setIsTeamActive(!isTeamActive)}\r\n                    title={teamContext.selectedTeam}\r\n                />\r\n                {isTeamActive && <div className={styles.dropdown} ref={teamRef}>\r\n                    <div className={styles['options-container']}>\r\n                        {teamContext.teams.map(t => (\r\n                            <LinkComponentTitle\r\n                                href={`/team/${t._id}`}\r\n                                key={t._id}\r\n                                title={t.name}\r\n                                onClick={() => { selectTeam(t._id, t.name) }}\r\n                                className={styles.options}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <ButtonClean\r\n                        onClick={() => setShowTeamForm(true)}\r\n                        title='Create Team'\r\n                        className={`${styles.options} ${styles['last-option']}`}\r\n                    />\r\n                </div>}\r\n            </div>\r\n            {showTeamForm && (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n                <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n            </Transparent>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport useProjectsServices from '../../services/useProjectsServices'\r\nimport useTeamServices from '../../services/useTeamServices'\r\n\r\nexport default function CreateProject({ hideForm }) {\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const socket = useSocket()\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [areMembersShown, setAreMembersShown] = useState(false)\r\n    const [allTeamMembers, setAllTeamMembers] = useState([])\r\n    const { user } = useContext(UserContext)\r\n    const { createProject } = useProjectsServices()\r\n    const { getTeamUsers } = useTeamServices()\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if (name === '') {\r\n            return\r\n        }\r\n        const project = await createProject(name, description, params.teamid, members)\r\n        hideForm && hideForm()\r\n        socket.emit('team-update', params.teamid)\r\n        history.push(`/project-board/${params.teamid}/${project._id}`)\r\n    }\r\n\r\n    const onFocus = async () => {\r\n        setAreMembersShown(true)\r\n        const teamId = params.teamid\r\n        if (allTeamMembers.length === 0) {\r\n            const users = await getTeamUsers(teamId)\r\n            setAllTeamMembers(users.members)\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setAreMembersShown(false), 120)\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const membersArray = [...members]\r\n        membersArray.push(input)\r\n        setMembers(membersArray)\r\n        setAreMembersShown(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const membersArray = members.filter(member => member._id !== input._id)\r\n        setMembers(membersArray)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            <div className={styles.title} >Create New Project</div>\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label='Name'\r\n                    id='name'\r\n                    placeholder='Project Name'\r\n                    autoComplete='off'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label='Description'\r\n                    id='description'\r\n                    placeholder='Project Description'\r\n                    spellCheck='false'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span className={styles['text-invite']}>Add Members</span>\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['members-input']}\r\n                        autoComplete='off'\r\n                        value={member}\r\n                        onFocus={onFocus}\r\n                        onBlur={onBlur}\r\n                        onChange={(e) => setMember(e.target.value)}\r\n                        label='Invite members'\r\n                        id='members'\r\n                        placeholder='Teammate Username'\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            areMembersShown &&\r\n                            <div className={styles.members}>\r\n                                {\r\n                                    allTeamMembers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(user.username))\r\n                                        .filter((e) => {\r\n                                            const found = members.find(element => element.username === e.username)\r\n                                            if (found) {\r\n                                                return false\r\n                                            } else {\r\n                                                return true\r\n                                            }\r\n                                        })\r\n                                        .sort((a, b) => a.username.localeCompare(b.username))\r\n                                        .map(u => {\r\n                                            return (\r\n                                                <ButtonClean\r\n                                                    key={u._id}\r\n                                                    className={styles.user}\r\n                                                    onClick={() => addMember(u)}\r\n                                                    title={<div>\r\n                                                        <div>{u.username}</div>\r\n                                                        <div className={styles.email}>{u.email}</div>\r\n                                                    </div>}\r\n                                                />)\r\n                                        })\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map((member, index) => {\r\n                        return (\r\n                            <span key={index}>\r\n                                <AvatarUser user={member} onClick={() => removeMember(member)} size={40} />\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n                <ButtonGrey\r\n                    title='Create'\r\n                    className={styles['create-button']}\r\n                    onClick={(e) => handleSubmit(e)}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport LinkComponentTitle from '../LinkTitle'\r\nimport { useParams } from 'react-router-dom'\r\nimport ButtonClean from '../ButtonClean'\r\nimport Transparent from '../Transparent'\r\nimport CreateProject from '../CreateProject'\r\nimport ButtonCleanTitle from '../ButtonCleanTitle'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function ProjectDropdown() {\r\n    const teamContext = useContext(TeamContext)\r\n    const projectContext = useContext(ProjectContext)\r\n    const params = useParams()\r\n    const [showProjectForm, setShowProjectForm] = useState(false)\r\n    const [showOldProjects, setShowOldProjects] = useState(false)\r\n    const [isProjectActive, setIsProjectActive, projectRef] = useDetectOutsideClick()\r\n\r\n    useEffect(() => {\r\n        if (projectContext.project.isFinished === true) {\r\n            setShowOldProjects(true)\r\n        } else {\r\n            setShowOldProjects(false)\r\n        }\r\n    }, [projectContext.project.isFinished])\r\n\r\n\r\n    return (\r\n        <div className={`${styles.container} ${styles['project-media']}`}>\r\n            <div className={styles.title}>Project:</div>\r\n            <div className={styles['dropdown-container']}>\r\n                <ButtonCleanTitle\r\n                    className={styles.button}\r\n                    onClick={() => setIsProjectActive(!isProjectActive)}\r\n                    title={projectContext.project.name}\r\n                />\r\n                {isProjectActive && <div ref={projectRef} className={styles.dropdown} >\r\n                    <div className={styles['options-container']} >\r\n                        {teamContext.currentProjects.filter(!showOldProjects ? (p => (p.isFinished === false) || (p.isFinished === undefined)) : (p => (p.isFinished === true)))\r\n                            .reverse()\r\n                            .map(p => (\r\n                                <LinkComponentTitle\r\n                                    href={`/project-board/${params.teamid}/${p._id}`}\r\n                                    key={p._id}\r\n                                    title={p.name}\r\n                                    onClick={() => { setIsProjectActive(false) }}\r\n                                    className={styles.options}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <ButtonClean\r\n                        onClick={() => setShowProjectForm(true)}\r\n                        title='Create Project'\r\n                        className={`${styles.options} ${styles['last-option']}`}\r\n                    />\r\n                </div>}\r\n            </div>\r\n\r\n            {showProjectForm && <Transparent hideForm={() => setShowProjectForm(false)}>\r\n                <CreateProject hideForm={() => setShowProjectForm(false)} />\r\n            </Transparent>}\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function ViewDropdown() {\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const projectContext = useContext(ProjectContext)\r\n    const [isViewActive, setIsViewActive, viewRef] = useDetectOutsideClick()\r\n    const [viewState, setViewState] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('board')) {\r\n            setViewState('Board')\r\n        }\r\n        if (window.location.href.includes('list')) {\r\n            setViewState('List')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.title}>View:</div>\r\n            <div className={styles['dropdown-container']}>\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setIsViewActive(!isViewActive)}\r\n                    title={viewState}\r\n                />\r\n                {isViewActive && <div ref={viewRef} className={styles.dropdown} >\r\n                    <ButtonClean\r\n                        title='Board'\r\n                        className={styles.options}\r\n                        onClick={() => { history.push(`/project-board/${params.teamid}/${projectContext.project._id}`); setIsViewActive(false) }}\r\n                    />\r\n                    <ButtonClean\r\n                        title='List'\r\n                        className={`${styles.options} ${styles['last-option']}`}\r\n                        onClick={() => { history.push(`/project-list/${params.teamid}/${projectContext.project._id}`); setIsViewActive(false) }}\r\n                    />\r\n                </div>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport AvatarUser from '../AvatarUser'\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\n\r\nexport default function ProfileDropdown() {\r\n    const history = useHistory()\r\n    const context = useContext(UserContext)\r\n    const [isProfileActive, setIsProfileActive, profileRef] = useDetectOutsideClick()\r\n\r\n    return (<div className={styles['dropdown-container']}>\r\n        <ButtonClean\r\n            className={styles.avatar}\r\n            onClick={() => setIsProfileActive(!isProfileActive)}\r\n            title={<AvatarUser user={context.user} size={40} />}\r\n        />\r\n        {isProfileActive &&\r\n            <div\r\n                ref={profileRef}\r\n                className={`${styles.dropdown} ${styles.profile}`}\r\n            >\r\n                <ButtonClean\r\n                    title='Profile'\r\n                    className={`${styles.options} ${styles.profile}`}\r\n                    onClick={() => history.push(`/profile/${context.user && context.user.id}`)}\r\n                />\r\n\r\n                <ButtonClean\r\n                    onClick={context.logOut}\r\n                    title='Log Out'\r\n                    className={`${styles.options} ${styles['last-option']} ${styles.profile}`}\r\n                />\r\n            </div>\r\n        }\r\n    </div>)\r\n}\r\n","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport styles from './index.module.css'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport SearchField from '../SearchField'\r\nimport TeamDropdown from '../HeaderDropdowns/TeamDropdown'\r\nimport ProjectDropdown from '../HeaderDropdowns/ProjectDropdown'\r\nimport ViewDropdown from '../HeaderDropdowns/ViewDropdown'\r\nimport ProfileDropdown from '../HeaderDropdowns/ProfileDropdown'\r\nimport useProjectsServices from '../../services/useProjectsServices'\r\n\r\nconst Header = ({ asideOn }) => {\r\n    const [isProjectVisibble, setIsProjectVisibble] = useState(false)\r\n    const [isViewVisibble, setIsViewVisibble] = useState(false)\r\n    const projectContext = useContext(ProjectContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const { getProjectInfo } = useProjectsServices()\r\n\r\n    const getData = useCallback(async () => {\r\n        const data = await getProjectInfo(params.projectid)\r\n        projectContext.setProject(data)\r\n    }, [getProjectInfo, params, projectContext])\r\n\r\n    const goToHomePage = useCallback((deletedTeamId) => {\r\n        if (deletedTeamId !== params.teamid) return\r\n        history.push('/')\r\n    }, [history, params.teamid])\r\n\r\n    const goToTeamPage = useCallback((deletedProjectId) => {\r\n        if (deletedProjectId !== params.projectid) return\r\n        history.push(`/team/${params.teamid}`)\r\n    }, [history, params.projectid, params.teamid])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) {\r\n            teamContext.setSelectedTeam('Select')\r\n            return\r\n        }\r\n\r\n        if (teamContext.selectedTeam === 'Select') {\r\n            const teamId = params.teamid\r\n            teamContext.updateSelectedTeam(teamId)\r\n        }\r\n\r\n        if (window.location.href.includes('project')) {\r\n            setIsViewVisibble(true)\r\n            setIsProjectVisibble(true)\r\n            teamContext.getCurrentProjects(params.teamid)\r\n\r\n            if (projectContext.project === null || projectContext.project._id !== params.projectid) {\r\n                getData()\r\n            }\r\n        }\r\n    }, [getData, params, params.teamid, projectContext.project, teamContext,])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) return\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('team-deleted', goToHomePage)\r\n        return () => socket.off('team-deleted')\r\n    }, [goToHomePage, socket])\r\n\r\n    useEffect(() => {\r\n        if (!window.location.href.includes('project')) return\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-deleted', goToTeamPage)\r\n        return () => socket.off('project-deleted')\r\n    }, [goToTeamPage, socket])\r\n\r\n    if (window.location.href.includes('project') && !projectContext.project) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <header className={`${styles.navigation} ${asideOn ? styles.small : ''}`} >\r\n            <div className={styles.container}>\r\n                <div className={styles.links}>\r\n                    <TeamDropdown />\r\n                    {isProjectVisibble && <ProjectDropdown />}\r\n                    {isViewVisibble && <ViewDropdown />}\r\n                </div>\r\n\r\n                <div className={`${styles.links} ${styles.font}`}>\r\n                    <SearchField asideOn={asideOn} />\r\n                    <ProfileDropdown />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\nimport Aside from '../Aside'\r\nimport Header from '../Header'\r\nimport styles from './index.module.css'\r\n\r\nconst PageLayout = ({ children, contentClassName }) => {\r\n  const [asideOn, setAsideOn] = useState(false)\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <Aside asideOn={asideOn} setAsideOn={setAsideOn} />\r\n      <Header asideOn={asideOn} />\r\n      <div \r\n        className={contentClassName ? contentClassName : `${styles.content} ${asideOn ? styles.small : ''}`}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageLayout","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst Title = ( {title} ) => {\r\n    return (\r\n    <div className={styles.title}>{title}</div>\r\n    )\r\n}\r\n\r\nexport default Title","import React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst ButtonGreyTitle = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`} title={title} >{title}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonGreyTitle","export default __webpack_public_path__ + \"static/media/home-page-pic.97aa1e71.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\n\r\nconst MyTeamsMenu = ({ userTeams, goToTeamPage }) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles['teams-container']}>\r\n            {\r\n                userTeams.length > 0 ?\r\n                    userTeams.map((team, index) => {\r\n                        return (\r\n\r\n                            <div key={index}\r\n                                className={styles['buttons-teams']}\r\n                                onClick={() => goToTeamPage(team._id)}\r\n                                title={team.name}\r\n                            >\r\n                                {team.name}\r\n                            </div>\r\n\r\n\r\n                        )\r\n                    }\r\n                    )\r\n                    : 'You have not joined any teams yet'\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTeamsMenu\r\n","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Transparent from '../../components/Transparent'\r\nimport CreateTeam from '../../components/CreateTeam'\r\nimport Title from '../../components/Title'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonGreyTitle from '../../components/ButtonGreyTitle'\r\nimport homePagePicture from '../../images/home-page-pic.svg'\r\nimport MyTeamsMenu from '../../components/MyTeamsMenu'\r\n\r\n\r\nconst Home = () => {\r\n  const history = useHistory()\r\n  const { user } = useContext(UserContext)\r\n  const [isTeamFormShown, setIsTeamFormShown] = useState(false)\r\n  const [areUserTeamsShown, setAreUserTeamsShown, dropdownRef] = useDetectOutsideClick()\r\n  const userName = user.username\r\n  const userTeams = user.teams\r\n  const userId = user._id\r\n  const userRecentProjects = user.recentProjects\r\n\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n  const goToProjectPage = (projectId) => {\r\n    userTeams.map(team => {\r\n      return (\r\n        team.projects.forEach(project => {\r\n          if (project._id === projectId) {\r\n            history.push(`/project-board/${team._id}/${projectId}`)\r\n          }\r\n        })\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <PageLayout>\r\n      <>\r\n        {\r\n          isTeamFormShown &&\r\n          <Transparent hideForm={() => setIsTeamFormShown(false)}>\r\n            <CreateTeam hideForm={() => { setIsTeamFormShown(false) }} />\r\n          </Transparent>\r\n        }\r\n      </>\r\n      <Title title='Home' />\r\n      <div className={styles.container}>\r\n        <div className={styles['left-buttons']}>\r\n          <ButtonGreyTitle\r\n            className={styles['navigate-buttons']}\r\n            title={'My Tasks'}\r\n            onClick={() => history.push(`/my-tasks/${userId}`)}\r\n          />\r\n\r\n          <ButtonGreyTitle\r\n            className={styles['navigate-buttons']}\r\n            title={'My Teams'}\r\n            onClick={() => setAreUserTeamsShown(!areUserTeamsShown)}\r\n          />\r\n\r\n          <div className={styles['select-team-container']} ref={dropdownRef}>\r\n            {\r\n              areUserTeamsShown &&\r\n              <MyTeamsMenu userTeams={userTeams} goToTeamPage={goToTeamPage} />\r\n            }\r\n          </div>\r\n\r\n          <ButtonGreyTitle\r\n            className={styles['navigate-buttons']}\r\n            title={'Create New Team'}\r\n            onClick={() => setIsTeamFormShown(true)}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles['pic-container']}>\r\n          <img className={styles.pic1} src={homePagePicture} alt='' />\r\n\r\n          <div className={styles['welcome-user']}>\r\n            {`Welcome ${userName}!`}\r\n          </div>\r\n\r\n          <ButtonGreyTitle\r\n            className={styles['navigate-buttons']}\r\n            title={'Get Started'}\r\n            onClick={() => history.push(`/get-started/`)}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles['right-buttons']}>\r\n          {\r\n            userRecentProjects &&\r\n            <>\r\n              <div >Recent projects:</div>\r\n              {\r\n                userRecentProjects.slice(0).reverse().map((project) => {\r\n                  return (\r\n                    <div key={project._id}>\r\n                      <ButtonGreyTitle\r\n                        className={styles['navigate-buttons']}\r\n                        title={project.name}\r\n                        onClick={() => goToProjectPage(project._id)}\r\n                      />\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </>\r\n          }\r\n        </div>\r\n      </div>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div>\r\n            {props.alert ? (<div className={styles.alert}>\r\n                {props.message}\r\n            </div>) : null}\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useContext, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Alert from '../Alert'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\n\r\n\r\nexport default function AddPassword(props) {\r\n    const [password, setPassword] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const { addNewPassword } = useUserServices()\r\n\r\n\r\n    const userContext = useContext(UserContext)\r\n\r\n\r\n    const history = useHistory()\r\n    const userId = props.userId\r\n\r\n\r\n\r\n    const handleSubmit = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n\r\n\r\n        if (!password || !rePassword) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n\r\n        const response = await addNewPassword(userId, password)\r\n        userContext.logIn(response.user)\r\n        history.push('/')\r\n                \r\n\r\n    }, [history, userContext, password, rePassword, userId, addNewPassword])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form className={styles.container} >\r\n\r\n            <div className={styles['inner-container']}>\r\n\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt='logo' width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    </div>\r\n\r\n                    <div className={styles.title} >Add password to user</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['pass-input']}\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            label='New Password'\r\n                            id='password'\r\n                        />\r\n\r\n\r\n\r\n                        <div className={styles['pass-instructions']}>\r\n                            <p>Use 8 or more characters with a mix </p>\r\n                            <p>of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Confirm Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['pass-input']}\r\n                            type='password'\r\n                            value={rePassword}\r\n                            onChange={e => setRePassword(e.target.value)}\r\n                            label='Confirm Password'\r\n                            id='rePassword'\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className={styles['new-pass-alert']}>\r\n                        Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n                        </div>\r\n\r\n                    <div className={styles['button-div-login']}>\r\n                        <button type='submit' className={styles['login-button']} onClick={handleSubmit}>Submit</button>\r\n                    </div>\r\n\r\n                    <div className={styles['text-login']}>User was registered with Google. Please add password for this Website</div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google.e72ffc18.svg\";","import React, { useState, useContext } from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport Transparent from '../Transparent'\r\nimport AddPassword from '../FormAddPassword'\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from '../Alert'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [userId, setUserId] = useState('')\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n    const { userLogin, googleLoginUser } = useUserServices()\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n\r\n        const response = await userLogin(email, password)\r\n        if (response.needPassword) {\r\n            setUserId(response.userId)\r\n            setShowForm(true)\r\n            return\r\n        }\r\n        if (response.wrongPassword) {\r\n            setWrongPassAllert(true)\r\n            return\r\n        }\r\n        if (response.wrongUser) {\r\n            setWrongUserAllert(true)\r\n            return\r\n        }\r\n        context.logIn(response)\r\n        history.push('/')\r\n    }\r\n\r\n    const handleGoogle = async (googleResponse) => {\r\n        const tokenId = googleResponse.tokenId\r\n        const user = await googleLoginUser(tokenId)\r\n        context.logIn(user)\r\n        history.push('/')\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setShowForm(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                showForm &&\r\n                <Transparent hideForm={hideForm}>\r\n                    <AddPassword hideForm={hideForm} userId={userId} email={email} />\r\n                </Transparent>\r\n            }\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n                <div className={styles['inner-container']}>\r\n\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt='logo' width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n                        <div className={styles.alerts}>\r\n                            <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                            <Alert alert={wrongPassAllert} message={'Wrong Password'} />\r\n                            <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                        </div>\r\n\r\n                        <div className={styles.title} >Log In with E-mail</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles['email-input']}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label='Email'\r\n                                id='email'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Password:</div>\r\n                            <input\r\n                                className={styles['pass-input']}\r\n                                placeholder='********'\r\n                                type='password'\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label='Password'\r\n                                id='password'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['button-div-login']}>\r\n                            <button type='submit' className={styles['login-button']}>Log In</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['text-div']}>\r\n                            <p className={styles['forgot-pass']}\r\n                                onClick={() => { props.goToForgotPassword(); props.hideForm() }}>\r\n                                Forgot Password?\r\n                        </p>\r\n                            <p className={styles['new-to-sm']}>\r\n                                New to Smart Manager?\r\n                        <button className={styles['sign-up-btn']}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                        </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['button-div-google-login']}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles['google-login-btn']}\r\n                                    >\r\n                                        <img src={google} alt='logo' width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText='Login'\r\n                                onSuccess={handleGoogle}\r\n                                // onFailure={errorGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n\r\n","import React, { useContext, useState } from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport styles from './index.module.css'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Alert from '../Alert'\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\n\r\n\r\nconst SignupForm = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [userExist, setUserExist] = useState(false)\r\n    const [validEmailAlert, setValidEmailAlert] = useState(false)\r\n    const { logIn } = useContext(UserContext)\r\n    const history = useHistory()\r\n    const { registerUser, googleLoginUser } = useUserServices()\r\n\r\n\r\n    function validateEmail(email) {\r\n        var re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\r\n        return re.test(email);\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        setValidEmailAlert(false)\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n        setUserExist(false)\r\n\r\n        const valid = validateEmail(email)\r\n\r\n        if (!valid) {\r\n            setValidEmailAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n\r\n        if (!username || !password || !rePassword || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        const response = await registerUser(email, username, password)\r\n\r\n        if (response.exist) {\r\n            setUserExist(true)\r\n            return\r\n        }\r\n\r\n        logIn(response)\r\n        history.push('/')\r\n\r\n    }\r\n\r\n    const handleGoogle = async (googleResponse) => {\r\n        const tokenId = googleResponse.tokenId\r\n        const user = await googleLoginUser(tokenId)\r\n        logIn(user)\r\n        history.push('/')        \r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n\r\n            <div className={styles['inner-container']}>\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt='logo' width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={userExist} message={'User with this email already exists'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                        <Alert alert={validEmailAlert} message={'Please enter valid email address'} />\r\n                    </div>\r\n                    <div className={styles.title}  >Sign Up with E-mail</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Username:</div>\r\n                        <input\r\n                            placeholder='John Smith'\r\n                            className={styles['sign-up-input']}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            label='Username'\r\n                            id='username'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Email:</div>\r\n                        <input\r\n                            placeholder='John@example.com'\r\n                            className={styles['sign-up-input']}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            label='Email'\r\n                            id='email'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            label='Password'\r\n                            id='password'\r\n                        />\r\n                        <div className={styles['pass-instructions']}>\r\n                            <p>Use 8 or more characters with a</p>\r\n                            <p>mix of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Re-type Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type='password'\r\n                            value={rePassword}\r\n                            onChange={(e) => setRePassword(e.target.value)}\r\n                            label='Re-Password'\r\n                            id='re-password'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['button-div-login']}>\r\n                        <button type='submit' className={styles['sign-up-button']}>Get Started</button>\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <h3>\r\n                            or\r\n                        </h3>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles['button-div-google-login']}>\r\n                        <GoogleLogin\r\n                            render={renderProps => (\r\n                                <button onClick={renderProps.onClick}\r\n                                    className={styles['google-login-btn']}\r\n                                >\r\n                                    <img src={google} alt='logo' width='25' height='25' />Sign Up with Google</button>\r\n                            )}\r\n                            clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                            buttonText='Sign up with Google'\r\n                            onSuccess={handleGoogle}\r\n                            // onFailure={errorGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <p className={styles['already-sign-up']}>\r\n                            Already Sign Up?\r\n                        <button className={styles['sign-up-btn']} onClick={() => { props.goToLogin(); props.hideForm() }}>Log In</button>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SignupForm;","import React, { useState, useContext } from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from '../Alert'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\n\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n    const { userLogin, addNewPassword, googleLoginUser } = useUserServices()\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n        if (password !== rePassword) {\r\n            setWrongPassAllert(true)\r\n            return\r\n        }\r\n\r\n        const response = await userLogin(email, password)\r\n\r\n        if (response.wrongUser) {\r\n            setWrongUserAllert(true)\r\n            return\r\n        }\r\n        let userId\r\n        console.log('Error', response)\r\n        if (response.id) {\r\n            userId = response.id\r\n        }\r\n        if (response.userId) {\r\n            userId = response.userId\r\n        }\r\n\r\n        const changePassResponse = await addNewPassword(userId, password)\r\n        context.logIn(changePassResponse.user)\r\n        history.push('/')\r\n\r\n    }\r\n\r\n    const handleGoogle = async (googleResponse) => {\r\n        const tokenId = googleResponse.tokenId\r\n        const user = await googleLoginUser(tokenId)\r\n        context.logIn(user)\r\n        history.push('/')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n                <div className={styles['inner-container']}>\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt='logo' width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n                        <div className={styles.alerts}>\r\n                            <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                            <Alert alert={wrongPassAllert} message={'Passwords do not match'} />\r\n                            <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                        </div>\r\n\r\n                        <div className={styles.title} >Forgot Password Form</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles.emailInput}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label='Email'\r\n                                id='email'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type='password'\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label='Password'\r\n                                id='password'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>Re-type New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type='password'\r\n                                value={rePassword}\r\n                                onChange={e => setRePassword(e.target.value)}\r\n                                label='Confirm Password'\r\n                                id='rePassword'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles.buttonDivLogin}>\r\n                            <button type='submit' className={styles.loginButton}>Submit</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.textDiv}>\r\n\r\n                            <p className={styles.newToSmM}>\r\n                                New to Smart Manager?\r\n                        <button className={styles.signUpBtn}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                        </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.buttonDivGoogleLogin}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles.googleLoginBtn}\r\n                                    >\r\n                                        <img src={google} alt='logo' width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText='Login'\r\n                                onSuccess={handleGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordForm;","export default __webpack_public_path__ + \"static/media/welcome-page-1.6bf905f1.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-2.5280cdb7.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-3.012ae353.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-4.8390671d.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-5.1c8ad840.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-6.55796ee0.svg\";","export default __webpack_public_path__ + \"static/media/twitter-icon.738a4da0.svg\";","export default __webpack_public_path__ + \"static/media/facebook-icon.0b7bb0f2.svg\";","export default __webpack_public_path__ + \"static/media/instagram-icon.8c3f39e6.svg\";","import React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport LoginForm from '../../components/LoginForm'\r\nimport Transparent from '../../components/Transparent'\r\nimport SignupForm from '../../components/SignupForm'\r\nimport ForgotPasswordForm from '../../components/FormForgotPassword'\r\nimport logo from '../../images/logo.svg'\r\nimport welcomePagePic1 from '../../images/welcome-page/welcome-page-1.svg'\r\nimport welcomePagePic2 from '../../images/welcome-page/welcome-page-2.svg'\r\nimport welcomePagePic3 from '../../images/welcome-page/welcome-page-3.svg'\r\nimport welcomePagePic4 from '../../images/welcome-page/welcome-page-4.svg'\r\nimport welcomePagePic5 from '../../images/welcome-page/welcome-page-5.svg'\r\nimport welcomePagePic6 from '../../images/welcome-page/welcome-page-6.svg'\r\nimport twitter from '../../images/welcome-page/twitter-icon.svg'\r\nimport facebook from '../../images/welcome-page/facebook-icon.svg'\r\nimport instagram from '../../images/welcome-page/instagram-icon.svg'\r\n\r\n\r\nconst WelcomePage = () => {\r\n  const [isLogInFormShown, setIsLogInFormShown] = useState(false)\r\n  const [isSignUpFormShown, setIsSignUpFormShown] = useState(false)\r\n  const [isForgotPassFormShown, setIsForgotPassFormShown] = useState(false)\r\n  \r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {\r\n        isLogInFormShown &&\r\n        <Transparent hideForm={() => setIsLogInFormShown(!isLogInFormShown)} >\r\n          <LoginForm\r\n            hideForm={() => setIsLogInFormShown(!isLogInFormShown)}\r\n            goToSignUp={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n            goToForgotPassword={() => setIsForgotPassFormShown(!isForgotPassFormShown)}\r\n          />\r\n        </Transparent >\r\n      }\r\n      {\r\n        isSignUpFormShown &&\r\n        <Transparent hideForm={() => setIsSignUpFormShown(!isSignUpFormShown)} >\r\n          <SignupForm\r\n            hideForm={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n            goToLogin={() => setIsLogInFormShown(!isLogInFormShown)}\r\n          />\r\n        </Transparent >\r\n      }\r\n      {\r\n        isForgotPassFormShown &&\r\n        <Transparent hideForm={() => setIsForgotPassFormShown(!isForgotPassFormShown)} >\r\n          <ForgotPasswordForm\r\n            hideForm={() => setIsForgotPassFormShown(!isForgotPassFormShown)}\r\n            goToSignUp={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n          />\r\n        </Transparent >\r\n      }\r\n\r\n      <div className={styles['content-wrap']}>\r\n        <div className={styles['top-container']}>\r\n          <div className={styles['top-div-container']}>\r\n            <div className={styles['header-nav']}>\r\n              <span className={styles.logo}>\r\n                <img src={logo} alt='logo' width='100%' height='100%' />\r\n              </span>\r\n              <span className={styles['first-buttons']}>\r\n                <button\r\n                  className={styles['login-button']}\r\n                  onClick={() => setIsLogInFormShown(!isLogInFormShown)}\r\n                >Log In</button>\r\n                <button\r\n                  className={styles['sign-up-button']}\r\n                  onClick={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n                >Sign Up</button>\r\n              </span>\r\n            </div>\r\n            <div className={styles.pic1}>\r\n              <img src={welcomePagePic1} alt='' width='100%' />\r\n            </div>\r\n            <div className={styles.pic2}>\r\n              <img src={welcomePagePic2} alt='' width='100%' />\r\n            </div>\r\n          </div>\r\n          <div className={styles['lower-div-container']}>\r\n            <div className={styles['first-text']}>\r\n              <p className={styles.headers}>\r\n                Manage your work in a\r\n                <span className={styles.lucida}>Smart</span>\r\n                 way!</p>\r\n              <div className={styles.paragraph}>\r\n                <p >The ideas get more clear, organized and focused on.</p>\r\n                <p >Flexible and time saving for the whole team. </p>\r\n                <button\r\n                  className={styles['second-sign-up-button']}\r\n                  onClick={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n                >Free Sign Up</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles['second-container']}>\r\n          <div className={styles['first-row']}>\r\n            <div className={styles['second-text']}>\r\n              <p className={styles.headers}>Work and participate in different teams </p>\r\n              <div className={styles.paragraph}>\r\n                <p >Follow who and when is doing tasks. Be always</p>\r\n                <p >informed with the accomplishment of the projects. </p>\r\n                <button\r\n                  className={styles['third-sign-up-button']}\r\n                  onClick={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n                >Try It Now</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles['pic3-container']}>\r\n              <img className={styles.picture} src={welcomePagePic3} alt='' />\r\n            </div>\r\n          </div>\r\n          <div className={styles['second-row']}>\r\n            <div className={styles['pic4-container']}>\r\n              <img className={styles.picture} src={welcomePagePic4} alt='' />\r\n            </div>\r\n            <div className={styles['second-row-colum']}>\r\n              <div className={styles['second-text']}>\r\n                <p className={styles.headers}>Еаsy to manage all the information</p>\r\n                <div className={styles.paragraph}>\r\n                  <p >Add stickers, notes, comments, attachments in your</p>\r\n                  <p >  Smart Manager.</p>\r\n                  <p >Collaborate with others in your Team.</p>\r\n                </div>\r\n              </div>\r\n              <div className={styles['second-row-pic']} >\r\n                <img className={styles.picture} src={welcomePagePic5} alt='' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles['third-row']}>\r\n            <div className={styles['second-text']}>\r\n              <p className={styles.headers}>Start your <span className={styles.lucida}>Smart Manager</span> Now </p>\r\n              <div className={styles.paragraph}>\r\n                <p >Connect with other teams from <span className={styles.lucida}>The Smart Family</span>,</p>\r\n                <p > save time with more work done.</p>\r\n                <button className={styles['second-sign-up-button']} onClick={() => setIsSignUpFormShown(!isSignUpFormShown)} >Get Started</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles['pic6-container']}>\r\n              <img className={styles.picture} src={welcomePagePic6} alt='' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <footer className={styles.footer}>\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>Contact Us</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>+359 52 317 395</p>\r\n            <p>smartmanager@gmail.com</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>SERVICES</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>Contact Us</p>\r\n            <p>Ordering & Payment FAQ</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>INFORMATION</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>About SMART MANAGER</p>\r\n            <p>Work With US</p>\r\n            <p>Privacy Policy</p>\r\n            <p>Terms & Conditions</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['last-column']}>\r\n          <div className={styles['social-media-container']}>\r\n            <span>\r\n              <img className={styles['social-media']} src={instagram} alt='' />\r\n            </span>\r\n            <span>\r\n              <img className={styles['social-media']} src={twitter} alt='' />\r\n            </span>\r\n            <span>\r\n              <img className={styles['social-media']} src={facebook} alt='' />\r\n            </span>\r\n          </div>\r\n          <div className={styles.sd2006}>SD2006</div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WelcomePage","export default __webpack_public_path__ + \"static/media/profile-page-pic.258ed489.svg\";","export default __webpack_public_path__ + \"static/media/pen.2057bbca.svg\";","import React, { useState, useEffect, useCallback, useContext } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { Image, Transformation } from 'cloudinary-react'\r\nimport Loader from 'react-loader-spinner'\r\nimport Title from '../../components/Title'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport Alert from '../../components/Alert'\r\nimport ButtonGrey from '../../components/ButtonGrey'\r\nimport ConfirmDialog from '../../components/ConfirmationDialog'\r\nimport MyTeamsMenu from '../../components/MyTeamsMenu'\r\nimport useUserServices from '../../services/useUserServices'\r\nimport profilePagePic from '../../images/profile-page-pic.svg'\r\nimport pen from '../../images/pen.svg'\r\n\r\n\r\nconst ProfilePage = () => {\r\n  const params = useParams()\r\n  const history = useHistory()\r\n  const { user, logIn } = useContext(UserContext)\r\n  const [userEmail, setUserEmail] = useState(null)\r\n  const [isPasswordActive, setIsPaswordActive] = useState(false)\r\n  const [isUserNameActive, setIsUserNameActive] = useState(false)\r\n  const [username, setUsername] = useState(user.username)\r\n  const [password, setPassword] = useState(null)\r\n  const [rePassword, setRePassword] = useState(null)\r\n  const [isAlertOn, setIsAlertOn] = useState(false)\r\n  const [areUserTeamsShown, setAreUserTeamsShown, teamRef] = useDetectOutsideClick()\r\n  const [isEditPictureActive, setIsEditPictureActive, dropdownRef] = useDetectOutsideClick()\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n  const { getUser, updateUser, updateUserPassword, updateUserImage } = useUserServices()\r\n\r\n\r\n  const userName = user.username\r\n  const userTeams = user.teams\r\n  const userId = params.userid\r\n  const userImage = user.image\r\n\r\n\r\n  const getData = useCallback(async () => {\r\n    const user = await getUser(userId)\r\n    setUserEmail(user.email)\r\n  }, [getUser, userId])\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [getData])\r\n\r\n  const handleUpdateUser = async (event) => {\r\n    event.preventDefault()\r\n\r\n    setIsAlertOn(false)\r\n    setIsPaswordActive(false)\r\n    setIsUserNameActive(false)\r\n\r\n    if (!username && !password) {\r\n      return\r\n    }\r\n    if (password !== rePassword) {\r\n      setIsAlertOn(true)\r\n      return\r\n    }\r\n    if (username) {\r\n      const user = await updateUser(userId, username)\r\n      logIn(user)\r\n    }\r\n    if (password) {\r\n      const user = await updateUserPassword(userId, password)\r\n      logIn(user)\r\n      return\r\n    }\r\n    getData()\r\n  }\r\n\r\n  function changeProfilePicture() {\r\n    const widget = window.cloudinary.createUploadWidget({\r\n      cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n      uploadPreset: process.env.REACT_APP_UPLOAD_PRESET\r\n    }, async (error, result) => {\r\n      if (result.event === 'success') {\r\n        const path = result.info.path\r\n        const publicId = result.info.public_id\r\n        const newImage = {\r\n          path,\r\n          publicId\r\n        }\r\n        const user = await updateUserImage(userId, newImage, userImage)\r\n        logIn(user)\r\n        getData()\r\n      }\r\n      if (error) {\r\n        history.push('/error')\r\n        return\r\n      }\r\n    })\r\n    widget.open()\r\n  }\r\n\r\n  const deletePic = async () => {\r\n    const newImage = null\r\n    const user = await updateUserImage(userId, newImage, userImage)\r\n    logIn(user)\r\n    getData()\r\n  }\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n  if (!userName) {\r\n    return (\r\n      <PageLayout>\r\n        <Loader\r\n          type='TailSpin'\r\n          color='#363338'\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </PageLayout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <PageLayout>\r\n      {\r\n        isConfirmOpen &&\r\n        <ConfirmDialog\r\n          title={'delete this picture'}\r\n          hideConfirm={() => setIsConfirmOpen(false)}\r\n          onConfirm={() => deletePic()}\r\n        />\r\n      }\r\n      <Title title='Profile' />\r\n      <div className={styles.container}>\r\n        <div className={styles['inputs-container']}>\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey\r\n              title={'Username:'}\r\n              className={styles['navigate-buttons']}\r\n              onClick={() => { setIsUserNameActive(!isUserNameActive) }}\r\n            />\r\n            < input\r\n              ref={function (input) {\r\n                if (input !== null) {\r\n                  input.focus();\r\n                }\r\n              }}\r\n              value={username}\r\n              onChange={e => setUsername(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={userName}\r\n              disabled={!isUserNameActive}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey\r\n              title={'Change Password'}\r\n              className={styles['navigate-buttons']}\r\n              onClick={() => { setIsPaswordActive(!isPasswordActive) }}\r\n            />\r\n            < input\r\n              onChange={e => setPassword(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={'********'}\r\n              disabled={!isPasswordActive}\r\n              type='password'\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.alerts}>\r\n            <Alert alert={isAlertOn} message={'Passwords do not match'} />\r\n          </div>\r\n\r\n          {\r\n            isPasswordActive &&\r\n            <div className={styles['new-pass-alert']}>\r\n              Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n            </div>\r\n          }\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey\r\n              title={'Confirm Password'}\r\n              className={styles['navigate-buttons']}\r\n              onClick={() => { setIsPaswordActive(!isPasswordActive) }}\r\n            />\r\n            < input\r\n              onChange={e => setRePassword(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={'********'}\r\n              disabled={!isPasswordActive}\r\n              type='password'\r\n            />\r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey\r\n              title={'Email:'}\r\n              className={styles['navigate-buttons']}\r\n            />\r\n            < input\r\n              className={styles['input-fields-profile']}\r\n              value={userEmail}\r\n              disabled={true}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles['button-input-div-tasks']}>\r\n            <ButtonGrey\r\n              title={'My Tasks'}\r\n              className={styles['navigate-buttons']}\r\n              onClick={() => history.push(`/my-tasks/${userId}`)}\r\n            />\r\n            < input\r\n              className={styles['input-fields-tasks']}\r\n              value={''}\r\n              disabled={true}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <div className={styles.myTeamsContainer}>\r\n              <ButtonGrey\r\n                title={'My Teams'}\r\n                className={styles['navigate-buttons']}\r\n                onClick={() => setAreUserTeamsShown(!areUserTeamsShown)}\r\n              />\r\n              <div className={styles['select-team-container']} ref={teamRef}>\r\n                {\r\n                  areUserTeamsShown &&\r\n                  <MyTeamsMenu userTeams={userTeams} goToTeamPage={goToTeamPage} />\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles['button-div-save']}>\r\n              <ButtonGrey\r\n                title={'SAVE'}\r\n                className={styles['save-button']}\r\n                onClick={(e) => handleUpdateUser(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['pic-container']}>\r\n          <div className={styles['profile-pic-container']}>\r\n            <div className={styles['profile-pic']}\r\n              onClick={() => {\r\n                userImage ?\r\n                  setIsEditPictureActive(!isEditPictureActive)\r\n                  : changeProfilePicture()\r\n              }}\r\n            >\r\n              {\r\n                userImage ?\r\n                  <div className={styles['profile-picture']}>\r\n                    <Image publicId={userImage.publicId} className={styles['profile-picture-pic']} >\r\n                      <Transformation width='200' height='200' gravity='faces' crop='fill' />\r\n                    </Image>\r\n                    <div className={styles.relative}>\r\n                      {\r\n                        isEditPictureActive &&\r\n                        <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                          <ButtonGrey\r\n                            onClick={changeProfilePicture}\r\n                            title='Edit'\r\n                            className={styles.edit}\r\n                          />\r\n                          <ButtonGrey\r\n                            onClick={() => {\r\n                              setIsConfirmOpen(true)\r\n                            }}\r\n                            title='Delete'\r\n                            className={styles.delete}\r\n                          />\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  :\r\n                  <div className={styles['no-pic']}>\r\n                    <p className={styles['load-pic-text']}>\r\n                      Load a profile picture\r\n                    </p>\r\n                    <img className={styles.pen} src={pen} alt='' />\r\n                  </div>\r\n              }\r\n            </div>\r\n            <p>{userName}</p>\r\n          </div>\r\n          <img className={styles.pic1} src={profilePagePic} alt='' />\r\n        </div>\r\n      </div>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport AvatarUser from '../AvatarUser'\r\n\r\n\r\nconst TeamMembers = ({ members, invited }) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['members-avatars']}>\r\n                <div>\r\n                    Team Members:\r\n                </div>\r\n                {\r\n                    members.map((m, index) => {\r\n                        return (\r\n                            <ButtonClean\r\n                                key={index}\r\n                                title={\r\n                                    <AvatarUser user={m}\r\n                                        size={40}\r\n                                    />}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                invited.length !== 0 &&\r\n                <div className={styles['members-avatars']}>\r\n                    <div>\r\n                        Invited Members:\r\n                    </div>\r\n                    {\r\n                        invited.map((member, index) => {\r\n                            return (\r\n                                <span key={index}>\r\n                                    <AvatarUser user={member} size={40} />\r\n                                </span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamMembers\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamMembers from '../TeamMembers'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport AvatarUser from '../AvatarUser'\r\nimport useTeamServices from '../../services/useTeamServices'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\n\r\nexport default function EditTeam(props) {\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [currTeam, setCurrTeam] = useState(props.currTeam)\r\n    const [name, setName] = useState(currTeam.name)\r\n    const [description, setDescription] = useState(currTeam.description)\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState(currTeam.members)\r\n    const [invited, setInvited] = useState(currTeam.requests)\r\n    const [forInvite, setForInvite] = useState([])\r\n    const [areMembersShown, setAreMembersShown] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n    const { user } = useContext(UserContext)\r\n    const { setSelectedTeam } = useContext(TeamContext)\r\n    const { getAllUsers } = useUserServices()\r\n    const { updateTeam, removeTeamInvitations, deleteTeam } = useTeamServices()\r\n\r\n    const teamId = params.teamid\r\n\r\n    const getData = useCallback(() => {\r\n        user.teams.forEach(team => {\r\n            if (team._id === teamId) {\r\n                setCurrTeam(team)\r\n            }\r\n        })\r\n        let teamAuthor = currTeam.author\r\n        setMembers(currTeam.members)\r\n        setInvited(currTeam.requests)\r\n        setDescription(currTeam.description)\r\n        setName(currTeam.name)\r\n        if (user.id === teamAuthor) {\r\n            setIsAdmin(true)\r\n        }\r\n    }, [user, currTeam.author, currTeam.description, currTeam.members, currTeam.name, currTeam.requests, teamId])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [getData])\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setAreMembersShown(false)\r\n        if (allUsers.length === 0) {\r\n            const users = await getAllUsers()\r\n            setAllUsers(users)\r\n        }\r\n        if (member.length >= 2) {\r\n            setAreMembersShown(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const membersForInvite = [...forInvite]\r\n        membersForInvite.push(input)\r\n        setForInvite(membersForInvite)\r\n        setAreMembersShown(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeTeamMember = async (member) => {\r\n        const updatedMembers = members.filter(m => m._id !== member._id)\r\n        await updateTeam(teamId, name, description, updatedMembers)\r\n        socket.emit('team-update', teamId)\r\n        if (member.id === user.id) {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    const removeInvitation = async (input) => {\r\n        const removeInvitation = input\r\n        await removeTeamInvitations(teamId, removeInvitation)\r\n        getData()\r\n        socket.emit('team-update', teamId)\r\n        socket.emit('message-sent', input._id)\r\n    }\r\n\r\n    const removeMemberForInvite = (input) => {\r\n        const membersForInvite = forInvite.filter(u => u._id !== input._id)\r\n        setForInvite(membersForInvite)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        await updateTeam(teamId, name, description, members, forInvite)\r\n        setSelectedTeam(name)\r\n        getData()\r\n        socket.emit('team-update', teamId)\r\n        socket.emit('multiple-messages-sent', forInvite)\r\n        props.hideForm()\r\n    }\r\n\r\n    const handleDeleteTeam = async() => {\r\n        if (!window.confirm('You will lost all team information - projects, lists and tasks')) {\r\n            return\r\n        }\r\n        const deletedTeam = await deleteTeam(teamId)\r\n        const recievers = [...deletedTeam.members, ...deletedTeam.requests]\r\n        socket.emit('team-deleted', { id: teamId, recievers })\r\n        history.push('/')\r\n        props.hideForm()\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setAreMembersShown(false), 120)\r\n    }\r\n\r\n    const confirmationObjectFunctions = {\r\n        'remove this member': removeMemberForInvite,\r\n        'leave this team': removeTeamMember,\r\n        'delete this member from team': removeTeamMember,\r\n        'delete this member from invited': removeInvitation,\r\n        'delete this team': handleDeleteTeam\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n            <div className={styles.form}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.title} >Team</div>\r\n                    <div className={styles['input-container']}>\r\n                        <span> Name</span>\r\n                        <input\r\n                            className={styles['input-name']}\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                            label='Name'\r\n                            id='name'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container-descr']}>\r\n                        <span> Description</span>\r\n                        <textarea\r\n                            className={styles['text-area-descr']}\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            label='Description'\r\n                            id='description'\r\n                            spellCheck='false'\r\n\r\n                        />\r\n                    </div>\r\n                    {\r\n                        isAdmin &&\r\n                        <div className={styles['input-container-invite']}>\r\n                            <span className={styles['text-invite']}> Invite Members</span>\r\n                            <div className={styles['invite-input']}>\r\n                                <input\r\n                                    className={styles['input-invite']}\r\n                                    autoComplete='off'\r\n                                    value={member}\r\n                                    onChange={inputMembers}\r\n                                    label='Invite members'\r\n                                    id='members'\r\n                                    placeholder='username'\r\n                                    onBlur={onBlur}\r\n                                />\r\n                                <div className={styles['select-for-invite']}>\r\n                                    {\r\n                                        areMembersShown &&\r\n                                        <div className={styles.members}>\r\n                                            {\r\n                                                allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(user.username))\r\n                                                    .filter((e) => {\r\n                                                        const found = members.find(element => element.username === e.username)\r\n                                                        if (found) {\r\n                                                            return false\r\n                                                        } else {\r\n                                                            return true\r\n                                                        }\r\n                                                    })\r\n                                                    .filter((e) => {\r\n                                                        const found = invited.find(element => element.username === e.username)\r\n                                                        if (found) {\r\n                                                            return false\r\n                                                        } else {\r\n                                                            return true\r\n                                                        }\r\n                                                    })\r\n                                                    .filter((e) => {\r\n                                                        const found = forInvite.find(element => element.username === e.username)\r\n                                                        if (found) {\r\n                                                            return false\r\n                                                        } else {\r\n                                                            return true\r\n                                                        }\r\n                                                    })\r\n                                                    .sort((a, b) => a.username.localeCompare(b.username))\r\n                                                    .map((u, index) => {\r\n                                                        return (\r\n                                                            <ButtonClean\r\n                                                                key={index}\r\n                                                                className={styles.user}\r\n                                                                onClick={() => addMember(u)}\r\n                                                                title={<div>\r\n                                                                    <div>{u.username}</div>\r\n                                                                    <div className={styles.email}>{u.email}</div>\r\n                                                                </div>}\r\n                                                            />)\r\n                                                    })\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        isAdmin ?\r\n                            <div className={styles['members-div']}>\r\n                                <div className={styles['members-avatars']}>\r\n                                    <span>\r\n                                        <div>\r\n                                            Send Invitation:\r\n                                        </div>\r\n                                        {\r\n                                            forInvite.map((m, index) => {\r\n                                                return (\r\n                                                    <span key={index}>\r\n                                                        <AvatarUser user={m}\r\n                                                            size={40}\r\n                                                            onClick={() => {\r\n                                                                setIsConfirmOpen(true)\r\n                                                                setConfirmTitle('remove this member')\r\n                                                                setCurrElement(m)\r\n                                                            }} />\r\n                                                    </span>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div className={styles.membersAvatars}>\r\n                                        <div>\r\n                                            Team Members:\r\n                                        </div>\r\n                                        {\r\n                                            members.map((m, index) => {\r\n                                                return (\r\n                                                    <span key={index}>\r\n                                                        <AvatarUser user={m} size={40}\r\n                                                            onClick={() => {\r\n                                                                setIsConfirmOpen(true)\r\n                                                                setConfirmTitle('delete this member from team')\r\n                                                                setCurrElement(m)\r\n                                                            }}\r\n                                                        />\r\n                                                    </span>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        (invited.length !== 0) &&\r\n                                        <div className={styles.membersAvatars}>\r\n                                            <div>\r\n                                                Invited Members:\r\n                                                </div>\r\n                                            {\r\n                                                invited.map((m, index) => {\r\n                                                    return (\r\n                                                        <span key={index}>\r\n                                                            <AvatarUser user={m}\r\n                                                                size={40}\r\n                                                                onClick={() => {\r\n                                                                    setIsConfirmOpen(true)\r\n                                                                    setConfirmTitle('delete this member from invited')\r\n                                                                    setCurrElement(m)\r\n                                                                }}\r\n                                                            />\r\n                                                        </span>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className={styles['button-div']}>\r\n                                    <ButtonGrey\r\n                                        className={styles['create-button']}\r\n                                        onClick={() => handleSubmit()}\r\n                                        title={'Submit Changes'}\r\n                                    />\r\n                                    <ButtonGrey\r\n                                        className={styles['create-button']}\r\n                                        title={'Delete Team'}\r\n                                        onClick={() => {\r\n                                            setIsConfirmOpen(true)\r\n                                            setConfirmTitle('delete this team')\r\n                                            setCurrElement('')\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <TeamMembers\r\n                                    members={members} invited={invited}\r\n                                />\r\n                                {\r\n                                    !props.isMessage &&\r\n                                    <div className={styles['leave-team-btn-div']}>\r\n                                        <ButtonGrey\r\n                                            title={'Leave Team'}\r\n                                            className={styles['leave-team-btn']}\r\n                                            onClick={() => {\r\n                                                setIsConfirmOpen(true)\r\n                                                setConfirmTitle('leave this team')\r\n                                                setCurrElement(user)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport useTeamServices from '../../services/useTeamServices'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\nexport default function useInboxUtils() {\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const userId = params.userid\r\n    const [isMoveActive, setIsMoveActive] = useState(false)  //If move message is invoked this state is set to true and doesn`t allow to move it again\r\n    const { moveMessageToHistory, deleteUserMessage } = useUserServices()\r\n    const { getTeamInvitationInfo } = useTeamServices()\r\n\r\n\r\n\r\n    return {\r\n\r\n        moveToHistory: async function (message) {\r\n            if (isMoveActive) return\r\n            setIsMoveActive(true)\r\n\r\n            await moveMessageToHistory(message)\r\n\r\n            socket.emit('message-sent', userId)\r\n        },\r\n\r\n        deleteMessage: async function (message, setInboxHistory) {\r\n\r\n            const user = await deleteUserMessage(message)\r\n\r\n            setInboxHistory(user.inboxHistory)\r\n        },\r\n\r\n        viewTeam: async function viewTeam(message, setCurrTeam, setShowEditTeamForm) {\r\n            const team = await getTeamInvitationInfo(message.team.id)\r\n\r\n            setCurrTeam(team)\r\n            \r\n            setShowEditTeamForm(true)\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport useTeamServices from '../../services/useTeamServices'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport EditTeam from '../EditTeam'\r\nimport Transparent from '../Transparent'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationInbox({ message, setInbox, setInboxHistory, options }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const userId = params.userid\r\n    const utils = useInboxUtils()\r\n    const { teamInvitations } = useTeamServices()\r\n\r\n    async function acceptInvitation(message, accepted) {\r\n        const user = await teamInvitations(message.team.id, message, accepted)\r\n        socket.emit('team-update', message.team.id)\r\n        setInbox(user.inbox)\r\n        setInboxHistory(user.inboxHistory)\r\n        socket.emit('message-sent', userId)\r\n        socket.emit('message-sent', message.sendFrom._id)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                message.team.isDeleted ?\r\n                    <div>\r\n                        <div className={styles.bold}>Team deleted</div>\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    </div> :\r\n                    <div>\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => acceptInvitation(message, true)}\r\n                            title='Accept'\r\n                        />\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => acceptInvitation(message, false)}\r\n                            title='Decline'\r\n                        />\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.viewTeam(message, setCurrTeam, setShowEditTeamForm)}\r\n                            title='View Team'\r\n                        />\r\n                    </div>\r\n            }\r\n\r\n            {\r\n                showEditTeamForm &&\r\n                <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                    <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                </Transparent>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport EditTeam from '../EditTeam'\r\nimport Transparent from '../Transparent'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationHistory({ message, options, setInboxHistory }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    {message.accepted === undefined ?\r\n                        <div className={styles.container}>\r\n                            <div className={styles.bold}>{message.subject}</div>\r\n                        </div> :\r\n                        <div className={styles.container}>\r\n                            <div className={styles.bold}>{message.subject}:</div>\r\n                            {message.accepted ? <div>Accepted</div> : <div>Declined</div>}\r\n                        </div>\r\n                    }\r\n                    <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                    <div className={styles.inline}>{message.team.name}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                {\r\n                    message.team.isDeleted &&\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Team deleted</div>\r\n                }\r\n                <div>\r\n                    {\r\n                        !message.team.isDeleted &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.viewTeam(message, setCurrTeam, setShowEditTeamForm)}\r\n                            title='View Team'\r\n                        />\r\n                    }\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => setConfirmOpen(true)}\r\n                        title='Delete Message'\r\n                    />\r\n                    {\r\n                        showEditTeamForm &&\r\n                        <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                            <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                        </Transparent>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationResponse({ message, setInboxHistory, options, isInbox }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>{message.subject}:</div>\r\n                    <span>{message.sendFrom.username}{message.accepted ? <span> accepted</span> : <span> declined</span>}</span>\r\n                </div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    isInbox &&\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.moveToHistory(message)}\r\n                        title='Move to History'\r\n                    />\r\n                }\r\n                {\r\n                    !isInbox &&\r\n                    <ButtonGrey\r\n                    className={styles.button}\r\n                    onClick={() => setConfirmOpen(true)} \r\n                    title='Delete Message'\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TaskAssignment({ message, setInboxHistory, options, isInbox }) {\r\n    const history = useHistory()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.inline} ${styles.margin}`}><span className={styles.bold}>Project:</span>{message.project.name}</div>\r\n                <div className={`${styles.inline} ${styles.margin}`}><span className={styles.bold}>List:</span>{message.list.name}</div>\r\n                <div className={`${styles.inline} ${styles.margin}`}><span className={styles.bold}>Task:</span>{message.card.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Assigned by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                (message.team.isDeleted || message.project.isDeleted) &&\r\n                <div className={styles.bold}>Project deleted</div>\r\n            }\r\n            <div>\r\n                {\r\n                    !message.team.isDeleted && !message.project.isDeleted &&\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => history.push(`/project-board/${message.team.id}/${message.project.id}`)}\r\n                        title='Go to Project'\r\n                    />\r\n                }\r\n                {\r\n                    isInbox ?\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.moveToHistory(message)}\r\n                        title='Move to History'\r\n                    /> :\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => setConfirmOpen(true)} \r\n                        title='Delete Message'\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamDeleted({ message, setInboxHistory, options, isInbox }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.container}>\r\n                        <div className={styles.bold}>Team {message.team.name} deleted</div>\r\n                    </div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Deleted by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                <div>\r\n                    {isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    }\r\n                    {!isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => setConfirmOpen(true)}\r\n                            title='Delete Message'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function ProjectDeleted({ message, setInboxHistory, options, isInbox }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            { confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.container}>\r\n                        <div className={styles.bold}>Project {message.project.name} deleted</div>\r\n                    </div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Deleted by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                <div>\r\n                    { isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    }\r\n                    { !isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => setConfirmOpen(true)}\r\n                            title='Delete Message'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport EditTeam from '../EditTeam'\r\nimport Transparent from '../Transparent'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationCanceled({ message, setInboxHistory, options, isInbox }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>{message.subject}</div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                    <div className={styles.inline}>{message.team.name}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                {\r\n                    message.team.isDeleted &&\r\n                    <div className={styles.bold}>Team deleted</div>\r\n                }\r\n                {!message.team.isDeleted &&\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.viewTeam(message, setCurrTeam, setShowEditTeamForm)}\r\n                        title='View Team'\r\n                    />\r\n                }\r\n                {isInbox ?\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.moveToHistory(message)}\r\n                        title='Move to History'\r\n                    /> :\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => setConfirmOpen(true)}\r\n                        title='Delete Message'\r\n                    />\r\n                }\r\n                {showEditTeamForm &&\r\n                    <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                        <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                    </Transparent>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport TeamInvitationInbox from '../../components/Inbox/TeamInvitationInbox'\r\nimport TeamInvitationHistory from '../../components/Inbox/TeamInvitationHistory'\r\nimport TeamInvitationResponse from '../../components/Inbox/TeamInvitationResponse'\r\nimport TaskAssignment from '../../components/Inbox/TaskAssignment'\r\nimport Title from '../../components/Title'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamDeleted from '../../components/Inbox/TeamDeleted'\r\nimport ProjectDeleted from '../../components/Inbox/ProjectDeleted'\r\nimport TeamInvitationCanceled from '../../components/Inbox/TeamInvitationCanceled'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\nconst InboxPage = () => {\r\n    const [inbox, setInbox] = useState([])\r\n    const [inboxHistory, setInboxHistory] = useState([])\r\n    const socket = useSocket()\r\n    const options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }\r\n    const { getUserInbox } = useUserServices()\r\n\r\n\r\n    const getInbox = useCallback(async () => {       \r\n        const user = await getUserInbox()\r\n        setInbox(user.inbox)\r\n        setInboxHistory(user.inboxHistory)\r\n    }, [getUserInbox])\r\n\r\n    useEffect(() => {\r\n        getInbox()\r\n    }, [getInbox])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        setInbox(response.inboxUser.inbox)\r\n        setInboxHistory(response.inboxUser.inboxHistory)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div>\r\n                <Title title='Inbox' />\r\n                {\r\n                    inbox.length === 0 && <div className={styles.title}>Inbox is empty</div>\r\n                }\r\n                {\r\n                    [...inbox].reverse().map(m => {\r\n                        switch (m.subject) {\r\n                            case 'Team invitation':\r\n                                return <TeamInvitationInbox\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                />\r\n\r\n                            case 'Team invitation response':\r\n                                return <TeamInvitationResponse\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Team invitation canceled':\r\n                                return <TeamInvitationCanceled\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Task assignment':\r\n                                return <TaskAssignment\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Team deleted':\r\n                                return <TeamDeleted\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Project deleted':\r\n                                return <ProjectDeleted\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            default:\r\n                                break\r\n                        }\r\n                        return ''\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {\r\n                inboxHistory.length !== 0 &&\r\n                <div>\r\n                    <Title title='History' />\r\n                    {\r\n                        [...inboxHistory].reverse().map(m => {\r\n                            switch (m.subject) {\r\n                                case 'Team invitation':\r\n                                    return <TeamInvitationHistory\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                    />\r\n\r\n                                case 'Team invitation response':\r\n                                    return <TeamInvitationResponse\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team invitation canceled':\r\n                                    return <TeamInvitationCanceled\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Task assignment':\r\n                                    return <TaskAssignment\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team deleted':\r\n                                    return <TeamDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Project deleted':\r\n                                    return <ProjectDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            return ''\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default InboxPage;","export default __webpack_public_path__ + \"static/media/my-tasks.46584e94.svg\";","export default __webpack_public_path__ + \"static/media/pic1.ca559522.svg\";","export default __webpack_public_path__ + \"static/media/pic12.fb545938.svg\";","export default __webpack_public_path__ + \"static/media/pic10.ec534a02.svg\";","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from '../utils/cookie'\r\n\r\nconst CARDS_URL = '/api/projects/lists/cards'\r\n\r\nexport default function useCardsServices() {\r\n    const history = useHistory()\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const createTask = useCallback(async (listId, taskName) => {\r\n        const response = await fetch(`${CARDS_URL}/${listId}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name: taskName,\r\n                progress: ''\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const editTask = useCallback(async (listId, cardId, editedFields) => {\r\n        const response = await fetch(`${CARDS_URL}/${listId}/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify(editedFields)\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n    \r\n    const deleteTask = useCallback(async (listId, cardId) => {\r\n        const response = await fetch(`${CARDS_URL}/${listId}/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        \r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const addTaskMember = useCallback(async (listId, cardId, members, selectedUser, teamId, projectId) => {\r\n        const response = await fetch(`${CARDS_URL}/${listId}/${cardId}/add-member`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                members,\r\n                newMember: selectedUser,\r\n                teamId,\r\n                projectId,\r\n                cardId,\r\n                listId\r\n            })\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const addAttachment = useCallback(async (cardId, attachment) => {\r\n        const response = await fetch(`${CARDS_URL}/attachments/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                attachment\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const removeAttachment = useCallback(async (cardId, attachmentId) => {\r\n        const response = await fetch(`${CARDS_URL}/attachments/${cardId}/${attachmentId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    return {\r\n        createTask,\r\n        editTask,\r\n        deleteTask,\r\n        addTaskMember,\r\n        addAttachment,\r\n        removeAttachment\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport AvatarUser from '../AvatarUser'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\n\r\nexport default function ShowAllTaskMembers({ members, deleteMemberOption, deleteMemberObj }) {\r\n    const socket = useSocket()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n    const { editTask } = useCardsServices()\r\n\r\n    function onClick(m) {\r\n        if (deleteMemberOption) {\r\n            setConfirmOpen(true)\r\n            setCurrElement(m)\r\n        }\r\n    }\r\n\r\n    const updateSocket = () => {\r\n        const { project, teamId } = deleteMemberObj\r\n\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        const { cardMembers, setCardMembers, cardId, listId } = deleteMemberObj\r\n\r\n        const index = cardMembers.indexOf(member)\r\n        const members = [...cardMembers]\r\n\r\n        if (index !== -1) {\r\n            members.splice(index, 1)\r\n        }\r\n\r\n        const editedFields = { members }\r\n        await editTask(listId, cardId, editedFields)\r\n\r\n        updateSocket()\r\n        setCardMembers(members)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this member'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteMember(currElement)}\r\n                />\r\n            }\r\n            <div className={styles['all-card-members']}>\r\n                {members.map((m, index) => {\r\n                    return (\r\n                        <div key={index} className={styles['each-member']} onClick={() => onClick(m)} >\r\n                            <div className={styles.name}>\r\n                                <span className={styles.avatar} key={m._id}>\r\n                                    <AvatarUser user={m}\r\n                                        size={30}\r\n                                        className={styles.avatar}\r\n                                    />\r\n                                </span>\r\n                                <span className={styles.username}>{m.username}</span>\r\n                            </div>\r\n                            {\r\n                                deleteMemberOption ?\r\n                                    <span className={styles['delete-icon']}>x</span>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ShowAllTaskMembers from '../ShowAllTaskMembers'\r\nimport styles from './index.module.css'\r\n\r\nconst MembersList = ({ members, maxLength, deleteMemberOption, deleteMemberObj }) => {\r\n    const [isActive, setIsActive, ref] = useDetectOutsideClick()\r\n\r\n    maxLength = Math.min(maxLength, members.length)\r\n\r\n    return (\r\n        <div\r\n            className={styles.members}\r\n            onClick={() => setIsActive(true)}\r\n            ref={ref}\r\n        >\r\n            { isActive &&\r\n                <ShowAllTaskMembers\r\n                    members={members}\r\n                    deleteMemberOption={deleteMemberOption}\r\n                    deleteMemberObj={deleteMemberObj}\r\n                    setCurrCard\r\n                />\r\n            }\r\n            {(members.length > maxLength) ?\r\n                <>\r\n                    {members.slice(0, maxLength - 1).map(member => {\r\n                        return (\r\n                            <span \r\n                            className={styles.avatar} \r\n                            key={member._id}>\r\n                                <AvatarUser user={member}\r\n                                    size={30}\r\n                                    className={styles.avatar}\r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                    <span className={styles.avatar}>\r\n                        <Avatar\r\n                            color={'grey'}\r\n                            // split number of remaining members (and + sign) with spaces in b/n\r\n                            // so that they are correctly displayed by the Avatar component\r\n                            name={['+', ...(`${members.length - maxLength + 1}`.split(''))].join(' ')}\r\n                            size={30}\r\n                            round={true}\r\n                            maxInitials={3}\r\n                            className={styles.avatar}\r\n                        />\r\n                    </span>\r\n                </>\r\n                :\r\n                <>\r\n                    {members.map(element => {\r\n                        return (\r\n                            <span className={styles.avatar} key={element._id}>\r\n                                <AvatarUser\r\n                                user={element}\r\n                                    size={30}                                  \r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MembersList","import React, { useEffect, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic10 from '../../images/edit-card/pic10.svg'\r\nimport MembersList from '../MembersList'\r\nimport useProjectsServices from '../../services/useProjectsServices'\r\nimport useCardsServices from '../../services/useCardsServices'\r\nimport useTeamServices from '../../services/useTeamServices'\r\n\r\n\r\nexport default function TaskMembers({ card, listId, project, teamId }) {\r\n    const [cardMembers, setCardMembers] = useState(null)\r\n    const [isActive, setIsActive, ref] = useDetectOutsideClick()\r\n    const [users, setUsers] = useState([])\r\n    const socket = useSocket()\r\n    const { addProjectMember } = useProjectsServices()\r\n    const { addTaskMember } = useCardsServices()\r\n    const { getTeamUsers } = useTeamServices()\r\n\r\n\r\n    useEffect(() => {\r\n        setCardMembers(card.members)\r\n    }, [card.members])\r\n\r\n    const handleGetTeamUsers = async () => {\r\n        const data = await getTeamUsers(teamId)\r\n        let filtered = data.members\r\n\r\n        for (let member in cardMembers) {\r\n            filtered = filtered.filter((obj) => obj._id !== cardMembers[member]._id)\r\n        }\r\n        setUsers(filtered)\r\n    }\r\n\r\n    const handleSelect = async (id) => {\r\n        if (id === 'select') return\r\n\r\n        const selectedUser = users.filter(u => u._id === id)[0]\r\n\r\n        const result = project.membersRoles.filter(p => p.memberId._id === selectedUser._id)[0]\r\n\r\n        if (!result) {\r\n            if (!window.confirm(`Do you want to add ${selectedUser.username} to project?`)) return\r\n\r\n            await addProjectMember(project._id, selectedUser)\r\n        }\r\n\r\n        const members = [...cardMembers, selectedUser]\r\n\r\n        await addTaskMember(listId, card._id, members, selectedUser, teamId, project._id)\r\n\r\n        setIsActive(!isActive)\r\n        setCardMembers(members)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n        socket.emit('message-sent', selectedUser._id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['small-buttons']} onClick={() => { handleGetTeamUsers(); setIsActive(!isActive) }} >\r\n                <img className={styles.pics} src={pic10} alt='pic10' />\r\n                Add Teammate\r\n            </div>\r\n            { isActive && <form ref={ref} >\r\n                <select className={styles.select} onChange={e => { handleSelect(e.target.value) }}>\r\n                    <option value={'select'}>Select</option>\r\n                    {users.map(m => (\r\n                        <option key={m._id} value={m._id}>{m.username}</option>\r\n                    ))}\r\n                </select>\r\n            </form>}\r\n            { !isActive && card.members.length > 0 && <div className={styles.members}>\r\n                <MembersList\r\n                    members={card.members}\r\n                    maxLength={4}\r\n                    deleteMemberOption={true}\r\n                    deleteMemberObj={{\r\n                        cardMembers,\r\n                        setCardMembers,\r\n                        cardId: card._id,\r\n                        listId,\r\n                        project,\r\n                        teamId,\r\n                    }}\r\n                />\r\n            </div>}\r\n        </div >\r\n    )\r\n}\r\n\r\n","const FORMAT_REGEX = /%[aAbBdmwyY]/g\r\n\r\nconst MONTHS = [ \r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', \r\n    'August', 'September', 'October', 'November', 'December'\r\n]\r\n\r\nconst WEEKDAYS = [ \r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', \r\n    'Thursday', 'Friday', 'Saturday', 'Sunday'\r\n]\r\n\r\nconst MILLISECONDS_IN_DAY = 86400000\r\n\r\nconst FORMAT_OPTIONS = {\r\n    'y': (date) => date.getUTCFullYear().toString().slice(-2),      // short year (2018 => 18)\r\n    'Y': (date) => date.getUTCFullYear(),                           // full year (2018 => 2018)\r\n    'm': (date) => `0${date.getMonth() + 1}`.slice(-2),             // month as a number (01 - 12)\r\n    'b': (date) => MONTHS[date.getMonth()].slice(0, 3),             // month, short (Dec, Apr etc.)\r\n    'B': (date) => MONTHS[date.getMonth()],                         // month, long (December)\r\n    'd': (date) => `0${date.getDate()}`.slice(-2),                  // day of month (01 - 31)\r\n    'a': (date) => WEEKDAYS[date.getDay()].slice(0, 3),             // weekday, short (Mon, Wed)\r\n    'A': (date) => WEEKDAYS[date.getDay()],                         // weekday, long (Monday)\r\n    'w': (date) => getWeekNumber(date),                             // week number of the year (1-53)\r\n}\r\n\r\nconst getDateWithOffset = (initialDate, daysOffset) => {\r\n    return new Date(initialDate.getTime() + daysOffset * MILLISECONDS_IN_DAY)\r\n}\r\n\r\nconst getMonday = (date) => {\r\n    date = date || new Date()\r\n\r\n    // need to change to 7 in case date is Sunday (which in JS is 0, while Monday is 1)\r\n    const dateDay = date.getDay() || 7\r\n    const monday = new Date(date)\r\n    monday.setDate(date.getDate() - (dateDay - 1))\r\n\r\n    return monday\r\n}\r\n\r\nconst getWeekNumber = (date) => {\r\n    // Thursday in current week decides the year\r\n    // (each week's year is the Gregorian year in which the Thursday falls)\r\n    const currWeekThursday = getDateWithOffset(getMonday(date), 3)\r\n\r\n    // January 4th is always in week 1\r\n    const week1 = new Date(date.getFullYear(), 0, 4)\r\n    const week1Thursday = getDateWithOffset(getMonday(week1), 3)\r\n\r\n    return 1 + Math.round((currWeekThursday.getTime() - week1Thursday.getTime()) / ( 7 * MILLISECONDS_IN_DAY))\r\n}\r\n\r\n/*  Receives a Javascript date as a first parameter and a format string \r\nas a second parameter and returns a string representing the date in \r\nthe desired format. The format string has several options which can be\r\nseen in the 'FORMAT_OPTIONS' constant above. \r\n!!! Every format option must be preceded by a percentage sign (%)\r\nExamples: \r\n    In: (date: new Date('2021-01-28'), formatString: '%y_%B_%d')\r\n   Out: '21_January_28'\r\n\r\n   In: (date: new Date('2020-05-12), formatString: '%a, %d %b, %Y')\r\n  Out: 'Tue, 12 May, 2020'\r\n */\r\nconst formatDate = (date, formatString) => {\r\n    return formatString.replace(FORMAT_REGEX, (substr) => {\r\n        const formatType = substr[1]\r\n        const result = FORMAT_OPTIONS[formatType](date)\r\n        return result\r\n    })\r\n}\r\n\r\n/* Returns true if the year, month and day of two dates are the same,\r\nand false otherwise (i.e. ignores time)\r\n*/\r\nconst checkDateEquality = (firstDate, secondDate) => {\r\n    return firstDate.getYear() === secondDate.getYear() \r\n        && firstDate.getMonth() === secondDate.getMonth() \r\n        && firstDate.getDate() === secondDate.getDate()\r\n}\r\n\r\n/* Returns 1 if firstDate is larger, -1 if secondDate is larger\r\nand 0 if the year, month and day of both dates are equal (ignores time)\r\n*/\r\nconst compareDates = (firstDate, secondDate) => {\r\n    const firstDateYear = firstDate.getYear()\r\n    const secondDateYear = secondDate.getYear()\r\n\r\n    if (firstDateYear !== secondDateYear) {\r\n        return 1 - 2 * (secondDateYear > firstDateYear)\r\n    }\r\n\r\n    const firstDateMonth = firstDate.getMonth()\r\n    const secondDateMonth = secondDate.getMonth() \r\n    \r\n    if (firstDateMonth !== secondDateMonth) {\r\n        return 1 - 2 * (secondDateMonth > firstDateMonth)\r\n    }\r\n\r\n    const firstDateDay = firstDate.getDate()\r\n    const secondDateDay = secondDate.getDate()\r\n\r\n    if (firstDateDay !== secondDateDay) {\r\n        return 1 - 2 * (secondDateDay > firstDateDay)\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nexport {\r\n    formatDate,\r\n    checkDateEquality,\r\n    compareDates,\r\n    getDateWithOffset,\r\n    getMonday\r\n}","export default __webpack_public_path__ + \"static/media/pic5.13437b35.svg\";","import React, { useCallback, useState, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport DatePicker from 'react-datepicker'\r\nimport { formatDate } from '../../utils/date'\r\nimport pic5 from '../../images/edit-card/pic5.svg'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\n\r\n\r\nexport default function TaskDueDate({ dueDate, card, listId, project, teamId }) {\r\n    const [cardDueDate, setCardDueDate] = useState(null)\r\n    const [taskDueDate, setTaskDueDate] = useState(null)\r\n    const [width, setWindowWidth] = useState(0)\r\n    const socket = useSocket()\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n    const { editTask } = useCardsServices()\r\n\r\n    useEffect(() => {\r\n        updateDimensions()\r\n        window.addEventListener('resize', updateDimensions)\r\n        return () => window.removeEventListener('resize', updateDimensions)\r\n    }, [])\r\n\r\n    const updateDimensions = () => {\r\n        const innerWidth = window.innerWidth\r\n        setWindowWidth(innerWidth)\r\n    }\r\n\r\n    function datePickerPosition(w) {\r\n        if (w > 750) {\r\n            return 'bottom-end'\r\n        }\r\n\r\n        return 'bottom-start'\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCardDueDate(dueDate)\r\n        if (cardDueDate) {\r\n            const date = cardDueDate.getTime() ? formatDate(cardDueDate, '%d-%m-%Y') : ''\r\n            setTaskDueDate(date)\r\n        }\r\n    }, [dueDate, cardDueDate])\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }, [socket, project, teamId])\r\n\r\n    const editCardDueDate = async (date) => {\r\n        if (cardDueDate === '' && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n\r\n        const editedFields = { dueDate: date }\r\n\r\n        await editTask(listId, card._id, editedFields)\r\n\r\n        updateProjectSocket()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DatePicker\r\n                customInput={\r\n                    <div className={styles['small-buttons']} >\r\n                        <img className={styles.pics} src={pic5} alt='pic5' />\r\n                        Due Date\r\n                    </div>\r\n                }\r\n                selected={taskDueDate ? cardDueDate : today}\r\n                onChange={(date) => { setCardDueDate(date); editCardDueDate(date) }}\r\n                label='Go to date'\r\n                popperPlacement={datePickerPosition(width)}\r\n            />\r\n            { taskDueDate && <div className={styles.date}>{taskDueDate}</div> }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TaskHistory({ taskHistory }) {\r\n\r\n    let arr = []\r\n\r\n    if (taskHistory) {\r\n        for (let i = 0; i < taskHistory.length; i++) {\r\n            let currElement = taskHistory[i]\r\n\r\n            if (i === taskHistory.length - 1) {\r\n                arr.push(currElement)\r\n                break;\r\n            }\r\n\r\n            if (currElement.event.slice(0, 8) === taskHistory[i + 1].event.slice(0, 8) && currElement.date === taskHistory[i + 1].date) {\r\n\r\n            } else {\r\n                arr.push(currElement)\r\n            }\r\n        }\r\n    }\r\n\r\n    function showDate(currDate) {\r\n        let currDay = new Date(currDate)      \r\n        let date = (('0' + currDay.getDate())).slice(-2) + '.' + ('0' + (currDay.getMonth() + 1)).slice(-2) + '.' + currDay.getFullYear()\r\n        return (date)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.history}>\r\n            { taskHistory ?\r\n                arr.reverse().map((m, index) => (\r\n                    <div key={index} >\r\n                        {`${showDate(m['date'])} - ${m['event']}`}\r\n                    </div>\r\n                ))\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/pic2.da3fabc3.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ProgressBar({ progress }) {\r\n\r\n    const progressColor = (input) => {\r\n        if (Number(input) <= 20) {\r\n            return 'red'\r\n        }\r\n        if (Number(input) <= 40) {\r\n            return 'orange'\r\n        }\r\n        if (Number(input) <= 80) {\r\n            return 'blue'\r\n        }\r\n        if (Number(input) > 80) {\r\n            return 'green'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.bar}>\r\n            <div\r\n                style={{\r\n                    width: `${progress}%`,\r\n                    backgroundColor: progressColor(progress)\r\n                }}\r\n                className={styles.progress}\r\n            /></div>\r\n    )\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic2 from '../../images/edit-card/pic2.svg'\r\nimport ProgressBar from '../ProgressBar'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\nexport default function TaskProgress({ card, listId, project, teamId, taskHistory, setTaskHistory }) {\r\n    const socket = useSocket()\r\n    const [progress, setProgress] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const [isInputActive, setIsInputActive, ref] = useDetectOutsideClick()\r\n    const [isInputVisible, setIsInputVisible] = useState(false)\r\n    const today = useMemo(() => new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()), [])\r\n    const { editTask } = useCardsServices()\r\n\r\n    useEffect(() => {\r\n        setIsInputVisible(card.progress !== null)\r\n        setProgress(card.progress)\r\n    }, [card.progress])\r\n\r\n    const changeProgress = async () => {\r\n        if (progress === null) {\r\n            setIsInputVisible(false)\r\n            setIsInputActive(false)\r\n            return\r\n        }\r\n\r\n        if (currInput === progress || !isInputOk) {\r\n            setProgress(currInput)\r\n            setIsInputOk(true)\r\n            return\r\n        }\r\n\r\n        const history = [...taskHistory]\r\n        history.push({\r\n            'event': `Progress ${progress}%`,\r\n            'date': today\r\n        })\r\n        setTaskHistory(history)\r\n\r\n        const editedFields = { progress, history }\r\n        await editTask(listId, card._id, editedFields)\r\n\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n\r\n    }\r\n\r\n    function onEscPressed(event) {\r\n        if (event.keyCode === 27) {\r\n            setProgress(currInput)\r\n            setIsInputActive(false)\r\n            setIsInputOk(true)\r\n            if (progress === null) setIsInputVisible(false)\r\n        }\r\n    }\r\n\r\n    function onKeyUp() {\r\n        if (!progress || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n        } else {\r\n            setIsInputOk(true)\r\n        }\r\n    }\r\n\r\n    function onClick() {\r\n        setIsInputVisible(true)\r\n        setIsInputActive(true)\r\n        setCurrInput(progress)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles['small-buttons']} onClick={onClick} >\r\n                <img className={styles.pics} src={pic2} alt='' />\r\n                Progress\r\n            </div>\r\n            {card.progress !== null &&\r\n                <div className={styles['progress-bar']} >\r\n                    <ProgressBar progress={card.progress} />\r\n                </div>\r\n            }\r\n            {isInputVisible && <div className={styles['progress-input-container']}>\r\n                {isInputActive ? <span ref={ref}>\r\n                    <input\r\n                        ref={function (input) {\r\n                            if (input != null) {\r\n                                input.focus();\r\n                            }\r\n                        }}\r\n                        id='progress'\r\n                        type='number'\r\n                        min='0'\r\n                        max='100'\r\n                        className={`${styles['progress-input']} ${!isInputOk && styles['bad-input']}`}\r\n                        value={progress}\r\n                        onKeyDown={onEscPressed}\r\n                        onKeyUp={onKeyUp}\r\n                        onChange={e => setProgress(e.target.value)}\r\n                        onBlur={changeProgress}\r\n                    /><span>%</span>\r\n                </span> : <div className={styles.progress} onClick={onClick}>{progress}%</div>}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic6.c59aaea5.svg\";","export default __webpack_public_path__ + \"static/media/download.14191704.svg\";","export default __webpack_public_path__ + \"static/media/remove.ce4f1a54.svg\";","import React, { useState, useEffect } from 'react'\r\nimport ButtonClean from '../ButtonClean'\r\nimport styles from './index.module.css'\r\nimport download from '../../images/edit-card/download.svg'\r\nimport remove from '../../images/edit-card/remove.svg'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\nexport default function AttachmentList({ attachments, listRef, card, project, teamId, setIsDragCardDisabled, setIsDragListDisabled }) {\r\n    const socket = useSocket()\r\n    const [attachmentsArr, setAttachmentsArr] = useState([])\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n    const { removeAttachment } = useCardsServices()\r\n\r\n    useEffect(() => {\r\n        setAttachmentsArr(attachments)\r\n    }, [attachments])\r\n\r\n    const getFullDocumentUrl = (att) => {\r\n        return `https://res.cloudinary.com/${process.env.REACT_APP_CLOUD_NAME}/raw/upload/fl_attachment/${att.path}`\r\n    }\r\n\r\n    async function handleDeteleAttachment(att) {\r\n        const updatedCard = await removeAttachment(card._id, att._id)\r\n\r\n        setAttachmentsArr(updatedCard.attachments)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const onConfirm = () => {\r\n        handleDeteleAttachment(currElement)\r\n        \r\n        if (setIsDragCardDisabled) setIsDragCardDisabled(false)\r\n        if (setIsDragListDisabled) setIsDragListDisabled(false)\r\n    }\r\n    \r\n    const onDecline = () => {\r\n        if (setIsDragCardDisabled) setIsDragCardDisabled(false)\r\n        if (setIsDragListDisabled) setIsDragListDisabled(false)\r\n    }\r\n\r\n    return (\r\n        <div ref={listRef}>\r\n            <div className={styles.container}>\r\n                <div className={styles.title}>Task Attachments</div>\r\n                {attachmentsArr.map((att, index) => (\r\n                    <div key={index} className={styles.attachment}>\r\n                        <div className={styles.name}>{att.name}.{att.format}</div>\r\n                        <div>\r\n                            <ButtonClean title={<img className={styles.button} src={download} alt='Download' />} onClick={() => window.open(getFullDocumentUrl(att), '_blank')} />\r\n                            <ButtonClean title={<img className={styles.button} src={remove} alt='Remove' />}\r\n                                onClick={() => {\r\n                                    setConfirmOpen(true)\r\n                                    setCurrElement(att)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='remove this attachment'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={onConfirm}\r\n                    onDecline={onDecline}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\nimport AttachmentList from '../AttachmentList'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Transparent from '../Transparent'\r\n\r\nexport default function Attachment({ att, attachments, card, project, teamId }) {\r\n    const [isListVisible, setIsListVisible, listRef] = useDetectOutsideClick()\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className={styles.attachment}\r\n                onClick={() => setIsListVisible(true)}\r\n                title={att.name}\r\n            >\r\n                <img src={pic1} alt='' className={styles['att-picture']} />\r\n                <div className={styles.format}>{att.format}</div>\r\n            </div>\r\n            {isListVisible && <Transparent hideForm={() => setIsListVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                />\r\n            </Transparent >}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic6 from '../../images/edit-card/pic6.svg'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport Attachment from '../Attachment'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\nexport default function TaskAttach({ card, project, teamId }) {\r\n    const socket = useSocket()\r\n    const [attachments, setAttachments] = useState(null)\r\n    const { addAttachment } = useCardsServices()\r\n\r\n    useEffect(() => {\r\n        setAttachments(card.attachments)\r\n    }, [card.attachments])\r\n\r\n    function handleAddAttachment() {\r\n        const widget = window.cloudinary.createUploadWidget({\r\n            cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n            uploadPreset: process.env.REACT_APP_UPLOAD_PRESET,\r\n            resourceType: 'raw'\r\n\r\n        }, async (error, result) => {\r\n            if (result.event === 'success') {\r\n                const path = result.info.path\r\n                const name = result.info.original_filename\r\n                let format = result.info.format\r\n                if (!format) {\r\n                    format = path.split('.')[1]\r\n                }\r\n                const publicId = result.info.public_id\r\n                const attachment = { path, name, format, publicId }\r\n\r\n                const updatedCard = await addAttachment(card._id, attachment)\r\n                setAttachments(updatedCard.attachments)\r\n                socket.emit('project-update', project)\r\n                socket.emit('task-team-update', teamId)\r\n            }\r\n\r\n            if (error) {\r\n                //TODO: Handle errors\r\n\r\n                return\r\n            }\r\n        })\r\n\r\n        widget.open()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['small-buttons']} onClick={handleAddAttachment}>\r\n                <img className={styles.pics} src={pic6} alt='pic6' />\r\n                Attach File\r\n            </div>\r\n            { attachments && <div className={styles['att-container']}>\r\n                {attachments.length <= 4 ? attachments.map(att => (\r\n                    <Attachment\r\n                        key={att._id}\r\n                        att={att}\r\n                        attachments={attachments}\r\n                        card={card}\r\n                        project={project}\r\n                        teamId={teamId}\r\n                    />\r\n                )) :\r\n                    <>\r\n                        {attachments.slice(0, 3).map(att => (\r\n                            <Attachment\r\n                                key={att._id}\r\n                                att={att}\r\n                                attachments={attachments}\r\n                                card={card}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                            />\r\n                        ))}\r\n                        <div className={`${styles.remaining} ${styles.attachment}`}>\r\n                            +{attachments.length - 3}\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState, useMemo, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\nimport pic12 from '../../images/edit-card/pic12.svg'\r\nimport TaskMembers from '../EditCardOptions/TaskMembers'\r\nimport TaskDueDate from '../EditCardOptions/TaskDueDate'\r\nimport TaskHistory from '../EditCardOptions/TaskHistory'\r\nimport TaskProgress from '../EditCardOptions/TaskProgress'\r\nimport TaskAttach from '../EditCardOptions/TaskAttach'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\n\r\nexport default function EditCard({ listId, initialCard, project, teamId, hideForm }) {\r\n    const nameRef = useRef(null)\r\n    const descriptionRef = useRef(null)\r\n    const [card, setCard] = useState(null)\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [taskHistory, setTaskHistory] = useState(null)\r\n    const socket = useSocket()\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const dueDate = useMemo(() => new Date(initialCard.dueDate), [initialCard.dueDate])\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const { deleteTask, editTask } = useCardsServices()\r\n\r\n    useEffect(() => {\r\n        setCard(initialCard)\r\n        setName(initialCard.name)\r\n        setDescription(initialCard.description)\r\n        setTaskHistory(initialCard.history)\r\n    }, [initialCard])\r\n\r\n\r\n    const handleDeleteTask = async () => {\r\n        await deleteTask(listId, card._id)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n        hideForm()\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const editedFields = { name, description }\r\n        await editTask(listId, card._id, editedFields)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setNameHeight(nameRef.current.scrollHeight + 2)\r\n        }, 1);\r\n    }, [])\r\n\r\n    function onEscPressed(event, setElement, ref) {\r\n        if (event.keyCode === 27) {\r\n            setElement(currInput)\r\n            setTimeout(() => {\r\n                ref.current.blur()\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n\r\n                <div className={styles['task-name']}>\r\n                    <span>\r\n                        <img src={pic1} alt='pic1' />\r\n                    </span>\r\n                    <textarea\r\n                        ref={nameRef}\r\n                        className={`${styles['name-input']} ${styles.text}`}\r\n                        style={{ 'height': nameHeight }}\r\n                        value={name}\r\n                        onFocus={() => setCurrInput(name)}\r\n                        onKeyDown={e => onEscPressed(e, setName, nameRef)}\r\n                        onChange={e => {\r\n                            setName(e.target.value)\r\n                            setNameHeight(nameRef.current.scrollHeight + 2)\r\n                        }}\r\n                        onBlur={() => {\r\n                            if (currInput === name) return\r\n                            handleSubmit()\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles['task-body']} >\r\n\r\n                    <div className={styles['left-side']}>\r\n                        <div>\r\n                            <div className={styles.text}>Description</div>\r\n                            <textarea className={styles['description-input']}\r\n                                ref={descriptionRef}\r\n                                value={description}\r\n                                onFocus={() => setCurrInput(description)}\r\n                                onKeyDown={e => onEscPressed(e, setDescription, descriptionRef)}\r\n                                onChange={e => setDescription(e.target.value)}\r\n                                onBlur={() => {\r\n                                    if (currInput === description) return\r\n                                    handleSubmit()\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className={styles['task-component']}>\r\n                            <div className={styles.text}>History</div>\r\n                            <TaskHistory taskHistory={taskHistory} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n\r\n                        <div className={styles['task-component']}>\r\n                            <div className={styles.text}>Manage</div>\r\n                            <TaskDueDate\r\n                                dueDate={dueDate}\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                            />\r\n                            <TaskMembers\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                            />\r\n                            <TaskProgress\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                taskHistory={taskHistory}\r\n                                setTaskHistory={setTaskHistory}\r\n                            />\r\n                            <TaskAttach\r\n                                card={initialCard}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                            />\r\n                            <button\r\n                                className={styles['small-buttons']}\r\n                                onClick={() => setConfirmOpen(true)}\r\n                            >\r\n                                <img className={styles.pics} src={pic12} alt='pic12' />\r\n                                Delete Task\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this task'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={handleDeleteTask}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ButtonClean from '../ButtonClean'\r\nimport styles from './index.module.css'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport attPic from '../../images/edit-card/pic6.svg'\r\nimport Transparent from '../Transparent'\r\nimport AttachmentList from '../AttachmentList'\r\n\r\nconst AttachmentsLink = ({\r\n    card,\r\n    project,\r\n    teamId,\r\n    setIsDragCardDisabled,\r\n    setIsDragListDisabled\r\n}) => {\r\n    const [isVisible, setIsVisible, listRef] = useDetectOutsideClick()\r\n\r\n    const onClick = () => {\r\n        setIsVisible(true)\r\n\r\n        if (setIsDragCardDisabled) setIsDragCardDisabled(true)\r\n\r\n        if (setIsDragListDisabled) setIsDragListDisabled(true)\r\n\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setIsVisible(false)\r\n\r\n        if (setIsDragCardDisabled) setIsDragCardDisabled(false)\r\n\r\n        if (setIsDragListDisabled) setIsDragListDisabled(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ButtonClean\r\n            className={`${styles.attachments} ${styles.button}`}\r\n            onClick={onClick}\r\n            title={<img src={attPic} alt='' width='14px' />}\r\n        />\r\n        { isVisible &&\r\n            <Transparent hideForm={hideForm} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={card.attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                    setIsDragCardDisabled={setIsDragCardDisabled}\r\n                    setIsDragListDisabled={setIsDragListDisabled}\r\n                />\r\n            </Transparent >\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttachmentsLink","import React, { useState, useRef, useEffect } from 'react'\r\nimport ButtonClean from '../ButtonClean'\r\nimport pen from '../../images/pen.svg'\r\nimport styles from './index.module.css'\r\nimport Transparent from '../Transparent'\r\nimport EditCard from '../EditCard'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AttachmentsLink from '../AttachmentsLink'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\nexport default function MyTasksTask({ teamId, project, list, card }) {\r\n    const inputRef = useRef(null)\r\n    const [isInputActive, setIsInputActive] = useState(false)\r\n    const [showEditCard, setShowEditCard] = useState(false)\r\n    const [progress, setProgress] = useState('')\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const socket = useSocket()\r\n    const { editTask } = useCardsServices()\r\n    const days = Math.ceil((Date.parse(card.dueDate) - Date.now()) / 1000 / 3600 / 24)\r\n\r\n    useEffect(() => {\r\n        if (card.progress === null) {\r\n            setProgress('Add')\r\n            return\r\n        }\r\n        setProgress(card.progress + '%')\r\n    }, [setProgress, card.progress])\r\n\r\n    async function onBlur() {\r\n        setIsInputActive(false)\r\n        if (!isInputOk || Number(progress) === card.progress) {\r\n            setProgress(card.progress + '%')\r\n            setIsInputOk(true)\r\n            return\r\n        }\r\n\r\n        if (progress === '') {\r\n            if (card.progress === null) {\r\n                setProgress('Add')\r\n                return\r\n            }\r\n            setProgress(card.progress + '%')\r\n        }\r\n\r\n        const today = new Date(Date.now())\r\n        let history = [...card.history]\r\n\r\n        history.push({\r\n            'event': `Progress ${progress}%`,\r\n            'date': today\r\n        })\r\n\r\n        const editedFields = { progress, history }\r\n        await editTask(list._id, card._id, editedFields)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    function onKeyUp() {\r\n        if (Number.isNaN(Number(progress)) || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n        } else {\r\n            setIsInputOk(true)\r\n        }\r\n    }\r\n\r\n    function onFocus() {\r\n        setIsInputActive(true)\r\n        if (progress === 'Add') {\r\n            setProgress('')\r\n            return\r\n        }\r\n        setProgress(Number(progress.slice(0, -1)))\r\n    }\r\n\r\n    return (\r\n        <div key={card._id} className={styles.card}>\r\n            <div className={styles.task}>{card.name}</div>\r\n            <div className={styles.progress}>\r\n                <input\r\n                    ref={inputRef}\r\n                    type={'text'}\r\n                    className={`${styles.input} ${!isInputOk && styles['bad-input']} ${!isInputActive && styles['no-border']}`}\r\n                    autoComplete='off'\r\n                    value={progress}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onKeyUp={onKeyUp}\r\n                    onChange={e => setProgress(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={styles.days}>\r\n                {card.progress === 100 ? (<div>Done</div>) :\r\n                    Date.parse(card.dueDate) === 0 || card.dueDate === null ? (<div>No Deadline</div>) :\r\n                        days < 0 ? (<div className={styles.deadline}>Deadline Passed</div>) :\r\n                            <div>{days}</div>\r\n                }\r\n            </div>\r\n            <div className={styles['buttons-container']}>\r\n                {card.attachments.length > 0 && <AttachmentsLink card={card} project={project} teamId={teamId} />}\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setShowEditCard(true)}\r\n                    title={<img src={pen} alt='' width='14' />}\r\n                />\r\n            </div>\r\n            { showEditCard && <div className={styles.edit}>\r\n                <Transparent hideForm={() => setShowEditCard(!showEditCard)} >\r\n                    <EditCard\r\n                        hideForm={() => setShowEditCard(!showEditCard)}\r\n                        initialCard={card}\r\n                        listId={list._id}\r\n                        project={project}\r\n                        teamId={teamId}\r\n                    />\r\n                </Transparent>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Title from '../../components/Title'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport styles from './index.module.css'\r\nimport myTasks from '../../images/my-tasks/my-tasks.svg'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport MyTasksTask from '../../components/MyTasksTask'\r\nimport ButtonCleanTitle from '../../components/ButtonCleanTitle'\r\nimport ButtonClean from '../../components/ButtonClean'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\nconst MyTasksPage = () => {\r\n    const { user, setUser } = useContext(UserContext)\r\n    const [projects, setProjects] = useState([])\r\n    const [showOldProjects, setShowOldProjects] = useState(false)\r\n    const { getUserTasks } = useUserServices()\r\n    const socket = useSocket()\r\n\r\n\r\n    const selectTeam = useCallback(async (teamId) => {\r\n        const data = await getUserTasks(teamId)\r\n        if (data === 'Team not found') return\r\n        setProjects(data)\r\n        if (teamId !== user.lastTeamSelected) {\r\n            const updatedUser = { ...user }\r\n            updatedUser.lastTeamSelected = teamId\r\n            setUser({\r\n                ...updatedUser,\r\n                loggedIn: true\r\n            })\r\n        }\r\n    }, [user, getUserTasks, setUser])\r\n\r\n    useEffect(() => {\r\n        if (!user.lastTeamSelected || socket == null) return\r\n\r\n        const id = user.lastTeamSelected\r\n\r\n        socket.on('task-team-updated', taskTeamUpdate)\r\n        socket.on('task-update-team', (teamId) => {\r\n            if (teamId === id) {\r\n                selectTeam(teamId)\r\n            }\r\n        })\r\n\r\n        socket.emit('task-team-join', id)\r\n        return () => {\r\n            socket.off('task-team-updated')\r\n            socket.off('task-update-team')\r\n        }\r\n    }, [socket, selectTeam, user.lastTeamSelected])\r\n\r\n    useEffect(() => {\r\n        if (user.lastTeamSelected) {\r\n            selectTeam(user.lastTeamSelected)\r\n        }\r\n    }, [selectTeam, user.lastTeamSelected])\r\n\r\n    function taskTeamUpdate(projects) {\r\n        setProjects(projects)\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Title title='My Tasks' />\r\n            <div className={styles['button-container']}>\r\n                <div className={styles['team-buttons']}>\r\n                    <span className={styles.title}>Teams:</span>\r\n                    {user.teams.map(team => {\r\n                        return <ButtonCleanTitle\r\n                            key={team._id}\r\n                            title={team.name}\r\n                            onClick={() => selectTeam(team._id)}\r\n                            className={`${styles.teams} ${user.lastTeamSelected === team._id && styles.selected}`}\r\n                        />\r\n                    })}\r\n                </div>\r\n                <ButtonClean\r\n                    className={`${styles.teams} ${styles['projects-button']}`}\r\n                    title={showOldProjects ? 'Current Projects' : 'Old Projects'}\r\n                    onClick={() => setShowOldProjects(!showOldProjects)}\r\n                />\r\n            </div>\r\n            {!user.lastTeamSelected ? <div className={styles.title}>Select a team</div> :\r\n                <div className={styles.box}>\r\n                    {projects.length === 0 ? <div className={styles.title}>There is no current tasks</div> :\r\n                        projects.filter(!showOldProjects ? (p => (p.isFinished === false) || (p.isFinished === undefined))\r\n                            :\r\n                            (p => (p.isFinished === true)))\r\n                            .reverse()\r\n                            .map(project => {\r\n                                return (\r\n                                    <div key={project._id} className={styles.project}>\r\n                                        <div className={styles['project-name']}>\r\n                                            <Link to={`/project-board/${user.lastTeamSelected}/${project._id}`} className={styles.link}>\r\n                                                <span className={styles.bold}>Project:</span> {project.name}\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className={`${styles.header} ${styles.raw}`}>\r\n                                            <div className={styles.list}>List:</div>\r\n                                            <div className={styles.container}>\r\n                                                <div className={styles.task}>Task:</div>\r\n                                                <div className={styles.progress}>Progress (%):</div>\r\n                                                <div className={styles.days}>Days Till End:</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        { project.lists.map(list => {\r\n                                            return (\r\n                                                <div key={list._id} className={styles.raw}>\r\n                                                    <div className={styles.list}>{list.name}</div>\r\n                                                    <div className={styles['task-container']}>\r\n                                                        {list.cards.map(card => {\r\n                                                            return (\r\n                                                                <MyTasksTask\r\n                                                                    key={card._id}\r\n                                                                    teamId={user.lastTeamSelected}\r\n                                                                    project={project}\r\n                                                                    list={list}\r\n                                                                    card={card}\r\n                                                                />\r\n                                                            )\r\n                                                        })}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    }\r\n                </div>\r\n            }\r\n            {(!user.lastTeamSelected || projects.length === 0) &&\r\n                <div className={styles.pic}>\r\n                    <img src={myTasks} alt='' />\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default MyTasksPage","export default __webpack_public_path__ + \"static/media/error-page.65d8c265.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport errorPic from '../../images/error-page.svg' \r\n\r\nconst ErrorPage = () => {\r\n    \r\n    return (\r\n        <PageLayout>\r\n            <div className={styles.title}>Error Page</div>\r\n\r\n            <img className={styles.errorPic} src={errorPic} alt='' /> \r\n\r\n            <div className={styles.text}>Something went wrong.</div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ErrorPage\r\n","export default __webpack_public_path__ + \"static/media/pic1.58db5727.svg\";","export default __webpack_public_path__ + \"static/media/pic2.28616bd4.svg\";","export default __webpack_public_path__ + \"static/media/pic3.939d1110.svg\";","export default __webpack_public_path__ + \"static/media/pic4.78124d5d.svg\";","import React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Transparent from '../../components/Transparent'\r\nimport CreateTeam from '../../components/CreateTeam'\r\nimport ButtonGreyTitle from '../../components/ButtonGreyTitle'\r\nimport logo from '../../images/logo.svg'\r\nimport getStartedPagePic1 from '../../images/get-started/pic1.svg'\r\nimport getStartedPagePic2 from '../../images/get-started/pic2.svg'\r\nimport getStartedPagePic3 from '../../images/get-started/pic3.svg'\r\nimport getStartedPagePic4 from '../../images/get-started/pic4.svg'\r\n\r\n\r\n\r\nconst GetStarted = () => {\r\n    const [isTeamFormShown, setIsTeamFormShown] = useState(false)\r\n\r\n\r\n    return (\r\n        <PageLayout>\r\n            <>\r\n                {\r\n                    isTeamFormShown &&\r\n                    <Transparent hideForm={() => setIsTeamFormShown(false)}>\r\n                        <CreateTeam hideForm={() => { setIsTeamFormShown(false) }} />\r\n                    </Transparent>\r\n                }\r\n            </>\r\n\r\n            <div className={styles.container}>\r\n                <div className={styles['logo-div']}>\r\n                    <img className={styles.logo} src={logo} alt='' />\r\n                </div>\r\n\r\n                <div className={styles.title}>\r\n                    Welcome to Smart Manager\r\n                </div>\r\n\r\n                <div className={styles.title}>\r\n                    Get to know how to use Smart Manager in few quick steps:\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    1. - In order to start using Smart Manager you have to be part of a team - you can create your own and work by yourself,  invite your colleagues and friends or can be invited in others by other smart manager users.\r\n                    You can create and join as many teams you want.\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic} src={getStartedPagePic1} alt='' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    2. - When you are already part of a team you can create and join different projects - again as many as you need. In your projects you can add your teammates and work together or you can organize your tasks by yourself.\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic} src={getStartedPagePic2} alt='' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    3. - In each project you can organize your tasks by separating them into different lists - for example - To Do, Doing and Done or any other way. You can create as many lists you need. The tasks can be moved from one list to another or within the lists.\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic3} src={getStartedPagePic3} alt='' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    4. - You can create as many tasks you need which gives you endless opportunities to keep track of the work you are doing. You can assign people for each task, select a due date and fill the progress as you work. You can attach files for each task and also keep track of the progress with task history.\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic} src={getStartedPagePic4} alt='' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    5. - Great! You are all set. Start your Smart experience and continue exploring countless opportunities by creating your first team.\r\n                    <div>\r\n                        <ButtonGreyTitle className={styles['navigate-buttons']} title={'Create New Team'} \r\n                        onClick={() => setIsTeamFormShown(true)} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.greeting}>\r\n                    Enjoy!                \r\n                    <div >\r\n                    Smart Manager Team\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default GetStarted","import React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport pen from '../../images/pen.svg'\r\nimport ButtonClean from '../ButtonClean'\r\nimport MembersList from '../MembersList'\r\nimport ProgressBar from '../ProgressBar'\r\nimport { useParams } from 'react-router-dom'\r\nimport AttachmentsLink from '../AttachmentsLink'\r\nimport Transparent from '../Transparent'\r\nimport EditCard from '../EditCard'\r\n\r\nexport default function Card({ card, listId, project, setIsDragCardDisabled, setIsDragListDisabled }) {\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    const hideForm = () => {\r\n        setIsVisible(!isVisible)\r\n        setIsDragCardDisabled(false)\r\n        setIsDragListDisabled(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.card}>\r\n                <div>\r\n                    {((card.progress && card.progress !== 0) || card.members.length > 0 || card.attachments.length > 0) ?\r\n                        <div className={styles.container}>\r\n                            {card.progress ? <div className={styles.progress}><ProgressBar progress={card.progress} /></div> : <div></div>}\r\n                            <div className={styles.container}>\r\n                                {card.attachments.length > 0 &&\r\n                                    <AttachmentsLink\r\n                                        card={card}\r\n                                        project={project}\r\n                                        teamId={teamId}\r\n                                        setIsDragCardDisabled={setIsDragCardDisabled}\r\n                                        setIsDragListDisabled={setIsDragListDisabled}\r\n                                    />\r\n                                }\r\n                                <MembersList\r\n                                    members={card.members}\r\n                                    maxLength={2}\r\n                                />\r\n                            </div>\r\n                        </div> : null\r\n                    }\r\n                    <div className={styles['card-name']}>\r\n                        {card.name}\r\n                    </div>\r\n                </div>\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => {\r\n                        setIsDragCardDisabled(true)\r\n                        setIsDragListDisabled(true)\r\n                        setIsVisible(true)\r\n                    }}\r\n                    title={<img src={pen} alt='' width='11.5' height='11.5' />}\r\n                />\r\n            </div >\r\n            {isVisible &&\r\n                <Transparent hideForm={hideForm} >\r\n                    <EditCard\r\n                        hideForm={hideForm}\r\n                        initialCard={card}\r\n                        listId={listId}\r\n                        project={project}\r\n                        teamId={teamId}\r\n                    />\r\n                </Transparent >\r\n            }\r\n        </>\r\n    )\r\n}","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from '../utils/cookie'\r\n\r\nconst LISTS_URL = '/api/projects/lists'\r\n\r\nexport default function useListsServices() {\r\n    const history = useHistory()\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const createList = useCallback(async (projectId, listName) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const editList = useCallback(async (projectId, listId, name, color) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}/${listId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({ name, color })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const deleteList = useCallback(async (projectId, listId) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}/${listId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const dragAndDropList = useCallback(async (projectId, listId, position) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}/${listId}/dnd-list`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                position,\r\n                element: 'list',\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const dragAndDropCard = useCallback(async (projectId, cardId, position, source, destination) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}/${cardId}/dnd-card`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                position,\r\n                element: 'card',\r\n                source,\r\n                destination\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n    }, [history])\r\n\r\n    return {\r\n        createList,\r\n        editList,\r\n        deleteList,\r\n        dragAndDropList,\r\n        dragAndDropCard\r\n    }\r\n}","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Title from '../Title'\r\nimport styles from './index.module.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ButtonClean from '../ButtonClean'\r\nimport { SketchPicker } from 'react-color'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport useListsServices from '../../services/useListsServices'\r\n\r\n\r\nexport default function EditList(props) {\r\n    const nameRef = useRef(null)\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const [name, setName] = useState(props.list.name)\r\n    const socket = useSocket()\r\n    const [isColorActive, setIsColorActive, dropdownRef] = useDetectOutsideClick()\r\n    const [color, setColor] = useState(props.list.color || '#A6A48E')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const members = props.project.membersRoles\r\n    const userContext = useContext(UserContext)\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n    const { editList } = useListsServices()\r\n    \r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id])\r\n    \r\n    async function handleSubmit() {\r\n        await editList(props.project._id, props.list._id, name, color)\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('task-team-update', teamId)\r\n        props.hideForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setNameHeight(nameRef.current.scrollHeight + 2)\r\n        }, 1);\r\n    }, [])\r\n\r\n    function onEscPressed(event, setElement, ref) {\r\n        if (event.keyCode === 27) {\r\n            setElement(currInput)\r\n            setTimeout(() => {\r\n                ref.current.blur()\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            <Title title='Edit List' />\r\n            <div className={styles['input-container']}>\r\n                <span className={styles.name}> Name</span>\r\n                <textarea\r\n                    ref={nameRef}\r\n                    className={`${styles['name-input']} ${styles.text}`}\r\n                    style={{ 'height': nameHeight }}\r\n                    value={name}\r\n                    onFocus={() => setCurrInput(name)}\r\n                    onKeyDown={e => onEscPressed(e, setName, nameRef)}\r\n                    onChange={e => {\r\n                        setName(e.target.value)\r\n                        setNameHeight(nameRef.current.scrollHeight + 2)\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={styles['change-color']}>\r\n                <span className={styles['color-title']}>Color</span>\r\n                <ButtonClean\r\n                    className={styles['color-button']}\r\n                    style={{ background: `${color}` }}\r\n                    onClick={() => setIsColorActive(!isColorActive)}\r\n                />\r\n            </div>\r\n            {isColorActive && <div ref={dropdownRef} >\r\n                <SketchPicker\r\n                    className={styles['color-pick']}\r\n                    color={color} onChangeComplete={color => setColor(color.hex)}\r\n                />\r\n            </div>}\r\n            <div className={styles['edit-list-button']}>\r\n                {isAdmin &&\r\n                    <ButtonGrey onClick={handleSubmit} title='Edit List' />\r\n\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport EditList from '../EditList'\r\nimport Transparent from '../Transparent'\r\nimport useListsServices from '../../services/useListsServices'\r\n\r\nconst ListDropdown = ({\r\n    project,\r\n    list,\r\n    isDropdownActive,\r\n    setIsDropdownActive,\r\n    dropdownRef,\r\n    setIsDragListDisabled\r\n}) => {\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n    const [isVisibleEditList, setIsVisibleEditList] = useState(false)\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const { deleteList } = useListsServices()\r\n\r\n    const handleDeleteList = async () => {\r\n        await deleteList(project._id, list._id)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const editList = () => {\r\n        setIsVisibleEditList(true)\r\n        setIsDropdownActive(!isDropdownActive)\r\n        setIsDragListDisabled(true)\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setIsDragListDisabled(false)\r\n        setIsVisibleEditList(!isVisibleEditList)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.relative}>\r\n                {isDropdownActive && <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                    <ButtonGrey\r\n                        onClick={editList}\r\n                        title='Edit'\r\n                        className={styles.edit}\r\n                    />\r\n                    <ButtonGrey\r\n                        onClick={() => {\r\n                            setIsConfirmOpen(true)\r\n                            setIsDragListDisabled(true)\r\n                        }}\r\n                        title='Delete'\r\n                        className={styles.delete}\r\n                    />\r\n                </div>}\r\n            </div>\r\n\r\n            {isVisibleEditList &&\r\n                <Transparent hideForm={hideForm} >\r\n                    <EditList hideForm={hideForm} list={list} project={project} />\r\n                </Transparent >\r\n            }\r\n\r\n            {isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'you wish to delete this list'}\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => {\r\n                        handleDeleteList()\r\n                        setIsDragListDisabled(false)\r\n                    }}\r\n                    onDecline={() => setIsDragListDisabled(false)}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListDropdown","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ESCAPE_KEY_CODE = 27\r\nconst ENTER_KEY_CODE = 13\r\n\r\nconst ProjectBoardInput = ({ value, setValue, onEnter, onEscape, className }) => {\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            setValue('')\r\n            onEscape()\r\n            return\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            onEnter()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input\r\n            autoFocus\r\n            className={`${styles.input} ${className}`}\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProjectBoardInput\r\n","import React, { useState } from 'react'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ProjectBoardInput from '../Inputs/ProjectBoardInput'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\nconst AddProjectBoardTask = ({ project, listId }) => {\r\n    const socket = useSocket()\r\n    const [taskName, setTaskName] = useState('')\r\n    const [isAddTaskVisible, setIsAddTaskVisible, cardRef] = useDetectOutsideClick()\r\n    const { createTask } = useCardsServices()\r\n\r\n    const addTask = async () => {\r\n        if (taskName === '') {\r\n            setIsAddTaskVisible(false)\r\n            return\r\n        }\r\n\r\n        await createTask(listId, taskName)\r\n        setIsAddTaskVisible(false)\r\n        setTaskName('')\r\n        socket.emit('project-update', project)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.task} >\r\n            {isAddTaskVisible ?\r\n                <div ref={cardRef} className={styles.container} >\r\n                    <ProjectBoardInput\r\n                        value={taskName}\r\n                        setValue={setTaskName}\r\n                        onEnter={addTask}\r\n                        onEscape={() => setIsAddTaskVisible(false)}\r\n                    />\r\n                    <ButtonClean\r\n                        className={styles.button}\r\n                        onClick={addTask}\r\n                        title='+ Add Task'\r\n                    />\r\n                </div>\r\n                :\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setIsAddTaskVisible(true)}\r\n                    title='+ Add Task'\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProjectBoardTask\r\n","export default __webpack_public_path__ + \"static/media/dots.d8dec8c6.svg\";","import React, { useState } from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport Card from '../Card'\r\nimport ListColor from '../ListColor'\r\nimport ListDropdown from '../ListDropdown'\r\nimport AddProjectBoardTask from '../AddProjectBoardTask'\r\nimport dotsPic from '../../images/dots.svg'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nconst List = ({ isAdmin, project, list, setIsDragListDisabled }) => {\r\n    const [isDragCardDisabled, setIsDragCardDisabled] = useState(false)\r\n    const [isDropdownActive, setIsDropdownActive, dropdownRef] = useDetectOutsideClick()\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.list}>\r\n                <div className={styles.header}>\r\n                    <div>\r\n                        <div className={styles.name} title={list.name} >{list.name}</div>\r\n                        <ListColor color={list.color || '#A6A48E'} type={'list'} />\r\n                    </div>\r\n                    {isAdmin &&\r\n                        <ButtonClean\r\n                            className={styles.button}\r\n                            onClick={() => setIsDropdownActive(!isDropdownActive)}\r\n                            title={<img src={dotsPic} alt='' width='20'/>}\r\n                        />\r\n                    }\r\n                </div>\r\n                <ListDropdown\r\n                    project={project}\r\n                    list={list}\r\n                    isDropdownActive={isDropdownActive}\r\n                    setIsDropdownActive={setIsDropdownActive}\r\n                    dropdownRef={dropdownRef}\r\n                    setIsDragListDisabled={setIsDragListDisabled}\r\n                />\r\n                <Droppable droppableId={list._id} type='droppableSubItem'>\r\n                    {(provided) => (\r\n                        <div className={styles.droppable} ref={provided.innerRef}>\r\n                            {list.cards.map((element, index) => {\r\n                                return (\r\n                                    <Draggable\r\n                                        key={element._id}\r\n                                        draggableId={element._id}\r\n                                        index={index}\r\n                                        isDragDisabled={isDragCardDisabled ? true : false}\r\n                                    >\r\n                                        {(provided) => (<>\r\n                                            <div\r\n                                                {...provided.dragHandleProps}\r\n                                                {...provided.draggableProps}\r\n                                                ref={provided.innerRef}\r\n                                            >\r\n                                                <Card\r\n                                                    card={element}\r\n                                                    project={project}\r\n                                                    listId={list._id}\r\n                                                    setIsDragCardDisabled={setIsDragCardDisabled}\r\n                                                    setIsDragListDisabled={setIsDragListDisabled}\r\n                                                />\r\n                                            </div>\r\n                                            {provided.placeholder}\r\n                                        </>)}\r\n                                    </Draggable>\r\n                                )\r\n                            })\r\n                            }\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                <AddProjectBoardTask project={project} listId={list._id} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default List","export default __webpack_public_path__ + \"static/media/project-board.e34d3801.svg\";","import { useContext } from 'react'\r\nimport UserContext from '../contexts/UserContext'\r\nimport useUserServices from '../services/useUserServices'\r\n\r\nasync function useUpdateUserLastTeam(teamId) {\r\n    const userContext = useContext(UserContext)\r\n    const { updateUser } = useUserServices()\r\n\r\n    if (teamId === userContext.user.lastTeamSelected) return\r\n\r\n    await updateUser(userContext.user.id,userContext.user.username, teamId)    \r\n\r\n    const user = {...userContext.user}\r\n    user.lastTeamSelected = teamId\r\n    userContext.setUser({\r\n        ...user\r\n    })\r\n\r\n}\r\n\r\nexport default useUpdateUserLastTeam\r\n","import React, { useContext, useState } from 'react'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ProjectBoardInput from '../Inputs/ProjectBoardInput'\r\nimport useListsServices from '../../services/useListsServices'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nconst AddProjectBoardList = () => {\r\n    /* REVIEW: Бих детруктурирал и да взема директно { project }, ама в случая на този компонент не е голяма разликата */\r\n    const projectContext = useContext(ProjectContext)\r\n    const socket = useSocket()\r\n    const [listName, setListName] = useState('')\r\n    const [isAddListActive, setIsAddListActive, listRef] = useDetectOutsideClick()\r\n    const { createList } = useListsServices()\r\n\r\n    const addList = async () => {\r\n        if (listName === '') {\r\n            setIsAddListActive(false)\r\n            return\r\n        }\r\n\r\n        await createList(projectContext.project._id, listName)\r\n        setIsAddListActive(false)\r\n        setListName('')\r\n        socket.emit('project-update', projectContext.project)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.list} >\r\n            { isAddListActive ?\r\n                <div ref={listRef} className={styles.container} >\r\n                    <ProjectBoardInput\r\n                        value={listName}\r\n                        setValue={setListName}\r\n                        onEnter={addList}\r\n                        onEscape={() => setIsAddListActive(false)}\r\n                    />\r\n                    <ButtonClean\r\n                        className={styles.button}\r\n                        onClick={addList}\r\n                        title='+ Add List'\r\n                    />\r\n                </div>\r\n                :\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setIsAddListActive(true)}\r\n                    title='+ Add List'\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProjectBoardList\r\n\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport Loader from 'react-loader-spinner'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport List from '../../components/List'\r\nimport projectBoardPic from '../../images/project-board.svg'\r\nimport useUpdateUserLastTeam from '../../utils/useUpdateUserLastTeam'\r\nimport useListsServices from '../../services/useListsServices'\r\nimport AddProjectBoardList from '../../components/AddProjectBoardList'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\nconst ProjectBoard = () => {\r\n    const socket = useSocket()\r\n    const { user, logIn } = useContext(UserContext)\r\n    const { project, lists, hiddenLists, setProject, setLists } = useContext(ProjectContext)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [isDndActive, setIsDndActive] = useState(false)\r\n    const [isDragListDisabled, setIsDragListDisabled] = useState(false)\r\n    const { dragAndDropList, dragAndDropCard } = useListsServices()\r\n    const { updateRecentProjects } = useUserServices()\r\n\r\n    const { teamid: teamId, projectid: projectId } = useParams()\r\n    useUpdateUserLastTeam(teamId)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n        setProject(project)\r\n        setLists(project.lists)\r\n    }, [setProject, setLists])\r\n\r\n    useEffect(() => {\r\n        const id = projectId\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, projectId])\r\n\r\n    const updateUserRecentProjects = useCallback(async () => {\r\n        const updatedUser = { ...user }\r\n        const recentProjects = [...updatedUser.recentProjects]\r\n\r\n        // Returns if the last project id from recent projects array is equal to current projectId\r\n        if (recentProjects.length > 0 && recentProjects[recentProjects.length - 1]._id === projectId) return\r\n\r\n        const newRecentProjects = recentProjects.filter(p => p._id !== projectId)\r\n        newRecentProjects.push({ _id: projectId, name: project.name })\r\n\r\n        // Removing the oldest project if recent projects are more than 3\r\n        if (newRecentProjects.length > 3) {\r\n            newRecentProjects.shift()\r\n        }\r\n\r\n        const data = await updateRecentProjects(user.id, newRecentProjects)\r\n        logIn(data)\r\n    }, [projectId, project, updateRecentProjects, logIn, user])\r\n\r\n    useEffect(() => {\r\n        if (!project || project._id !== projectId) return\r\n\r\n        updateUserRecentProjects()\r\n\r\n        if (isDndActive) return\r\n\r\n        const memberArr = []\r\n        project.membersRoles.map(element => {\r\n            return memberArr.push({ admin: element.admin, username: element.memberId.username, id: element.memberId._id })\r\n        })\r\n\r\n        setLists(project.lists)\r\n        const member = memberArr.find(m => m.id === user.id)\r\n\r\n        if (member) setIsAdmin(member.admin)\r\n\r\n    }, [updateUserRecentProjects, project, projectId, user.id, isDndActive, setLists])\r\n\r\n    const handleDragAndDropList = async (result) => {\r\n        let position = result.destination.index\r\n\r\n        const filteredList = lists.filter(element => !(hiddenLists.includes(element._id)))\r\n        const previousId = filteredList[position - 1]\r\n        position = lists.indexOf(previousId) + 1\r\n\r\n        const newListsArr = [...lists]\r\n        const [reorderedList] = newListsArr.splice(result.source.index, 1)\r\n        newListsArr.splice(result.destination.index, 0, reorderedList)\r\n        setLists(newListsArr)\r\n\r\n        const updatedProject = await dragAndDropList(project._id, result.draggableId, position)\r\n        setProject(updatedProject)\r\n    }\r\n\r\n    const handleDragAndDropCard = async (result) => {\r\n        const position = result.destination.index\r\n        const oldPosition = result.source.index\r\n        const source = result.source.droppableId\r\n        const destination = result.destination.droppableId\r\n\r\n        const newListsArr = [...lists]\r\n        let sourcePosition = ''\r\n        let destinationPosition = ''\r\n\r\n        for (let list of newListsArr) {\r\n            if (list._id === source) {\r\n                sourcePosition = newListsArr.indexOf(list)\r\n            }\r\n\r\n            if (list._id === destination) {\r\n                destinationPosition = newListsArr.indexOf(list)\r\n            }\r\n        }\r\n\r\n        const [task] = newListsArr[sourcePosition].cards.splice(oldPosition, 1)\r\n        newListsArr[destinationPosition].cards.splice(position, 0, task)\r\n        setLists(newListsArr)\r\n\r\n        await dragAndDropCard(project._id, result.draggableId, position, source, destination)\r\n    }\r\n\r\n    const handleOnDragEnd = async (result) => {\r\n        if (!result.destination) return\r\n\r\n        setIsDndActive(true)\r\n\r\n        if (result.type === 'droppableItem') {\r\n            await handleDragAndDropList(result)\r\n        }\r\n\r\n        if (result.type === 'droppableSubItem') {\r\n            await handleDragAndDropCard(result)\r\n        }\r\n\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n        setIsDndActive(false)\r\n    }\r\n\r\n    if (!project || project._id !== projectId) {\r\n        return (\r\n            /* REVIEW: Реакт работи така, че като пререндеросва страницата, започва да сравнява компонент/таг по \r\n               компонент/таг и реално пререндеросва само там, където има разлики. В случая, тъй като и в двата случая\r\n               (ако се изпълни този if и ако не) се използва PageLayout, е по-добре това условие да се проверява вътре \r\n               в него. Така няма да се пререндеросва самия PageLayout. Може да се помисли и ако може да се сложи if\r\n               проверката още по-навътре в структурата, още по-добре. Да се спести прендеросването на повече компоненти. */\r\n            <PageLayout>\r\n                <Loader\r\n                    type='TailSpin'\r\n                    color='#363338'\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            \r\n            <div className={styles.container}>\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId='droppable' direction='horizontal' type='droppableItem'>\r\n                        {(provided) => (\r\n                            <div className={styles['container-droppable']} ref={provided.innerRef} >\r\n                                { lists\r\n                                    .filter(element => !(hiddenLists.includes(element._id)))\r\n                                    .map((element, index) => {\r\n                                        return (\r\n                                            <Draggable\r\n                                                key={element._id}\r\n                                                draggableId={element._id}\r\n                                                index={index}\r\n                                                isDragDisabled={isDragListDisabled}\r\n                                            >\r\n                                                {(provided) => (\r\n                                                    <div\r\n                                                        className={styles.draggable}\r\n                                                        {...provided.dragHandleProps}\r\n                                                        {...provided.draggableProps}\r\n                                                        ref={provided.innerRef}\r\n                                                    >\r\n                                                        <List\r\n                                                            list={element}\r\n                                                            project={project}\r\n                                                            isAdmin={isAdmin}\r\n                                                            setIsDragListDisabled={setIsDragListDisabled}\r\n                                                        />\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {provided.placeholder}\r\n                                { isAdmin && <AddProjectBoardList />}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                <img className={styles.pic} src={projectBoardPic} alt='' width='340' />\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ProjectBoard","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nconst ESCAPE_KEY_CODE = 27\r\nconst ENTER_KEY_CODE = 13\r\n\r\nconst ResponsiveTextArea = ({ value, setValue, onBlur, onKeyDown, onSubmit, className, toggleActive }) => {\r\n    const inputRef = useRef(null)\r\n    const [areaHeight, setAreaHeight] = useState(null)\r\n    const [currValue, setCurrValue] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (inputRef.current) {\r\n            setAreaHeight(inputRef.current.scrollHeight + 2)\r\n        }\r\n        if(inputRef) {\r\n            inputRef.current.focus()\r\n        }\r\n    }, [])\r\n\r\n    const handleBlur = (event) => {\r\n        if (onBlur) {\r\n            return onBlur(event)\r\n        }\r\n\r\n        if (value === currValue) {\r\n            return\r\n        }\r\n\r\n        onSubmit(event)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (onKeyDown) {\r\n            return onKeyDown(event)\r\n        }\r\n\r\n        if (event.keyCode === ESCAPE_KEY_CODE && toggleActive) {\r\n            setValue(currValue)\r\n            return toggleActive()\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            onSubmit(event)\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        setAreaHeight(inputRef.current.scrollHeight + 2)\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            ref={inputRef}\r\n            className={className}\r\n            style={{ 'height': areaHeight }}\r\n            value={value}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={onChange}\r\n            onBlur={handleBlur}\r\n            onFocus={() => setCurrValue(value)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ResponsiveTextArea","import React, { useCallback, useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport AttachmentsLink from '../../AttachmentsLink'\r\nimport ResponsiveTextArea from '../../ResponsiveTextarea'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\n\r\nexport default function TaskName({ card, listId, project }) {\r\n\tconst [isActive, setIsActive, inputRef] = useDetectOutsideClick()\r\n\tconst [cardName, setCardName] = useState(card.name)\r\n\tconst socket = useSocket()\r\n\tconst params = useParams()\r\n\tconst teamId = params.teamid\r\n\tconst { editTask } = useCardsServices()\r\n\r\n\tconst editCardName = useCallback(async () => {\r\n\t\tif (cardName === '') {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst editedFields = { name: cardName }\r\n\t\tawait editTask(listId, card._id, editedFields)\r\n\r\n\t\tsetIsActive(!isActive)\r\n\t\tsocket.emit('project-update', project)\r\n\t\tsocket.emit('task-team-update', teamId)\r\n\r\n\t}, [editTask, cardName, isActive, setIsActive, card._id, listId, project, socket, teamId])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ isActive ?\r\n\t\t\t\t< div ref={inputRef} className={commonStyles.nameContainer}>\r\n\t\t\t\t\t<ResponsiveTextArea\r\n\t\t\t\t\t\tvalue={cardName}\r\n\t\t\t\t\t\tsetValue={setCardName}\r\n\t\t\t\t\t\tclassName={commonStyles['input-name']}\r\n\t\t\t\t\t\tonSubmit={editCardName}\r\n\t\t\t\t\t\ttoggleActive={() => setIsActive(!isActive)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<span className={commonStyles['attachments-container']}>\r\n\t\t\t\t\t\t{(card.attachments && card.attachments.length > 0 && !isActive) &&\r\n\t\t\t\t\t\t\t<AttachmentsLink\r\n\t\t\t\t\t\t\t\tcard={card}\r\n\t\t\t\t\t\t\t\tproject={project}\r\n\t\t\t\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className={commonStyles.tableText} onClick={() => setIsActive(!isActive)}>\r\n\t\t\t\t\t\t{cardName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React, { useCallback, useMemo, useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\n\r\nexport default function TaskProgress(props) {\r\n    const today = useMemo(() => new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())), [])\r\n    const card = props.card\r\n    const [taskHistory, setTaskHistory] = useState(card.history)\r\n    const value = props.value\r\n    let taskprogress = ''\r\n    let token = value.split('/')\r\n\r\n    if (token.length > 1) {\r\n        taskprogress = token[0]\r\n    }\r\n\r\n    const [isActive, setIsActive, dropdownRef] = useDetectOutsideClick()\r\n    const [cardProgress, setCardProgress] = useState(taskprogress)\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n    const { editTask } = useCardsServices()\r\n\r\n    const editCardProgress = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        const cardId = card._id\r\n        const listId = props.listId\r\n\r\n        if (!cardProgress || (cardProgress > 100) || (cardProgress < 0)) {\r\n            return\r\n        }\r\n\r\n        const cardProgressNum = Number(cardProgress)\r\n        const newCardProgress = Math.max(Math.min(cardProgressNum, 100), 0)\r\n\r\n        if (isNaN(cardProgressNum) || newCardProgress === Number(card.progress)) {\r\n            return\r\n        }\r\n\r\n        setCardProgress(newCardProgress)\r\n\r\n        const newTaskHistory = [...taskHistory, { event: `Progress ${cardProgress}%`, date: today }]\r\n        setTaskHistory(newTaskHistory)\r\n\r\n        const editedFields = {\r\n            progress: cardProgress,\r\n            history: newTaskHistory\r\n        }\r\n        await editTask(listId, cardId, editedFields)\r\n\r\n        setIsActive(!isActive)\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('task-team-update', teamId)\r\n\r\n    }, [editTask, cardProgress, isActive, setIsActive, taskHistory, today, card._id, props.listId, props.project, socket, teamId, card.progress])\r\n\r\n\r\n    function showTaskProgress(value) {\r\n\r\n        if (value && value !== 'null') {\r\n            return (\r\n                <div style={{\r\n                    backgroundColor: getBackGroundColor(value),\r\n                    padding: '5px',\r\n                    border: 'solid black 1px',\r\n                    borderRadius: '5px',\r\n                    minHeight: '2rem',\r\n                    width: '100%',\r\n                    textAlign: 'center',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }} > {value} %</div>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\r\n                + Add\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    function getBackGroundColor(value) {\r\n        let currColor = ''\r\n        switch (true) {\r\n            case (value === 100 || value === '100'):\r\n                currColor = '#0E8D27'\r\n                break\r\n            case (value < 20):\r\n                currColor = '#EF2D2D'\r\n                break\r\n            case (value < 100):\r\n                currColor = '#5E9DDC'\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        return currColor\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { isActive ?\r\n                <div ref={dropdownRef} className={commonStyles.taskProgress} onBlur={editCardProgress}>\r\n                    <input\r\n                        className={commonStyles.taskProgressButtonInput}\r\n                        style={{ backgroundColor: getBackGroundColor(cardProgress) }}\r\n                        type={'number'}\r\n                        value={cardProgress}\r\n                        onChange={e => setCardProgress(e.target.value)}\r\n                        min='0' max='100'\r\n                        autoFocus\r\n                    />\r\n                </div >\r\n                :\r\n                <div className={commonStyles.taskProgress} onClick={() => setIsActive(!isActive)}>\r\n\r\n                    {showTaskProgress(taskprogress)}\r\n                </div >\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useCallback, useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport pen from '../../../images/pen.svg'\r\nimport DatePicker from 'react-datepicker'\r\nimport Transparent from '../../Transparent'\r\nimport EditCard from '../../EditCard'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\n\r\nexport default function TaskDueDate(props) {\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [cardDueDate, setCardDueDate] = useState(props.cardDueDate)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const socket = useSocket()\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n    const { editTask } = useCardsServices()\r\n\r\n    const editCardDueDate = useCallback(async (date) => {\r\n        let cardId = props.cardId\r\n        let listId = props.listId\r\n\r\n        if (cardDueDate === '' && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n\r\n        const editedFields = { dueDate: date }\r\n        await editTask(listId, cardId, editedFields)\r\n\r\n        setIsActive(!isActive)\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('task-team-update', props.teamId)\r\n\r\n    }, [editTask, cardDueDate, setIsActive, isActive, props.cardId, props.listId, props.project, socket, props.teamId])\r\n\r\n    const changeCardDueDate = (date) => {\r\n        setCardDueDate(date)\r\n        editCardDueDate(date)\r\n    }\r\n\r\n    const value = props.value\r\n\r\n    return (\r\n        <span className={commonStyles.dueDateField}>\r\n            <DatePicker\r\n                selected={value ? cardDueDate : today}\r\n                customInput={\r\n                    value\r\n                    ?   <div className={commonStyles.dueDateFieldInput}>\r\n                            <span>{value}</span>\r\n                        </div>\r\n                        : <span>Select date</span>\r\n                }\r\n                onChange={changeCardDueDate}\r\n                label='Go to date'\r\n                onBlur={value ? () => setIsActive(!isActive) : null}\r\n                popperPlacement='bottom-end'\r\n                closeOnScroll={e => e.target === document.getElementsByClassName('rt-tbody')[0]}\r\n            />\r\n\r\n            { isVisible ?\r\n                < span >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditCard\r\n                            hideForm={() => setIsVisible(!isVisible)}\r\n                            initialCard={props.card}\r\n                            listId={props.listId}\r\n                            project={props.project}\r\n                            teamId={teamId}\r\n                        />\r\n                    </Transparent >\r\n                </span >\r\n                :\r\n                <span>\r\n                    <img \r\n                        className={commonStyles.pen} \r\n                        src={pen} \r\n                        alt='...' \r\n                        width='13' \r\n                        height='13' \r\n                        onClick={() => setIsVisible(true)} \r\n                    />\r\n                </span>\r\n            }\r\n        </span>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\n\r\nconst ENTER_KEY_CODE = 13\r\nconst ESCAPE_KEY_CODE = 27\r\n\r\nexport default function AddProjectElement({ \r\n    handleSubmit, \r\n    handleInputRemove, \r\n    elementName, \r\n    setElementName, \r\n    placeholder \r\n}) {\r\n    const inputRef = useRef(null)\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n\r\n    const handleChange = (event) => {\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return\r\n        }\r\n\r\n        setElementName(event.target.value)\r\n        setNameHeight(inputRef.current.scrollHeight + 2)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return handleSubmit()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            value={elementName}\r\n            ref={inputRef}\r\n            placeholder={placeholder}\r\n            className={commonStyles['input-name']}\r\n            style={{ 'height': nameHeight, width: '100%' }}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={handleChange}\r\n            onBlur={handleSubmit}\r\n            autoFocus\r\n        />\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\nimport AddProjectElement from '../AddProjectElement'\r\n\r\nexport default function AddTask({ listId, project, handleInputRemove }) {\r\n    const [taskName, setTaskName] = useState('')\r\n    const socket = useSocket()\r\n    const { createTask } = useCardsServices()\r\n\r\n    const handleSubmit = async () => {\r\n        if (!taskName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        await createTask(listId, taskName)\r\n            \r\n        socket.emit('project-update', project)\r\n\r\n        handleInputRemove()\r\n    }\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={taskName}\r\n            setElementName={setTaskName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new task name:'\r\n        />\r\n    )\r\n}","import React, { useCallback, useState } from 'react'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport useListsServices from '../../../services/useListsServices'\r\nimport AddProjectElement from '../AddProjectElement'\r\n\r\nexport default function AddList({ project, handleInputRemove }) {\r\n    const [listName, setListName] = useState('')\r\n    const socket = useSocket()\r\n    const { createList } = useListsServices()\r\n\r\n    const handleSubmit = useCallback(async () => {\r\n        if (!listName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        await createList(project._id, listName)\r\n\r\n        socket.emit('project-update', project)\r\n        handleInputRemove()\r\n            \r\n    }, [createList, listName, project, handleInputRemove, socket])\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={listName}\r\n            setElementName={setListName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new list name:'\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport { checkDateEquality, compareDates, getDateWithOffset, formatDate } from '../../utils/date'\r\n\r\nconst CELL_COLORS = {\r\n    CREATED: '#0E8D27',\r\n    DUE_DATE: '#EF2D2D',\r\n    DELAYED: '#EF2D2D',\r\n    FINISHED: '#0E8D27',\r\n    PROGRESS: '#5E9DDC',\r\n    PROGRESS_OLD: '#A2A7B0',\r\n}\r\n\r\nconst assembleColumnData = (startDate) => {\r\n    const currentDate = new Date()\r\n    let cardData = null\r\n\r\n    const getWeekdayCellHtml = (message, color, messageColor = 'black') => {\r\n        const progressStyle = { \r\n            background: color, \r\n            color: messageColor,\r\n            width: '100%',\r\n            padding: '5px', \r\n            // fontSize: '14px',\r\n            border: '1px solid #363338',\r\n            borderRadius: '5px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        }\r\n\r\n        return (\r\n            <div className={styles.daylyProgress}>\r\n                <div style={progressStyle}>\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getWeekdayCellData = (dataString, numDaysOffset) => {\r\n        if (!dataString) {\r\n            return ''\r\n        }\r\n\r\n        // if cell is first to be displayed for this card, parse the incoming data\r\n        // else, it should already have been parsed so we can use it directly\r\n        if (numDaysOffset === 0) {\r\n            cardData = JSON.parse(dataString)\r\n        }\r\n\r\n        const { date, history, progress } = cardData\r\n        const cellDate = getDateWithOffset(startDate, numDaysOffset)\r\n        \r\n        const taskStartDate = history.startDate && new Date(history.startDate)\r\n        if (!taskStartDate || compareDates(cellDate, taskStartDate) < 0) {\r\n            return ''\r\n        }\r\n\r\n        const eventInCell = history && history.events[formatDate(cellDate, '%d/%m/%y')]\r\n        \r\n        const dueDate = date ? new Date(date) : null\r\n        const isAfterDueDate = dueDate && compareDates(cellDate, dueDate) > 0\r\n        const isBeforeToday = compareDates(cellDate, currentDate) < 0\r\n\r\n\r\n        if (eventInCell) {\r\n            const [eventType, eventValue] = eventInCell.event.split(' ')\r\n\r\n            if (eventType === 'Created') {\r\n                return getWeekdayCellHtml(eventType, CELL_COLORS.CREATED)\r\n            }\r\n\r\n            if (eventType === 'Progress' && eventValue && eventValue === '100%') {\r\n                let cellText = 'Finished'\r\n                let cellColor = CELL_COLORS.FINISHED\r\n                \r\n                const lastEventDate = new Date(history.lastEventDate)\r\n                if (compareDates(lastEventDate, cellDate) > 0) {\r\n                    // Task was put at 100% progress at the time, but was later changed again\r\n                    cellText = 'Progress 100%'\r\n                    cellColor = isBeforeToday ? CELL_COLORS.PROGRESS_OLD : CELL_COLORS.PROGRESS\r\n                }\r\n\r\n                return getWeekdayCellHtml(cellText, cellColor)\r\n            }\r\n\r\n            if (isBeforeToday) {\r\n                return getWeekdayCellHtml(eventInCell.event, CELL_COLORS.PROGRESS_OLD)\r\n            }\r\n\r\n            const cellBackgroundColor = isAfterDueDate ? CELL_COLORS.DELAYED : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(eventInCell.event, cellBackgroundColor)\r\n        }\r\n\r\n        // if we get to here, we know that there are no new events on the day of the cell\r\n        const isMonday = numDaysOffset === 0\r\n        const eventsInWeek = history && history.hasEventsInWeek[formatDate(cellDate, '%w/%y')]\r\n        if (isMonday && progress && progress === 100 && !eventsInWeek) {\r\n            // progress for task is 100% and no new events happen during the week\r\n            return getWeekdayCellHtml('Finished', CELL_COLORS.FINISHED)\r\n        }\r\n\r\n        if (dueDate) {\r\n            if (checkDateEquality(cellDate, dueDate)) {\r\n                if (compareDates(currentDate, dueDate) > 0) {\r\n                    // cell date is the task due date and current date is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return getWeekdayCellHtml('Due Date', CELL_COLORS.DUE_DATE)\r\n            }\r\n\r\n            if (compareDates(cellDate, dueDate) > 0) {\r\n                // cell date is after due date\r\n                if (isMonday && compareDates(currentDate, dueDate) > 0) {\r\n                    // cell is first shown column (usually Monday) and today is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return ''\r\n            }\r\n\r\n            let { finishedDate } = history\r\n            finishedDate = finishedDate && new Date(finishedDate)\r\n\r\n            if (finishedDate && compareDates(cellDate, finishedDate) > 0) {\r\n                // task has finished in the past and cell date is later than date of finish\r\n                return ''\r\n            }\r\n\r\n            \r\n            // task is neither Finished, nor Delayed, but has a Due Date\r\n            // therefore, it's In Progress\r\n            const cellText = isMonday ? 'In Progress' : ''\r\n            const cellColor = isBeforeToday ? CELL_COLORS.PROGRESS_OLD : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(cellText, cellColor)\r\n        }\r\n\r\n        return ''\r\n    }\r\n        \r\n    const getHeaderDateHtml = (numDaysOffset) => {\r\n        const headerDate = getDateWithOffset(startDate, numDaysOffset)\r\n        const color = checkDateEquality(currentDate, headerDate) ? '#CFE2EC' : ''\r\n\r\n        const displayedDate = formatDate(headerDate, '%d.%m')\r\n        const displayedDayOfWeek = formatDate(headerDate, '%A')\r\n\r\n        return (\r\n            <div style={{ backgroundColor: color, color: 'black' }}>\r\n                <div style={{ fontWeight: '600' }}>{displayedDayOfWeek}</div>\r\n                <div style={{ fontSize: '80%' }}>{displayedDate}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const wrapCellData = (cellData) => {\r\n        return (\r\n            <div style={{ \r\n                whiteSpace: 'normal', \r\n                overflowWrap: 'anywhere', \r\n                textAlign: 'left',\r\n                height: '100%'}}\r\n            >\r\n                {cellData}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        [\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Task</div>\r\n                },\r\n                accessor: 'task',\r\n                minWidth: 350,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Progress</div>\r\n                },\r\n                accessor: 'progress',\r\n                minWidth: 65,\r\n                maxWidth: 75,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {}  // needed to override default sorting\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Team</div>\r\n                },\r\n                accessor: 'assigned',\r\n                minWidth: 75,\r\n                maxWidth: 80,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                getProps: (state, rowInfo, column) => ({ style: { overflow: 'visible' } }),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(0),\r\n                accessor: 'monday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 0),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(1),\r\n                accessor: 'tuesday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 1),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(2),\r\n                accessor: 'wednesday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 2),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(3),\r\n                accessor: 'thursday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 3),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(4),\r\n                accessor: 'friday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 4),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(5),\r\n                accessor: 'saturday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 5),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(6),\r\n                accessor: 'sunday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 6),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Due Date</div>\r\n                },\r\n                accessor: 'dueDate',\r\n                minWidth: 100,\r\n                maxWidth: 130,\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {} // needed to override default sorting\r\n            }\r\n        ]\r\n    )\r\n}\r\n\r\n\r\nexport default assembleColumnData\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst FilterWrapper = ({ children, isVisible, legendContent }) => {\r\n    return (\r\n        <fieldset className={styles.container}>\r\n            <legend className={styles['legend-wrapper']}>\r\n                {isVisible && \r\n                    <blockquote className={styles.legend}>\r\n                        {legendContent}\r\n                    </blockquote>\r\n                }\r\n            </legend>\r\n            {children}\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default FilterWrapper","import React, { useContext, useMemo } from 'react'\r\nimport styles from './index.module.css'\r\nimport commonStyles from '../index.module.css'\r\nimport ProjectContext from '../../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\nimport ButtonClean from '../../ButtonClean'\r\nimport FilterWrapper from '../../FilterWrapper'\r\n\r\nexport default function MembersFilter({ membersFilter, setMembersFilter, handleFilterClear }) {\r\n    const [isActive, setIsActive, dropdownRef] = useDetectOutsideClick()\r\n    const { project } = useContext(ProjectContext)\r\n\r\n    const options = useMemo(() => {\r\n        return project.membersRoles.map(mr => ({\r\n            value: mr.memberId._id,\r\n            displayValue: mr.memberId.username\r\n        }))\r\n    }, [project.membersRoles])\r\n\r\n    const buttonStyles = useMemo(() => `${commonStyles.filter} ${commonStyles['nav-buttons']}`, [])\r\n\r\n    const handleOptionClick = (optionValue, optionDisplay) => {\r\n        setMembersFilter(optionValue, optionDisplay)\r\n\r\n        setIsActive(false)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        handleFilterClear()\r\n        setIsActive(false)\r\n    }\r\n\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks assigned to:'\r\n            isVisible={!!(membersFilter)}\r\n        >\r\n            <div className={styles.container}>\r\n                <div className={styles['btn-container']}>\r\n                    <ButtonClean\r\n                        className={\r\n                            `${buttonStyles} ${isActive && styles['btn-clicked']} ${membersFilter \r\n                                                                                        ? styles['btn-partial']\r\n                                                                                        : styles['btn-whole']}`\r\n                        }\r\n                        onClick={() => setIsActive(!isActive)}\r\n                        title={(membersFilter && membersFilter.name) || 'Tasks Assigned To:'}\r\n                    />\r\n                    { membersFilter &&\r\n                        <ButtonClean\r\n                            className={`${buttonStyles} ${commonStyles['filter-clear']}`}\r\n                            title='X'\r\n                            onClick={handleClear}\r\n                        />\r\n                    }\r\n                </div>\r\n                {isActive &&\r\n                    <div className={styles.options} ref={dropdownRef}>\r\n                        {/* <div\r\n                            key='clear options'\r\n                            className={`${styles.option} ${styles['option-blank']}`}\r\n                            onClick={handleOptionClear}\r\n                        >\r\n                            Leave blank\r\n                        </div> */}\r\n                        {options.map(option => {\r\n                            return (\r\n                                <div\r\n                                    key={option.value}\r\n                                    className={styles.option}\r\n                                    onClick={() => handleOptionClick(option.value, option.displayValue)}\r\n                                >\r\n                                    {option.displayValue}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </FilterWrapper>\r\n    )\r\n}","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport commonStyles from '../index.module.css'\r\nimport DatePicker from 'react-datepicker'\r\nimport { formatDate } from '../../../utils/date'\r\nimport FilterWrapper from '../../FilterWrapper'\r\n\r\nexport default function DueDateFilter({ dueBefore, onChange, handleFilterClear }) {\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks due before:'\r\n            isVisible={!!(dueBefore)}\r\n        >\r\n            <DatePicker\r\n                selected={dueBefore}\r\n                customInput={\r\n                    <button \r\n                        className={`${commonStyles['nav-buttons']} ${commonStyles.filter} ${dueBefore \r\n                                                                                    ? styles['filter-used'] \r\n                                                                                    : styles['filter-blank']}`}\r\n                    >\r\n                        {dueBefore ? formatDate(dueBefore, '%d-%m-%Y') : 'Due Before:'}\r\n                    </button>\r\n                }\r\n                showWeekNumbers={true}\r\n                onChange={onChange}\r\n            />\r\n            { dueBefore &&\r\n                <button \r\n                    className={`${commonStyles['nav-buttons']} ${commonStyles.filter} ${commonStyles['filter-clear']}`}\r\n                    onClick={handleFilterClear}\r\n                >\r\n                    X\r\n                </button>\r\n            }\r\n        </FilterWrapper>\r\n    )\r\n        }","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ToggleSwitch = ({ isActive, toggleStatus, label, containerStyle }) => {\r\n    return (\r\n        <div className={`${styles.container} ${containerStyle}`}>\r\n            <label>{label}</label>\r\n            <span \r\n                className={`${styles['switch-container']} ${isActive && styles['container-active']}`}\r\n                onClick={toggleStatus}\r\n            >\r\n                <span className={styles['state-circle']}></span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleSwitch","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport commonStyles from '../index.module.css'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\nimport ButtonClean from '../../ButtonClean'\r\nimport ToggleSwitch from '../../ToggleSwitch'\r\n\r\nexport default function ProgressFilters({ filters, toggleFilter }) {\r\n    const [isActive, setIsActive, dropdownRef] = useDetectOutsideClick()\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <ButtonClean \r\n                title='Filter By Progress:' \r\n                className={`${commonStyles.filter} ${commonStyles['nav-buttons']} ${styles['btn-progress']}`}\r\n                onClick={() => setIsActive(!isActive)}\r\n            />\r\n            { isActive &&\r\n            <div className={styles.dropdown} ref={dropdownRef}>\r\n                <ToggleSwitch \r\n                    isActive={filters.notStarted} \r\n                    label='Not Started' \r\n                    toggleStatus={() => toggleFilter('notStarted')}\r\n                    containerStyle={`${styles['progress-switch']} ${styles['progress-switch-top']}`} \r\n                />\r\n                <ToggleSwitch \r\n                    isActive={filters.inProgress} \r\n                    label='In Progress' \r\n                    toggleStatus={() => toggleFilter('inProgress')}\r\n                    containerStyle={styles['progress-switch']} \r\n                />\r\n                <ToggleSwitch \r\n                    isActive={filters.done} \r\n                    label='Done' \r\n                    toggleStatus={() => toggleFilter('done')}\r\n                    containerStyle={`${styles['progress-switch']} ${styles['progress-switch-bottom']}`} \r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport MembersFilter from '../FilterMembers'\r\nimport DueDateFilter from '../FilterDueDate'\r\nimport ProgressFilters from '../FilterProgress'\r\n\r\nexport default function TaskFilters ({ filter, setFilter }) {\r\n    const toggleProgressFilter = (filterName) => {\r\n        const currentFilterValue = filter.progress[[filterName]]\r\n\r\n        setFilter({ ...filter, progress: { ...filter.progress, [filterName]: !currentFilterValue } })\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles['filters-container']}>\r\n            <ProgressFilters \r\n                filters={filter.progress} \r\n                toggleFilter={toggleProgressFilter} \r\n            />\r\n            <MembersFilter\r\n                membersFilter={filter.member}\r\n                setMembersFilter={(id, name) => setFilter({ ...filter, member: { id, name } })}\r\n                handleFilterClear={() => setFilter({ ...filter, member: null })}\r\n            />\r\n            <DueDateFilter\r\n                dueBefore={filter.dueBefore}\r\n                onChange={date => setFilter({ ...filter, dueBefore: date })}\r\n                handleFilterClear={() => setFilter({ ...filter, dueBefore: null })}\r\n            />\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/previous-day.b509304f.svg\";","export default __webpack_public_path__ + \"static/media/next-day.11199c8f.svg\";","import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport styles from './index.module.css'\r\nimport commonStyles from '../index.module.css'\r\nimport { getMonday } from '../../../utils/date'\r\nimport previous from '../../../images/project-list/previous-day.svg'\r\nimport next from '../../../images/project-list/next-day.svg'\r\n\r\nexport default function TableDateNavigation({ startDate, changeStartDate, setStartDate }) {\r\n    return (\r\n        <div className={styles.container}>\r\n            <DatePicker\r\n                selected={startDate}\r\n                customInput={\r\n                    <button className={commonStyles['nav-buttons']}>\r\n                        Choose Week\r\n                    </button>\r\n                }\r\n                showWeekNumbers\r\n                onChange={date => setStartDate(getMonday(date))}\r\n            />\r\n            <button className={commonStyles['nav-buttons']} onClick={() => changeStartDate(-7)}>\r\n                Previous week\r\n            </button>\r\n\r\n            <div className={styles['pic-container']} onClick={() => changeStartDate(-1)}>\r\n                <img src={previous} alt='previous' />\r\n                <div className={styles['text-centered']}>Previous day</div>\r\n            </div>\r\n\r\n            <div className={styles['pic-container']} onClick={() => changeStartDate(1)}>\r\n                <img src={next} alt='next' />\r\n                <div className={styles['text-centered']}>Next day</div>\r\n            </div>\r\n\r\n            <button className={commonStyles['nav-buttons']} onClick={() => changeStartDate(7)}>\r\n                Next week\r\n            </button>\r\n        </div>\r\n    )\r\n}","import { compareDates, formatDate } from '../../utils/date'\r\n\r\nconst sortByTask = (cardOne, cardTwo) => cardOne.name.localeCompare(cardTwo.name)\r\n\r\nconst sortByProgress = (cardOne, cardTwo) => {\r\n    const firstValue = cardOne.progress || 0\r\n    const secondValue = cardTwo.progress || 0\r\n\r\n    if (firstValue > secondValue) {\r\n        return 1\r\n    } else if (firstValue < secondValue) {\r\n        return -1\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nconst sortByDueDate = (cardOne, cardTwo) => {\r\n    const parsedDateOne = cardOne.dueDate ? new Date(cardOne.dueDate) : new Date('1970-01-01')\r\n    const parsedDateTwo = cardTwo.dueDate ? new Date(cardTwo.dueDate) : new Date('1970-01-01')\r\n\r\n    return compareDates(parsedDateOne, parsedDateTwo)\r\n}\r\n\r\nconst getCardsSortMethod = (columnName, isDescending) => {\r\n    let sortingFunc = null\r\n    switch(columnName) {\r\n        case 'task':\r\n            sortingFunc = sortByTask\r\n            break\r\n        case 'progress':\r\n            sortingFunc = sortByProgress\r\n            break\r\n        case 'dueDate':\r\n            sortingFunc = sortByDueDate\r\n            break\r\n        default:\r\n            return null\r\n    }\r\n\r\n    return (firstValue, secondValue) => {\r\n        const sortingEvaluation = sortingFunc(firstValue, secondValue)\r\n        return isDescending ? -sortingEvaluation : sortingEvaluation\r\n    }\r\n}\r\n\r\nconst createTableEntry = (entryData) => {\r\n    return {\r\n        task: entryData.task || '',\r\n        progress: entryData.progress || '',\r\n        assigned: entryData.assigned || '',\r\n        monday: entryData.monday || '',\r\n        tuesday: entryData.tuesday || '',\r\n        wednesday: entryData.wednesday || '',\r\n        thursday: entryData.thursday || '',\r\n        friday: entryData.friday || '',\r\n        saturday: entryData.saturday || '',\r\n        sunday: entryData.sunday || '',\r\n        dueDate: entryData.dueDate || ''\r\n    }\r\n}\r\n\r\nconst parseCardHistory = (taskHistory) => {\r\n    if (!taskHistory) {\r\n        return null\r\n    }\r\n\r\n    const historyByDate = { events: {}, hasEventsInWeek: {} }\r\n    for (let element of taskHistory) {\r\n        const elementDate = new Date(element.date)\r\n\r\n        historyByDate.events[formatDate(elementDate, '%d/%m/%y')] = element\r\n        historyByDate.hasEventsInWeek[formatDate(elementDate, '%w/%y')] = true\r\n    }\r\n\r\n    historyByDate.startDate = taskHistory[0] && taskHistory[0].date\r\n    \r\n    const lastHistoryEvent = taskHistory[taskHistory.length - 1]\r\n    historyByDate.lastEventDate = lastHistoryEvent && lastHistoryEvent.date\r\n    if (lastHistoryEvent && lastHistoryEvent.event === 'Progress 100%') {\r\n        historyByDate.finishedDate = lastHistoryEvent.date\r\n    }\r\n    \r\n    return historyByDate\r\n}\r\n\r\nconst applyCardFilters = (card, filters) => {\r\n    let isCardFilterPassed = false\r\n    if (filters.progress.notStarted && \r\n        (card.progress === 0 || !card.progress)) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    if (filters.progress.inProgress && card.progress > 0 && card.progress < 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n    \r\n    if (filters.progress.done && card.progress === 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    const isUserFilterPassed = filters.member \r\n                    ? card.members.some(m => m._id === filters.member.id) \r\n                    : true\r\n\r\n    const isDueDateFilterPassed = filters.dueBefore\r\n                    ? card.dueDate && compareDates(new Date(card.dueDate), filters.dueBefore) <= 0\r\n                    : true\r\n\r\n    return isCardFilterPassed && isUserFilterPassed && isDueDateFilterPassed\r\n}\r\n\r\nexport {\r\n    createTableEntry,\r\n    parseCardHistory,\r\n    applyCardFilters,\r\n    getCardsSortMethod\r\n}","import React, { useCallback, useEffect, useState, useContext } from 'react'\r\nimport styles from './index.module.css'\r\nimport ReactTable from 'react-table'\r\nimport 'react-table/react-table.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport TaskName from '../CalendarData/TaskName'\r\nimport TaskProgress from '../CalendarData/TaskProgress'\r\nimport TaskDueDate from '../CalendarData/TaskDueDate'\r\nimport AddTask from '../CalendarData/AddTask'\r\nimport AddList from '../CalendarData/AddList'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport assembleColumnData from '../CalendarData/columnData'\r\nimport Transparent from '../Transparent'\r\nimport EditList from '../EditList'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport TaskFilters from '../CalendarData/TaskFilters'\r\nimport MembersList from '../MembersList'\r\nimport TableDateNavigation from '../CalendarData/TableDateNavigation'\r\nimport ButtonClean from '../ButtonClean'\r\nimport { formatDate, getDateWithOffset, getMonday } from '../../utils/date'\r\nimport { createTableEntry, parseCardHistory, applyCardFilters, getCardsSortMethod } from './utils'\r\n\r\nconst TableDndApp = ({ project }) => {\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const params = useParams()\r\n    const [startDate, setStartDate] = useState(getMonday())\r\n    const [tableData, setTableData] = useState([])\r\n    const [currList, setCurrList] = useState('')\r\n    const [newEntries, setNewEntries] = useState(null)\r\n    const [sortCriteria, setSortCriteria] = useState({ columnName: null, isDescending: false })\r\n    const [filter, setFilter] = useState({\r\n        progress: { notStarted: true, inProgress: true, done: true },\r\n        member: null,\r\n        dueBefore: null,\r\n        isUsed: false\r\n    })\r\n\r\n    const onListClick = useCallback((list) => {\r\n        const member = projectContext.project.membersRoles.find(m => \r\n                            m.memberId._id === userContext.user.id)                    \r\n\r\n        if (member && member.admin) {\r\n            setCurrList(list)\r\n        }\r\n\r\n        projectContext.setLists(projectContext.project.lists)\r\n    }, [projectContext, userContext.user.id])\r\n\r\n    const updateTableData = useCallback(() => {\r\n        const data = []\r\n        const lists = project.lists\r\n        projectContext.setLists(lists)\r\n        const cardsSortMethod = getCardsSortMethod(sortCriteria.columnName, sortCriteria.isDescending)\r\n\r\n        lists.forEach((list, histIndex) => {\r\n            if (projectContext.hiddenLists.includes(list._id)) {\r\n                return\r\n            }\r\n\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <div \r\n                        key={histIndex} \r\n                        className={styles.listNameContainer} \r\n                        style={{ background: list.color || '#A6A48E' }}\r\n                        onClick={() => onListClick(list)}\r\n                    >\r\n                        <span className={styles.listNameText} >\r\n                            {list.name}\r\n                        </span>\r\n                    </div>\r\n                ),\r\n                dueDate: (\r\n                    <div onClick={() => setNewEntries({ newTask: list._id })} className={styles.addTask}>\r\n                        {/* <AddTask listId={list._id} project={project} /> */}\r\n                        + Add Task\r\n                    </div>\r\n                )\r\n            }))\r\n\r\n            let listCards = list.cards.filter(card => applyCardFilters(card, filter))\r\n            if (sortCriteria.columnName) {\r\n                listCards = listCards.sort(cardsSortMethod)\r\n            }\r\n\r\n            listCards.forEach(card => {\r\n                const cardDueDate = card.dueDate ? new Date(card.dueDate) : ''\r\n                // const historyArr2 = parseCardHistory(card.history)\r\n                const historyByDate = parseCardHistory(card.history)\r\n\r\n                const cellData = {\r\n                    date: cardDueDate,\r\n                    // history: historyArr2,\r\n                    history: historyByDate,\r\n                    progress: card.progress\r\n                }\r\n\r\n                const weekdayData = JSON.stringify(cellData)\r\n\r\n                data.push(createTableEntry({\r\n                    task:\r\n                        (\r\n                            <TaskName\r\n                                // value={card.name + '/' + card._id + '/' + list._id}\r\n                                card={card} listId={list._id}\r\n                                project={project} />\r\n                        ),\r\n                    progress:\r\n                        (\r\n                            <TaskProgress\r\n                                value={card.progress + '/' + card._id + '/' + list._id}\r\n                                listId={list._id}\r\n                                project={project} card={card} />\r\n                        ),\r\n                    assigned:\r\n                        (\r\n                            <MembersList\r\n                                members={card.members}\r\n                                maxLength={2}\r\n                            />\r\n                        ),\r\n                    monday: weekdayData,\r\n                    tuesday: weekdayData,\r\n                    wednesday: weekdayData,\r\n                    thursday: weekdayData,\r\n                    friday: weekdayData,\r\n                    saturday: weekdayData,\r\n                    sunday: weekdayData,\r\n                    dueDate: (\r\n                        <TaskDueDate\r\n                            value={cardDueDate ? formatDate(cardDueDate, '%d-%m-%Y') : ''}\r\n                            cardDueDate={cardDueDate}\r\n                            cardId={card._id}\r\n                            listId={list._id}\r\n                            project={project}\r\n                            card={card}\r\n                            teamId={params.teamid}\r\n                        />\r\n                    )\r\n                }))\r\n            })\r\n\r\n            if (newEntries && newEntries.newTask && newEntries.newTask === list._id) {\r\n                data.push(createTableEntry({\r\n                    task: (\r\n                        <AddTask\r\n                            listId={list._id}\r\n                            project={project}\r\n                            handleInputRemove={() => setNewEntries(null)}\r\n                        />\r\n                    )\r\n                }))\r\n            }\r\n        })\r\n\r\n        if (newEntries && newEntries.newList) {\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <AddList project={project} handleInputRemove={() => setNewEntries(null)} />\r\n                )\r\n            }))\r\n        }\r\n\r\n        /* \r\n        Rows need to be reversed if descending sort as by default ReactTable simply reverses \r\n        the data if descending sort is selected, expecting the data to already be sorted in \r\n        ascending order. However, this puts the list names below their respective tasks, \r\n        so we need to do this terrible hack of pre-reversing the data in that case.\r\n        Possible solution to avoid this 'hack' is to switch to subcomponents in ReactTable\r\n        and make each list a subtable. Then the sort should act per-subcomponent \r\n        */\r\n        setTableData(sortCriteria.isDescending ? data.reverse() : data)\r\n    }, [filter, onListClick, params.teamid, projectContext, project, newEntries, sortCriteria.columnName, sortCriteria.isDescending])\r\n\r\n    useEffect(() => {\r\n        updateTableData()\r\n    }, [filter, project, projectContext.hiddenLists, sortCriteria, updateTableData])\r\n\r\n    const changeStartDate = (dayDiff) => {\r\n        const newStartDate = getDateWithOffset(startDate, dayDiff)\r\n        setStartDate(newStartDate)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageContainer}>\r\n            { currList &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setCurrList('')} >\r\n                            <EditList \r\n                                hideForm={() => setCurrList('')} \r\n                                list={currList}\r\n                                 project={project} \r\n                            />\r\n                        </Transparent >\r\n                    </div >\r\n            }\r\n            <div className={styles.buttoDiv}>\r\n                <TaskFilters filter={filter} setFilter={setFilter} />\r\n                <TableDateNavigation \r\n                    startDate={startDate}\r\n                    setStartDate={setStartDate}\r\n                    changeStartDate={changeStartDate}\r\n                />\r\n                {/* <AddList project={project} /> */}\r\n                <ButtonClean   \r\n                    className={styles.addListButton} \r\n                    onClick={() => setNewEntries({ newList: true })} \r\n                    title='+ Add List'\r\n                />\r\n            </div>\r\n            <div>\r\n                {/* <DragDropContext onDragEnd={handleDragEnd} > */}\r\n                <ReactTable\r\n                    // TrComponent={DragTrComponent}\r\n                    // TbodyComponent={DropTbodyComponent}\r\n                    // getTrProps={getTrProps}\r\n                    data={tableData}\r\n                    columns={\r\n                        assembleColumnData(startDate)\r\n                    }\r\n                    defaultPageSize={10}\r\n                    pageSize={tableData.length}\r\n                    showPagination={false}\r\n                    background={\r\n                        'white'\r\n                    }\r\n                    className={`${styles.reactTable} -highlight`}\r\n                    getTbodyProps={() => ({ className: styles.reactTableBody })}\r\n                    getTrGroupProps={() => ({ className: styles.reactTableTrGroup })}\r\n                    onSortedChange={(sortInfo) => {\r\n                        const { id: columnName, desc: isDescending } = sortInfo[0]\r\n                        setSortCriteria({ columnName, isDescending })\r\n                    }}\r\n                />\r\n\r\n                {/* </DragDropContext> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDndApp\r\n\r\n\r\n","import React, { useCallback, useEffect, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport TableDndApp from '../../components/CalendarTable'\r\nimport Loader from 'react-loader-spinner'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\n\r\n\r\nexport default function ProjectList() {\r\n    const params = useParams()\r\n\r\n    const socket = useSocket()\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n        projectContext.setProject(project)\r\n    }, [projectContext])\r\n\r\n    useEffect(() => {\r\n        const id = params.projectid\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, params.projectid])\r\n\r\n    if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n        return (\r\n            <PageLayout>\r\n                <Loader\r\n                    type='TailSpin'\r\n                    color='#363338'\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PageLayout contentClassName={styles['layout-container']}>\r\n            <div className={styles.calendarPageContainer}>\r\n                <div>\r\n                    <div className={styles['calendar-container']}>\r\n                        <TableDndApp project={projectContext.project} />\r\n                        {/* <TableDndApp2 filter={filter} /> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport ProjectContext from './ProjectContext'\r\n\r\nfunction ProjectProvider({ children }) {\r\n  const [lists, setLists] = useState([])\r\n  const [hiddenLists, setHiddenLists] = useState([])\r\n  const [project, setProject] = useState(null)\r\n  const [projectName, setProjectName] = useState('Select')\r\n  \r\n  return (\r\n    <ProjectContext.Provider value={ { lists, setLists, hiddenLists, setHiddenLists, project, setProject, projectName, setProjectName } }>\r\n      {children}\r\n    </ProjectContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ProjectProvider\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport useTeamServices from '../services/useTeamServices'\r\nimport { useSocket } from './SocketProvider'\r\nimport TeamContext from './TeamContext'\r\nimport UserContext from './UserContext'\r\n\r\nfunction TeamProvider({ children }) {\r\n  const [teams, setTeams] = useState([])\r\n  const [selectedTeam, setSelectedTeam] = useState('Select')\r\n  const [currentProjects, setCurrentProjects] = useState([])\r\n  const userContext = useContext(UserContext)\r\n  const socket = useSocket()\r\n  const { getUserTeams } = useTeamServices()\r\n\r\n\r\n  function getCurrentProjects(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setCurrentProjects(current.projects)\r\n    }\r\n  }\r\n\r\n\r\n  function updateSelectedTeam(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setSelectedTeam(current.name)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTeams(userContext.user.teams)\r\n  }, [userContext.user.teams])\r\n\r\n  const teamUpdate = useCallback(async () => {\r\n    const response = await getUserTeams()\r\n\r\n    setTeams(response.teams)\r\n\r\n    userContext.logIn(response)\r\n\r\n  }, [userContext, getUserTeams])\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return\r\n    socket.on('team-updated', teamUpdate)\r\n    return () => socket.off('team-updated')\r\n  }, [socket, teamUpdate])\r\n\r\n  return (\r\n    <TeamContext.Provider value={{ teams, setTeams, selectedTeam, setSelectedTeam, currentProjects, setCurrentProjects, getCurrentProjects, updateSelectedTeam }}>\r\n      {children}\r\n    </TeamContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TeamProvider\r\n","import React, { useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport EditProject from '../EditProject'\r\nimport Transparent from '../Transparent'\r\n\r\nconst Project = ({ project }) => {\r\n    const params = useParams()\r\n    const [isEditTeamShown, setIsEditTeamShown] = useState(false)\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isEditTeamShown &&\r\n                < div >\r\n                    <Transparent hideForm={() => setIsEditTeamShown(!isEditTeamShown)} >\r\n                        <EditProject hideForm={() => setIsEditTeamShown(!isEditTeamShown)} project={project} />\r\n                    </Transparent >\r\n                </div >\r\n            }\r\n            <div className={styles.container}>\r\n                <div className={styles['top-side']}>\r\n                    <Link to={`/project-board/${params.teamid}/${project._id}`} className={styles.key}>\r\n                        Name: <span className={styles.value}>{project.name}</span>\r\n                    </Link>\r\n                </div >\r\n                <div className={styles['lower-side']}>\r\n                    <div className={styles['key-lower']}>\r\n                        Creator: <span className={styles.value}>{project.author.username}</span>\r\n                    </div>\r\n                    <div className={styles.info} >\r\n                        <ButtonGrey\r\n                            className={styles['info-btn']}\r\n                            title={'Info'}\r\n                            onClick={() => setIsEditTeamShown(!isEditTeamShown)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project\r\n","export default __webpack_public_path__ + \"static/media/pic1.9d44d970.svg\";","import React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Project from '../../components/Project'\r\nimport Transparent from '../../components/Transparent'\r\nimport CreateProject from '../../components/CreateProject'\r\nimport EditTeam from '../../components/EditTeam'\r\nimport TeamMembers from '../../components/TeamMembers'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport ButtonGrey from '../../components/ButtonGrey'\r\nimport useUpdateUserLastTeam from '../../utils/useUpdateUserLastTeam'\r\nimport teamPagePicture from '../../images/team-page/pic1.svg'\r\n\r\nconst TeamPage = () => {\r\n    const {teamid} = useParams()\r\n    const [isCreateProjectFormVisible, setIssCreateProjectFormVisible] = useState(false)\r\n    const [isEditTeamFormVisible, setIsEditTeamFormVisible] = useState(false)\r\n    const [areOldProjectsShown, setAreOldProjectsShown] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [projects, setProjects] = useState([])\r\n    const [members, setMembers] = useState([])\r\n    const [invited, setInvited] = useState([])\r\n    const { user } = useContext(UserContext)\r\n\r\n\r\n    useEffect(() => {\r\n        user.teams.forEach(team => {\r\n            if (team._id === teamid) {\r\n                setCurrTeam(team)\r\n                setProjects(team.projects)\r\n                setMembers(team.members)\r\n                setInvited(team.requests)\r\n            }\r\n        })\r\n    }, [user, teamid])\r\n\r\n    useUpdateUserLastTeam(teamid)\r\n\r\n    return (\r\n        <PageLayout>\r\n            {\r\n                isCreateProjectFormVisible &&\r\n                <Transparent hideForm={() => setIssCreateProjectFormVisible(false)}>\r\n                    <CreateProject />\r\n                </Transparent>\r\n            }\r\n            {\r\n                isEditTeamFormVisible &&\r\n                <Transparent hideForm={() => setIsEditTeamFormVisible(false)}>\r\n                    <EditTeam currTeam={currTeam} hideForm={() => { setIsEditTeamFormVisible(false) }} />\r\n                </Transparent>\r\n            }\r\n            <div className={styles.container}>\r\n                <div className={styles['team-page-picture']}>\r\n                    <img className={styles.picture} src={teamPagePicture} alt='' />\r\n                </div>\r\n                <div className={styles['left-side']}>\r\n                    <div>\r\n                        <div className={styles.title}>\r\n                            {areOldProjectsShown ? 'Old Projects' : 'Current Projects:'}\r\n                        </div>\r\n                        {\r\n                            projects.filter(areOldProjectsShown ?\r\n                                (p => (p.isFinished === true))\r\n                                :\r\n                                (p => ((p.isFinished === false) || (p.isFinished === undefined))))\r\n                                .reverse().map((project) => {\r\n                                    return (\r\n                                        <Project\r\n                                            key={project._id}\r\n                                            project={project}\r\n                                        />)\r\n                                })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles['right-side-team']}>\r\n                        <TeamMembers\r\n                            members={members}\r\n                            invited={invited}\r\n                        />\r\n                        <div className={styles['button-div']}>\r\n                            <ButtonGrey\r\n                                className={styles['team-page-button']}\r\n                                title={'View Team'}\r\n                                onClick={() => setIsEditTeamFormVisible(true)}\r\n                            />\r\n                            <ButtonGrey\r\n                                className={styles['team-page-button']}\r\n                                title={'New Project'}\r\n                                onClick={() => setIssCreateProjectFormVisible(true)}\r\n                            />\r\n                            <ButtonGrey\r\n                                className={styles['team-page-button']}\r\n                                title={!areOldProjectsShown ? 'Old Projects' : 'Current Projects'}\r\n                                onClick={() => setAreOldProjectsShown(!areOldProjectsShown)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default TeamPage;","import React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst Button = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport Button from '../../components/Button'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport logo from '../../images/logo.svg'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\n\r\nconst ConfirmationPage = () => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const { user, logIn } = useContext(UserContext)\r\n    const { confirmToken } = useUserServices()\r\n\r\n    const isFirstRegistration = user.newPasswordConfirmed\r\n    const token = params.token\r\n\r\n    const handleConfirmToken = useCallback(async () => {\r\n        if (token === 'not-confirmed') {\r\n            return\r\n        }\r\n\r\n        if (user.confirmed && user.newPasswordConfirmed) {\r\n            return\r\n        }\r\n\r\n        const response = await confirmToken(token)\r\n        logIn(response)\r\n        setIsLoading(false)\r\n\r\n\r\n    }, [token, logIn, user, confirmToken])\r\n\r\n    useEffect(() => {\r\n        handleConfirmToken()\r\n    }, [handleConfirmToken])\r\n\r\n    \r\n    if (params.token === 'not-confirmed') {\r\n        return (\r\n            <div>\r\n                {\r\n                    isFirstRegistration ?\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt='logo' width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}>\r\n                                Confirm your email address\r\n                            </div >\r\n                            <div className={styles.text}>\r\n                                Please check your email to confirm your account\r\n                            </div>\r\n                            <div className={styles.text}>\r\n                                Once confirmed, this email address will be uniquely associated with your Smart Manager  account.\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt='logo' width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}>\r\n                                Confirm your new password\r\n                            </div >\r\n                            <div className={styles.text}>\r\n                                Please check your email to confirm your new password\r\n                            </div>\r\n                            <div className={styles.text}>\r\n                                Once confirmed, your new password will be active for your Smart Manager  account.\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ?\r\n                    <div>\r\n                        Validating your email.\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt='logo' width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}>\r\n                                Thank you\r\n                            </div >\r\n                            <div className={styles.text}>\r\n                                You can continue to Smart Manager now\r\n                            </div>\r\n                            <Button\r\n                                title='Proceed'\r\n                                className={styles['proceed-button']}\r\n                                onClick={() => history.push('/')}\r\n                            />\r\n                            <div className={styles.cheers}>\r\n                                Cheers,\r\n                            </div >\r\n                            <div className={styles.team}>\r\n                                The Smart Manager Team\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom'\r\n\r\nimport Home from './pages/Home'\r\nimport WelcomePage from './pages/Welcome'\r\nimport ProfilePage from './pages/Profile'\r\nimport InboxPage from './pages/Inbox'\r\nimport MyTasksPage from './pages/MyTasks'\r\nimport ErrorPage from './pages/Error'\r\nimport GetStarted from './pages/GetStarted'\r\nimport UserContext from './contexts/UserContext'\r\nimport ProjectBoard from './pages/ProjectBoard'\r\nimport ProjectList from './pages/ProjectList'\r\nimport { SocketProvider } from './contexts/SocketProvider'\r\nimport ProjectProvider from './contexts/ProjectProvider'\r\nimport TeamProvider from './contexts/TeamProvider'\r\nimport TeamPage from './pages/Team'\r\nimport ConfirmationPage from './pages/Confirmation'\r\nimport {CloudinaryContext} from 'cloudinary-react'\r\n\r\nconst Navigation = () => {\r\n\r\n    const context = useContext(UserContext)\r\n    const loggedIn = context.user.loggedIn\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <SocketProvider user={context.user}>\r\n                <ProjectProvider>\r\n                    <TeamProvider>\r\n                        <CloudinaryContext cloudName={process.env.REACT_APP_CLOUD_NAME}>\r\n                            <Switch>\r\n                                <Route path='/confirmation/:token'><ConfirmationPage /></Route>\r\n                                {((loggedIn && !context.user.confirmed)\r\n                                    || (loggedIn && !context.user.newPasswordConfirmed)\r\n                                ) && <Redirect to='/confirmation/not-confirmed' />}\r\n                                <Route exact path='/' >\r\n                                    {loggedIn ? (<Home />) : (<WelcomePage />)}\r\n                                </Route>\r\n                                <Route path='/get-started/'>\r\n                                    {loggedIn ? (<GetStarted />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/profile/:userid'>\r\n                                    {loggedIn ? (<ProfilePage />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/inbox/:userid'>\r\n                                    {loggedIn ? (<InboxPage />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/my-tasks/:userid'>\r\n                                    {loggedIn ? (<MyTasksPage />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/project-board/:teamid/:projectid'>\r\n                                    {loggedIn ? (<ProjectBoard />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/project-list/:teamid/:projectid'>\r\n                                    {loggedIn ? (<ProjectList />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/team/:teamid'>\r\n                                    {loggedIn ? (<TeamPage />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route component={ErrorPage} />\r\n                            </Switch>\r\n                        </CloudinaryContext>\r\n                    </TeamProvider>\r\n                </ProjectProvider>\r\n            </SocketProvider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css';\r\nimport Navigation from './navigation'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App>\r\n      <Navigation />\r\n    </App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchField_input__1Wkh2\",\"search-fields\":\"SearchField_search-fields__3Cyjd\",\"search-button\":\"SearchField_search-button__fdpXW\",\"search-icon\":\"SearchField_search-icon__1sope\",\"new-line\":\"SearchField_new-line__2gYIx\",\"small\":\"SearchField_small__3XVqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"CalendarTable_pageContainer__3QuCo\",\"columns\":\"CalendarTable_columns__1cxgK\",\"task\":\"CalendarTable_task__24A2x\",\"buttoDiv\":\"CalendarTable_buttoDiv__1AJXs\",\"addTaskField\":\"CalendarTable_addTaskField__1WpB9\",\"input\":\"CalendarTable_input__1wPub\",\"addlist\":\"CalendarTable_addlist__18qyY\",\"addTask\":\"CalendarTable_addTask__3PQgT\",\"daylyProgress\":\"CalendarTable_daylyProgress__7QZxb\",\"header\":\"CalendarTable_header__19V3L\",\"listNameContainer\":\"CalendarTable_listNameContainer__1baLK\",\"listNameColor\":\"CalendarTable_listNameColor__3tlc2\",\"listNameText\":\"CalendarTable_listNameText__1bR5n\",\"reactTable\":\"CalendarTable_reactTable__TeLYe\",\"reactTableBody\":\"CalendarTable_reactTableBody__1w7DS\",\"reactTableTrGroup\":\"CalendarTable_reactTableTrGroup__1_86B\",\"addListButton\":\"CalendarTable_addListButton__peo9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Project_container__3b6H2\",\"top-side\":\"Project_top-side__X336F\",\"key\":\"Project_key__3WELP\",\"key-lower\":\"Project_key-lower__3PFoo\",\"value\":\"Project_value__3hJST\",\"info\":\"Project_info__2N3kr\",\"info-btn\":\"Project_info-btn__1UGh1\",\"lower-side\":\"Project_lower-side__3Nohu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterProgress_container__1PUX9\",\"dropdown\":\"FilterProgress_dropdown__3NPzq\",\"progress-switch\":\"FilterProgress_progress-switch__3MD23\",\"progress-switch-top\":\"FilterProgress_progress-switch-top__3cT_a\",\"progress-switch-bottom\":\"FilterProgress_progress-switch-bottom__2nURD\",\"btn-progress\":\"FilterProgress_btn-progress__24xxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Inbox_message__8eDky\",\"bold\":\"Inbox_bold__3qAva\",\"container\":\"Inbox_container__2-WWh\",\"button\":\"Inbox_button__jP9ub\",\"inline\":\"Inbox_inline__W3jgq\",\"margin\":\"Inbox_margin__27P_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent-confirm\":\"ConfirmationDialog_transparent-confirm__2fAy0\",\"container\":\"ConfirmationDialog_container__3b6l0\",\"logo\":\"ConfirmationDialog_logo__jbg1u\",\"title\":\"ConfirmationDialog_title__1DS7_\",\"buttons\":\"ConfirmationDialog_buttons__BTev_\",\"button\":\"ConfirmationDialog_button__2WKkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-card-members\":\"ShowAllTaskMembers_all-card-members__1d2Ib\",\"each-member\":\"ShowAllTaskMembers_each-member__3I63a\",\"name\":\"ShowAllTaskMembers_name__2nHLd\",\"username\":\"ShowAllTaskMembers_username__1_yDw\",\"delete-icon\":\"ShowAllTaskMembers_delete-icon__2Q6rv\",\"avatar\":\"ShowAllTaskMembers_avatar__1UK0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterMembers_container__2_kFP\",\"filter\":\"FilterMembers_filter__2tNsu\",\"options\":\"FilterMembers_options__3kKgU\",\"option\":\"FilterMembers_option__3Uf0Y\",\"option-blank\":\"FilterMembers_option-blank__lB3ED\",\"btn-clicked\":\"FilterMembers_btn-clicked__39vRd\",\"btn-partial\":\"FilterMembers_btn-partial__2lOCS\",\"btn-whole\":\"FilterMembers_btn-whole__1LOkj\",\"btn-clear\":\"FilterMembers_btn-clear__2I8J2\",\"btn-container\":\"FilterMembers_btn-container__3iyG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Header_navigation__3jzmG\",\"small\":\"Header_small__8uGux\",\"container\":\"Header_container__3f9rB\",\"links\":\"Header_links__2BYSL\",\"font\":\"Header_font__A3LaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members\":\"MembersList_members__1wnnB\",\"avatar\":\"MembersList_avatar__3m5RY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AttachmentList_container__3CKYA\",\"attachment\":\"AttachmentList_attachment__3eJ-y\",\"title\":\"AttachmentList_title__1sJjZ\",\"name\":\"AttachmentList_name__1Fp27\",\"button\":\"AttachmentList_button__288mX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1zCVy\",\"container\":\"Card_container__2sYk9\",\"card-name\":\"Card_card-name__SB7bM\",\"button\":\"Card_button__2IaS-\",\"attachments\":\"Card_attachments__2FepI\",\"progress\":\"Card_progress__ZgeWv\"};"],"sourceRoot":""}