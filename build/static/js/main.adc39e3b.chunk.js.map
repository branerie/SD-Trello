{"version":3,"sources":["components/show-all-task-members/index.module.css","components/create-card/index.module.css","components/edit-card/index.module.css","components/task-dueDate/index.module.css","pages/welcome/index.module.css","components/header/index.module.css","components/inbox/index.module.css","components/button-hide-list/index.module.css","components/page-layout/index.module.css","components/calendar-data/index.module.css","components/list-color/index.module.css","pages/profile/index.module.css","components/team-members/index.module.css","components/signup-form/index.module.css","components/edit-team/index.module.css","components/button-clean/index.module.css","components/create-team/index.module.css","components/link/index.module.css","components/transparent/index.module.css","components/search-results/index.module.css","components/title/index.module.css","components/alert/index.module.css","components/button/index.module.css","pages/inbox/index.module.css","components/task-history/index.module.css","components/create-project/index.module.css","components/login-form/index.module.css","components/add-project-member/index.module.css","components/task-members/index.module.css","pages/my-tasks/index.module.css","components/list/index.module.css","pages/home/index.module.css","components/form-add-password/index.module.css","components/calendar-table/index.module.css","components/aside/index.module.css","components/inbox/history/index.module.css","components/edit-project/index.module.css","pages/project-list/index.module.css","utils/cookie.js","utils/userObject.js","contexts/UserContext.js","contexts/UserProvider.js","App.js","contexts/TeamContext.js","components/button-clean/index.js","contexts/SocketProvider.js","components/create-team/index.js","components/link/index.js","images/logo.svg","images/aside/menu.svg","images/aside/home.svg","images/aside/tasks.svg","images/aside/inbox.svg","images/aside/inbox-bell.svg","contexts/ProjectContext.js","components/list-color/index.js","components/button-hide-list/index.js","components/aside/index.js","utils/useDetectOutsideClick.js","components/transparent/index.js","components/create-project/index.js","components/search-results/index.js","components/header/index.js","components/page-layout/index.js","components/title/index.js","images/home-page-pic.svg","pages/home/index.js","images/welcome-page/welcome-page-1.svg","images/welcome-page/welcome-page-2.svg","images/welcome-page/welcome-page-3.svg","images/welcome-page/welcome-page-4.svg","images/welcome-page/welcome-page-5.svg","images/welcome-page/welcome-page-6.svg","images/welcome-page/instagram-icon.svg","images/welcome-page/twitter-icon.svg","images/welcome-page/facebook-icon.svg","utils/authenticate.js","utils/responseGoogle.js","components/alert/index.js","utils/authenticate-update.js","components/form-add-password/index.js","images/welcome-page/google.svg","components/login-form/index.js","components/signup-form/index.js","pages/welcome/index.js","images/profile-page-pic.svg","images/pen.svg","pages/profile/index.js","components/button/index.js","components/team-members/index.js","components/edit-team/index.js","components/inbox/history/team-invitation-history.js","components/inbox/task-assignment.js","components/inbox/team-invitation.js","components/inbox/team-invitation-response.js","pages/inbox/index.js","images/my-tasks/my-tasks.svg","images/edit-card/pic1.svg","images/edit-card/pic2.svg","images/edit-card/pic3.svg","images/edit-card/pic4.svg","images/edit-card/pic5.svg","images/edit-card/pic6.svg","images/edit-card/pic7.svg","images/edit-card/pic8.svg","images/edit-card/pic9.svg","images/edit-card/pic10.svg","images/edit-card/pic11.svg","images/edit-card/pic12.svg","images/edit-card/pic13.svg","images/edit-card/pic14.svg","components/task-members/index.js","components/task-dueDate/index.js","components/task-history/index.js","components/edit-card/index.js","components/my-tasks-task/index.js","pages/my-tasks/index.js","pages/error/index.js","components/add-project-member/index.js","utils/isUserAdmin.js","components/edit-project/index.js","components/show-all-task-members/index.js","components/members-list/index.js","components/card/index.js","images/dots.svg","components/list/index.js","images/pic.svg","components/edit-list/index.js","pages/project-board/index.js","components/calendar-data/task-name.js","components/calendar-data/task-progress.js","components/calendar-data/task-dueDate.js","components/calendar-data/add-list.js","components/create-card/index.js","components/calendar-data/add-task.js","components/calendar-data/column-data.js","images/project-list/previous-day.svg","images/project-list/next-day.svg","components/calendar-table/index.js","components/button-clean-dropdown/index.js","pages/project-list/index.js","contexts/ProjectProvider.js","contexts/TeamProvider.js","components/project/index.js","images/team-page/pic1.svg","pages/team/index.js","pages/confirmation/index.js","navigation.js","index.js","components/my-tasks-task/index.module.css","components/edit-list/index.module.css","pages/project-board/index.module.css","components/card/index.module.css","pages/team/index.module.css","components/project/index.module.css","components/members-list/index.module.css","components/button-clean-dropdown/index.module.css"],"names":["module","exports","getCookie","name","cookieValue","document","cookie","match","userObject","response","username","user","id","_id","teams","inbox","confirmed","recentProjects","UserContext","React","createContext","logIn","logOut","UserProvider","props","useState","setUser","loading","setLoading","history","useHistory","loggedIn","useCallback","token","fetch","method","headers","then","ok","push","verifyLogin","promise","json","status","useEffect","type","color","height","width","timeout","Provider","value","children","App","TeamContext","setTeams","selectedTeam","setSelectedTeam","getCurrentTeam","currentTeam","setCurrentTeam","getTeams","ButtonClean","title","onClick","className","style","styles","clean","SocketContext","useSocket","useContext","SocketProvider","socket","setSocket","url","window","location","href","includes","userId","teamsId","map","t","teamsStr","JSON","stringify","newSocket","io","query","transports","close","CreateTeam","setName","description","setDescription","member","setMember","members","setMembers","showMembers","setShowMembers","allUsers","setAllUsers","teamContext","userContext","inputMembers","event","a","target","length","users","handleSubmit","preventDefault","body","requests","team","console","log","arr","hideForm","emit","form","container","onSubmit","inputContainer","inputName","onChange","e","label","placeholder","inputContainerDescr","descriptionText","textareaDescr","inputContainerMembers","membersText","inviteInput","autoComplete","onBlur","setTimeout","selectForInvite","filter","u","toLowerCase","find","element","sort","b","localeCompare","input","addMember","email","membersAvatars","m","removeMember","size","round","maxInitials","buttonDiv","createButton","LinkComponent","to","link","ProjectContext","lists","setLists","hiddenLists","setHiddenLists","project","setProject","ListColor","xmlns","viewBox","data-name","transform","path","d","fill","ButtonHideList","list","projectContext","newHiddenLists","index","indexOf","splice","submit","opacity","Aside","asideOn","setAsideOn","listVisibility","setListVisibility","updateUser","on","off","aside","topleft","options","src","menu","alt","home","tasks","bell","topright","logo","bottomright","useDetectOutsideClick","el","isActive","setIsActive","current","contains","addEventListener","removeEventListener","Transparent","transparent","CreateProject","params","useParams","teamId","teamid","onFocus","textInvite","membersInput","SearchResults","searchInput","resultArr","obj","projects","searchContainer","updateSelectedTeam","gotToPage","Header","dropdownRefProfile","useRef","dropdownRefView","dropdownRefProject","dropdownRefTeam","dropdownRefSearch","isProjectVisibble","setIsProjectVisibble","isProjectActive","setIsProjectActive","isTeamActive","setIsTeamActive","isViewVisibble","setIsViewVisibble","isViewActive","setIsViewActive","viewState","setViewState","isProfileActive","setIsProfileActive","showTeamForm","setShowTeamForm","showSearchForm","setShowSearchForm","setSearchInput","showProjectForm","setShowProjectForm","context","getData","projectid","data","getCurrentProjects","navigation","small","links","margin","ref","font","teamName","overflow","hover","logout","flex","currentProjects","p","view","avatar","PageLayout","app","content","Title","Home","dropdownRef","showTeamsVisibleForm","setShowTeamsVisibleForm","userName","userTeams","leftButtons","navigateButtons","myTeamsContainer","myTeamButton","selectTeamContainer","teamsHome","navigateButtonsTeams","picContainer","pic1","welcomeUser","rightButtons","slice","reverse","projectId","forEach","authenticate","onSuccess","onFailure","authToken","get","needPassword","wrongPassword","wrongUser","exist","responseGoogle","googleResponse","tokenId","Alert","alert","message","authenticateUpdate","AddPassword","password","setPassword","rePassword","setRePassword","setAlert","fillAlert","setFillAlert","innerContainer","rightSide","alerts","passInput","passInstructions","buttonDivLogin","loginButton","textLogin","LoginForm","setEmail","showForm","setShowForm","setUserId","wrongPassAllert","setWrongPassAllert","wrongUserAllert","setWrongUserAllert","emailInput","textDiv","forgotPass","newToSmM","signUpBtn","goToSignUp","buttonDivGoogleLogin","render","renderProps","googleLoginBtn","google","clientId","buttonText","cookiePolicy","SignupForm","setUsername","userExist","setUserExist","signUpInput","signUpButton","alreadySignUp","goToLogin","WelcomePage","isVisible","setIsVisible","isVisibleSignUp","setIsVisibleSignUp","pageContainer","contentWrap","topContainer","topDivtopContainer","headerNav","firstButtons","pic2","lowerDivtopContainer","firstText","lucida","paragraph","secondSignUpButton","secondContainer","firstRow","secondText","thirdSignUpButton","pic3Container","pic3","secondRow","pic4Container","pic4","thirdText","pic5","thirdRow","lastText","lastHeaders","lastParagraph","lastSignUpButton","pic6Container","pic6","footer","footerColumn","footerHeaders","footerInfo","lastColumn","socialMediaContainer","socialMedia","instagram","twitter","facebook","sd2006","ProfilePage","userEmail","setUserEmail","passwordActive","setPaswordActive","userNameActive","setUserNameActive","userid","leftContainer","middleButtons","inputFieldsProfile","disabled","buttonDivSave","saveButton","profilePicContainer","profilePic","loadPicText","pen","Button","button","TeamMembers","invited","EditTeam","currTeam","setCurrTeam","setInvited","forInvite","setForInvite","isAdmin","setIsAdmin","teamAuthor","author","removeInvited","removeInvitation","confirm","membersDiv","inputContainerInvite","inputInvite","removeForInvite","deleteTeam","TeamInvitationHistory","setInboxHistory","showEditTeamForm","setShowEditTeamForm","inboxHistory","bold","subject","accepted","Date","createdAt","toLocaleDateString","inline","sendFrom","deleteMessage","TaskAssignment","isInbox","card","TeamInvitation","setInbox","acceptInvitation","TeamInvitationResponse","InboxPage","weekday","year","month","day","getInbox","inboxUser","TaskMembers","cardMembers","setCardMembers","selectedUser","setSelectedUser","showEachMember","setShowEachMember","setUsers","cardId","listId","getTeamUsers","currentTeamId","filtered","updateSocket","deleteMember","handleAdd","membersRoles","memberId","admin","newMember","onMouseLeave","containerMemb","allCardMembers","eachMember","select","result","handleSelect","addUserButton","onMouseEnter","TaskDueDate","cardDueDate","setCardDueDate","today","getFullYear","getMonth","getDate","updateProjectSocket","editCardDueDate","date","dueDate","cardDate","thisCardDate","getTime","taskDueDate","dueDateField","selected","customInput","TaskHistory","taskHistory","i","currElement","showDate","currDate","currDay","EditCard","setCard","progress","setProgress","setTaskHistory","progressChanged","setProgressChanged","isProgressActive","setIsProgressActive","isDescriptionActive","setIsDescriptionActive","useMemo","deleteCard","Number","updatedCard","leftSide","inputTitles","nameContainer","nameInput","textName","secondRowProgress","progressContainer","progressInputContainer","progressInput","min","max","progressDiv","bar","backgroundColor","progressColor","descriptinTitle","text","descriptionInput","descriptionButtons","editButton","fourthRow","showEditCard","smallButtonsContainer","smallButtons","picsSmallButtons","pic7","pic10","pic11","pic13","pic12","pic8","pic9","pic14","MyTasksTask","inputRef","isInputActive","setIsInputActive","setShowEditCard","isInputOk","setIsInputOk","days","Math","ceil","parse","now","task","onKeyUp","isNaN","deadline","MyTasksPage","setProjects","selectTeam","taskTeamUpdate","header","cards","pic","myTasks","ErrorPage","AddMember","teamUsers","destination","memberRoleId","draggableId","memberAdmin","droppableId","userRole","bigContainer","memberSelect","addButton","onDragEnd","adminsContainer","provided","droppable","innerRef","droppableProps","dragHandleProps","draggableProps","membersContainer","droppableMembers","isUserAdmin","EditProject","inputPrName","editMembers","buttonsDiv","deleteProject","ShowAllTaskMembers","MembersList","maxLength","maxDisplayLength","split","join","Card","avatarsHover","setAvatarsHover","cardName","List","cardRef","isEditListActive","setIsEditListActive","setCardName","addCard","row","dots","relative","showEditList","edit","deleteList","delete","showCurrentCard","flexend","focus","taskInput","addlist","EditList","isColorActive","setIsColorActive","setColor","inputListName","changeColor","listColor","background","onChangeComplete","hex","editListButton","ProjectBoard","IsVisibleEdit","setIsVisibleEdit","isVisibleEditList","setIsVisibleEditList","listName","setListName","listRef","currCard","setCurrCard","currList","setCurrList","dndActive","setDndActive","projectUpdate","memberArr","updateUserRecentProjects","updatedUser","oldArr","shift","position","filteredList","previousId","newListsArr","source","reorderedList","updatedProject","oldPosition","sourcePosition","destinationPosition","addList","direction","TaskName","editCardName","inputTaskName","tableText","TaskProgress","UTC","taskprogress","cardProgress","setCardProgress","editCardProgress","getBackGroundColor","currColor","taskProgress","taskProgressButtonInput","padding","fontSize","border","borderRadius","textAlign","showTaskProgress","dueDateFieldInput","AddList","inputList","addListButton","CreateCard","createTask","createNameInput","lasRow","AddTask","addnote","weekdays","ColumnData","startDay","cellDiv","messageColor","progressStyle","daylyProgress","getCellData","num","checked","setDate","eventDate","setHours","thisHistoryDate","checkedDate","getHeaderDate","dayOfWeek","getDay","replace","thisDate","fontWeight","wrapCellData","cellData","whiteSpace","overflowWrap","accessor","minWidth","Cell","createTableEntry","entryData","assigned","monday","tuesday","wednesday","thursday","friday","saturday","sunday","TableDndApp","getMonday","startDate","setStartDate","tableData","setTableData","onListClick","updateTableData","listNameContainer","listNameText","cardFilter","bool","userFilter","some","historyArr","changeStartDate","dayDiff","newStartDate","dateDay","buttoDiv","showWeekNumbers","daysButtons","buttonPreviousDay","previous","centeredText","next","columns","defaultPageSize","pageSize","showPagination","ButtonCleanDropdown","onOptionClick","onOptionClear","option","optionValue","optionDisplay","displayValue","ProjectList","isFilterActive","setIsFilterActive","isUsed","setFilter","toggleFilter","filterName","newFilters","key","Object","values","every","f","conteiner","filters","mr","memberName","calendarPageContainer","calendarContainer","ProjectProvider","projectName","setProjectName","TeamProvider","setCurrentProjects","teamUpdate","Project","info","TeamPage","currTeamUser","setCurrteamUser","found","teamContainer","newProjectButton","rightSde","rightSideTeam","ConfirmationPage","success","setSuccess","confirmToken","Navigation","exact","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.adc39e3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMemb\":\"show-all-task-members_containerMemb__1lC9a\",\"allCardMembers\":\"show-all-task-members_allCardMembers__XzbKC\",\"eachMember\":\"show-all-task-members_eachMember__1zBth\",\"avatar\":\"show-all-task-members_avatar__3H3YY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"create-card_container__1KGUj\",\"form\":\"create-card_form__3QC0I\",\"clean\":\"create-card_clean__3QajY\",\"editButton\":\"create-card_editButton__uDHqy\",\"text\":\"create-card_text__2CDTA\",\"leftSide\":\"create-card_leftSide__ynGPb\",\"rightSide\":\"create-card_rightSide__2oHzZ\",\"inputTitles\":\"create-card_inputTitles__19hEe\",\"pic1\":\"create-card_pic1__3DVGL\",\"firstRow\":\"create-card_firstRow__3RqYb\",\"nameInput\":\"create-card_nameInput__17JOJ\",\"progressInput\":\"create-card_progressInput__1xCxk\",\"createNameInput\":\"create-card_createNameInput__ymyWs\",\"nameContainer\":\"create-card_nameContainer__3J3dR\",\"textName\":\"create-card_textName__3tjjY\",\"secondRow\":\"create-card_secondRow__1wJaJ\",\"secondRowProgress\":\"create-card_secondRowProgress__ThE6Q\",\"pic2\":\"create-card_pic2__3Yqne\",\"bar\":\"create-card_bar__2ziCh\",\"progress\":\"create-card_progress__2VQqL\",\"progressInputContainer\":\"create-card_progressInputContainer__2RTO6\",\"progressDiv\":\"create-card_progressDiv__3Az0M\",\"membersDiv\":\"create-card_membersDiv__3YIWG\",\"members\":\"create-card_members__mQn69\",\"dueDate\":\"create-card_dueDate__13uEx\",\"thirdRow\":\"create-card_thirdRow__3egxH\",\"descriptinTitle\":\"create-card_descriptinTitle__3lakd\",\"descriptionInput\":\"create-card_descriptionInput__mW_VY\",\"descriptionButtons\":\"create-card_descriptionButtons__X0qkI\",\"lasRow\":\"create-card_lasRow__2KAbi\",\"lasRowRight\":\"create-card_lasRowRight__3lmjU\",\"smallButtons\":\"create-card_smallButtons__1e9D_\",\"picsSmallButtons\":\"create-card_picsSmallButtons__21xQV\",\"smallButtonsNoPic\":\"create-card_smallButtonsNoPic__2IuW1\",\"smallButtonsContainer\":\"create-card_smallButtonsContainer__3xs4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-card_container__2tYtI\",\"form\":\"edit-card_form__2L5z5\",\"editButton\":\"edit-card_editButton__iPRtv\",\"text\":\"edit-card_text__3mvzJ\",\"leftSide\":\"edit-card_leftSide__dTZkK\",\"rightSide\":\"edit-card_rightSide__2UqY_\",\"inputTitles\":\"edit-card_inputTitles__5qCV4\",\"pic1\":\"edit-card_pic1__3MUMa\",\"firstRow\":\"edit-card_firstRow__3GNRw\",\"nameInput\":\"edit-card_nameInput__oHBLw\",\"progressInput\":\"edit-card_progressInput__1Ym_t\",\"nameContainer\":\"edit-card_nameContainer__1aOY5\",\"progressContainer\":\"edit-card_progressContainer__3WwID\",\"textName\":\"edit-card_textName__2ll_f\",\"secondRow\":\"edit-card_secondRow__1FPEo\",\"secondRowProgress\":\"edit-card_secondRowProgress__37WWz\",\"pic2\":\"edit-card_pic2__1auTe\",\"bar\":\"edit-card_bar__237He\",\"progress\":\"edit-card_progress__270Zm\",\"progressInputContainer\":\"edit-card_progressInputContainer__OM3qZ\",\"progressDiv\":\"edit-card_progressDiv__1-poZ\",\"membersDiv\":\"edit-card_membersDiv__3UY00\",\"members\":\"edit-card_members__3WgOH\",\"dueDate\":\"edit-card_dueDate__10ing\",\"thirdRow\":\"edit-card_thirdRow__91nzX\",\"fourthRow\":\"edit-card_fourthRow__1BGmT\",\"descriptinTitle\":\"edit-card_descriptinTitle__2pU3Z\",\"descriptionInput\":\"edit-card_descriptionInput__2wVSN\",\"history\":\"edit-card_history__2oopn\",\"descriptionButtons\":\"edit-card_descriptionButtons__6ZRKS\",\"lasRow\":\"edit-card_lasRow__2PCIs\",\"lasRowRight\":\"edit-card_lasRowRight__247I2\",\"smallButtons\":\"edit-card_smallButtons__1-S_R\",\"picsSmallButtons\":\"edit-card_picsSmallButtons__1NJsu\",\"smallButtonsNoPic\":\"edit-card_smallButtonsNoPic__1TU6X\",\"smallButtonsContainer\":\"edit-card_smallButtonsContainer__sbYsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dueDateField\":\"task-dueDate_dueDateField__17EhQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"welcome_pageContainer__2MsMV\",\"topContainer\":\"welcome_topContainer__1sLFC\",\"topDivtopContainer\":\"welcome_topDivtopContainer__1BQ8C\",\"headerNav\":\"welcome_headerNav__2-v0A\",\"logo\":\"welcome_logo__2Xqb5\",\"firstButtons\":\"welcome_firstButtons__2GaNa\",\"loginButton\":\"welcome_loginButton__1s5YU\",\"signUpButton\":\"welcome_signUpButton__17HQF\",\"pic1\":\"welcome_pic1__qGdZx\",\"pic2\":\"welcome_pic2__1c6_d\",\"lowerDivtopContainer\":\"welcome_lowerDivtopContainer__vfmOx\",\"firstText\":\"welcome_firstText__1cwSt\",\"headers\":\"welcome_headers__3K-We\",\"lucida\":\"welcome_lucida__ptbMc\",\"paragraph\":\"welcome_paragraph__2tZDv\",\"secondSignUpButton\":\"welcome_secondSignUpButton__3MeS7\",\"secondContainer\":\"welcome_secondContainer__2-ZjX\",\"firstRow\":\"welcome_firstRow__HneET\",\"secondText\":\"welcome_secondText__107NK\",\"thirdSignUpButton\":\"welcome_thirdSignUpButton__2Tob4\",\"pic3Container\":\"welcome_pic3Container__n-vpQ\",\"pic3\":\"welcome_pic3__UtHpX\",\"secondRow\":\"welcome_secondRow__3Qag6\",\"thirdText\":\"welcome_thirdText__3UTjU\",\"pic4Container\":\"welcome_pic4Container__2LJvq\",\"pic4\":\"welcome_pic4__3Me4y\",\"pic5\":\"welcome_pic5__1w7Rp\",\"thirdRow\":\"welcome_thirdRow__1v6hn\",\"lastText\":\"welcome_lastText__3fE1B\",\"lastHeaders\":\"welcome_lastHeaders__15kTV\",\"lastParagraph\":\"welcome_lastParagraph__TiofZ\",\"lastSignUpButton\":\"welcome_lastSignUpButton__2YDJE\",\"pic6Container\":\"welcome_pic6Container__2Zxs1\",\"pic6\":\"welcome_pic6__3nl5E\",\"contentWrap\":\"welcome_contentWrap__1LD1T\",\"footer\":\"welcome_footer__3gtAE\",\"footerColumn\":\"welcome_footerColumn__3ooU8\",\"footerHeaders\":\"welcome_footerHeaders__YIaMe\",\"footerInfo\":\"welcome_footerInfo__1XQxM\",\"lastColumn\":\"welcome_lastColumn__wS5Ha\",\"socialMediaContainer\":\"welcome_socialMediaContainer__15hgL\",\"socialMedia\":\"welcome_socialMedia__3XfBj\",\"sd2006\":\"welcome_sd2006__1n8Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"header_navigation__fJ63T\",\"small\":\"header_small__1teZG\",\"container\":\"header_container__3KlHF\",\"links\":\"header_links__2hRFR\",\"margin\":\"header_margin__1o7ce\",\"options\":\"header_options__3k5mV\",\"first-option\":\"header_first-option__2kqDm\",\"last-option\":\"header_last-option__3QlKJ\",\"logout\":\"header_logout__Sqhs8\",\"input\":\"header_input__1xJ3o\",\"avatar\":\"header_avatar__2BJ1H\",\"font\":\"header_font__SQRRp\",\"select\":\"header_select__3fnVl\",\"view\":\"header_view__3reCI\",\"logout-position\":\"header_logout-position__3aXq5\",\"view-position\":\"header_view-position__2YHhc\",\"teams\":\"header_teams__28NdG\",\"teams-position\":\"header_teams-position__3RFVg\",\"team-options\":\"header_team-options__3EQGp\",\"overflow\":\"header_overflow__3pY44\",\"hover\":\"header_hover__1X08T\",\"flex\":\"header_flex__26aaz\",\"projects-position\":\"header_projects-position__KW8oY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"inbox_message__2rJZ5\",\"bold\":\"inbox_bold__dWoq7\",\"container\":\"inbox_container__2TzHF\",\"button\":\"inbox_button__1lhQJ\",\"inline\":\"inbox_inline__2bJwy\",\"margin\":\"inbox_margin__28-x8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"button-hide-list_submit__3IMBu\",\"name\":\"button-hide-list_name__yyff7\",\"opacity\":\"button-hide-list_opacity__1yCdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"page-layout_app__v-_Gs\",\"content\":\"page-layout_content__Cr_Mh\",\"small\":\"page-layout_small__208gw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columns\":\"calendar-data_columns__1QWXz\",\"task\":\"calendar-data_task__ZE6uj\",\"buttoDiv\":\"calendar-data_buttoDiv__2J87B\",\"listName\":\"calendar-data_listName__3lv8E\",\"container\":\"calendar-data_container__AkkwG\",\"nameContainer\":\"calendar-data_nameContainer__rkbae\",\"input\":\"calendar-data_input__1VVv0\",\"inputList\":\"calendar-data_inputList__18Si4\",\"addlist\":\"calendar-data_addlist__3ybnS\",\"addListButton\":\"calendar-data_addListButton__1LTMv\",\"dueDateField\":\"calendar-data_dueDateField__3nuYW\",\"dueDateFieldInput\":\"calendar-data_dueDateFieldInput__1csSW\",\"inputTaskName\":\"calendar-data_inputTaskName__T52kv\",\"clean\":\"calendar-data_clean__ldBxu\",\"taskProgress\":\"calendar-data_taskProgress__1KRv2\",\"taskProgressButton\":\"calendar-data_taskProgressButton__3GJU6\",\"taskProgressButtonInput\":\"calendar-data_taskProgressButtonInput__3n9Rl\",\"tableText\":\"calendar-data_tableText__2Rt8E\",\"select\":\"calendar-data_select__21nQR\",\"pen\":\"calendar-data_pen__1ZWSl\",\"membersDiv\":\"calendar-data_membersDiv__3h7P0\",\"membersContainer\":\"calendar-data_membersContainer__3yEFo\",\"daylyProgress\":\"calendar-data_daylyProgress__2hXc9\",\"header\":\"calendar-data_header__3vmIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"list-color_aside__27qHb\",\"list\":\"list-color_list__3JEd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__1p1bn\",\"leftContainer\":\"profile_leftContainer__uBFt6\",\"leftButtons\":\"profile_leftButtons__3K_fm\",\"middleButtons\":\"profile_middleButtons__3h4qa\",\"picContainer\":\"profile_picContainer__1LYFN\",\"pic1\":\"profile_pic1__3QhRY\",\"topright\":\"profile_topright__3d_LC\",\"teams\":\"profile_teams__3WNcc\",\"teamNames\":\"profile_teamNames__1OW9U\",\"navigateButtons\":\"profile_navigateButtons__1tDJX\",\"inputFieldsProfile\":\"profile_inputFieldsProfile__ykoBe\",\"profilePic\":\"profile_profilePic__1X334\",\"loadPicText\":\"profile_loadPicText__l-s9a\",\"pen\":\"profile_pen__BlxgA\",\"profilePicContainer\":\"profile_profilePicContainer__2sWtB\",\"saveButton\":\"profile_saveButton__Zv5IH\",\"buttonDivSave\":\"profile_buttonDivSave__38FIj\",\"alerts\":\"profile_alerts__17g07\",\"myTeamButton\":\"profile_myTeamButton__1sFyP\",\"myTeamsContainer\":\"profile_myTeamsContainer__3T3MC\",\"selectTeamContainer\":\"profile_selectTeamContainer__2fpmv\",\"teamsHome\":\"profile_teamsHome__2xNZn\",\"navigateButtonsTeams\":\"profile_navigateButtonsTeams__1sMjT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membersAvatars\":\"team-members_membersAvatars__3clh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"signup-form_container__pL3cY\",\"alerts\":\"signup-form_alerts__1NIfM\",\"innerContainer\":\"signup-form_innerContainer__5EwRE\",\"logo\":\"signup-form_logo__EYNAN\",\"rightSide\":\"signup-form_rightSide__aj-hV\",\"title\":\"signup-form_title__QLVot\",\"inputContainer\":\"signup-form_inputContainer__1aISK\",\"signUpInput\":\"signup-form_signUpInput__CZH4Z\",\"passInstructions\":\"signup-form_passInstructions__2sXBP\",\"signUpButton\":\"signup-form_signUpButton__3KddA\",\"buttonDivLogin\":\"signup-form_buttonDivLogin__1i4o-\",\"textDiv\":\"signup-form_textDiv__1S15C\",\"forgotPass\":\"signup-form_forgotPass__30gKD\",\"alreadySignUp\":\"signup-form_alreadySignUp__ApEU9\",\"signUpBtn\":\"signup-form_signUpBtn__3sCir\",\"buttonDivGoogleLogin\":\"signup-form_buttonDivGoogleLogin__yabwb\",\"googleLoginBtn\":\"signup-form_googleLoginBtn__3tonf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-team_container__3iIvO\",\"title\":\"edit-team_title__t532U\",\"inputContainer\":\"edit-team_inputContainer__fS75R\",\"inputContainerInvite\":\"edit-team_inputContainerInvite__KHXyQ\",\"inputName\":\"edit-team_inputName__WzQFP\",\"textInvite\":\"edit-team_textInvite__1lnAE\",\"inputInvite\":\"edit-team_inputInvite__17F14\",\"inputContainerDescr\":\"edit-team_inputContainerDescr__pjoTj\",\"textareaDescr\":\"edit-team_textareaDescr__1zzIU\",\"buttonDiv\":\"edit-team_buttonDiv__1vrBc\",\"createButton\":\"edit-team_createButton__26byR\",\"membersAvatars\":\"edit-team_membersAvatars__30OQB\",\"membersDiv\":\"edit-team_membersDiv__2lkPT\",\"inviteInput\":\"edit-team_inviteInput__1zPJn\",\"selectForInvite\":\"edit-team_selectForInvite__3SOJK\",\"members\":\"edit-team_members__3Uqvp\",\"user\":\"edit-team_user__3k1aK\",\"email\":\"edit-team_email__1dRrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"button-clean_clean__2SpL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"create-team_container__2x5c_\",\"title\":\"create-team_title___mRVu\",\"inputContainer\":\"create-team_inputContainer__31V6c\",\"inputName\":\"create-team_inputName__DLMOf\",\"inputContainerDescr\":\"create-team_inputContainerDescr__2mKsD\",\"inputContainerMembers\":\"create-team_inputContainerMembers__1pbec\",\"descriptionText\":\"create-team_descriptionText__6t1Ah\",\"textareaDescr\":\"create-team_textareaDescr__2hLRR\",\"membersText\":\"create-team_membersText__1KgCB\",\"inputMembers\":\"create-team_inputMembers__3omxr\",\"buttonDiv\":\"create-team_buttonDiv__3N3fg\",\"createButton\":\"create-team_createButton__3snCF\",\"membersAvatars\":\"create-team_membersAvatars__3JDn6\",\"inviteInput\":\"create-team_inviteInput__11ayd\",\"selectForInvite\":\"create-team_selectForInvite__2P6HD\",\"members\":\"create-team_members__32-cU\",\"user\":\"create-team_user__2icTP\",\"email\":\"create-team_email__lytiR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"link_link__3NAE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"transparent_transparent__30Vus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"search-results_searchContainer__1y1sQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__3Ce-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__3deuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3LYM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"inbox_title__3OZg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"task-history_history__2HOfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"create-project_container__3mplR\",\"title\":\"create-project_title__2N9HY\",\"inputContainer\":\"create-project_inputContainer__2IJ0I\",\"inputName\":\"create-project_inputName__CFV0r\",\"inviteInput\":\"create-project_inviteInput__2pl_J\",\"selectForInvite\":\"create-project_selectForInvite__bC2pX\",\"membersInput\":\"create-project_membersInput__1WL0K\",\"inputContainerDescr\":\"create-project_inputContainerDescr__ZOQKA\",\"textareaDescr\":\"create-project_textareaDescr__1APCg\",\"textInvite\":\"create-project_textInvite__3M_L9\",\"buttonDiv\":\"create-project_buttonDiv__3nEhN\",\"createButton\":\"create-project_createButton__3c1D8\",\"membersAvatars\":\"create-project_membersAvatars__38Wlv\",\"members\":\"create-project_members__2Uleh\",\"user\":\"create-project_user__6JmZH\",\"email\":\"create-project_email__1NcNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login-form_container__DtpdL\",\"alerts\":\"login-form_alerts__3wIFj\",\"innerContainer\":\"login-form_innerContainer__3pbcW\",\"logo\":\"login-form_logo__2lNG1\",\"rightSide\":\"login-form_rightSide__1rx9t\",\"title\":\"login-form_title__I-Bu-\",\"inputContainer\":\"login-form_inputContainer__oL5TO\",\"emailInput\":\"login-form_emailInput__1NziV\",\"passInput\":\"login-form_passInput__3OZ4q\",\"loginButton\":\"login-form_loginButton__1pGPK\",\"buttonDivLogin\":\"login-form_buttonDivLogin__1abQB\",\"textDiv\":\"login-form_textDiv__3c9le\",\"buttonDivGoogleLogin\":\"login-form_buttonDivGoogleLogin__d35W4\",\"forgotPass\":\"login-form_forgotPass__2QGNZ\",\"newToSmM\":\"login-form_newToSmM__22ZMI\",\"signUpBtn\":\"login-form_signUpBtn__3WDwC\",\"googleLoginBtn\":\"login-form_googleLoginBtn__FCyuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"add-project-member_container__22-qP\",\"form\":\"add-project-member_form__3qaBa\",\"current-members\":\"add-project-member_current-members__3RNVi\",\"adminsContainer\":\"add-project-member_adminsContainer__1pj6I\",\"admins\":\"add-project-member_admins__3tdXj\",\"bigContainer\":\"add-project-member_bigContainer__1TE1V\",\"membersContainer\":\"add-project-member_membersContainer__3_gmB\",\"title\":\"add-project-member_title__3EGhe\",\"members\":\"add-project-member_members__8u9vO\",\"memberSelect\":\"add-project-member_memberSelect__2F6KV\",\"addButton\":\"add-project-member_addButton__3IjAh\",\"draggable\":\"add-project-member_draggable__3PkUN\",\"droppable\":\"add-project-member_droppable__XWc43\",\"droppableMembers\":\"add-project-member_droppableMembers__32myT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"task-members_container__2INWa\",\"addUserButton\":\"task-members_addUserButton__1Ay0S\",\"select\":\"task-members_select__3Oirt\",\"pen\":\"task-members_pen__1EvaG\",\"membersDiv\":\"task-members_membersDiv__92OQm\",\"membersContainer\":\"task-members_membersContainer__39AVz\",\"eachMember\":\"task-members_eachMember__1T6_c\",\"containerMemb\":\"task-members_containerMemb__ZQQUA\",\"allCardMembers\":\"task-members_allCardMembers__gSmNN\",\"avatar\":\"task-members_avatar__fQ71D\",\"members\":\"task-members_members__grdYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"my-tasks_title__glghp\",\"filter\":\"my-tasks_filter__2R6NO\",\"selected\":\"my-tasks_selected__2hBIa\",\"pic\":\"my-tasks_pic__37y99\",\"project\":\"my-tasks_project__1KJap\",\"project-name\":\"my-tasks_project-name__2-cBX\",\"link\":\"my-tasks_link__3JjLA\",\"bold\":\"my-tasks_bold__3TzlB\",\"header\":\"my-tasks_header__3-wOE\",\"card\":\"my-tasks_card__TRZna\",\"task\":\"my-tasks_task__tAkep\",\"progress\":\"my-tasks_progress__1ufVZ\",\"days\":\"my-tasks_days__2EVrp\",\"list\":\"my-tasks_list__33WIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__23Rsq\",\"row\":\"list_row__1A6HD\",\"button\":\"list_button__2gQ2b\",\"dots\":\"list_dots__wwSr4\",\"menu\":\"list_menu__1hArt\",\"edit\":\"list_edit__KXS03\",\"delete\":\"list_delete__1qqcq\",\"relative\":\"list_relative__2X72U\",\"add-task\":\"list_add-task__12pcF\",\"draggable\":\"list_draggable__2_1rW\",\"droppable\":\"list_droppable__cPWKr\",\"flexend\":\"list_flexend__3_V7F\",\"name\":\"list_name__33z_E\",\"container\":\"list_container__HKNpO\",\"input\":\"list_input__3Rjro\",\"taskInput\":\"list_taskInput__2yaty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__fjBCo\",\"picContainer\":\"home_picContainer__2ZN01\",\"pic1\":\"home_pic1__2nxZp\",\"welcomeUser\":\"home_welcomeUser__139N6\",\"leftButtons\":\"home_leftButtons__2kl5n\",\"rightButtons\":\"home_rightButtons__3fy9O\",\"myTeamsContainer\":\"home_myTeamsContainer__10BT1\",\"teamsHome\":\"home_teamsHome__3Kf2X\",\"selectTeamContainer\":\"home_selectTeamContainer__4pNEv\",\"teamNames\":\"home_teamNames__3RLyj\",\"navigateButtons\":\"home_navigateButtons__1azTF\",\"navigateButtonsTeams\":\"home_navigateButtonsTeams__2EPNu\",\"myTeamButton\":\"home_myTeamButton__usebH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"form-add-password_container__2yhI6\",\"alerts\":\"form-add-password_alerts__2d9EU\",\"innerContainer\":\"form-add-password_innerContainer__2zNNl\",\"logo\":\"form-add-password_logo__1HgWR\",\"rightSide\":\"form-add-password_rightSide__1LBUg\",\"title\":\"form-add-password_title__1kxgS\",\"inputContainer\":\"form-add-password_inputContainer__zhZU1\",\"passInstructions\":\"form-add-password_passInstructions__25RWw\",\"passInput\":\"form-add-password_passInput__1gXnd\",\"loginButton\":\"form-add-password_loginButton__3pupI\",\"buttonDivLogin\":\"form-add-password_buttonDivLogin__3aXeP\",\"textLogin\":\"form-add-password_textLogin__2noU-\",\"textDiv\":\"form-add-password_textDiv__3Bs4x\",\"forgotPass\":\"form-add-password_forgotPass__1Uo4N\",\"newToSmM\":\"form-add-password_newToSmM__3qN7U\",\"signUpBtn\":\"form-add-password_signUpBtn__2VXx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"calendar-table_pageContainer__2rJk8\",\"columns\":\"calendar-table_columns__2r7c1\",\"task\":\"calendar-table_task__1tz91\",\"buttoDiv\":\"calendar-table_buttoDiv__AB2Qr\",\"addTaskField\":\"calendar-table_addTaskField__3Yb0t\",\"input\":\"calendar-table_input__214q3\",\"addlist\":\"calendar-table_addlist__3I9s5\",\"daylyProgress\":\"calendar-table_daylyProgress__3j-CE\",\"navigateButtons\":\"calendar-table_navigateButtons__3lTnJ\",\"header\":\"calendar-table_header__1AROC\",\"listNameContainer\":\"calendar-table_listNameContainer__1-WSQ\",\"listNameColor\":\"calendar-table_listNameColor__2hEFD\",\"listNameText\":\"calendar-table_listNameText__YPqg0\",\"daysButtons\":\"calendar-table_daysButtons__1StSd\",\"picContainer\":\"calendar-table_picContainer__Aorrw\",\"centeredText\":\"calendar-table_centeredText__1hfU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"aside_aside__3wMyb\",\"container\":\"aside_container__Qu0TM\",\"button\":\"aside_button__1Dg_A\",\"logo\":\"aside_logo__1AAc9\",\"topleft\":\"aside_topleft__1Lq3J\",\"menu\":\"aside_menu__b_F-d\",\"topright\":\"aside_topright__2SZev\",\"link\":\"aside_link__2o8o9\",\"bottomright\":\"aside_bottomright___B5p3\",\"bell\":\"aside_bell__25Vva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"history_message__2_rke\",\"bold\":\"history_bold__2Sw1-\",\"container\":\"history_container__38XTe\",\"button\":\"history_button__dTfA1\",\"inline\":\"history_inline__3xvvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-project_container__3bzmM\",\"form\":\"edit-project_form__u2u3o\",\"title\":\"edit-project_title__1LrjA\",\"buttonsDiv\":\"edit-project_buttonsDiv__mUX10\",\"navigateButtons\":\"edit-project_navigateButtons__2O6oW\",\"inputContainer\":\"edit-project_inputContainer__1yIbb\",\"inputPrName\":\"edit-project_inputPrName__u2ClQ\",\"inputContainerDescr\":\"edit-project_inputContainerDescr__3UDo7\",\"textareaDescr\":\"edit-project_textareaDescr__glbOc\",\"editMembers\":\"edit-project_editMembers__2h7yv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectInfoContainer\":\"project-list_projectInfoContainer__3mRLd\",\"calendarContainer\":\"project-list_calendarContainer__27ZyO\",\"table\":\"project-list_table__ibsXA\",\"column\":\"project-list_column__3rGR1\",\"columnChild\":\"project-list_columnChild__1AVvT\",\"daylyElement\":\"project-list_daylyElement__2Qz1Z\",\"filter\":\"project-list_filter__1hU5X\",\"filter-off\":\"project-list_filter-off__2hOsK\",\"filters\":\"project-list_filters__11KWq\"};","const getCookie = (name) => {\r\n    const cookieValue = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n    return cookieValue ? cookieValue[2] : null;\r\n}\r\n\r\nexport default getCookie;","function userObject(response) {\r\n    return {\r\n        username: response.user.username,\r\n        id: response.user._id,\r\n        teams: response.teams,\r\n        inbox: response.user.inbox,\r\n        confirmed: response.user.confirmed,\r\n        recentProjects: response.user.recentProjects\r\n    }\r\n}\r\n\r\nexport default userObject","import React from \"react\"\r\n\r\nconst UserContext = React.createContext({\r\n    user: null,\r\n    logIn: () => {},\r\n    logOut: () => {}\r\n});\r\n\r\nexport default UserContext","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport getCookie from \"../utils/cookie\"\r\nimport userObject from \"../utils/userObject\"\r\nimport UserContext from \"./UserContext\"\r\n\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const history = useHistory()\r\n\r\n    const logIn = (user) => {\r\n        setUser({\r\n            ...user,\r\n            loggedIn: true\r\n        })\r\n    }\r\n\r\n    const logOut = useCallback(() => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        fetch('/api/user/logout', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        }).then(response => {\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            } else {\r\n                document.cookie = \"x-auth-token= ; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/;\"\r\n\r\n                setUser({\r\n                    loggedIn: false\r\n                })\r\n            }\r\n        })\r\n    }, [history])\r\n\r\n    const verifyLogin = useCallback(() => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        if (!token) {\r\n\r\n            setUser({\r\n                loggedIn: false\r\n            })\r\n\r\n            setLoading(false)\r\n            return;\r\n        }\r\n\r\n        fetch(\"/api/user/verify\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        }).then(promise => {\r\n            return promise.json()\r\n        }).then(response => {\r\n            if (response.status) {\r\n                logIn(userObject(response))\r\n            } else {\r\n                logOut()\r\n            }\r\n\r\n            setLoading(false)\r\n        })\r\n    }, [logOut])\r\n\r\n    useEffect(() => {\r\n        verifyLogin()\r\n    }, [verifyLogin])\r\n\r\n    if (loading) {\r\n        return (\r\n            <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#363338\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            user,\r\n            setUser,\r\n            logIn,\r\n            logOut\r\n        }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider","import React from \"react\"\r\nimport UserProvider from \"./contexts/UserProvider\"\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n        <UserProvider>\r\n            {props.children}\r\n        </UserProvider>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\n\r\nconst TeamContext = React.createContext({\r\n  teams: [] ,\r\n  setTeams: () => {},\r\n  selectedTeam: 'Select' ,\r\n  setSelectedTeam: () => {},\r\n  getCurrentTeam: () => {},\r\n  currentTeam: '',\r\n  setCurrentTeam: () => {},\r\n  getTeams: () => {}\r\n})\r\n\r\nexport default TeamContext","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonClean = ( { title, onClick, type, className, children, style } ) => {\r\n    return (\r\n    <button type={type || 'button'} onClick={onClick} className={`${styles.clean} ${className}`} style={style} >{title}{children}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonClean","import React, { useContext, useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext)\r\n}\r\n\r\nexport function SocketProvider({ user, children }) {\r\n  const [socket, setSocket] = useState()\r\n  const url = window.location.href.includes('heroku') ? '/' : 'http://localhost:4000'\r\n    \r\n  useEffect(() => {\r\n    if (!user) {\r\n      return\r\n    }\r\n\r\n    if (!user.teams) {\r\n      return\r\n    }\r\n    const username = user.username\r\n    const userId = user.id\r\n    const teams = [...user.teams]\r\n    const teamsId = teams.map( t => t._id)\r\n    const teamsStr = JSON.stringify(teamsId)\r\n    const newSocket = io(\r\n      url, {\r\n        query: { teamsStr, username, userId },\r\n        transports: ['websocket']\r\n      }\r\n    )\r\n    setSocket(newSocket)\r\n\r\n    return () => newSocket.close()\r\n  }, [user, url])\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport Avatar from 'react-avatar'\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\n\r\nexport default function CreateTeam(props) {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch('/api/user/get-all', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u.email !== input.email)\r\n        setMembers(arr)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch('/api/teams', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                requests: members\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const team = await response.json()\r\n            console.log(userContext.user.teams);\r\n            const arr = [...teamContext.teams]\r\n            arr.push(team)\r\n            // const userTeams = [...userContext.user.teams]\r\n            // userTeams.push(team)\r\n            teamContext.setTeams(arr)\r\n            teamContext.setSelectedTeam(team.name)\r\n            props.hideForm()\r\n            socket.emit('team-update', team._id)\r\n            socket.emit('multiple-messages-sent', members)\r\n            history.push(`/team/${team._id}`)\r\n        }\r\n\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n                <div className={styles.title} >Create New Team</div>\r\n\r\n                <div className={styles.inputContainer}>\r\n                    <span> Name</span>\r\n                    <input\r\n                        className={styles.inputName}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label=\"Name\"\r\n                        id=\"name\"\r\n                        placeholder='Team Name'\r\n                    />\r\n                </div>\r\n\r\n                <div className={styles.inputContainerDescr}>\r\n                    <span className={styles.descriptionText}> Description</span>\r\n                    <textarea\r\n                        className={styles.textareaDescr}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        label=\"Description\"\r\n                        id=\"description\"\r\n                        placeholder='Team Description'\r\n                    />\r\n                </div>\r\n\r\n                <div className={styles.inputContainerMembers}>\r\n                    <span className={styles.membersText}> Invite Members</span>\r\n\r\n                    <div className={styles.inviteInput}>\r\n                        <input\r\n                            className={styles.inputMembers}\r\n                            autoComplete=\"off\"\r\n                            value={member}\r\n                            onChange={inputMembers}\r\n                            label=\"Invite members\"\r\n                            id=\"members\"\r\n                            placeholder='username'\r\n                            onBlur={onBlur}\r\n\r\n                        />\r\n\r\n                        <div className={styles.selectForInvite}>\r\n                            {\r\n                                showMembers &&\r\n                                <div className={styles.members}>\r\n                                    {\r\n                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                            .filter((e) => {\r\n                                                const found = members.find(element => element.username === e.username)\r\n                                                if (found) {\r\n                                                    return false\r\n                                                } else {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                            .map(u => {\r\n                                                return (\r\n                                                    <ButtonClean\r\n                                                        key={u._id}\r\n                                                        className={styles.user}\r\n                                                        onClick={() => addMember(u)}\r\n                                                        title={<div>\r\n                                                            <div>{u.username}</div>\r\n                                                            <div className={styles.email}>{u.email}</div>\r\n                                                        </div>}\r\n                                                    />)\r\n                                            })\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className={styles.membersAvatars}>\r\n                    {\r\n                        members.map(m => {\r\n                            return (\r\n                                <ButtonClean\r\n                                    onClick={() => removeMember(m)}\r\n                                    title={<Avatar key={m._id} name={m.username} size={40} round={true} maxInitials={2} />}\r\n                                />\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <div className={styles.buttonDiv}>\r\n                    <button type='submit' className={styles.createButton}>Create</button>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LinkComponent = ({ title, href, className, onClick }) => {\r\n    return (\r\n            <Link to={href} className={`${styles.link} ${className}`} onClick={onClick} >\r\n                {title}\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponent;","export default __webpack_public_path__ + \"static/media/logo.2beba198.svg\";","export default __webpack_public_path__ + \"static/media/menu.f66dcc80.svg\";","export default __webpack_public_path__ + \"static/media/home.05f82417.svg\";","export default __webpack_public_path__ + \"static/media/tasks.d514e762.svg\";","export default __webpack_public_path__ + \"static/media/inbox.6389f480.svg\";","export default __webpack_public_path__ + \"static/media/inbox-bell.959a963c.svg\";","import React from 'react'\r\n\r\nconst ProjectContext = React.createContext({\r\n  lists: [] ,\r\n  setLists: () => {},\r\n  hiddenLists: [],\r\n  setHiddenLists: () => {},\r\n  project: {},\r\n  setProject: () => {}\r\n})\r\n\r\nexport default ProjectContext\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ListColor({ color, type }) {\r\n    return (\r\n        <svg className={`${styles[type]}`} xmlns=\"http://www.w3.org/2000/svg\" width=\"110\" height=\"26.931\" viewBox=\"0 0 110 26.931\">\r\n            <g id=\"Layer_2\" data-name=\"Layer 2\" transform=\"translate(0.002 0.014)\">\r\n                <g id=\"Layer_1\" data-name=\"Layer 1\" transform=\"translate(-0.002 -0.014)\">\r\n                    <path \r\n                        className={styles.path} \r\n                        id=\"Path_60\" \r\n                        data-name=\"Path 60\" \r\n                        d=\"M4.208,22.578l-.277-.26c-.594-.366-.814-1.074-1.351-1.49-1-.749-1.14-2.214-2.352-2.784a1.237,1.237,0,0,1-.187-.391,1.628,1.628,0,0,1,.554-1.628,5.636,5.636,0,0,1,3.1-.456,6.862,6.862,0,0,0,1.083,0,.733.733,0,0,0,.765-.765c.049-.48-.057-.814-.586-.871a1.628,1.628,0,0,1-.513-.163c-.92-.456-.961-1.083-.106-1.7a3.256,3.256,0,0,0,.545-.448,1.27,1.27,0,0,1,.659-.383c.667-.244,1.538.3,2.027-.545a.651.651,0,0,0-.244-.374,6.894,6.894,0,0,1-.659-.554,1.278,1.278,0,0,1-.415-.814A1.9,1.9,0,0,0,5.022,6.933C4.2,6.509,3.6,5.891,4.411,4.881c2.263-1.628,4.933-1.937,7.57-2.328,1.27-.309,2.589-.187,3.858-.48a4.811,4.811,0,0,1,1.449-.09c.643.073,1.254.317,1.921-.147a2.011,2.011,0,0,1,1.718-.106,2.808,2.808,0,0,0,2.32-.2,3.394,3.394,0,0,1,2.2.122c1.628-.6,3.313-.391,4.957-.667.765-.147,1.563-.114,2.328-.3a8.873,8.873,0,0,1,3.557.13.252.252,0,0,0,.269,0A2.914,2.914,0,0,1,39.885.73h.277A2.182,2.182,0,0,1,42.075.307a22.922,22.922,0,0,0,3.883.057A34.326,34.326,0,0,0,56.165.2,1.75,1.75,0,0,1,57.85.51h.277C59.136-.3,60.276.054,61.383.128a28.856,28.856,0,0,0,4.436.26,8.669,8.669,0,0,1,2.751,0c1.188.317,2.442,0,3.606.244A22.083,22.083,0,0,0,75.7.917l.464.041a16.752,16.752,0,0,0,3.191.228h.464c1.083.057,2.157.285,3.256.269,1.351,0,2.678.3,4.021.309.814.171,1.685.2,2.523.334.545.269,1.254.065,1.709.578a4.746,4.746,0,0,0,1.9.309,26.545,26.545,0,0,1,4.548.392c1.166.211,2.347.235,3.527.333,1.091.3,2.271,0,3.329.5,1.408,0,2.825,0,4.241.081.3,0,.716.1.676.513s-.374.586-.814.383c-1.034-.09-2.059-.155-2.523,1.083-.317.814-.961.562-1.555.488-.537.228-1.14.147-1.677.358a5.576,5.576,0,0,1-.814.106,20.26,20.26,0,0,0-4.591.765c.814.676,1.245,1.555,2.255,1.758a1.934,1.934,0,0,1,1.424.334c-.057,1.026-.936.586-1.449.814a.578.578,0,0,1-.383-.065.057.057,0,0,0,0,.057h3.972a1.042,1.042,0,0,1,.92.448c-.244.814-1.058.521-1.587.814-.407.212-1.156.187-.545.961a4.613,4.613,0,0,0,.391.407,11.928,11.928,0,0,0,3,.155,5.421,5.421,0,0,1,.961,0c.814.147,1.058.44.407,1.156-1.074,1.188-2.442,2.165-3.012,3.769,1.742,0,3.565.041,5.389,0,.863.4.879.92.236,1.547a1.148,1.148,0,0,0-.3.814c.114.35.073.733.212,1.074.562,1.384.5,1.547-.863,2.068a13.569,13.569,0,0,1-2.637.814c-1.571.049-3.118.521-4.7.309-1.628-.554-3.329.212-4.99-.081a9.589,9.589,0,0,0-4.884.147,2.816,2.816,0,0,1-2.076.488H79.771a5.739,5.739,0,0,0-1.9.179,10.631,10.631,0,0,1-1.831.1c-4.485,0-8.954.081-13.455,0a4.933,4.933,0,0,0-1.758.187,9.247,9.247,0,0,1-2.507.106h-.529a28.6,28.6,0,0,1-3.126,0h-.48a6.137,6.137,0,0,1-1.726-.1,11.209,11.209,0,0,0-3.533-.2c-2.222.065-4.461-.106-6.675.163a6.658,6.658,0,0,1-1.929.081,4.168,4.168,0,0,1-.456,0c-1.286,0-2.572.106-3.858.049a12.474,12.474,0,0,0-3.394,0c-1.319.2-2.67-.138-3.98.187a16.768,16.768,0,0,1-2.556.236c-1.368-.366-2.711.342-4.07.106a2.133,2.133,0,0,1-.456-.073,9.475,9.475,0,0,0-2.711-.179c-1.213-.09-2.442-.236-3.63-.342a9.377,9.377,0,0,0-1.058-.228,17.6,17.6,0,0,0-2.068-.114c-1.335-.472-2.768-.22-4.119-.521a.969.969,0,0,1-.684-.814l-.594-.537c-.244-.236-.627-.26-.814-.529l-.529-.342A1.913,1.913,0,0,1,4.208,22.578Z\" \r\n                        transform=\"translate(0.002 0.014)\" \r\n                        fill={color} \r\n                    />\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport ProjectContext from \"../../contexts/ProjectContext\";\r\nimport ListColor from '../list-color'\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonHideList = ( { list, type } ) => {\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    function onClick() {\r\n        const newHiddenLists = [...projectContext.hiddenLists]\r\n        \r\n        if (newHiddenLists.includes(list._id)) {\r\n            const index = newHiddenLists.indexOf(list._id)\r\n            newHiddenLists.splice(index, 1)\r\n        } else {\r\n            newHiddenLists.push(list._id)\r\n        }\r\n        projectContext.setHiddenLists(newHiddenLists)\r\n    }\r\n\r\n    return (\r\n    <button onClick={onClick} className={`${styles.submit} ${projectContext.hiddenLists.includes(list._id) && styles.opacity}`} >\r\n        <ListColor color={list.color || '#A6A48E'} type={type} />\r\n        <div className={styles.name}>{list.name}</div>\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default ButtonHideList","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport LinkComponent from '../link'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport menu from '../../images/aside/menu.svg'\r\nimport home from '../../images/aside/home.svg'\r\nimport tasks from '../../images/aside/tasks.svg'\r\nimport inbox from '../../images/aside/inbox.svg'\r\nimport bell from '../../images/aside/inbox-bell.svg'\r\n// import settings from '../../images/aside/settings.svg'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport ButtonHideList from '../button-hide-list'\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport userObject from '../../utils/userObject'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\n\r\nexport default function Aside({ asideOn, setAsideOn }) {\r\n    const [listVisibility, setListVisibility] = useState(false)\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const logIn = userContext.logIn\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('project')) {\r\n            setListVisibility(true)\r\n        }\r\n    }, [])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        const user = userObject(response)\r\n        logIn(user)\r\n    }, [logIn])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <div className={styles.aside}>\r\n            <aside className={styles.container}>\r\n                <div className={styles.topleft}>\r\n                    <ButtonClean\r\n                        onClick={() => setAsideOn(!asideOn)}\r\n                        title={<img className={styles.options} src={menu} alt=\"menu\" width=\"32\" height=\"24\" />}\r\n                    />\r\n                </div>\r\n                <LinkComponent\r\n                    href='/'\r\n                    title={<img src={home} alt=\"home\" width=\"34\" height=\"32\" />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/my-tasks/${userContext.user.id}`}\r\n                    title={<img src={tasks} alt=\"my-tasks\" width=\"30\" height=\"25\" />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/inbox/${userContext.user.id}`}\r\n                    title={<img src={inbox} alt=\"inbox\" width=\"33\" height=\"34\" />}\r\n                />\r\n                {/* <LinkComponent\r\n                    href={`/profile/${userContext.user.id}`}\r\n                    title={<img src={settings} alt=\"settings\" width=\"25\" height=\"25\" />}\r\n                /> */}\r\n                {\r\n                    userContext.user.inbox.length !== 0 &&\r\n                    <LinkComponent\r\n                        href={`/inbox/${userContext.user.id}`}\r\n                        title={<img src={bell} alt=\"inbox\" width=\"33\" height=\"34\" />}\r\n                        className={styles.bell}\r\n                    />\r\n                }\r\n            </aside>\r\n            {\r\n                asideOn &&\r\n                    <div className={styles.menu}>\r\n                        <div className={styles.topright}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width=\"87\" height=\"65\" />\r\n                            </div>\r\n                            <LinkComponent\r\n                                href='/'\r\n                                title='Home'\r\n                                className={styles.link}\r\n                            />\r\n                            <LinkComponent\r\n                                href={`/my-tasks/${userContext.user.id}`}\r\n                                title='My Tasks'\r\n                                className={styles.link}\r\n                            />\r\n                            <LinkComponent\r\n                                href={`/inbox/${userContext.user.id}`}\r\n                                title='Inbox'\r\n                                className={styles.link}\r\n                            />\r\n                            {/* <LinkComponent\r\n                                href={`/profile/${userContext.user.id}`}\r\n                                title='Settings'\r\n                                className={styles.link}\r\n                            /> */}\r\n                        </div>\r\n                        {listVisibility && <div className={styles.bottomright}>\r\n                            {\r\n                                projectContext.lists.map((element) => {\r\n                                    return (\r\n                                        <ButtonHideList key={element._id} list={element} type={'aside'} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>}\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDetectOutsideClick = (el) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onClick = e => {\r\n      // If the active element exists and is clicked outside of\r\n      if (el.current !== null && !el.current.contains(e.target)) {\r\n        setIsActive(!isActive);\r\n      }\r\n    };\r\n\r\n    // If the item is active (ie open) then listen for clicks outside\r\n    if (isActive) {\r\n      window.addEventListener(\"click\", onClick);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", onClick);\r\n    };\r\n  }, [isActive, el]);\r\n\r\n  return [isActive, setIsActive];\r\n};","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst Transparent = (props) => {\r\n    return (\r\n    <>\r\n    <div onClick={props.hideForm} className={styles.transparent}></div>\r\n    {props.children}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Transparent\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport ButtonClean from '../button-clean'\r\nimport Avatar from 'react-avatar'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\n\r\nexport default function CreateProject({ hideForm }) {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const socket = useSocket()\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if(name === ''){\r\n            return\r\n        }\r\n\r\n        const teamId = params.teamid\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch('/api/projects', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                teamId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        } else {\r\n            const project = await response.json()\r\n            hideForm && hideForm()\r\n            socket.emit('team-update', teamId)\r\n            history.push(`/project-board/${teamId}/${project._id}`)\r\n        }\r\n    }\r\n\r\n    const onFocus = async () => {\r\n        setShowMembers(true)\r\n\r\n        const teamId = params.teamid\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch(`/api/teams/get-users/${teamId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users.members)\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u.email !== input.email)\r\n        setMembers(arr)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n           \r\n\r\n                <div className={styles.title} >Create New Project</div>\r\n\r\n                <div className={styles.inputContainer}>\r\n                    <span> Name</span>\r\n                    <input\r\n                        className={styles.inputName}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label=\"Name\"\r\n                        id=\"name\"\r\n                        placeholder='Project Name'\r\n                    />\r\n                </div>\r\n\r\n                <div className={styles.inputContainerDescr}>\r\n                    <span> Description</span>\r\n                    <textarea\r\n                        className={styles.textareaDescr}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        label=\"Description\"\r\n                        id=\"description\"\r\n                        placeholder='Project Description'\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div className={styles.inputContainer}>\r\n                    <span className={styles.textInvite}> Invite Members</span>\r\n\r\n                    <div className={styles.inviteInput}>\r\n                    <input\r\n                        className={styles.membersInput}\r\n                        autoComplete=\"off\"\r\n                        value={member}\r\n                        onFocus={onFocus}\r\n                        onBlur={onBlur}\r\n                        onChange={(e) => setMember(e.target.value)}\r\n                        label=\"Invite members\"\r\n                        id=\"members\"\r\n                        placeholder='Teammate Username'\r\n                    />\r\n\r\n                    <div className={styles.selectForInvite}>\r\n                    {\r\n                    showMembers && <div className={styles.members}>\r\n                        {\r\n                            allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                .filter((e) => {\r\n                                    const found = members.find(element => element.username === e.username)\r\n                                    if (found) {\r\n                                        return false\r\n                                    } else {\r\n                                        return true\r\n                                    }\r\n                                })\r\n                                .sort((a, b) => a.username.localeCompare(b.username))\r\n                                .map(u => {\r\n                                    return (\r\n                                        <ButtonClean\r\n                                            key={u._id}\r\n                                            className={styles.user}\r\n                                            onClick={() => addMember(u)}\r\n                                            title={<div className={styles.member}>\r\n                                                <div>{u.username}</div>\r\n                                                <div className={styles.email}>{u.email}</div>\r\n                                            </div>}\r\n                                        />)\r\n                                })\r\n                        }\r\n                    </div>\r\n                    }\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.membersAvatars}>\r\n                    {\r\n                        members.map(m => {\r\n                            return (\r\n                                <Avatar onClick={() => removeMember(m)} key={m._id} name={m.username} size={40} round={true} maxInitials={2} />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>                \r\n\r\n                <div className={styles.buttonDiv}>\r\n                    <button type='submit' className={styles.createButton}>Create</button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\n\r\n\r\nexport default function SearchResults(props) {\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n\r\n\r\n    const teams = userContext.user.teams\r\n\r\n    const searchInput = props.searchInput\r\n\r\n    let resultArr = []\r\n\r\n    for (let index = 0; index < teams.length; index++) {\r\n        const team = teams[index];\r\n        let obj = { 'name': `Team: ${team.name}`, 'id': team._id, 'type': 'team' }\r\n        resultArr.push(obj)\r\n        for (let index = 0; index < team.projects.length; index++) {\r\n            const project = team.projects[index];\r\n            let obj = { 'name': `Project: ${project.name}`, 'id': project._id, 'type': 'project' }\r\n            resultArr.push(obj)\r\n        }\r\n    }\r\n\r\n    const gotToPage = (id) => {\r\n        for (let index = 0; index < teams.length; index++) {\r\n            const team = teams[index];\r\n            if (team._id === id) {\r\n                history.push(`/team/${id}`)\r\n                teamContext.updateSelectedTeam(team._id)\r\n                props.hideForm()\r\n            }\r\n            for (let index = 0; index < team.projects.length; index++) {\r\n                const project = team.projects[index];\r\n                if (project._id === id) {\r\n                    history.push(`/project-board/${team._id}/${project._id}`)\r\n                    teamContext.updateSelectedTeam(team._id)\r\n                    props.hideForm()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // teams.filter(u => u.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n    //                         .filter((e) => {\r\n    //                             const found = members.find(element => element.username === e.username)\r\n    //                             if (found) {\r\n    //                                 return false\r\n    //                             } else {\r\n    //                                 return true\r\n    //                             }\r\n    //                         })\r\n\r\n    return (\r\n        <div className={styles.searchContainer}>\r\n            {\r\n                resultArr.filter(u => u.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n                    .map((t, index) => {\r\n                        return (\r\n                            <div key={index} onClick={() => { gotToPage(t.id) }}>{t.name}</div>\r\n                        )\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useRef, useState, useEffect, useCallback } from \"react\"\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport Avatar from \"react-avatar\"\r\nimport { useDetectOutsideClick } from \"../../utils/useDetectOutsideClick\"\r\nimport LinkComponent from \"../link\"\r\nimport ButtonClean from \"../button-clean\"\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport Transparent from \"../transparent\"\r\nimport CreateTeam from \"../create-team\"\r\nimport ProjectContext from \"../../contexts/ProjectContext\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport CreateProject from \"../create-project\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport SearchResults from \"../search-results\"\r\n\r\nconst Header = ({ asideOn }) => {\r\n    const dropdownRefProfile = useRef(null)\r\n    const dropdownRefView = useRef(null)\r\n    const dropdownRefProject = useRef(null)\r\n    const dropdownRefTeam = useRef(null)\r\n    const dropdownRefSearch = useRef(null)\r\n    const [isProjectVisibble, setIsProjectVisibble] = useState(false)\r\n    const [isProjectActive, setIsProjectActive] = useDetectOutsideClick(dropdownRefProject)\r\n    const [isTeamActive, setIsTeamActive] = useDetectOutsideClick(dropdownRefTeam)\r\n    const [isViewVisibble, setIsViewVisibble] = useState(false)\r\n    const [isViewActive, setIsViewActive] = useDetectOutsideClick(dropdownRefView)\r\n    const [viewState, setViewState] = useState(null)\r\n    const [isProfileActive, setIsProfileActive] = useDetectOutsideClick(dropdownRefProfile)\r\n    const [showTeamForm, setShowTeamForm] = useState(false)\r\n    const [showSearchForm, setShowSearchForm] = useDetectOutsideClick(dropdownRefSearch)\r\n    const [searchInput, setSearchInput] = useState('')\r\n\r\n\r\n    const [showProjectForm, setShowProjectForm] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const projectContext = useContext(ProjectContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const params = useParams()\r\n    const history = useHistory()\r\n\r\n    function selectTeam(teamId, teamName) {\r\n        teamContext.getCurrentProjects(teamId)\r\n        teamContext.setSelectedTeam(teamName)\r\n        setIsTeamActive(false)\r\n    }\r\n\r\n    const getData = useCallback(async () => {\r\n        const id = params.projectid\r\n        const token = getCookie(\"x-auth-token\");\r\n\r\n        const response = await fetch(`/api/projects/info/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            projectContext.setProject(data)\r\n        }\r\n    }, [history, params, projectContext])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) {\r\n            teamContext.setSelectedTeam('Select')\r\n        } else if (teamContext.selectedTeam === 'Select') {\r\n            const teamId = params.teamid\r\n            teamContext.updateSelectedTeam(teamId)\r\n        }\r\n\r\n        if (window.location.href.includes('project')) {\r\n            setIsViewVisibble(true)\r\n            setIsProjectVisibble(true)\r\n            teamContext.getCurrentProjects(params.teamid)\r\n\r\n            if (projectContext.project === null || projectContext.project._id !== params.projectid) {\r\n                getData()\r\n            }\r\n\r\n            if (window.location.href.includes('board')) {\r\n                setViewState('Board')\r\n            }\r\n            if (window.location.href.includes('list')) {\r\n                setViewState('List')\r\n            }\r\n        }\r\n    }, [getData, params, params.teamid, projectContext.project, teamContext,])\r\n\r\n    if (window.location.href.includes('project') && !projectContext.project) {\r\n        return null\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => (setShowSearchForm(false)), 120)\r\n    }\r\n\r\n    return (\r\n        <header className={`${styles.navigation} ${asideOn ? styles.small : ''}`} >\r\n            <div className={styles.container}>\r\n                <div className={styles.links}>\r\n\r\n                    <div className={styles.margin}>\r\n                        Team:\r\n                    </div>\r\n                    <div>\r\n                        <ButtonClean\r\n                            className={styles.teams}\r\n                            onClick={() => setIsTeamActive(!isTeamActive)}\r\n                            title={teamContext.selectedTeam}\r\n                        />\r\n                        {\r\n                            isTeamActive ? <div\r\n                                ref={dropdownRefTeam}\r\n                                className={`${styles.options} ${styles.font} ${styles['teams-position']}`}\r\n                            >\r\n                                {\r\n                                    teamContext.teams.map(t => (\r\n                                        <div key={t._id} className={styles['team-options']}>\r\n                                            <LinkComponent\r\n                                                href={`/team/${t._id}`}\r\n                                                title={t.name}\r\n                                                onClick={() => { selectTeam(t._id, t.name) }}\r\n                                                className={`${styles.overflow} ${styles.hover}`}\r\n                                            />\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                <div className={styles['last-option']}>\r\n                                    <ButtonClean\r\n                                        onClick={() => setShowTeamForm(true)}\r\n                                        title='Create Team'\r\n                                        className={styles.logout}\r\n                                    />\r\n                                </div>\r\n                            </div> : null\r\n                        }\r\n                    </div>\r\n                    {\r\n                        showTeamForm ? (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n                            <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n                        </Transparent>) : null\r\n                    }\r\n\r\n\r\n\r\n                    {isProjectVisibble && <div className={styles.flex}>\r\n                        <div className={styles.margin}>\r\n                            Project:\r\n                        </div>\r\n                        <div>\r\n                            <ButtonClean\r\n                                className={styles.teams}\r\n                                onClick={() => setIsProjectActive(!isProjectActive)}\r\n                                title={projectContext.project.name}\r\n                            />\r\n                            {\r\n                                isProjectActive ? <div\r\n                                    ref={dropdownRefProject}\r\n                                    className={`${styles.options} ${styles.font} ${styles['projects-position']}`}\r\n                                >\r\n                                    {\r\n                                        teamContext.currentProjects.map(p => (\r\n                                            <div key={p._id} className={styles['team-options']}>\r\n                                                <LinkComponent\r\n                                                    href={`/project-board/${params.teamid}/${p._id}`}\r\n                                                    title={p.name}\r\n                                                    onClick={() => { setIsProjectActive(false) }}\r\n                                                    className={`${styles.overflow} ${styles.hover}`}\r\n                                                />\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                    <div className={styles['last-option']}>\r\n                                        <ButtonClean\r\n                                            onClick={() => setShowProjectForm(true)}\r\n                                            title='Create Project'\r\n                                            className={styles.logout}\r\n                                        />\r\n                                    </div>\r\n                                </div> : null\r\n                            }\r\n                        </div>\r\n                        {\r\n                            showProjectForm && <Transparent hideForm={() => setShowProjectForm(false)}>\r\n                                <CreateProject hideForm={() => setShowProjectForm(false)} />\r\n                            </Transparent>\r\n                        }\r\n                    </div>}\r\n\r\n\r\n\r\n                    {isViewVisibble && <div className={styles.flex}>\r\n                        <div className={styles.margin}>\r\n                            View:\r\n                        </div>\r\n                        <div>\r\n                            <ButtonClean\r\n                                className={styles.view}\r\n                                onClick={() => setIsViewActive(!isViewActive)}\r\n                                title={viewState}\r\n                            />\r\n                            {\r\n                                isViewActive ? <div\r\n                                    ref={dropdownRefView}\r\n                                    className={`${styles.options} ${styles.font} ${styles['view-position']}`}\r\n                                >\r\n                                    <div className={styles['first-option']}>\r\n                                        <LinkComponent\r\n                                            href={`/project-board/${params.teamid}/${projectContext.project._id}`}\r\n                                            title='Board'\r\n                                            className={styles.hover}\r\n                                            onClick={() => { setIsViewActive(false) }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={styles['last-option']}>\r\n                                        <LinkComponent\r\n                                            href={`/project-list/${params.teamid}/${projectContext.project._id}`}\r\n                                            title='List'\r\n                                            className={styles.hover}\r\n                                            onClick={() => { setIsViewActive(false) }}\r\n                                        />\r\n                                    </div>\r\n                                </div> : null\r\n                            }\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n\r\n                <div className={`${styles.links} ${styles.font}`}>\r\n                    <span>\r\n                        <input className={styles.input} type='text'\r\n                            placeholder={!showSearchForm ? 'Search...' : 'Enter Project or Team name'}\r\n                            autoComplete=\"off\"\r\n                            value={searchInput}\r\n                            onChange={(e) => setSearchInput(e.target.value)}\r\n                            onClick={() => setShowSearchForm(true)}\r\n                            onBlur={onBlur}\r\n                        />\r\n                        {\r\n                            (\r\n                                searchInput.length > 0\r\n                                 && \r\n                                 showSearchForm) ?                                \r\n                                    <div ref={dropdownRefSearch}>\r\n                                        <SearchResults searchInput={searchInput} hideForm={() => { setShowSearchForm(!showSearchForm); setSearchInput('') }} />\r\n                                    </div>\r\n                                 : null\r\n                        }\r\n                    </span>\r\n                    <ButtonClean\r\n                        className={styles.avatar}\r\n                        onClick={() => setIsProfileActive(!isProfileActive)}\r\n                        title={<Avatar name={context.user.username} size={40} round={true} maxInitials={2} />}\r\n                    />\r\n                    {\r\n                        isProfileActive ? <div\r\n                            ref={dropdownRefProfile}\r\n                            className={`${styles.options} ${styles['logout-position']}`}\r\n                        >\r\n                            <div className={styles['first-option']}>\r\n                                <LinkComponent\r\n                                    href={`/profile/${context.user && context.user.id}`}\r\n                                    title='Profile'\r\n                                    className={styles.hover}\r\n                                />\r\n                            </div>\r\n                            <div className={styles['last-option']}>\r\n                                <ButtonClean\r\n                                    onClick={context.logOut}\r\n                                    title='Log Out'\r\n                                    className={styles.logout}\r\n                                />\r\n                            </div>\r\n                        </div> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\nimport Aside from '../aside'\r\nimport Header from \"../header\"\r\nimport styles from \"./index.module.css\"\r\n\r\nconst PageLayout = (props) => {\r\n  const [asideOn, setAsideOn] = useState(false)\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <Aside asideOn={asideOn} setAsideOn={setAsideOn} />\r\n      <Header asideOn={asideOn} />\r\n      <div className={`${styles.content} ${asideOn ? styles.small : ''}`} >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageLayout","import React from \"react\"\r\nimport styles from \"./index.module.css\"\r\n\r\nconst Title = ( {title} ) => {\r\n    return (\r\n    <div className={styles.title}>{title}</div>\r\n    )\r\n}\r\n\r\nexport default Title","export default __webpack_public_path__ + \"static/media/home-page-pic.50bdb1b7.svg\";","import React, { useContext, useState, useRef } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport CreateTeam from \"../../components/create-team\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Title from \"../../components/title\"\r\nimport Transparent from \"../../components/transparent\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/home-page-pic.svg'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\n\r\nconst Home = () => {\r\n  const dropdownRef = useRef(null)\r\n  const userContext = useContext(UserContext)\r\n  const history = useHistory()\r\n  const [showTeamForm, setShowTeamForm] = useState(false)\r\n  const [showTeamsVisibleForm, setShowTeamsVisibleForm] = useDetectOutsideClick(dropdownRef)\r\n  const userName = userContext.user.username\r\n  const userTeams = userContext.user.teams\r\n  const userId = userContext.user._id\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n  const goToProject = (projectId) => {\r\n\r\n    userTeams.map(t => {\r\n      return (t.projects.forEach(element => {\r\n        if (element._id === projectId) {\r\n          history.push(`/project-board/${t._id}/${projectId}`)\r\n        }\r\n      }))\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const recentProjects = userContext.user.recentProjects\r\n\r\n  // const goToProjectPage = (projectId, teamId) => {\r\n  //   history.push(`/project-board/${teamId}/${projectId}`)\r\n  // }\r\n\r\n  // const showTeamProjects = (team) => {\r\n  //   console.log(team);\r\n  //   team.projects.map((p, index) => {\r\n  //     return (\r\n  //       <div key={index} onClick={() => goToProjectPage(p._id, team._id)}>{p.name}</div>\r\n  //     )\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <PageLayout>\r\n      <div>\r\n        {\r\n          showTeamForm ? (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n            <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n          </Transparent>) : null\r\n        }\r\n      </div>\r\n\r\n      <Title title='Home' />\r\n      <div className={styles.container}>\r\n\r\n        <span className={styles.leftButtons}>\r\n\r\n          <div>\r\n            <button className={styles.navigateButtons}\r\n              onClick={() => history.push(`/my-tasks/${userId}`)}\r\n            >My Tasks</button>\r\n          </div>\r\n\r\n          <div>\r\n            <div className={styles.myTeamsContainer}>\r\n              < button onClick={() => setShowTeamsVisibleForm(!showTeamsVisibleForm)}\r\n                // title='Create Team' \r\n                // className={styles.teamNames}\r\n                className={styles.myTeamButton}>\r\n                  My Teams\r\n              </ button>\r\n            <div className={styles.selectTeamContainer}>\r\n              {\r\n                showTeamsVisibleForm ?\r\n                  <div className={styles.teamsHome} ref={dropdownRef}>\r\n                    {\r\n                      userTeams.length > 0\r\n                      ? userTeams.map((t, index) => {\r\n                        return (\r\n                          <span key={index}>                            \r\n                            <div                              \r\n                              className={styles.navigateButtonsTeams}\r\n                              onClick={() => goToTeamPage(t._id)}\r\n\r\n                            >{t.name}</div>\r\n                            \r\n                          </span>\r\n                        )\r\n                      }\r\n                      )\r\n                      : \"You haven't joined any teams yet\"\r\n                    }\r\n                  </div>\r\n                  : null\r\n              }\r\n            </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            < button onClick={() => setShowTeamForm(true)}\r\n              // title='Create Team' \r\n              // className={styles.teamNames}\r\n              className={styles.navigateButtons}\r\n            >Create New Team</ button>\r\n          </div>\r\n\r\n        </span>\r\n\r\n        <div className={styles.picContainer}>\r\n          <img className={styles.pic1} src={pic1} alt=\"\" />\r\n          <div className={styles.welcomeUser}>{`Welcome ${userName}!`}</div>\r\n        </div>\r\n\r\n        <span className={styles.rightButtons}>\r\n          {\r\n            (recentProjects) ?\r\n              <div>\r\n                <div >{`Recent projects:`}</div>\r\n                {\r\n                  recentProjects.slice(0).reverse().map((p, index) => {\r\n                    return (\r\n                      <div key={p._id}>\r\n                        <button className={styles.navigateButtons} onClick={() => goToProject(p._id)}>{p.name}</button>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n\r\n\r\n              </div>\r\n              : null\r\n          }\r\n        </span>\r\n      </div>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default Home","export default __webpack_public_path__ + \"static/media/welcome-page-1.346d3517.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-2.73d5ef5e.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-3.5a073b3b.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-4.5b854b1a.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-5.a24b3016.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-6.2c79ee8c.svg\";","export default __webpack_public_path__ + \"static/media/instagram-icon.1043ced2.svg\";","export default __webpack_public_path__ + \"static/media/twitter-icon.0f92d6a5.svg\";","export default __webpack_public_path__ + \"static/media/facebook-icon.529cf39a.svg\";","import userObject from \"./userObject\"\r\n\r\nconst authenticate = async (url, method, body, onSuccess, onFailure) => {\r\n    try {\r\n        \r\n        const promise = await fetch(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        \r\n        const authToken = promise.headers.get(\"Authorization\")\r\n        const response = await promise.json()\r\n        \r\n        if (response.needPassword) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.wrongPassword) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.wrongUser) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.exist) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n\r\n        document.cookie = `x-auth-token=${authToken}`\r\n\r\n\r\n        if (response.user.username && authToken) {\r\n            onSuccess(userObject(response));\r\n        } else {\r\n            onFailure(response)\r\n        }\r\n\r\n    } catch (e) {\r\n        onFailure(e)\r\n    }\r\n}\r\n\r\nexport default authenticate","import userObject from \"./userObject\"\r\n\r\nconst responseGoogle = async (googleResponse, onSuccess, onFailure) => {\r\n\r\n    try {\r\n        const tokenId = googleResponse.tokenId\r\n        const promise = await fetch(\"/api/user/google-login\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({tokenId}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        const authToken = promise.headers.get(\"Authorization\")\r\n        document.cookie = `x-auth-token=${authToken}`\r\n\r\n        const response = await promise.json()\r\n\r\n        if (response.user.username && authToken) {\r\n            onSuccess(userObject(response))\r\n        } else {\r\n            onFailure(response)\r\n        }\r\n        \r\n    } catch (error) {\r\n        onFailure(error)\r\n    }\r\n}\r\n\r\nexport default responseGoogle","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div>\r\n            {props.alert ? (<div className={styles.alert}>\r\n                {props.message}\r\n            </div>) : null}\r\n        </div>\r\n    )\r\n}","import getCookie from \"./cookie\"\r\nimport userObject from \"./userObject\"\r\n\r\nconst authenticateUpdate = async (url, method, body, onSuccess, onFailure) => {\r\n\r\n    try {\r\n        \r\n        const cookie = getCookie('x-auth-token')\r\n    \r\n        const promise = await fetch(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": cookie\r\n            }\r\n        })\r\n        \r\n        const response = await promise.json()\r\n        \r\n        if (response.user.username) {            \r\n            onSuccess(userObject(response))\r\n        } else {\r\n            onFailure()\r\n        }\r\n\r\n    } catch (e) {\r\n        onFailure(e)\r\n    }\r\n}\r\n\r\nexport default authenticateUpdate","import React, { useCallback, useContext, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Alert from '../alert'\r\nimport authenticateUpdate from '../../utils/authenticate-update'\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\n\r\n\r\n\r\nexport default function AddPassword(props) {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rePassword, setRePassword] = useState(\"\")\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n\r\n    const userContext = useContext(UserContext)\r\n\r\n\r\n    const history = useHistory()\r\n    const userId = props.userId\r\n    const email = props.email\r\n    // const [disabled, setDisabled] = useState(true)\r\n\r\n    // useEffect(() => {\r\n    //     if (password && password === rePassword) {\r\n    //         setDisabled(false)\r\n    //     } else {\r\n    //         setDisabled(true)\r\n    //     }\r\n    // }, [password, rePassword])\r\n\r\n\r\n    const handleSubmit = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n        \r\n        \r\n        if (!password || !rePassword) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n        await authenticateUpdate(`/api/user/${userId}`, 'PUT', {\r\n            password\r\n        }, (user) => {\r\n            console.log(user)\r\n        }, (e) => {\r\n            console.log(\"Error\", e);\r\n        })\r\n\r\n        await authenticate(\"/api/user/login\", 'POST', {\r\n            email,\r\n            password\r\n        }, (user) => {\r\n            userContext.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n\r\n            console.log(\"Error\", response)\r\n        })\r\n\r\n    }, [history, userContext, password, rePassword, userId, email])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form className={styles.container} >\r\n\r\n\r\n\r\n            <div className={styles.innerContainer}>\r\n\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles.rightSide}>\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    </div>\r\n\r\n                    <div className={styles.title} >Add password to user</div>\r\n\r\n                    <div className={styles.inputContainer}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles.passInput}\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            label=\"New Password\"\r\n                            id=\"password\"\r\n                        />\r\n                        <div className={styles.passInstructions}>\r\n                            <p>Use 8 or more characters with a mix </p>\r\n                            <p>of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.inputContainer}>\r\n                        <div> Confirm Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles.passInput}\r\n                            type=\"password\"\r\n                            value={rePassword}\r\n                            onChange={e => setRePassword(e.target.value)}\r\n                            label=\"Confirm Password\"\r\n                            id=\"rePassword\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.buttonDivLogin}>\r\n                        <button type='submit' className={styles.loginButton} onClick={handleSubmit}>Submit</button>\r\n                    </div>\r\n\r\n                    <div className={styles.textLogin}>User was registered with Google. Please add password for this Website</div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google.2cf12fa6.svg\";","import React, { useState, useContext } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from \"./index.module.css\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport Transparent from \"../transparent\"\r\nimport AddPassword from \"../form-add-password\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from \"../alert\"\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [userId, setUserId] = useState('')\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        await authenticate(\"/api/user/login\", 'POST', {\r\n            email,\r\n            password\r\n        }, (user) => {            \r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            if (response.needPassword) {\r\n                setUserId(response.userId)\r\n                setShowForm(true)\r\n            }\r\n            if (response.wrongPassword) {\r\n                setWrongPassAllert(true)\r\n            }\r\n            if (response.wrongUser) {\r\n                setWrongUserAllert(true)\r\n            }\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {            \r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setShowForm(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                showForm ?\r\n                    <div>\r\n                        <Transparent hideForm={hideForm}>\r\n                            <AddPassword hideForm={hideForm} userId={userId} email={email}/>\r\n                        </Transparent>\r\n                    </div> : null\r\n            }\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n                <div className={styles.alerts}>\r\n                    <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    <Alert alert={wrongPassAllert} message={'Wrong Password'} />\r\n                    <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                </div>\r\n\r\n                <div className={styles.innerContainer}>\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles.rightSide}>\r\n\r\n                        <div className={styles.title} >Log In with E-mail</div>\r\n\r\n\r\n                        <div className={styles.inputContainer}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles.emailInput}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label=\"Email\"\r\n                                id=\"email\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles.inputContainer}>\r\n                            <div> Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label=\"Password\"\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles.buttonDivLogin}>\r\n                            <button type='submit' className={styles.loginButton}>Log In</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.textDiv}>\r\n                            <p className={styles.forgotPass}>\r\n                                Forgot Password?\r\n                        </p>\r\n                            <p className={styles.newToSmM}>\r\n                                New to Smart Manager?\r\n                        <button className={styles.signUpBtn}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                        </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.buttonDivGoogleLogin}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles.googleLoginBtn}\r\n                                    >\r\n                                        <img src={google} alt=\"logo\" width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText=\"Login\"\r\n                                onSuccess={handleGoogle}\r\n                                // onFailure={errorGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, { useContext, useState } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport styles from \"./index.module.css\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Alert from \"../alert\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\n\r\n\r\n\r\nconst SignupForm = (props) => {\r\n    const [username, setUsername] = useState(null)\r\n    const [password, setPassword] = useState(null)\r\n    const [email, setEmail] = useState(null)\r\n    const [rePassword, setRePassword] = useState(null)\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [userExist, setUserExist] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n        setUserExist(false)\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n\r\n\r\n        if (!username || !password || !rePassword || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        await authenticate(\"/api/user/register\", 'POST', {\r\n            email,\r\n            username,\r\n            password\r\n        }, (user) => {\r\n            context.logIn(user);\r\n            history.push(\"/\");\r\n        }, (response) => {\r\n            if (response.exist) {\r\n                setUserExist(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n\r\n            <div className={styles.innerContainer}>\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles.rightSide}>\r\n\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={userExist} message={'User with this email already exists'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    </div>\r\n                    <div className={styles.title}  >Sign Up with E-mail</div>\r\n\r\n                    <div className={styles.inputContainer}>\r\n                        <div> Username:</div>\r\n                        <input\r\n                            placeholder='John Smith'\r\n                            className={styles.signUpInput}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            label=\"Username\"\r\n                            id=\"username\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.inputContainer}>\r\n                        <div> Email:</div>\r\n                        <input\r\n                            placeholder='John@example.com'\r\n                            className={styles.signUpInput}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            label=\"Email\"\r\n                            id=\"email\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.inputContainer}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles.signUpInput}\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            label=\"Password\"\r\n                            id=\"password\"\r\n                        />\r\n                        <div className={styles.passInstructions}>\r\n                            <p>Use 8 or more characters with a</p>\r\n                            <p>mix of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.inputContainer}>\r\n                        <div> Re-type Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles.signUpInput}\r\n                            type=\"password\"\r\n                            value={rePassword}\r\n                            onChange={(e) => setRePassword(e.target.value)}\r\n                            label=\"Re-Password\"\r\n                            id=\"re-password\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.buttonDivLogin}>\r\n                        <button type='submit' className={styles.signUpButton}>Get Started</button>\r\n                    </div>\r\n\r\n                    <div className={styles.textDiv}>\r\n                        <h3>\r\n                            or\r\n                        </h3>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.buttonDivGoogleLogin}>\r\n                        <GoogleLogin\r\n                            render={renderProps => (\r\n                                <button onClick={renderProps.onClick}\r\n                                    className={styles.googleLoginBtn}\r\n                                >\r\n                                    <img src={google} alt=\"logo\" width='25' height='25' />Sign Up with Google</button>\r\n                            )}\r\n                            clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                            buttonText=\"Sign up with Google\"\r\n                            onSuccess={handleGoogle}\r\n                            // onFailure={errorGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.textDiv}>\r\n                        <p className={styles.alreadySignUp}>\r\n                            Already Sign Up?\r\n                        <button className={styles.signUpBtn} onClick={() => { props.goToLogin(); props.hideForm() }}>Log In</button>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SignupForm;","import React, { useState } from \"react\"\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport pic1 from '../../images/welcome-page/welcome-page-1.svg'\r\nimport pic2 from '../../images/welcome-page/welcome-page-2.svg'\r\nimport pic3 from '../../images/welcome-page/welcome-page-3.svg'\r\nimport pic4 from '../../images/welcome-page/welcome-page-4.svg'\r\nimport pic5 from '../../images/welcome-page/welcome-page-5.svg'\r\nimport pic6 from '../../images/welcome-page/welcome-page-6.svg'\r\nimport instagram from '../../images/welcome-page/instagram-icon.svg'\r\nimport twitter from '../../images/welcome-page/twitter-icon.svg'\r\nimport facebook from '../../images/welcome-page/facebook-icon.svg'\r\nimport LoginForm from \"../../components/login-form\"\r\nimport Transparent from \"../../components/transparent\"\r\nimport SignupForm from \"../../components/signup-form\"\r\n\r\n\r\nconst WelcomePage = () => {\r\n\r\n  const [isVisible, setIsVisible] = useState(false)\r\n  const [isVisibleSignUp, setIsVisibleSignUp] = useState(false)\r\n\r\n  return (\r\n\r\n    <div className={styles.pageContainer}>\r\n      <div>\r\n        {isVisible ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n              <LoginForm hideForm={() => setIsVisible(!isVisible)} goToSignUp={()=>setIsVisibleSignUp(!isVisibleSignUp)} />\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n      </div>\r\n\r\n      <div>\r\n        {isVisibleSignUp ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisibleSignUp(!isVisibleSignUp)} >\r\n              <SignupForm hideForm={() => setIsVisibleSignUp(!isVisibleSignUp)} goToLogin={()=>setIsVisible(!isVisible)} />\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n      </div>\r\n\r\n      <div className={styles.contentWrap}>\r\n\r\n        <div className={styles.topContainer}>\r\n          \r\n          <div className={styles.topDivtopContainer}>\r\n            <div className={styles.headerNav}>\r\n              <span className={styles.logo}>\r\n                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n              </span>\r\n              <span className={styles.firstButtons}>\r\n                <button className={styles.loginButton} onClick={()=>setIsVisible(!isVisible)}  >Log In</button>\r\n                <button className={styles.signUpButton} onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Sign Up</button>\r\n              </span>\r\n            </div>\r\n            <div className={styles.topright}>\r\n\r\n              <div className={styles.pic1}>\r\n                <img src={pic1} alt=\"\" width='100%' />\r\n                \r\n              </div>\r\n              <div className={styles.pic2}>\r\n                <img src={pic2} alt=\"\" width='100%' />\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.lowerDivtopContainer}>\r\n            <div className={styles.firstText}>\r\n              <p className={styles.headers}>Manage your work in a <span className={styles.lucida}>Smart</span> way! </p>\r\n              <div className={styles.paragraph}>\r\n                <p >The ideas get more clear, organized and focused on.</p>\r\n                <p >Flexible and time saving for the whole team. </p>\r\n              </div>\r\n              <div className={styles.paragraph}>\r\n                <button className={styles.secondSignUpButton}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Free Sign Up</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.secondContainer}>\r\n          <div className={styles.firstRow}>\r\n            <div className={styles.secondText}>\r\n              <p className={styles.headers}>Work and participate in different teams </p>\r\n              <div className={styles.paragraph}>\r\n                <p >Follow who and when is doing tasks. Be always</p>\r\n                <p >informed with the accomplishment of the projects. </p>\r\n              </div>\r\n              <div className={styles.paragraph}>\r\n                <button className={styles.thirdSignUpButton}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Try It Now</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles.pic3Container}>\r\n              <img className={styles.pic3} src={pic3} alt=\"\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.secondRow}>\r\n            <div className={styles.pic4Container}>\r\n              <img className={styles.pic4} src={pic4} alt=\"\" />\r\n            </div>\r\n            <div className={styles.thirdText}>\r\n              <p className={styles.headers}>Еаsy to manage all the information</p>\r\n              <div className={styles.paragraph}>\r\n                <p >Add stickers, notes, comments, attachments in your</p>\r\n                <p >  Smart Manager.</p>\r\n                <p >Collaborate with others in your Team.</p>\r\n                <img className={styles.pic5} src={pic5} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.thirdRow}>\r\n            <div className={styles.lastText}>\r\n              <p className={styles.lastHeaders}>Start your <span className={styles.lucida}>Smart Manager</span> Now </p>\r\n              <div className={styles.lastParagraph}>\r\n                <p >Connect with other teams from <span className={styles.lucida}>The Smart Family</span>,</p>\r\n                <p > save time with more work done.</p>\r\n                <button className={styles.lastSignUpButton}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Get Started</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles.pic6Container}>\r\n              <img className={styles.pic6} src={pic6} alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <footer className={styles.footer}>\r\n\r\n        <div className={styles.footerColumn}>\r\n          <div className={styles.footerHeaders}>\r\n            <p>Contact Us</p>\r\n          </div>\r\n          <div className={styles.footerInfo}>\r\n            <p>+359 52 317 395</p>\r\n            <p>smartmanager@gmail.com</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.footerColumn}>\r\n          <div className={styles.footerHeaders}>\r\n            <p>SERVICES</p>\r\n          </div>\r\n          <div className={styles.footerInfo}>\r\n            <p>Contact Us</p>\r\n            <p>Ordering & Payment FAQ</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.footerColumn}>\r\n          <div className={styles.footerHeaders}>\r\n            <p>INFORMATION</p>\r\n          </div>\r\n          <div className={styles.footerInfo}>\r\n            <p>About SMART MANAGER</p>\r\n            <p>Work With US</p>\r\n            <p>Privacy Policy</p>\r\n            <p>Terms & Conditions</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.lastColumn}>\r\n          <div className={styles.socialMediaContainer}>\r\n            <span>\r\n              <img className={styles.socialMedia} src={instagram} alt=\"\" />\r\n            </span>\r\n            <span>\r\n              <img className={styles.socialMedia} src={twitter} alt=\"\" />\r\n            </span>\r\n            <span>\r\n              <img className={styles.socialMedia} src={facebook} alt=\"\" />\r\n            </span>\r\n          </div>\r\n          <div className={styles.sd2006}>SD2006</div>\r\n\r\n        </div>\r\n\r\n      </footer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WelcomePage","export default __webpack_public_path__ + \"static/media/profile-page-pic.2c3455c2.svg\";","export default __webpack_public_path__ + \"static/media/pen.4b4021f9.svg\";","import React, { useState, useEffect, useCallback, useContext, useRef } from \"react\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/profile-page-pic.svg'\r\nimport pen from '../../images/pen.svg'\r\nimport authenticateUpdate from '../../utils/authenticate-update';\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Title from \"../../components/title\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport Alert from \"../../components/alert\"\r\n\r\n\r\nconst ProfilePage = () => {\r\n  const dropdownRef = useRef(null)\r\n  const userContext = useContext(UserContext)\r\n  const [userEmail, setUserEmail] = useState(null)\r\n  const [passwordActive, setPaswordActive] = useState(true)\r\n  const [userNameActive, setUserNameActive] = useState(true)\r\n  const [username, setUsername] = useState(userContext.user.username);\r\n  const [password, setPassword] = useState(null);\r\n  const [rePassword, setRePassword] = useState(null);\r\n  const [alert, setAlert] = useState(false)\r\n  const [showTeamsVisibleForm, setShowTeamsVisibleForm] = useDetectOutsideClick(dropdownRef)\r\n\r\n\r\n\r\n\r\n  const params = useParams()\r\n  const history = useHistory()\r\n\r\n\r\n  const userName = userContext.user.username\r\n  const userTeams = userContext.user.teams\r\n  const id = params.userid;\r\n\r\n\r\n\r\n  const getData = useCallback(async () => {\r\n\r\n    const response = await fetch(`/api/user/${id}`)\r\n    if (!response.ok) {\r\n      history.push(\"/error\")\r\n    } else {\r\n      const user = await response.json()\r\n      setUserEmail(user.email)\r\n\r\n    }\r\n  }, [history, id])\r\n\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    setAlert(false)\r\n\r\n    if (!username && !password) {\r\n      return\r\n    }\r\n\r\n    if (password !== rePassword) {\r\n      setAlert(true)\r\n      return\r\n    }\r\n\r\n    await authenticateUpdate(`/api/user/${id}`, 'PUT', {\r\n      username,\r\n      password\r\n    }, (user) => {\r\n      userContext.logIn(user)\r\n    }, (e) => {\r\n      console.log(\"Error\", e);\r\n    })\r\n    getData()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [getData])\r\n\r\n  if (!userName) {\r\n    return (\r\n      <PageLayout>\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#363338\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </PageLayout>\r\n    )\r\n  }\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n  return (\r\n    <PageLayout>\r\n\r\n\r\n      <Title title='Profile' />\r\n\r\n      <div className={styles.container}>\r\n\r\n        <div className={styles.leftContainer}>\r\n\r\n        <div className={styles.leftButtons}>\r\n\r\n          <div>\r\n            <button className={styles.navigateButtons}\r\n              onClick={() => { setUserNameActive(!userNameActive) }}\r\n            >Username:</button>\r\n          </div>\r\n\r\n          <div>\r\n            <button className={styles.navigateButtons}\r\n              onClick={() => { setPaswordActive(!passwordActive) }}\r\n            >Change Password</button>\r\n          </div>\r\n\r\n          <div>\r\n            <button className={styles.navigateButtons}\r\n              onClick={() => { setPaswordActive(!passwordActive) }}\r\n            >Confirm Password</button>\r\n          </div>\r\n\r\n          <div>\r\n            <button className={styles.navigateButtons}\r\n            >Email:</button>\r\n          </div>\r\n\r\n          <div>\r\n            <button className={styles.navigateButtons}\r\n              onClick={() => history.push(`/my-tasks/${id}`)}\r\n            >My Tasks</button>\r\n          </div>\r\n\r\n          <div>\r\n            <div className={styles.myTeamsContainer}>\r\n              < button onClick={() => setShowTeamsVisibleForm(!showTeamsVisibleForm)}\r\n                className={styles.myTeamButton}\r\n              >My Teams</ button>\r\n              <div className={styles.selectTeamContainer}>\r\n                {\r\n                  showTeamsVisibleForm ?\r\n                    <div className={styles.teamsHome} ref={dropdownRef}>\r\n                      {\r\n                        userTeams.map((t, index) => {\r\n                          return (\r\n                            <span key={index}>\r\n                              <div\r\n                                className={styles.navigateButtonsTeams}\r\n                                onClick={() => goToTeamPage(t._id)}\r\n\r\n                              >{t.name}</div>\r\n                            </span>\r\n                          )\r\n                        }\r\n                        )\r\n                      }\r\n                    </div>\r\n                    : null\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n        <div className={styles.middleButtons}>\r\n\r\n\r\n          <div>\r\n            < input\r\n              // onClick={() => setShowTeamForm(true)}\r\n              // title='Create Team' \r\n              // className={styles.teamNames}\r\n              value={username}\r\n              onChange={e => setUsername(e.target.value)}\r\n              className={styles.inputFieldsProfile}\r\n              placeholder={userName}\r\n              disabled={userNameActive}\r\n            />\r\n\r\n          </div>\r\n\r\n          <div>\r\n            < input              \r\n              onChange={e => setPassword(e.target.value)}\r\n              className={styles.inputFieldsProfile}\r\n              placeholder={'********'}\r\n              disabled={passwordActive}\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.alerts}>\r\n            <Alert alert={alert} message={'Passwords do not match'} />\r\n          </div>\r\n\r\n          <div>\r\n            < input              \r\n              onChange={e => setRePassword(e.target.value)}\r\n              className={styles.inputFieldsProfile}\r\n              placeholder={'********'}\r\n              disabled={passwordActive}\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            < input\r\n              // onClick={() => setShowTeamForm(true)}\r\n              // title='Create Team' \r\n              // className={styles.teamNames}\r\n              className={styles.inputFieldsProfile}\r\n              value={userEmail}\r\n              disabled={true}\r\n            // type=\"password\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className={styles.buttonDivSave}>\r\n            <button type='submit' className={styles.saveButton} onClick={(e) => handleSubmit(e)}>Save</button>\r\n          </div>\r\n        </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div className={styles.picContainer}>\r\n\r\n\r\n          <div className={styles.profilePicContainer}>\r\n            <div className={styles.profilePic}>\r\n              <p className={styles.loadPicText}>Load a profile picture</p>\r\n              <img className={styles.pen} src={pen} alt=\"\" />\r\n\r\n            </div>\r\n\r\n            <p>{userName}</p>\r\n          </div>\r\n\r\n\r\n          \r\n            <img className={styles.pic1} src={pic1} alt=\"\" \r\n            // width=\"80%\" height=\"80%\"\r\n             />\r\n          \r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default ProfilePage;","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Button = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport Avatar from 'react-avatar'\r\nimport ButtonClean from \"../../components/button-clean\"\r\n\r\n\r\nexport default function TeamMembers(props) {\r\n\r\n    const members = props.members\r\n    const invited = props.invited\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.membersAvatars}>\r\n                <div>\r\n                    Team Members:\r\n                </div>\r\n                {\r\n                    members.map((m, index) => {\r\n                        return (\r\n                            <ButtonClean\r\n                                key={index}\r\n                                title={<Avatar\r\n                                    key={m._id}\r\n                                    name={m.username}\r\n                                    size={40}\r\n                                    round={true}\r\n                                    maxInitials={2}\r\n                                />}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                invited.length !== 0 &&\r\n                <div className={styles.membersAvatars}>\r\n                    <div>\r\n                        Invited Members:\r\n                        </div>\r\n                    {\r\n                        invited.map((m, index) => {\r\n                            return (\r\n                                <Avatar\r\n                                    key={index}\r\n                                    name={m.username}\r\n                                    size={40}\r\n                                    round={true}\r\n                                    maxInitials={2}\r\n                                // onClick={() => { if (window.confirm('Are you sure you wish to delete this member?')) removeMember(m) }}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport Avatar from 'react-avatar'\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamMembers from '../team-members'\r\n\r\nexport default function EditTeam(props) {\r\n    const [currTeam, setCurrTeam] = useState(props.currTeam)\r\n    const [name, setName] = useState(currTeam.name)\r\n    const [description, setDescription] = useState(currTeam.description)\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState(currTeam.members)\r\n    const [invited, setInvited] = useState(currTeam.requests)\r\n    const [forInvite, setForInvite] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n\r\n    const teamId = params.teamid\r\n\r\n\r\n\r\n\r\n    const getData = useCallback(() => {\r\n\r\n        userContext.user.teams.forEach(t => {\r\n            if (t._id === teamId) {\r\n                setCurrTeam(t)\r\n            }\r\n        })\r\n        let teamAuthor = currTeam.author\r\n        setMembers(currTeam.members)\r\n        setInvited(currTeam.requests)\r\n        setDescription(currTeam.description)\r\n        setName(currTeam.name)\r\n        if (context.user.id === teamAuthor) {\r\n            setIsAdmin(true)\r\n        }\r\n    }, [context.user.id, currTeam.author, currTeam.description, currTeam.members, currTeam.name, currTeam.requests, userContext.user.teams, teamId])\r\n\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [getData])\r\n\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch('/api/user/get-all', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...forInvite]\r\n        arr.push(input)\r\n        setForInvite(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = async (input) => {\r\n\r\n\r\n        const arr = await members.filter(u => u._id !== input._id)\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            // getData()\r\n        }\r\n    }\r\n\r\n    const removeInvited = async (input) => {\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                removeInvitation: input\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            getData()\r\n            socket.emit('team-update', teamId)\r\n        }\r\n    }\r\n\r\n    const removeForInvite = (input) => {\r\n        const arr = forInvite.filter(u => u._id !== input._id)\r\n        setForInvite(arr)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members,\r\n                requests: forInvite\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            teamContext.setSelectedTeam(name)\r\n            getData()\r\n            socket.emit('team-update', teamId)\r\n            socket.emit('multiple-messages-sent', forInvite)\r\n            props.hideForm()\r\n        }\r\n\r\n    }\r\n\r\n    async function deleteTeam() {\r\n\r\n        if (!window.confirm('You will lost all team information - projects, lists and tasks')) {\r\n            return\r\n        }\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            // teamContext.setSelectedTeam(name)\r\n            // getData()\r\n            // socket.emit('team-update', teamId)\r\n            history.push(\"/\")\r\n            props.hideForm()\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n\r\n                <div className={styles.title} >Team</div>\r\n\r\n                <div className={styles.inputContainer}>\r\n                    <span> Name</span>\r\n                    <input\r\n                        className={styles.inputName}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label=\"Name\"\r\n                        id=\"name\"\r\n                    />\r\n                </div>\r\n\r\n                <div className={styles.inputContainerDescr}>\r\n                    <span> Description</span>\r\n                    <textarea\r\n                        className={styles.textareaDescr}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        label=\"Description\"\r\n                        id=\"description\"\r\n                    />\r\n                </div>\r\n                {\r\n                    isAdmin ?\r\n                        <div className={styles.membersDiv}>\r\n                            <div className={styles.inputContainerInvite}>\r\n                                <span className={styles.textInvite}> Invite Members</span>\r\n\r\n                                <div className={styles.inviteInput}>\r\n                                    <input\r\n                                        className={styles.inputInvite}\r\n                                        autoComplete=\"off\"\r\n                                        value={member}\r\n                                        onChange={inputMembers}\r\n                                        label=\"Invite members\"\r\n                                        id=\"members\"\r\n                                        placeholder='username'\r\n                                        onBlur={onBlur}\r\n\r\n                                    />\r\n\r\n                                    <div className={styles.selectForInvite}>\r\n                                        {\r\n                                            showMembers ?\r\n                                                <div className={styles.members}>\r\n                                                    {\r\n                                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                                            .filter((e) => {\r\n                                                                const found = members.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .filter((e) => {\r\n                                                                const found = invited.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .filter((e) => {\r\n                                                                const found = forInvite.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                                            .map((u, index) => {\r\n                                                                return (\r\n                                                                    <ButtonClean\r\n                                                                        key={index}\r\n                                                                        className={styles.user}\r\n                                                                        onClick={() => addMember(u)}\r\n                                                                        title={<div>\r\n                                                                            <div>{u.username}</div>\r\n                                                                            <div className={styles.email}>{u.email}</div>\r\n                                                                        </div>}\r\n                                                                    />)\r\n                                                            })\r\n                                                    }\r\n                                                </div> : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className={styles.membersAvatars}>\r\n                                <span>\r\n                                    <div>\r\n                                        Send Invitation:\r\n                                </div>\r\n                                    {\r\n                                        forInvite.map((m, index) => {\r\n                                            return (\r\n                                                <Avatar\r\n                                                    key={index}\r\n                                                    name={m.username}\r\n                                                    size={40} round={true} maxInitials={2}\r\n                                                    onClick={() => { if (window.confirm('Are you sure you wish to delete this member?')) removeForInvite(m) }}\r\n                                                />\r\n\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <div className={styles.membersAvatars}>\r\n                                    <div>\r\n                                        Team Members:\r\n                                    </div>\r\n                                    {\r\n                                        members.map((m, index) => {\r\n                                            return (\r\n                                                <ButtonClean key={index}\r\n                                                    onClick={() => { if (window.confirm('Are you sure you wish to delete this member?')) removeMember(m) }}\r\n                                                    title={<Avatar key={m._id} name={m.username} size={40} round={true} maxInitials={2} />}\r\n                                                />\r\n\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                {\r\n                                    (invited.length !== 0) ?\r\n\r\n                                        <div className={styles.membersAvatars}>\r\n                                            <div>\r\n                                                Invited Members:\r\n                                            </div>\r\n                                            {\r\n                                                invited.map((m, index) => {\r\n                                                    return (\r\n                                                        <Avatar\r\n                                                            key={index}\r\n                                                            name={m.username}\r\n                                                            size={40} round={true} maxInitials={2}\r\n                                                            onClick={() => { if (window.confirm('Are you sure you wish to delete this member?')) removeInvited(m) }}\r\n                                                        />\r\n\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </div>\r\n\r\n                            <div className={styles.buttonDiv}>\r\n                                <button type='submit' className={styles.createButton}>Submit Changes</button>\r\n                                <button className={styles.createButton} onClick={() => { if (window.confirm('Are you sure you wish to delete this team?')) deleteTeam() }}  >Delete Team</button>\r\n\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <TeamMembers\r\n                                members={members} invited={invited}\r\n                            />\r\n                        </div>\r\n                }\r\n\r\n\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport getCookie from '../../../utils/cookie'\r\nimport Button from '../../button'\r\nimport EditTeam from '../../edit-team'\r\nimport Transparent from '../../transparent'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TeamInvitationHistory({ message, options, setInboxHistory }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function deleteMessage() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>{message.subject}:</div>\r\n                    {message.accepted ? <div>Accepted</div> : <div>Declined</div>}\r\n                </div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    className={styles.button}\r\n                    onClick={() => setShowEditTeamForm(true)}\r\n                    title='View Team'\r\n                />\r\n                <Button\r\n                    className={styles.button}\r\n                    onClick={() => { if (window.confirm('Are you sure you wish to delete this message?')) deleteMessage() }}\r\n                    title='Delete Message'\r\n                />\r\n                {\r\n                    showEditTeamForm &&\r\n                    (<Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                        <EditTeam currTeam={message.team} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                    </Transparent>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\n\r\nimport styles from './index.module.css'\r\n\r\nexport default function TaskAssignment({ message, setInboxHistory, options, isInbox }) {\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const userId = params.userid\r\n\r\n    async function moveToHistory() {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            await response.json()\r\n            socket.emit('message-sent', userId)\r\n        }\r\n    }\r\n\r\n    async function deleteMessage() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Project:</div>\r\n                <div className={styles.inline}>{message.project.name}</div>\r\n                <div className={`${styles.bold} ${styles.inline} ${styles.margin}`}>List:</div>\r\n                <div className={styles.inline}>{message.list.name}</div>\r\n                <div className={`${styles.bold} ${styles.inline} ${styles.margin}`}>Task:</div>\r\n                <div className={styles.inline}>{message.card.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Assigned by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    className={styles.button}\r\n                    onClick={() => history.push(`/project-board/${message.team._id}/${message.project._id}`)}\r\n                    title='Go to Project'\r\n                />\r\n                {\r\n                    isInbox &&\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={moveToHistory}\r\n                        title='Move to History'\r\n                    />\r\n                }\r\n                {\r\n                    !isInbox &&\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={() => { if (window.confirm('Are you sure you wish to delete this message?')) deleteMessage(message) }}\r\n                        title='Delete Message'\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\nimport EditTeam from '../edit-team'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TeamInvitation({ message, setInbox, setInboxHistory, options }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const userId = params.userid\r\n\r\n    async function acceptInvitation(message, accepted) {\r\n        const response = await fetch(`/api/teams/invitations/${message.team._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message,\r\n                accepted\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            socket.emit('team-update', message.team._id)\r\n            setInbox(user.inbox)\r\n            setInboxHistory(user.inboxHistory)\r\n            socket.emit('message-sent', userId)\r\n            socket.emit('message-sent', message.sendFrom._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    className={styles.button}\r\n                    onClick={() => acceptInvitation(message, true)}\r\n                    title='Accept'\r\n                />\r\n                <Button\r\n                    className={styles.button}\r\n                    onClick={() => acceptInvitation(message, false)}\r\n                    title='Decline'\r\n                />\r\n                <Button\r\n                    className={styles.button}\r\n                    onClick={() => setShowEditTeamForm(true)}\r\n                    title='View Team'\r\n                />\r\n                {\r\n                    showEditTeamForm &&\r\n                    (<Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                        <EditTeam currTeam={message.team} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                    </Transparent>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport Button from '../button'\r\n\r\nimport styles from './index.module.css'\r\n\r\nexport default function TeamInvitationResponse({ message, setInboxHistory, options, isInbox }) {\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const userId = params.userid\r\n\r\n    async function moveToHistory() {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            await response.json()\r\n            socket.emit('message-sent', userId)\r\n        }\r\n    }\r\n\r\n    async function deleteMessage() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>{message.subject}:</div>\r\n                    <span>{message.sendFrom.username}{message.accepted ? <span> accepted</span> : <span> declined</span>}</span>\r\n                </div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    isInbox &&\r\n                    <Button\r\n                        className={styles.button}\r\n                        onClick={moveToHistory}\r\n                        title='Move to History'\r\n                    />\r\n                }\r\n                {\r\n                    !isInbox &&\r\n                    <Button\r\n                    className={styles.button}\r\n                    onClick={() => { if (window.confirm('Are you sure you wish to delete this message?')) deleteMessage(message) }}\r\n                    title='Delete Message'\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport TeamInvitationHistory from \"../../components/inbox/history/team-invitation-history\"\r\nimport TaskAssignment from \"../../components/inbox/task-assignment\"\r\nimport TeamInvitation from \"../../components/inbox/team-invitation\"\r\nimport TeamInvitationResponse from \"../../components/inbox/team-invitation-response\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Title from \"../../components/title\"\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport styles from './index.module.css'\r\n\r\nconst InboxPage = () => {\r\n    const [inbox, setInbox] = useState([])\r\n    const [inboxHistory, setInboxHistory] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }\r\n\r\n    const getInbox = useCallback(async () => {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInbox(user.inbox)\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }, [history, token])\r\n\r\n    useEffect(() => {\r\n        getInbox()\r\n    }, [getInbox])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        setInbox(response.inboxUser.inbox)\r\n        setInboxHistory(response.inboxUser.inboxHistory)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div>\r\n                <Title title='Inbox' />\r\n                {\r\n                    inbox.length === 0 && <div className={styles.title}>Inbox is empty</div>\r\n                }\r\n                {\r\n                    [...inbox].reverse().map(m => {\r\n                        switch (m.subject) {\r\n                            case 'Team invitation':\r\n                                return <TeamInvitation\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                />\r\n\r\n                            case 'Team invitation response':\r\n                                return <TeamInvitationResponse\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Task assignment':\r\n                                return <TaskAssignment\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            default:\r\n                                break;\r\n                        }\r\n                        return ''\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {\r\n                inboxHistory.length !== 0 &&\r\n                <div>\r\n                    <Title title='History' />\r\n                    {\r\n                        [...inboxHistory].reverse().map(m => {\r\n                            switch (m.subject) {\r\n                                case 'Team invitation':\r\n                                    return <TeamInvitationHistory\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        options={options}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                    />\r\n\r\n                                case 'Team invitation response':\r\n                                    return <TeamInvitationResponse\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Task assignment':\r\n                                    return <TaskAssignment\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            return ''\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default InboxPage;","export default __webpack_public_path__ + \"static/media/my-tasks.a0bdac2a.svg\";","export default __webpack_public_path__ + \"static/media/pic1.06557b43.svg\";","export default __webpack_public_path__ + \"static/media/pic2.da7b02c6.svg\";","export default __webpack_public_path__ + \"static/media/pic3.b95e708c.svg\";","export default __webpack_public_path__ + \"static/media/pic4.48bbd98d.svg\";","export default __webpack_public_path__ + \"static/media/pic5.e6817eda.svg\";","export default __webpack_public_path__ + \"static/media/pic6.68bb366f.svg\";","export default __webpack_public_path__ + \"static/media/pic7.86d3a007.svg\";","export default __webpack_public_path__ + \"static/media/pic8.252e7d72.svg\";","export default __webpack_public_path__ + \"static/media/pic9.7a153c8e.svg\";","export default __webpack_public_path__ + \"static/media/pic10.b95e708c.svg\";","export default __webpack_public_path__ + \"static/media/pic11.03e491b0.svg\";","export default __webpack_public_path__ + \"static/media/pic12.cb5bf992.svg\";","export default __webpack_public_path__ + \"static/media/pic13.6bab88f6.svg\";","export default __webpack_public_path__ + \"static/media/pic14.c584b335.svg\";","import React, { useCallback, useContext, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport Avatar from 'react-avatar'\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport pen from '../../images/pen.svg'\r\n\r\n\r\nexport default function TaskMembers(props) {\r\n\r\n    const dropdownRef = useRef(null);\r\n    const [cardMembers, setCardMembers] = useState(props.card.members)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [selectedUser, setSelectedUser] = useState('')\r\n    const [showEachMember, setShowEachMember] = useState(false)\r\n\r\n    const [users, setUsers] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const teamContext = useContext(TeamContext)\r\n    const params = useParams()\r\n    const projectId = props.project._id\r\n    const cardId = props.card._id\r\n    const listId = props.listId\r\n\r\n    const getTeamUsers = async () => {\r\n        let currentTeamId = ''\r\n\r\n        await teamContext.teams.map(t => {\r\n            return (\r\n                t.projects.map(p => {\r\n                    if (p._id === projectId) {\r\n                        currentTeamId = t._id\r\n                    }\r\n                    return currentTeamId\r\n                })\r\n            )\r\n        })\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/get-users/${currentTeamId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        }\r\n        const data = await response.json()\r\n\r\n        let filtered = data.members\r\n\r\n        // for (var arr in data) {\r\n        for (let filter in cardMembers) {\r\n            // if (data[arr]._id === cardMembers[filter]._id) {\r\n            filtered = filtered.filter(function (obj) {\r\n                return obj._id !== cardMembers[filter]._id\r\n            })\r\n            //         }\r\n            //     }\r\n        }\r\n        setUsers(filtered)\r\n\r\n    }\r\n\r\n    const updateSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('task-team-update', props.teamId)\r\n    }, [socket, props.project, props.teamId])\r\n\r\n\r\n    const handleSelect = (id) => {\r\n        const result = users.filter(obj => {\r\n            return obj._id === id\r\n        })[0]\r\n        const selected = result\r\n        setSelectedUser(selected)\r\n    }\r\n\r\n    const deleteMember = useCallback(async (event, member) => {\r\n        event.preventDefault()\r\n\r\n        var index = cardMembers.indexOf(member)\r\n        let arr = [...cardMembers]\r\n\r\n        if (index !== -1) {\r\n            arr.splice(index, 1)\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                members: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateSocket()\r\n            setCardMembers(arr)\r\n        }\r\n\r\n    }, [history, cardId, listId, updateSocket, cardMembers])\r\n\r\n\r\n\r\n\r\n    const handleAdd = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        const teamId = params.teamid\r\n\r\n        if (!selectedUser) {\r\n            setIsActive(!isActive)\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const project = props.project\r\n\r\n        const result = project.membersRoles.filter(obj => {\r\n            return obj.memberId._id === selectedUser._id\r\n        })[0]\r\n        if (!result) {\r\n            if (window.confirm(`Do you want to add ${selectedUser.username} to project?`)) {\r\n                const responseAdd = await fetch(`/api/projects/${projectId}/user`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token\r\n                    },\r\n                    body: JSON.stringify({\r\n                        member: selectedUser,\r\n                        admin: false\r\n                    })\r\n                })\r\n                if (!responseAdd.ok) {\r\n                    history.push(\"/error\")\r\n                }\r\n\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n\r\n        let arr = [...cardMembers]\r\n\r\n        arr.push(selectedUser)\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                members: arr,\r\n                newMember: selectedUser,\r\n                teamId,\r\n                projectId: project._id,\r\n                cardId,\r\n                listId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            setIsActive(!isActive)\r\n            setCardMembers(arr)\r\n            updateSocket()\r\n            setSelectedUser('')\r\n            socket.emit('message-sent', selectedUser._id)\r\n        }\r\n\r\n    }, [history, props, cardId, listId, isActive, setIsActive, selectedUser, updateSocket, cardMembers, projectId, params.teamid, socket])\r\n\r\n\r\n\r\n    return (\r\n        <div onMouseLeave={() => setShowEachMember(false)}>\r\n            {\r\n                showEachMember ?\r\n                    <div className={styles.containerMemb} >\r\n                        <div className={styles.allCardMembers}>\r\n                            {\r\n                                cardMembers.map((m, index) => {\r\n                                    return (\r\n                                        <div key={index} className={styles.eachMember} onClick={(e) => { if (window.confirm('Are you sure you wish to delete this member?')) deleteMember(e, m) }}>\r\n                                            <span className={styles.avatar} key={m._id}>\r\n                                                <Avatar key={m._id}\r\n                                                    name={m.username}\r\n                                                    size={30}\r\n                                                    round={true}\r\n                                                    className={styles.avatar}\r\n                                                />\r\n                                            </span>\r\n                                            <span>{m.username}</span>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        {\r\n                            isActive ?\r\n                                <span>\r\n                                    < form ref={dropdownRef} className={styles.container}  >\r\n                                        <select className={styles.select} onChange={(e) => { handleSelect(e.target.value) }}>\r\n                                            <option>Select</option>\r\n                                            {\r\n                                                users.map((m, index) => (\r\n                                                    <option key={index} value={m._id}>{m.username}</option>\r\n                                                ))\r\n                                            }\r\n                                        </select>\r\n                                        <button className={styles.addUserButton} onClick={handleAdd}>Add</button>\r\n                                    </form>\r\n                                </span >\r\n                                :\r\n                                <div className={styles.membersDiv}>\r\n                                    {\r\n                                        (cardMembers.length > 3) ?\r\n                                            \r\n                                                <span className={styles.members} onMouseEnter={() => setShowEachMember(true)}>\r\n                                                    {cardMembers.slice(0, 3).map(element => {\r\n                                                        return (\r\n                                                            <span className={styles.avatar} key={element._id}>\r\n                                                                <Avatar key={element._id}\r\n                                                                    name={element.username}\r\n                                                                    size={30}\r\n                                                                    round={true}\r\n                                                                    className={styles.avatar}\r\n                                                                />\r\n                                                            </span>\r\n                                                        )\r\n                                                    })}\r\n                                                    <span className={styles.avatar}>\r\n                                                        <Avatar color={'grey'} name={`+   ${(cardMembers.length - 3)} ${('0' + (cardMembers.length - 3)).slice(2)}`} size={30} round={true} maxInitials={3} className={styles.avatar}\r\n                                                        />\r\n                                                    </span>\r\n                                                </span>\r\n\r\n                                            \r\n                                            :\r\n                                            <span className={styles.members} onMouseEnter={() => setShowEachMember(true)}>\r\n                                                {cardMembers.map(element => {\r\n                                                    return (\r\n                                                        <span className={styles.avatar} key={element._id}>\r\n                                                            <Avatar key={element._id} name={element.username} size={30} round={true} maxInitials={2} />\r\n                                                        </span>\r\n                                                    )\r\n                                                })}\r\n                                            </span>\r\n                                    }\r\n\r\n                                    <img className={styles.pen} src={pen} alt=\"...\" width=\"13\" height=\"13\" onClick={() => { getTeamUsers(); setIsActive(!isActive) }} />\r\n                                </div >\r\n                        }\r\n                    </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport DatePicker from \"react-datepicker\"\r\n\r\n\r\n\r\nexport default function TaskDueDate(props) {\r\n\r\n\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardDueDate, setCardDueDate] = useState(props.cardDueDate)\r\n\r\n \r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('task-team-update', props.teamId)\r\n    }, [socket, props.project, props.teamId])\r\n     \r\n\r\n\r\n\r\n    const editCardDueDate = useCallback(async (date) => {\r\n\r\n        let cardId = props.cardId\r\n        let listId = props.listId\r\n\r\n\r\n\r\n        if (cardDueDate === \"\" && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                dueDate: date,\r\n                teamId: props.teamId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            updateProjectSocket()\r\n\r\n        }\r\n\r\n    }, [history, cardDueDate, updateProjectSocket, setIsActive, isActive, props.cardId, props.listId, props.teamId])\r\n\r\n\r\n    let cardDate = ''\r\n    let thisCardDate = ''\r\n    if (cardDueDate) {\r\n        cardDate = new Date(cardDueDate)\r\n        thisCardDate = cardDate.getTime()\r\n    }\r\n\r\n\r\n    // let value2 = (today !== '' && today !== 0) ? ('0' + today.getDate()).slice(-2) + '-' + (today.toLocaleString('default', { month: 'short' })) + '-' + today.getFullYear() : ''\r\n\r\n    let value = (thisCardDate !== '' && thisCardDate !== 0) ? ('0' + cardDate.getDate()).slice(-2) + '-' + ('0' + (cardDate.getMonth()+1)).slice(-2) + '-' + cardDate.getFullYear() : ''\r\n\r\n\r\n    if (value) {\r\n\r\n        let taskDueDate = value\r\n\r\n        return (\r\n            <span className={styles.dueDateField}>\r\n                <DatePicker\r\n                    selected={cardDueDate}\r\n                    customInput={<div className={styles.dueDateField}>\r\n                        <span>{taskDueDate}</span>\r\n                    </div>}\r\n                    onChange={async (date) => { await setCardDueDate(date); editCardDueDate(date) }}\r\n                    label=\"Go to date\"\r\n                    onBlur={() => setIsActive(!isActive)} />               \r\n            </span>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <span className={styles.dueDateField}>\r\n                {/* {\r\n                    isActive ? */}\r\n                        <div className={styles.dueDateField}>\r\n                            <DatePicker\r\n                            customInput={<div>\r\n                           <span>Select date</span>\r\n                        </div>}\r\n                             selected={today} onChange={(date) => { setCardDueDate(date); editCardDueDate(date) }} label=\"Go to date\" />\r\n                        </div>\r\n                        {/* :\r\n                        <div className={styles.dueDateField}>\r\n                            <span onClick={() => setIsActive(!isActive)}>Due Date</span>                           \r\n                        </div>\r\n                }                 */}\r\n            </span>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\n\r\n\r\n\r\nexport default function TaskHistory(props) {\r\n\r\n\r\n    const taskHistory = props.taskHistory\r\n    let arr = []\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    if (taskHistory) {\r\n        for (let i = 0; i < taskHistory.length; i++) {\r\n            let currElement = taskHistory[i]\r\n\r\n            if (i === taskHistory.length - 1) {\r\n                arr.push(currElement)\r\n                break;\r\n            }\r\n\r\n            if (currElement.event.slice(0, 8) === taskHistory[i + 1].event.slice(0, 8) && currElement.date === taskHistory[i + 1].date) {\r\n\r\n            } else {\r\n                arr.push(currElement)\r\n            }\r\n        }\r\n    }\r\n\r\n    function showDate(currDate) {\r\n        let currDay = new Date(currDate)      \r\n        let date = (('0' + currDay.getDate())).slice(-2) + '.' + ('0' + (currDay.getMonth() + 1)).slice(-2) + '.' + currDay.getFullYear()\r\n        return (date)\r\n    }\r\n \r\n\r\n\r\n    return (\r\n        <div className={styles.history}>\r\n            { taskHistory ?\r\n                arr.map((m, index) => (\r\n                    <div key={index} >\r\n                        {`${showDate(m['date'])} - ${m['event']}`}\r\n                    </div>\r\n                ))\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useCallback, useRef, useState, useMemo } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\nimport pic2 from '../../images/edit-card/pic2.svg'\r\nimport pic3 from '../../images/edit-card/pic3.svg'\r\nimport pic4 from '../../images/edit-card/pic4.svg'\r\nimport pic5 from '../../images/edit-card/pic5.svg'\r\nimport pic6 from '../../images/edit-card/pic6.svg'\r\nimport pic7 from '../../images/edit-card/pic7.svg'\r\nimport pic8 from '../../images/edit-card/pic8.svg'\r\nimport pic9 from '../../images/edit-card/pic9.svg'\r\nimport pic10 from '../../images/edit-card/pic10.svg'\r\nimport pic11 from '../../images/edit-card/pic11.svg'\r\nimport pic12 from '../../images/edit-card/pic12.svg'\r\nimport pic13 from '../../images/edit-card/pic13.svg'\r\nimport pic14 from '../../images/edit-card/pic14.svg'\r\nimport TaskMembers from '../task-members'\r\nimport TaskDueDate from \"../task-dueDate\"\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport TaskHistory from '../task-history'\r\n\r\n\r\nexport default function EditCard(props) {\r\n\r\n    const listId = props.listId\r\n    const dropdownRef = useRef(null);\r\n    const [card, setCard] = useState(props.card)\r\n    const [name, setName] = useState(card.name)\r\n    const [description, setDescription] = useState(card.description)\r\n    const [progress, setProgress] = useState(card.progress)\r\n    const [taskHistory, setTaskHistory] = useState(card.history)\r\n    const [progressChanged, setProgressChanged] = useState(false)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [isProgressActive, setIsProgressActive] = useDetectOutsideClick(dropdownRef)\r\n    const [isDescriptionActive, setIsDescriptionActive] = useState(false)\r\n    const dueDate = useMemo(() => new Date(card.dueDate), [card.dueDate])\r\n    const today = useMemo(() => new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()), [])\r\n    const cardId = card._id\r\n\r\n\r\n    const deleteCard = useCallback(async (event) => {\r\n\r\n        event.preventDefault()\r\n\r\n        if (!window.confirm('Are you sure you wish to delete this item?')) {\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', props.teamId)\r\n            props.hideForm()\r\n        }\r\n    }, [history, props, cardId, listId, socket])\r\n\r\n\r\n    const handleSubmit = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n\r\n        if (Number(progress) > 100) {\r\n            setProgress(100)\r\n            return\r\n        } else if (Number(progress) < 0) {\r\n            setProgress(0)\r\n            return\r\n        }\r\n\r\n        let arr = [...taskHistory]\r\n        if (progressChanged) {\r\n            arr.push({\r\n                'event': `Progress ${progress}%`,\r\n                'date': today\r\n            })\r\n            setTaskHistory(arr)\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                dueDate,\r\n                progress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            setCard(updatedCard)\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', props.teamId)\r\n            setIsActive(false)\r\n            setIsProgressActive(false)\r\n            setIsDescriptionActive(false)\r\n            setProgressChanged(false)\r\n        }\r\n\r\n    }, [history, name, description, dueDate, progress, listId, cardId, setIsActive, setIsProgressActive, progressChanged, taskHistory, today, socket, props.teamId, props.project])\r\n\r\n\r\n\r\n    const progressColor = (progress) => {\r\n        if (Number(progress) <= 20) {\r\n            return 'red'\r\n        }\r\n        if (Number(progress) <= 40) {\r\n            return 'orange'\r\n        }\r\n        if (Number(progress) <= 80) {\r\n            return 'blue'\r\n        }\r\n        if (Number(progress) > 80) {\r\n            return 'green'\r\n        }\r\n    }\r\n\r\n    const changeProgress = (value) => {\r\n        setProgress(value)\r\n        setProgressChanged(true) \r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <form className={styles.form} >\r\n\r\n\r\n                <div className={styles.leftSide}>\r\n\r\n                    <div className={styles.firstRow}>\r\n\r\n                        <div className={styles.inputTitles}>\r\n                            <span className={styles.pic1}>\r\n                                <img src={pic1} alt=\"pic1\" />\r\n                            </span>\r\n                            {\r\n                                isActive ?\r\n                                    <span className={styles.nameContainer}\r\n                                         onBlur={handleSubmit}\r\n                                    >\r\n                                        <textarea ref={dropdownRef} className={styles.nameInput}\r\n                                            value={name} onChange={e => setName(e.target.value)} />\r\n                                    </span>\r\n                                    :\r\n                                    <span className={styles.nameContainer}>\r\n                                        <p className={styles.textName} onClick={() => setIsActive(!isActive)}>{card.name}</p>\r\n                                    </span>\r\n                            }\r\n                        </div >\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.secondRowProgress} onClick={() => setIsProgressActive(true)}>\r\n                        <div className={styles.inputTitles}>\r\n                            <span className={styles.pic2}>\r\n                                <img src={pic2} alt=\"pic2\" />\r\n                            </span>\r\n                            <span className={styles.progressContainer}>\r\n                                <p  >Progress</p>\r\n                            </span>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                isProgressActive ?\r\n                                    <div onBlur={handleSubmit}\r\n                                    // ref={dropdownRef}\r\n                                    >\r\n                                        <span className={styles.progressInputContainer}\r\n                                        >\r\n                                            <input type='number'\r\n                                                ref={dropdownRef}\r\n                                                className={styles.progressInput} value={progress} onChange={e => { setProgress(e.target.value); setProgressChanged(true) }} min=\"0\" max=\"100\" />%\r\n                                        </span></div>\r\n                                    :\r\n                                    <div className={styles.progressDiv} >\r\n                                        {\r\n                                            (card.progress ) ?\r\n                                                <div className={styles.bar} >\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: `${card.progress}%`,\r\n                                                            backgroundColor: progressColor(card.progress)\r\n                                                        }}\r\n                                                        className={styles.progress}\r\n                                                    />\r\n\r\n                                                </div>\r\n                                                :\r\n                                                <div>\r\n                                                    Enter Task Progress\r\n                                                </div>\r\n                                        }\r\n                                        <span className={styles.textName} >{card.progress}\r\n                                            <span>%</span>\r\n                                        </span>\r\n\r\n\r\n                                    </div>\r\n\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.thirdRow}>\r\n\r\n                        <div className={styles.descriptinTitle}>\r\n                            <p className={styles.text}>Description</p>\r\n                        </div>\r\n                        <textarea className={styles.descriptionInput}\r\n                            ref={dropdownRef}\r\n                            value={description}\r\n                            onChange={(e) => { setDescription(e.target.value); setIsDescriptionActive(true) }}\r\n                        />\r\n                        {\r\n                            isDescriptionActive ?\r\n\r\n                                <div className={styles.descriptionButtons}>\r\n                                    <span>\r\n                                        <button onClick={handleSubmit} className={styles.editButton} >Edit</button>\r\n                                    </span>\r\n                                    <span>\r\n                                        <button onClick={(e) => { setDescription(card.description); setIsDescriptionActive(false) }} className={styles.editButton} >Cancel</button>\r\n                                    </span>\r\n\r\n                                </div>\r\n                                : null\r\n                        }\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.fourthRow}>\r\n\r\n                        <div className={styles.descriptinTitle}>\r\n                            <p className={styles.text}>History</p>\r\n                        </div>\r\n                        <TaskHistory taskHistory={taskHistory} />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className={styles.rightSide}>\r\n\r\n\r\n                    <div className={styles.membersDiv}>\r\n                        <div >\r\n                            <p className={styles.text}>Members</p>\r\n                        </div>\r\n                        <div className={styles.members}>\r\n                            <TaskMembers\r\n                                card={card}\r\n                                size={30}\r\n                                listId={listId}\r\n                                project={props.project}\r\n                                title={'Add'}\r\n                                teamId={props.teamId}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.secondRow}>\r\n                        <div >\r\n                            <div className={styles.dueDate} >\r\n                                <TaskDueDate\r\n                                    cardDueDate={dueDate}\r\n                                    cardId={cardId}\r\n                                    listId={listId}\r\n                                    project={props.project}\r\n                                    showEditCard={false}\r\n                                    teamId={props.teamId}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.smallButtonsContainer}>\r\n                        <div>\r\n                            <p className={styles.text}>Add</p>\r\n                        </div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic3} alt=\"pic3\" />\r\n                            Join</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic4} alt=\"pic4\" />\r\n                            Stickers</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic5} alt=\"pic5\" />\r\n                            Due Date</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic6} alt=\"pic6\" />\r\n                            Attach file</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic7} alt=\"pic7\" />\r\n                            Reports</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic10} alt=\"pic10\" />\r\n                            Add Teammate</div>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.smallButtonsContainer}>\r\n                        <div>\r\n                            <p className={styles.text}>Manage</p>\r\n                        </div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic11} alt=\"pic11\" />\r\n                            Make Template</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic13} alt=\"pic13\" />\r\n                            Remove List</div>\r\n                        <button className={styles.smallButtons} onClick={(e) => { deleteCard(e) }} title=\"Delete Task\" >\r\n                            <img className={styles.picsSmallButtons} src={pic12} alt=\"pic12\" />\r\n                         Delete Task</button>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic8} alt=\"pic8\" />\r\n                            Settings</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic9} alt=\"pic9\" />\r\n                            View</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic14} alt=\"pic14\" />\r\n                            Archive</div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport ButtonClean from '../button-clean'\r\nimport pen from '../../images/pen.svg'\r\nimport styles from \"./index.module.css\"\r\nimport Transparent from '../transparent'\r\nimport EditCard from '../edit-card'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\n\r\nexport default function MyTasksTask({ currTeam, project, list, card }) {\r\n    const inputRef = useRef(null)\r\n    const [isInputActive, setIsInputActive] = useState(false)\r\n    const [showEditCard, setShowEditCard] = useState(false)\r\n    const [progress, setProgress] = useState('')\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const days = Math.ceil((Date.parse(card.dueDate) - Date.now()) / 1000 / 3600 / 24)\r\n\r\n    useEffect (() => {\r\n        if (card.progress === null) {\r\n            setProgress('Add')\r\n            return\r\n        }\r\n        setProgress(card.progress + '%')\r\n    }, [setProgress, card.progress])\r\n\r\n    async function onBlur() {\r\n        setIsInputActive(false)\r\n        if (!isInputOk || Number(progress) === card.progress) {\r\n            setProgress(card.progress + '%')\r\n            setIsInputOk(true)\r\n            return\r\n        }\r\n\r\n        if (progress === '') {\r\n            if (card.progress === null) {\r\n                setProgress('Add')\r\n                return\r\n            }\r\n            setProgress(card.progress + '%')\r\n        }\r\n\r\n        const today = new Date(Date.now())\r\n        let arr = [...card.history]\r\n\r\n        arr.push({\r\n            'event': `Progress ${progress}%`,\r\n            'date': today\r\n        })\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${list._id}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress: progress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', currTeam._id)\r\n        }\r\n    }\r\n\r\n    function onKeyUp() {\r\n        if (Number.isNaN(Number(progress)) || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n        } else {\r\n            setIsInputOk(true)\r\n        }\r\n    }\r\n\r\n    function onFocus() {\r\n        setIsInputActive(true)\r\n        if (progress === 'Add') {\r\n            setProgress('')\r\n            return\r\n        }\r\n        setProgress(Number(progress.slice(0, -1)))\r\n    }\r\n\r\n    return (\r\n        <div key={card._id} className={styles.card}>\r\n            <div className={styles.task}>{card.name}</div>\r\n            <div className={styles.list}>{list.name}</div>\r\n            <div className={styles.progress}>\r\n                <input\r\n                    ref={inputRef}\r\n                    type={'text'}\r\n                    className={`${styles.input} ${!isInputOk && styles['bad-input']} ${!isInputActive && styles['no-border']}`}\r\n                    autoComplete=\"off\"\r\n                    value={progress}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onKeyUp={onKeyUp}\r\n                    onChange={e => setProgress(e.target.value)}\r\n                />                \r\n            </div>\r\n            <div className={styles.days}>\r\n                {\r\n                    card.progress === 100 ? (<div>Done</div>) :\r\n                    Date.parse(card.dueDate) === 0 || card.dueDate === null ? (<div>No Deadline</div>) :\r\n                    days < 0 ? (<div className={styles.deadline}>Deadline Passed</div>) :\r\n                    <div>{days}</div>\r\n                }\r\n            </div>\r\n            <ButtonClean\r\n                className={styles.pen}\r\n                onClick={() => setShowEditCard(true)}\r\n                title={<img src={pen} alt=\"...\" width=\"11.5\" height=\"11.5\" />}\r\n            />\r\n            {\r\n                showEditCard &&\r\n                <Transparent hideForm={() => setShowEditCard(!showEditCard)} >\r\n                    <EditCard\r\n                        hideForm={() => setShowEditCard(!showEditCard)}\r\n                        card={card}\r\n                        listId={list._id}\r\n                        project={project}\r\n                        teamId={currTeam._id}\r\n                    />\r\n                </Transparent>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect, useCallback } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport ButtonClean from \"../../components/button-clean\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Title from \"../../components/title\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport styles from './index.module.css'\r\nimport myTasks from '../../images/my-tasks/my-tasks.svg'\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport MyTasksTask from \"../../components/my-tasks-task\"\r\n\r\nconst MyTasksPage = () => {\r\n    const userContext = useContext(UserContext)\r\n    const [currTeam, setCurrTeam] = useState('')\r\n    const [projects, setProjects] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n\r\n    const selectTeam = useCallback(async (team) => {\r\n        setCurrTeam(team)\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const response = await fetch(`/api/user/tasks/${team._id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            setProjects(data)\r\n        }\r\n    }, [history])\r\n\r\n    useEffect(() => {\r\n        if (!currTeam || socket == null) return\r\n\r\n        const id = currTeam._id\r\n\r\n        socket.on('task-team-updated', taskTeamUpdate)\r\n        socket.on('task-update-team', (teamId) => {\r\n            if (teamId === id) {\r\n                const team = { ...currTeam }\r\n                selectTeam(team)\r\n            }\r\n        })\r\n\r\n        socket.emit('task-team-join', id)\r\n        return () => socket.off('task-team-updated')\r\n    }, [currTeam, socket, selectTeam])\r\n\r\n    function taskTeamUpdate(projects) {\r\n        setProjects(projects)\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Title title='My Tasks' />\r\n            <div>\r\n                <span className={styles.title}>Teams:</span>\r\n                {\r\n                    userContext.user.teams.map(team => {\r\n                        return (\r\n                            <ButtonClean\r\n                                key={team._id}\r\n                                title={team.name}\r\n                                onClick={() => selectTeam(team)}\r\n                                className={`${styles.filter} ${currTeam._id === team._id && styles.selected}`}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                !currTeam ? <div className={styles.title}>Select a team</div> :\r\n                    <div>\r\n                        {\r\n                            projects.length === 0 ? <div className={styles.title}>There is no current tasks</div> :\r\n                                projects.map(project => {\r\n                                    return (\r\n                                        <div key={project._id} className={styles.project}>\r\n                                            <div className={styles['project-name']}>\r\n                                                <Link to={`/project-board/${currTeam._id}/${project._id}`} className={styles.link}>\r\n                                                    <span className={styles.bold}>Project:</span> {project.name}\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className={`${styles.header} ${styles.card}`}>\r\n                                                <div className={styles.task}>Task:</div>\r\n                                                <div className={styles.list}>List:</div>\r\n                                                <div className={styles.progress}>Progress:</div>\r\n                                                <div className={styles.days}>Days Till End:</div>\r\n                                            </div>\r\n                                            {\r\n                                                project.lists.map(list => {\r\n                                                    return (\r\n                                                        <div key={list._id}>\r\n                                                            {list.cards.map(card => {\r\n                                                                return (\r\n                                                                    <MyTasksTask\r\n                                                                        key={card._id}\r\n                                                                        currTeam={currTeam}\r\n                                                                        project={project}\r\n                                                                        list={list}\r\n                                                                        card={card}\r\n                                                                    />\r\n                                                                )\r\n                                                            })}\r\n                                                        </div>)\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                        }\r\n                    </div>\r\n            }\r\n            <div>\r\n                <img className={styles.pic} src={myTasks} alt=\"\" width=\"364px\" height=\"262px\" />\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default MyTasksPage","import React from \"react\";\r\nimport PageLayout from \"../../components/page-layout\";\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <PageLayout>\r\n            <div>Error Page</div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React, { useCallback, useContext, useRef, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport Avatar from 'react-avatar'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\n\r\n\r\nexport default function AddMember(props) {\r\n\r\n    const socket = useSocket()\r\n    const members = props.members\r\n    const [users, setUsers] = useState([])\r\n    const [selectedUser, setSelectedUser] = useState('')\r\n    const context = useContext(UserContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const isAdmin = props.admin\r\n    const history = useHistory()\r\n    const projectId = props.project._id\r\n    const params = useParams()\r\n\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('team-update', params.teamid)\r\n    }, [socket, props.project, params.teamid])\r\n\r\n\r\n    const getTeamUsers = async () => {\r\n        let currentTeamId = ''\r\n\r\n        teamContext.teams.map(t => {\r\n            return (\r\n                t.projects.map(p => {\r\n                    if (p._id === projectId) {\r\n                        currentTeamId = t._id\r\n                    }\r\n                    return currentTeamId\r\n                })\r\n            )\r\n        })\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/get-users/${currentTeamId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        }\r\n        const data = await response.json()\r\n\r\n        let teamUsers = data.members\r\n\r\n        const filtered = teamUsers.filter((e) => {\r\n            const found = members.find(element => element.memberId.username === e.username)\r\n            if (found) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        })\r\n\r\n        setUsers(filtered)\r\n\r\n    }\r\n\r\n    async function handleOnDragEnd(result) {\r\n\r\n        if (!result.destination) {\r\n            console.log('no destination');\r\n            return\r\n        }\r\n\r\n        const memberRoleId = result.draggableId\r\n\r\n        const member = members.filter(a => a._id === memberRoleId)[0]['memberId']\r\n\r\n        if (member._id === context.user.id) {\r\n            console.log('can`t move self');\r\n            return\r\n        }\r\n\r\n        const memberAdmin = members.filter(a => a._id === memberRoleId)[0]['admin']\r\n\r\n\r\n        if (result.destination.droppableId === 'admins' && memberAdmin) {\r\n            return\r\n        }\r\n        if (result.destination.droppableId === 'members' && !memberAdmin) {\r\n            return\r\n        }\r\n\r\n        if (!memberAdmin) {\r\n            if (!window.confirm(`Are you sure you wish to make ${member.username} admin ?`))\r\n                return\r\n        }\r\n\r\n        if (memberAdmin) {\r\n            if (!window.confirm(`Are you sure you wish to remove ${member.username} from  admins ?`))\r\n                return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const response = await fetch(`/api/projects/${projectId}/user-roles`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                userRole: memberRoleId,\r\n                isAdmin: !memberAdmin\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n        }\r\n    }\r\n\r\n    const handleSelect = (id) => {\r\n        const result = users.filter(obj => {\r\n            return obj._id === id\r\n        })[0]\r\n        setSelectedUser(result)\r\n    }\r\n\r\n    const deleteMember = async (event, member) => {\r\n        event.preventDefault()\r\n        const projectId = props.project._id\r\n\r\n        if (member._id === context.user.id) {\r\n            return\r\n        }\r\n        const memberId = member._id\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${projectId}/user-remove`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                memberId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleAdd = async (event) => {\r\n        event.preventDefault()\r\n\r\n\r\n        if (!selectedUser) {\r\n            setIsActive(!isActive)\r\n\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const member = selectedUser\r\n\r\n        const response = await fetch(`/api/projects/${projectId}/user`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                member,\r\n                admin: false\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n            setIsActive(!isActive)\r\n            setSelectedUser('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n\r\n            <div className={styles.bigContainer} >\r\n                {isAdmin ?\r\n                    <span>\r\n                        {isActive ?\r\n                            <div className={styles.members} ref={dropdownRef}>\r\n                                {\r\n                                    (users.length > 0) ?\r\n                                    \r\n                                        <div>\r\n                                                Add Member to Project\r\n                                \r\n                                            <div>\r\n                                                <select className={styles.memberSelect}\r\n                                                    onChange={(e) => { handleSelect(e.target.value) }}>\r\n                                                    <option >Select user</option>\r\n                                                    {\r\n                                                        users.map((element) => (\r\n                                                            <option key={element._id} value={element._id}>{element.username}</option>\r\n                                                        ))\r\n\r\n                                                    }\r\n                                                </select>\r\n                                            <span className={styles.addButton} onClick={handleAdd} >Add</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <div>There are no more members in your team</div>                                      \r\n                                    \r\n                                }\r\n                            </div>\r\n                            :\r\n                            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n\r\n\r\n                            <div className={styles.adminsContainer}>\r\n                                <span className={styles.title}>Admins:</span>\r\n                                <Droppable droppableId={\"admins\"}>\r\n                                    {(provided) => (\r\n                                        <div className={styles.droppable} ref={provided.innerRef}  {...provided.droppableProps} >\r\n                                            {\r\n                                                members.filter(a => a.admin === true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index}>\r\n                                                            {(provided) => (\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                    <Avatar name={element.memberId.username} size={40} round={true} maxInitials={2} />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className={styles.membersContainer}>\r\n                                <span className={styles.title}>Members:</span>\r\n                                <Droppable droppableId={\"members\"}>\r\n                                    {(provided) => (\r\n                                        <div className={styles.droppableMembers} ref={provided.innerRef} {...provided.droppableProps}>\r\n                                            {\r\n                                                members.filter(a => a.admin !== true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index} >\r\n                                                            {(provided) => (\r\n\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                    <Avatar key={index} name={element.memberId.username} size={40} round={true} maxInitials={2}\r\n                                                                        onClick={(e) => { if (window.confirm('Are you sure you wish to delete this member?')) deleteMember(e, element.memberId) }} />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                                <span className={styles.addButton} onClick={() => { setIsActive(!isActive); getTeamUsers() }} >Add</span>\r\n                            </div>\r\n\r\n\r\n                        </DragDropContext>\r\n                        \r\n                        }\r\n                    </span >\r\n                    :\r\n                    <div>\r\n                        <div className={styles.adminsContainer}>\r\n                            <span className={styles.title}>Admins:</span>\r\n                            <div className={styles.droppable}>\r\n                                {\r\n                                    members.filter(a => a.admin === true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index} >\r\n                                                <Avatar name={element.memberId.username} size={40} round={true} maxInitials={2} />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={styles.adminsContainer}>\r\n                            <span className={styles.title}>Members:</span>\r\n                            <div className={styles.droppable}>\r\n\r\n                                {\r\n                                    members.filter(a => a.admin !== true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index} >\r\n                                                <Avatar name={element.memberId.username} size={40} round={true} maxInitials={2} />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","function isUserAdmin(id, members) {\r\n    \r\n    const member = members.find( m => m.memberId._id === id )\r\n    if (!member) {\r\n        return false\r\n    }\r\n\r\n    return member.admin\r\n}\r\n\r\nexport default isUserAdmin\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AddProjectMember from '../add-project-member'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\n\r\n\r\nexport default function EditProject(props) {\r\n    const [name, setName] = useState(props.project.name)\r\n    const [description, setDescription] = useState(props.project.description)\r\n    const members = props.project.membersRoles\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n\r\n    const projectId = props.project._id\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n    }, [socket, props.project])\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id, props])\r\n\r\n\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${projectId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n            props.hideForm()\r\n            socket.emit('team-update', params.teamid)\r\n        }\r\n    }\r\n\r\n    async function deleteProject() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${props.project._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            props.hideForm()\r\n            socket.emit('team-update', params.teamid)\r\n            history.push(`/team/${params.teamid}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            <form className={styles.container} >\r\n                <div className={styles.title} >Project</div>\r\n                \r\n                <div className={styles.inputContainer}>\r\n                    <span> Name</span>\r\n                    <input\r\n                        className={styles.inputPrName}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label=\"Name\"\r\n                        id=\"name\"\r\n                    />\r\n                </div>\r\n                <div className={styles.inputContainerDescr}>\r\n                    <span> Description</span>\r\n                    <textarea\r\n                        className={styles.textareaDescr}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        label=\"Description\"\r\n                        id=\"description\"\r\n                        placeholder='Project Description'\r\n                    />\r\n                </div>\r\n                <div className={styles.editMembers}>\r\n                    <AddProjectMember admin={isAdmin} project={props.project} members={props.project.membersRoles} />\r\n                </div>\r\n            </form>\r\n            <div>\r\n                {isAdmin ?\r\n                    <div className={styles.buttonsDiv}>\r\n                        <button className={styles.navigateButtons} onClick={handleSubmit}  >Edit</button>\r\n                        <button className={styles.navigateButtons} onClick={() => { if (window.confirm('Are you sure you wish to delete this project?')) deleteProject() }}  >Delete Project</button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport styles from './index.module.css'\r\n\r\n\r\nexport default function ShowAllTaskMembers(props) {\r\n    const members = props.members\r\n\r\n    return (\r\n        <div className={styles.containerMemb}>\r\n        <div className={styles.allCardMembers}>\r\n           {\r\n            members.map((m, index) => {\r\n                return (\r\n                    <div key={index} className={styles.eachMember}>\r\n                        <span className={styles.avatar} key={m._id}>\r\n                                            <Avatar key={m._id}\r\n                                                name={m.username}\r\n                                                size={30}\r\n                                                round={true}\r\n                                                maxInitials={2}\r\n                                                className={styles.avatar}\r\n                                            />\r\n                                        </span>\r\n                        <span>{m.username}</span>\r\n                        </div>\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useRef } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ShowAllTaskMembers from '../show-all-task-members'\r\nimport styles from './index.module.css'\r\n\r\nconst MembersList = ({ members, maxLength, maxDisplayLength }) => {\r\n    const ref = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(ref)\r\n\r\n    maxDisplayLength = Math.min(maxDisplayLength, members.length - 1)\r\n    maxLength = Math.min(maxLength, members.length)\r\n\r\n    return (\r\n        <div \r\n            className={styles.members} \r\n            onClick={() => setIsActive(true)}\r\n            ref={ref}\r\n        >\r\n            { isActive && <ShowAllTaskMembers members={members} />}\r\n            {(members.length > maxLength) ?\r\n                <>\r\n                    {members.slice(0, maxDisplayLength).map(member => {\r\n                        return (\r\n                            <span className={styles.avatar} key={member._id}>\r\n                                <Avatar\r\n                                    key={member._id}\r\n                                    name={member.username}\r\n                                    size={30}\r\n                                    round={true}\r\n                                    className={styles.avatar}\r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                    <span className={styles.avatar}>\r\n                        <Avatar\r\n                            color={'grey'}\r\n                            // split number of remaining members (and + sign) with spaces in b/n\r\n                            // so that they are correctly displayed by the Avatar component\r\n                            name={['+', ...(`${members.length - maxDisplayLength}`.split(''))].join(' ')}\r\n                            size={30}\r\n                            round={true}\r\n                            maxInitials={3}\r\n                            className={styles.avatar}\r\n                        />\r\n                    </span>\r\n                </>\r\n                :\r\n                <>\r\n                    {members.map(element => {\r\n                        return (\r\n                            <span className={styles.avatar} key={element._id}>\r\n                                <Avatar\r\n                                    key={element._id}\r\n                                    name={element.username}\r\n                                    size={30}\r\n                                    round={true}\r\n                                    maxInitials={2}\r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MembersList","import React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport pen from '../../images/pen.svg'\r\nimport ButtonClean from '../button-clean'\r\nimport ShowAllTaskMembers from '../show-all-task-members'\r\nimport MembersList from '../members-list'\r\n\r\nexport default function Card({ card, showEditCard }) {\r\n\r\n    const [avatarsHover, setAvatarsHover] = useState(false)\r\n\r\n    const progressColor = (progress) => {\r\n        if (Number(progress) <= 20) {\r\n            return 'red'\r\n        }\r\n        if (Number(progress) <= 40) {\r\n            return 'orange'\r\n        }\r\n        if (Number(progress) <= 80) {\r\n            return 'blue'\r\n        }\r\n        if (Number(progress) > 80) {\r\n            return 'green'\r\n        }\r\n    }\r\n\r\n    // const onHoverAvatars = (members) => {\r\n\r\n    //     console.log(members);\r\n\r\n    //     return(\r\n    //         <div className={styles.allCardMembers}>\r\n    //             {\r\n    //                 members.map((m,index) => {\r\n    //                     return (\r\n    //                         <div key={index}>{m.username}</div>\r\n    //                     )\r\n    //                 })\r\n    //             }\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    return (\r\n\r\n        <div className={styles.card} onMouseLeave={() => setAvatarsHover(false)}>\r\n            { avatarsHover && <ShowAllTaskMembers members={card.members} /> }\r\n            <div className={styles.leftSide}>\r\n                <div className={styles.cardName}>{card.name}</div>\r\n                {\r\n                    card.progress ?\r\n                        <div className={styles.bar} >\r\n                            <div\r\n                                style={{\r\n                                    width: `${card.progress}%`,\r\n                                    backgroundColor: progressColor(card.progress)\r\n                                }}\r\n                                className={styles.progress}\r\n                            />\r\n                        </div> : null\r\n                }\r\n            </div>\r\n\r\n            <div className={styles.flex}>\r\n                <MembersList \r\n                    members={card.members} \r\n                    maxLength={3}\r\n                    maxDisplayLength={1} \r\n                    onClick={() => setAvatarsHover(true)} \r\n                />\r\n                <ButtonClean\r\n                    className={styles.pen}\r\n                    onClick={() => showEditCard()}\r\n                    title={<img src={pen} alt=\"...\" width=\"11.5\" height=\"11.5\" />}\r\n                />\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/dots.d2d443b8.svg\";","import React, { useCallback, useRef, useState } from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Card from '../card'\r\nimport styles from './index.module.css'\r\nimport dots from '../../images/dots.svg'\r\nimport ButtonClean from '../button-clean'\r\nimport ListColor from '../list-color'\r\n\r\n\r\nexport default function List(props) {\r\n    const dropdownRef = useRef(null);\r\n    const cardRef = useRef(null);\r\n    const [isVisible, setIsVisible] = useDetectOutsideClick(cardRef)\r\n    const [isEditListActive, setIsEditListActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardName, setCardName] = useState('')\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n    const isAdmin = props.isAdmin\r\n\r\n\r\n\r\n    const updateSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n    }, [socket, props.project])\r\n\r\n    async function deleteList() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/${props.project._id}/${props.list._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateSocket()\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n    }\r\n\r\n    const addCard = useCallback(async (event) => {\r\n        event.preventDefault()\r\n        if (cardName === '') {\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${props.list._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name: cardName,\r\n                description: '',\r\n                dueDate: '',\r\n                progress: '',\r\n                members: []\r\n\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsVisible(!isVisible)\r\n            setCardName('')\r\n            updateSocket()\r\n        }\r\n\r\n    }, [history, cardName, props, updateSocket, isVisible, setIsVisible])\r\n\r\n    function editList() {\r\n        props.showEditList()\r\n        setIsEditListActive(!isEditListActive)\r\n    }\r\n\r\n    return (\r\n        <div key={props.list._id} className={styles.list}>\r\n            <div className={styles.row}>\r\n                <div>\r\n                    <div className={styles.name}>{props.list.name}</div>\r\n                    <ListColor color={props.list.color || '#A6A48E'} type={'list'} />\r\n                </div>\r\n                {\r\n                    isAdmin &&\r\n                    <ButtonClean\r\n                        className={styles.button}\r\n                        onClick={() => setIsEditListActive(!isEditListActive)}\r\n                        title={<img className={styles.dots} src={dots} alt=\"...\" width=\"20\" height=\"6\" />}\r\n                    />\r\n                }\r\n            </div>\r\n            <div className={styles.relative}>\r\n                {isEditListActive && <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                        <ButtonClean\r\n                            onClick={editList}\r\n                            title='Edit'\r\n                            className={styles.edit}\r\n                        />\r\n                        <ButtonClean\r\n                            onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteList() }}\r\n                            title='Delete'\r\n                            className={styles.delete}\r\n                        />\r\n                </div>}\r\n            </div>\r\n            <Droppable droppableId={props.list._id} type='droppableSubItem'>\r\n                {(provided) => (\r\n                    <div className={styles.droppable} ref={provided.innerRef}>\r\n                        {\r\n                            props.list.cards.map((element, index) => {\r\n                                return (\r\n                                    <Draggable key={element._id} draggableId={element._id}\r\n                                        index={index}\r\n                                    >\r\n                                        {(provided) => (\r\n                                            <div>\r\n                                                <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                    <Card card={element} listId={props.list._id} project={props.project}\r\n                                                        showEditCard={() => {\r\n                                                            props.showCurrentCard(element)\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                )\r\n                            })\r\n                        }\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n            <div className={styles.flexend} >\r\n                {\r\n                    isVisible ?\r\n                        <form ref={cardRef} className={styles.container} >\r\n                            <input\r\n                                ref={function (input) {\r\n                                    if (input != null) {\r\n                                        input.focus();\r\n                                    }\r\n                                }}\r\n                                className={styles.taskInput}\r\n                                type={'text'}\r\n                                value={cardName}\r\n                                onChange={e => setCardName(e.target.value)}\r\n                            />\r\n                            <ButtonClean type='submit' className={styles.addlist} onClick={addCard} title='+ Add Task' project={props.project} />\r\n                        </form> : <ButtonClean className={styles['add-task']} onClick={() => setIsVisible(!isVisible)} title='+ Add Task' />\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic.260e1407.svg\";","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport Button from '../button'\r\nimport Title from '../title'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ButtonClean from '../button-clean'\r\nimport { SketchPicker } from 'react-color'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\n\r\n\r\nexport default function EditList(props) {\r\n    const [name, setName] = useState(props.list.name)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const dropdownRef = useRef(null)\r\n    const [isColorActive, setIsColorActive] = useDetectOutsideClick(dropdownRef)\r\n    const [color, setColor] = useState(props.list.color || '#A6A48E')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const members = props.project.membersRoles\r\n    const userContext = useContext(UserContext)\r\n    const projectId = props.project._id\r\n    const listId = props.list._id\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id ,members))\r\n    }, [members, userContext.user.id])\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/${projectId}/${listId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({ name, color })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', teamId)\r\n            props.hideForm()\r\n        }\r\n    }\r\n\r\n    const onColorChange = (color) => {\r\n        setColor(color.hex)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            <form className={styles.container} >\r\n                <Title title=\"Edit List\" />\r\n\r\n                <div className={styles.inputContainer}>\r\n                    <span> Name</span>\r\n                <input\r\n                    className={styles.inputListName}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                />\r\n                </div>\r\n                <div className={styles.changeColor}>\r\n                    <span>\r\n                        Change Color:\r\n                    </span>\r\n                    <span className={styles.listColor}>\r\n                        <ButtonClean\r\n                            className={styles['color-button']}\r\n                            style={{ background: `${color}` }}\r\n                            onClick={() => setIsColorActive(!isColorActive)}\r\n                        />\r\n                    </span>\r\n                </div>\r\n                { isColorActive && <div ref={dropdownRef } >\r\n                    <SketchPicker className={styles['color-pick']} color={color} onChangeComplete={onColorChange} />\r\n                </div>}\r\n                <div className={styles.editListButton}>\r\n                { isAdmin && <Button onClick={handleSubmit} title=\"Edit List\" /> }\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useCallback, useContext, useEffect, useState, useRef } from 'react'\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport EditProject from '../../components/edit-project'\r\nimport List from '../../components/list'\r\nimport PageLayout from '../../components/page-layout'\r\nimport Transparent from '../../components/transparent'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport styles from './index.module.css'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport pic from '../../images/pic.svg'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Loader from 'react-loader-spinner'\r\nimport ButtonClean from '../../components/button-clean'\r\nimport EditCard from '../../components/edit-card'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport EditList from '../../components/edit-list'\r\nimport userObject from '../../utils/userObject'\r\n\r\n\r\nexport default function ProjectBoard() {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [members, setMembers] = useState([])\r\n    const [IsVisibleEdit, setIsVisibleEdit] = useState(false)\r\n    const [isVisibleEditList, setIsVisibleEditList] = useState(false)\r\n    const [listName, setListName] = useState('')\r\n    const listRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(listRef)\r\n    const socket = useSocket()\r\n    const projectContext = useContext(ProjectContext)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [currCard, setCurrCard] = useState('')\r\n    const [currList, setCurrList] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [dndActive, setDndActive] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const teamId = params.teamid\r\n    const token = getCookie(\"x-auth-token\")\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n\r\n        projectContext.setProject(project)\r\n\r\n        const memberArr = []\r\n        project.membersRoles.map(element => {\r\n            return memberArr.push({ admin: element.admin, username: element.memberId.username })\r\n\r\n        })\r\n        setMembers(memberArr)\r\n        projectContext.setLists(project.lists)\r\n    }, [projectContext])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const id = params.projectid\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, params.projectid])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n            return\r\n        }\r\n\r\n        if (dndActive) return\r\n\r\n        const memberArr = []\r\n        projectContext.project.membersRoles.map(element => {\r\n            return memberArr.push({ admin: element.admin, username: element.memberId.username, id: element.memberId._id })\r\n\r\n        })\r\n        setMembers(memberArr)\r\n        projectContext.setLists(projectContext.project.lists)\r\n        const member = memberArr.find(m => m.id === context.user.id)\r\n\r\n        if (member) {\r\n            setIsAdmin(member.admin)\r\n        }\r\n\r\n    }, [projectContext.project, params.projectid, projectContext, context.user.id, dndActive])\r\n\r\n\r\n    const updateUserRecentProjects = useCallback(async () => {\r\n        const userId = context.user.id\r\n        let updatedUser = { ...context.user }\r\n        let oldArr = [...updatedUser.recentProjects]\r\n\r\n        if (oldArr[2]._id === params.projectid) return\r\n\r\n        const arr = oldArr.filter(p => p._id !== params.projectid)\r\n        arr.push({ _id: params.projectid, name: projectContext.project.name })\r\n\r\n        if (arr.length > 3) {\r\n            arr.shift()\r\n        }\r\n\r\n        // updatedUser.recentProjects = arr\r\n\r\n        const response = await fetch(`/api/user/recentProjects/${userId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }, body: JSON.stringify({\r\n                recentProjects: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            const user = userObject(data)\r\n            context.logIn(user)\r\n        }\r\n    }, [context, history, params.projectid, projectContext.project, token])\r\n\r\n    useEffect(() => {\r\n        if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n            return\r\n        } else {\r\n            updateUserRecentProjects()\r\n        }\r\n    }, [params.projectid, projectContext.project, updateUserRecentProjects])\r\n\r\n\r\n    if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n        return (\r\n            <PageLayout>\r\n                <Loader\r\n                    type=\"TailSpin\"\r\n                    color=\"#363338\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n\r\n    async function handleOnDragEnd(result) {\r\n        if (!result.destination) return\r\n\r\n        setDndActive(true)\r\n\r\n        if (result.type === 'droppableItem') {\r\n            let position = result.destination.index\r\n\r\n            const filteredList = projectContext.lists.filter(element => !(projectContext.hiddenLists.includes(element._id)))\r\n            const previousId = filteredList[position - 1]\r\n            position = projectContext.lists.indexOf(previousId) + 1\r\n\r\n            const newListsArr = [...projectContext.lists]\r\n            const [reorderedList] = newListsArr.splice(result.source.index, 1)\r\n            newListsArr.splice(result.destination.index, 0, reorderedList)\r\n            projectContext.setLists(newListsArr)\r\n\r\n            const response = await fetch(`/api/projects/lists/${projectContext.project._id}/${result.draggableId}/dnd-update`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    position,\r\n                    element: 'list',\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            } else {\r\n                const updatedProject = await response.json()\r\n                projectContext.setProject(updatedProject)\r\n            }\r\n        }\r\n\r\n        if (result.type === 'droppableSubItem') {\r\n            const position = result.destination.index\r\n            const oldPosition = result.source.index\r\n            const source = result.source.droppableId\r\n            const destination = result.destination.droppableId\r\n\r\n            const newListsArr = [...projectContext.lists]\r\n            let sourcePosition = ''\r\n            let destinationPosition = ''\r\n\r\n            for (let list of newListsArr) {\r\n                if (list._id === source) sourcePosition = newListsArr.indexOf(list)\r\n                if (list._id === destination) destinationPosition = newListsArr.indexOf(list)\r\n            }\r\n\r\n            const [task] = newListsArr[sourcePosition].cards.splice(oldPosition, 1)\r\n            newListsArr[destinationPosition].cards.splice(position, 0, task)\r\n            projectContext.setLists(newListsArr)\r\n\r\n            const response = await fetch(`/api/projects/lists/${projectContext.project._id}/${result.draggableId}/dnd-update`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    position,\r\n                    element: 'card',\r\n                    source,\r\n                    destination\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n        }\r\n\r\n        socket.emit('project-update', projectContext.project)\r\n        socket.emit('task-team-update', teamId)\r\n        setDndActive(false)\r\n    }\r\n\r\n    const addList = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (listName === \"\") {\r\n            return\r\n        }\r\n        const response = await fetch(`/api/projects/lists/${projectContext.project._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            setListName('')\r\n            socket.emit('project-update', projectContext.project)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <PageLayout>\r\n\r\n            {\r\n                isVisible &&\r\n                < div >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditCard\r\n                            hideForm={() => setIsVisible(!isVisible)}\r\n                            card={currCard}\r\n                            listId={currList}\r\n                            project={projectContext.project}\r\n                            teamId={teamId}\r\n                        />\r\n                    </Transparent >\r\n                </div >\r\n            }\r\n            {\r\n                isVisibleEditList &&\r\n                < div >\r\n                    <Transparent hideForm={() => setIsVisibleEditList(!isVisibleEditList)} >\r\n                        <EditList hideForm={() => setIsVisibleEditList(!isVisibleEditList)} list={currList} project={projectContext.project} />\r\n                    </Transparent >\r\n                </div >\r\n            }\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId='droppable' direction='horizontal' type='droppableItem'>\r\n                    {(provided) => (\r\n                        <div className={styles.flex} ref={provided.innerRef} >\r\n                            {\r\n                                projectContext.lists\r\n                                    .filter(element => !(projectContext.hiddenLists.includes(element._id)))\r\n                                    .map((element, index) => {\r\n                                        return (\r\n                                            <Draggable key={element._id} draggableId={element._id} index={index}>\r\n                                                {(provided) => (\r\n                                                    <div>\r\n                                                        <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                            <List list={element} project={projectContext.project} isAdmin={isAdmin}\r\n                                                                showEditList={() => {\r\n                                                                    setCurrList(element)\r\n                                                                    setIsVisibleEditList(!isVisibleEditList)\r\n                                                                }}\r\n                                                                showCurrentCard={(card) => {\r\n                                                                    setCurrCard(card);\r\n                                                                    setCurrList(element._id);\r\n                                                                    setIsVisible(!isVisible)\r\n                                                                }} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        )\r\n                                    })\r\n                            }\r\n                            {provided.placeholder}\r\n                            {\r\n                                isAdmin &&\r\n                                <div className={styles.list} >\r\n                                    {\r\n                                        isActive ?\r\n                                            <form ref={listRef} className={styles.container} >\r\n                                                <input\r\n                                                    ref={function (input) {\r\n                                                        if (input != null) {\r\n                                                            input.focus();\r\n                                                        }\r\n                                                    }}\r\n                                                    className={styles.input}\r\n                                                    type={'text'}\r\n                                                    value={listName}\r\n                                                    onChange={e => setListName(e.target.value)}\r\n                                                />\r\n                                                <ButtonClean type='submit' className={styles.addlist} onClick={addList} title='+ Add List' />\r\n                                            </form> : <ButtonClean className={styles.addlist} onClick={() => setIsActive(!isActive)} title='+ Add List' />\r\n                                    }\r\n\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n\r\n            <button className={styles.navigateButtons} onClick={() => setIsVisibleEdit(!IsVisibleEdit)} >View Project</button>\r\n\r\n            {\r\n                IsVisibleEdit &&\r\n                < div >\r\n                    <Transparent hideForm={() => setIsVisibleEdit(!IsVisibleEdit)} >\r\n                        <EditProject hideForm={() => setIsVisibleEdit(!IsVisibleEdit)} project={projectContext.project} members={members} />\r\n                    </Transparent >\r\n                </div >\r\n            }\r\n\r\n            <img className={styles.pic} src={pic} alt=\"\" width=\"373\" height=\"312\" />\r\n        </PageLayout>\r\n    )\r\n}","import React, { useCallback, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketProvider';\r\n\r\n\r\nexport default function TaskName(props) {\r\n\r\n  const card = props.card\r\n  const dropdownRef = useRef(null);\r\n  const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n  const [cardName, setCardName] = useState(card.name)\r\n  const history = useHistory()\r\n  const socket = useSocket()\r\n  const params = useParams()\r\n  const teamId = params.teamid\r\n\r\n  const editCardName = useCallback(async (event) => {\r\n    event.preventDefault()\r\n\r\n    const cardId = card._id\r\n    const listId = props.listId\r\n\r\n\r\n    if (cardName === \"\") {\r\n      console.log('return');\r\n      return\r\n    }\r\n    const token = getCookie(\"x-auth-token\")\r\n    const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token\r\n      },\r\n      body: JSON.stringify({\r\n        name: cardName\r\n      })\r\n    })\r\n    if (!response.ok) {\r\n      history.push(\"/error\")\r\n      return\r\n    } else {\r\n      setIsActive(!isActive)\r\n      socket.emit('project-update', props.project)\r\n      socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n  }, [history, cardName, isActive, setIsActive, card._id, props.listId, props.project, socket, teamId])\r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        isActive ?\r\n          < div ref={dropdownRef} className={styles.nameContainer} onBlur={editCardName} >\r\n            <input className={styles.inputTaskName} type={'text'} value={cardName} onChange={e => setCardName(e.target.value)} />\r\n          </div> :\r\n          <div className={styles.tableText} onClick={() => setIsActive(!isActive)} >\r\n            <span>{cardName}</span>\r\n          </div >\r\n      }\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\n","import React, { useCallback, useMemo, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketProvider';\r\n\r\nexport default function TaskProgress(props) {\r\n\r\n    const today = useMemo(() => new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())), [])\r\n    const card = props.card\r\n    const [taskHistory, setTaskHistory] = useState(card.history)\r\n    const value = props.value\r\n    let taskprogress = ''\r\n    let token = value.split('/')\r\n\r\n    if (token.length > 1) {\r\n        taskprogress = token[0]\r\n    }\r\n\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardProgress, setCardProgress] = useState(taskprogress)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n    const editCardProgress = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        // let data = props.value.split('/')\r\n        // let cardId = data[1]\r\n        // let listId = data[2]\r\n\r\n        const cardId = card._id\r\n        const listId = props.listId\r\n\r\n\r\n        if (cardProgress === \"\") {\r\n            console.log('return');\r\n            return\r\n        } else if (Number(cardProgress) > 100) {\r\n            setCardProgress(100)\r\n            return\r\n        } else if (Number(cardProgress) < 0) {\r\n            setCardProgress(0)\r\n            return\r\n        }\r\n\r\n        let arr = [...taskHistory]\r\n\r\n        arr.push({\r\n            'event': `Progress ${cardProgress}%`,\r\n            'date': today\r\n        })\r\n        setTaskHistory(arr)\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress: cardProgress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            // setCardProgress('')\r\n            setIsActive(!isActive)\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n\r\n    }, [history, cardProgress, isActive, setIsActive, taskHistory, today, card._id, props.listId, props.project, socket, teamId])\r\n\r\n\r\n    function showTaskProgress(value) {\r\n        \r\n        if (value && value !== 'null') {\r\n            return (\r\n                <div style={{\r\n                    backgroundColor: getBackGroundColor(value),\r\n                    padding: '5px',\r\n                    fontSize: \"14px\", border: 'solid black 1px',\r\n                    borderRadius: '5px',\r\n                    height: '100%', width: '100%', textAlign: 'center'\r\n                }} > {value} %</div>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div>\r\n                Add Progress\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    function getBackGroundColor(value) {\r\n        let currColor = ''\r\n        switch (true) {\r\n            case (value === 100 || value === '100'):\r\n                currColor = '#0E8D27';\r\n                break;\r\n            case (value < 20):\r\n                currColor = '#EF2D2D'\r\n                break;\r\n            case (value < 100):\r\n                currColor = '#5E9DDC'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return currColor\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <span>\r\n\r\n            {\r\n                isActive ?\r\n                    <div ref={dropdownRef} className={styles.taskProgress} onBlur={editCardProgress}>\r\n                        <input\r\n                            className={styles.taskProgressButtonInput}\r\n                            style={{\r\n                                backgroundColor: [getBackGroundColor(cardProgress)],\r\n                                // padding: '2px',\r\n                                // fontSize: \"16px\",\r\n                                // 'font-family': 'inherit',\r\n                                // border: 'solid black 1px',\r\n                                // borderRadius: '5px', width: '100%', \r\n                                // height:'inherit',\r\n                                // textAlign: 'center'\r\n                            }}\r\n                            type={'number'}\r\n                            value={cardProgress}\r\n                            // placeholder={'%'}\r\n                            onChange={e => setCardProgress(e.target.value)}\r\n                            min=\"0\" max=\"100\" />\r\n                    </div >\r\n                    :\r\n                    // <div>\r\n                    // { \r\n                    //     (taskprogress!== null)?\r\n\r\n                    <div className={styles.taskProgress}\r\n                        onClick={() => setIsActive(!isActive)}                        >\r\n                        {/* <button className={styles.taskProgressButton}  */}\r\n                        {/* > */}\r\n                        {showTaskProgress(taskprogress)}\r\n                        {/* </button> */}\r\n                    </div >\r\n                    // : <span>Add Progress</span>\r\n                    // }\r\n                    // </div>\r\n            }\r\n        </span>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pen from '../../images/pen.svg'\r\nimport DatePicker from \"react-datepicker\"\r\nimport Transparent from \"../transparent\"\r\nimport EditCard from '../edit-card'\r\n\r\n\r\nexport default function TaskDueDate(props) {\r\n\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardDueDate, setCardDueDate] = useState(props.cardDueDate)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n    const editCardDueDate = useCallback(async (date) => {\r\n\r\n        let cardId = props.cardId\r\n        let listId = props.listId\r\n\r\n        if (cardDueDate === \"\" && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                dueDate: date\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', props.teamId)\r\n        }\r\n\r\n    }, [history, cardDueDate, setIsActive, isActive, props.cardId, props.listId, props.project, socket, props.teamId])\r\n\r\n    // let cardDate = ''\r\n    // let thisCardDate = ''\r\n    // if (cardDueDate) {\r\n    //     cardDate = new Date(cardDueDate)\r\n    //     thisCardDate = cardDate.getTime()\r\n    // }\r\n\r\n\r\n    // let value = (thisCardDate !== '' && thisCardDate !== 0) ? ('0' + cardDate.getDate()).slice(-2) + '-' + (cardDate.toLocaleString('default', { month: 'short' })) + '-' + cardDate.getFullYear() : ''\r\n\r\n    // let value = (thisCardDate !== '' && thisCardDate !== 0) ? ('0' + cardDate.getDate()).slice(-2) + '-' + ('0' + (cardDate.getMonth()+1)).slice(-2) + '-' + cardDate.getFullYear() : ''\r\n\r\n    const value = props.value\r\n\r\n    if (value) {\r\n\r\n        let taskDueDate = value\r\n\r\n        return (\r\n            <span className={styles.dueDateField}>\r\n                <DatePicker\r\n                    selected={cardDueDate}\r\n                    customInput={<div className={styles.dueDateFieldInput}>\r\n                        <span>{taskDueDate}</span>\r\n                    </div>}\r\n                    onChange={async (date) => { await setCardDueDate(date); editCardDueDate(date) }}\r\n                    label=\"Go to date\"\r\n                    onBlur={() => setIsActive(!isActive)} />\r\n\r\n                <span>\r\n                    {isVisible ?\r\n                        < span >\r\n                            <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                                <EditCard\r\n                                    hideForm={() => setIsVisible(!isVisible)}\r\n                                    card={props.card}\r\n                                    listId={props.listId}\r\n                                    project={props.project}\r\n                                    teamId={teamId}\r\n                                />\r\n                            </Transparent >\r\n                        </span >\r\n                        :\r\n                        <span>\r\n                            <img className={styles.pen} src={pen} alt=\"...\" width=\"13\" height=\"13\" onClick={() => setIsVisible(true)} />\r\n                        </span>\r\n                    }\r\n                </span>\r\n\r\n\r\n            </span>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <span className={styles.dueDateField}>\r\n                {/* {\r\n                    isActive ? */}\r\n                        <div className={styles.dueDateField}>\r\n                            <DatePicker customInput={<div>\r\n                                <span>Select date</span>\r\n                            </div>}\r\n                                selected={today} onChange={(date) => { setCardDueDate(date); editCardDueDate(date) }} label=\"Go to date\" />\r\n                        </div>\r\n                        {/* :\r\n                        <div className={styles.dueDateField}>\r\n                            <span onClick={() => setIsActive(!isActive)}>Due Date</span>\r\n                        </div>\r\n                } */}\r\n\r\n                <span>\r\n                    {isVisible ?\r\n                        < span >\r\n                            <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                                <EditCard\r\n                                    hideForm={() => setIsVisible(!isVisible)}\r\n                                    card={props.card}\r\n                                    listId={props.listId}\r\n                                    project={props.project}\r\n                                    teamId={teamId}\r\n                                />\r\n                            </Transparent >\r\n                        </span >\r\n                        :\r\n                        <span>\r\n                            <img className={styles.pen} src={pen} alt=\"...\" width=\"13\" height=\"13\" onClick={() => setIsVisible(true)} />\r\n                        </span>\r\n                    }\r\n                </span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport ButtonClean from '../button-clean'\r\n\r\n\r\n\r\nexport default function AddList(props) {\r\n\r\n    const history = useHistory()     \r\n    const [listName, setListName] = useState('')\r\n    const listRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(listRef)\r\n    const socket = useSocket()\r\n\r\n\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n    }, [socket, props.project])\r\n\r\n\r\n    const addList = useCallback(async (event) => {\r\n        event.preventDefault()\r\n        const projectId = props.project._id\r\n\r\n        if (listName === \"\") {\r\n            console.log('return');\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/${projectId}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            setListName('')\r\n            updateProjectSocket()\r\n        }\r\n\r\n    }, [history, listName, updateProjectSocket, setIsActive, isActive,props.project._id])\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={styles.list} >\r\n            {\r\n                isActive ?\r\n                    <form ref={listRef} className={styles.container} >\r\n                        <input className={styles.inputList} type={'text'} value={listName} onChange={e => setListName(e.target.value)} />\r\n                        <ButtonClean type='submit' className={styles.addListButton} onClick={addList} title='+ Add' />\r\n                    </form> : <ButtonClean className={styles.addListButton} onClick={() => setIsActive(!isActive)} title='+ Add List' />\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\nimport pic2 from '../../images/edit-card/pic2.svg'\r\nimport pic3 from '../../images/edit-card/pic3.svg'\r\nimport pic4 from '../../images/edit-card/pic4.svg'\r\nimport pic5 from '../../images/edit-card/pic5.svg'\r\nimport pic6 from '../../images/edit-card/pic6.svg'\r\nimport pic7 from '../../images/edit-card/pic7.svg'\r\nimport pic8 from '../../images/edit-card/pic8.svg'\r\nimport pic9 from '../../images/edit-card/pic9.svg'\r\nimport pic10 from '../../images/edit-card/pic10.svg'\r\nimport pic11 from '../../images/edit-card/pic11.svg'\r\nimport pic12 from '../../images/edit-card/pic12.svg'\r\nimport pic13 from '../../images/edit-card/pic13.svg'\r\nimport pic14 from '../../images/edit-card/pic14.svg'\r\nimport TaskMembers from '../task-members'\r\nimport TaskDueDate from \"../task-dueDate\"\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport TaskHistory from '../task-history'\r\n\r\n\r\nexport default function CreateCard(props) {\r\n\r\n    const listId = props.listId\r\n\r\n    const dropdownRef = useRef(null);\r\n    const [card, setCard] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [progress, setProgress] = useState('')\r\n    const [taskHistory, setTaskHistory] = useState('')\r\n    const [progressChanged, setProgressChanged] = useState(false)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [isProgressActive, setIsProgressActive] = useDetectOutsideClick(dropdownRef)\r\n    const [isDescriptionActive, setIsDescriptionActive] = useState(false)\r\n    const dueDate = ''\r\n    const today = new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()))\r\n    const cardId = card._id\r\n\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n    }, [socket, props.project])\r\n\r\n\r\n    const deleteCard = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n\r\n        if (!window.confirm('Are you sure you wish to delete this item?')) {\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n            props.hideForm()\r\n        }\r\n\r\n    }, [history, props, cardId, listId, updateProjectSocket, name])\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (Number(progress) > 100) {\r\n            setProgress(100)\r\n            return\r\n        } else if (Number(progress) < 0) {\r\n            setProgress(0)\r\n            return\r\n        }\r\n\r\n        let arr = [...taskHistory]\r\n        if (progressChanged) {\r\n            arr.push({\r\n                'event': `Progress ${progress}%`,\r\n                'date': today\r\n            })\r\n            setTaskHistory(arr)\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                dueDate,\r\n                progress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            setCard(updatedCard)\r\n            updateProjectSocket()\r\n            setIsActive(false)\r\n            setIsProgressActive(false)\r\n            setIsDescriptionActive(false)\r\n            setProgressChanged(false)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const createTask = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n\r\n        if (Number(progress) > 100) {\r\n            setProgress(100)\r\n            return\r\n        } else if (Number(progress) < 0) {\r\n            setProgress(0)\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                dueDate,\r\n                progress\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            setCard(updatedCard)\r\n            setTaskHistory(updatedCard.history)\r\n            updateProjectSocket()\r\n            setIsActive(false)\r\n            setIsProgressActive(false)\r\n            setIsDescriptionActive(false)\r\n            setProgressChanged(false)\r\n        }\r\n    }\r\n\r\n    const progressColor = (progress) => {\r\n        if (Number(progress) <= 20) {\r\n            return 'red'\r\n        }\r\n        if (Number(progress) <= 40) {\r\n            return 'orange'\r\n        }\r\n        if (Number(progress) <= 80) {\r\n            return 'blue'\r\n        }\r\n        if (Number(progress) > 80) {\r\n            return 'green'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <form className={styles.form} >\r\n\r\n\r\n                <div className={styles.leftSide}>\r\n\r\n                    <div className={styles.firstRow}>\r\n                        <div className={styles.inputTitles}>\r\n                            <span className={styles.pic1}>\r\n                                <img src={pic1} alt=\"pic1\" />\r\n                            </span>\r\n                            <span>\r\n                                {\r\n                                    (card === '') ?\r\n                                        <span className={styles.nameContainer}>\r\n                                            <input className={styles.createNameInput} placeholder={\"Add Task Name\"}\r\n                                                onChange={e => setName(e.target.value)}\r\n\r\n                                            />\r\n                                            <button onClick={createTask} className={styles.editButton} >Create</button>\r\n                                        </span>\r\n                                        :\r\n                                        <span>\r\n                                            {\r\n                                                isActive ?\r\n                                                    <div ref={dropdownRef}>\r\n                                                        <span className={styles.nameContainer}>\r\n                                                            <input className={styles.nameInput} value={name} onChange={e => setName(e.target.value)} />\r\n                                                            <button onClick={handleSubmit} className={styles.editButton} >Edit</button>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <span className={styles.nameContainer}>\r\n                                                        <p className={styles.textName} onClick={() => setIsActive(!isActive)}>{card.name}</p>\r\n                                                    </span>\r\n                                            }\r\n                                        </span>\r\n                                }\r\n                            </span>\r\n                        </div >\r\n                    </div>\r\n\r\n                    <div className={styles.secondRowProgress} onClick={() => setIsProgressActive(true)}>\r\n                        <div className={styles.inputTitles}>\r\n                            <span className={styles.pic2}>\r\n                                <img src={pic2} alt=\"pic2\" />\r\n                            </span>\r\n                            <span className={styles.nameContainer}>\r\n                                <p  >Progress</p>\r\n                            </span>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                (card === '') ?\r\n                                    null\r\n                                    :\r\n                                    <span>\r\n                                        {\r\n                                            isProgressActive ?\r\n                                                <div ref={dropdownRef}>\r\n                                                    <span className={styles.progressInputContainer}>\r\n                                                        <input type='number' className={styles.progressInput} value={progress} onChange={e => { setProgress(e.target.value); setProgressChanged(true) }} />\r\n                                                        <button onClick={handleSubmit} className={styles.editButton} >Edit</button>\r\n                                                    </span></div>\r\n                                                :\r\n                                                <div className={styles.progressDiv} >\r\n                                                    {\r\n                                                        card.progress ?\r\n                                                            <div className={styles.bar} >\r\n                                                                <div\r\n                                                                    style={{\r\n                                                                        width: `${card.progress}%`,\r\n                                                                        backgroundColor: progressColor(card.progress)\r\n                                                                    }}\r\n                                                                    className={styles.progress}\r\n                                                                />\r\n                                                            </div> : null\r\n                                                    }\r\n                                                    <span className={styles.textName} >{card.progress} %</span>\r\n                                                </div>\r\n\r\n                                        }\r\n                                    </span>\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.thirdRow}>\r\n\r\n                        <div className={styles.descriptinTitle}>\r\n                            <p className={styles.text}>Description</p>\r\n                        </div>\r\n                        <textarea className={styles.descriptionInput}\r\n                            ref={dropdownRef}\r\n                            value={description}\r\n                            onChange={(e) => { setDescription(e.target.value); setIsDescriptionActive(true) }}\r\n                        />\r\n                        <span>\r\n                            {\r\n                                (card === '') ?\r\n                                    null\r\n                                    :\r\n                                    <span>\r\n                                        {\r\n                                            isDescriptionActive ?\r\n\r\n                                                <div className={styles.descriptionButtons}>\r\n                                                    <span>\r\n                                                        <button onClick={handleSubmit} className={styles.editButton} >Edit</button>\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        <button onClick={(e) => { setDescription(card.description); setIsDescriptionActive(false) }} className={styles.editButton} >Cancel</button>\r\n                                                    </span>\r\n\r\n                                                </div>\r\n                                                : null\r\n                                        }\r\n                                    </span>\r\n                            }\r\n                        </span>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className={styles.thirdRow}>\r\n\r\n                        <div className={styles.descriptinTitle}>\r\n                            <p className={styles.text}>History</p>\r\n                        </div>\r\n                        <TaskHistory taskHistory={taskHistory} />\r\n                    </div>\r\n\r\n                    <div className={styles.lasRow}>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={styles.rightSide}>\r\n\r\n\r\n                    <div className={styles.membersDiv}>\r\n                        <div >\r\n                            <p className={styles.text}>Members</p>\r\n                        </div>\r\n                        <div className={styles.members}>\r\n                            {(card === '') ?\r\n                                null\r\n                                :\r\n                                <TaskMembers\r\n                                    card={card}\r\n                                    size={30}\r\n                                    listId={listId}\r\n                                    project={props.project}\r\n                                    title={'Add'}\r\n                                    teamId={props.teamId}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.secondRow}>\r\n                        <div >\r\n                            <div className={styles.dueDate} >\r\n                                {(card === '') ?\r\n                                    null\r\n                                    :\r\n                                    <TaskDueDate\r\n                                        cardDueDate={dueDate}\r\n                                        cardId={cardId}\r\n                                        listId={listId}\r\n                                        project={props.project}\r\n                                        showEditCard={false}\r\n                                        teamId={params.teamid}\r\n                                    />\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.smallButtonsContainer}>\r\n                        <div>\r\n                            <p className={styles.text}>Add</p>\r\n                        </div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic3} alt=\"pic3\" />\r\n                            Join</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic4} alt=\"pic4\" />\r\n                            Stickers</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic5} alt=\"pic5\" />\r\n                            Due Date</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic6} alt=\"pic6\" />\r\n                            Attach file</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic7} alt=\"pic7\" />\r\n                            Reports</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic10} alt=\"pic10\" />\r\n                            Add Teammate</div>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.smallButtonsContainer}>\r\n                        <div>\r\n                            <p className={styles.text}>Manage</p>\r\n                        </div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic11} alt=\"pic11\" />\r\n                            Make Template</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic13} alt=\"pic13\" />\r\n                            Remove List</div>\r\n                        <button className={styles.smallButtons}\r\n                            onClick={(e) => { deleteCard(e) }} title=\"Delete Task\" >\r\n                            <img className={styles.picsSmallButtons} src={pic12} alt=\"pic12\" />\r\n                         Delete Task</button>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic8} alt=\"pic8\" />\r\n                            Settings</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic9} alt=\"pic9\" />\r\n                            View</div>\r\n                        <div className={styles.smallButtons} >\r\n                            <img className={styles.picsSmallButtons} src={pic14} alt=\"pic14\" />\r\n                            Archive</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form >\r\n        </div >\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../button-clean'\r\nimport Transparent from '../transparent'\r\nimport CreateCard from '../create-card'\r\n\r\n\r\n\r\nexport default function AddTask(props) {\r\n\r\n   \r\n    const [isVisible, setIsVisible] = useState(false)\r\n    \r\n \r\n    return (\r\n\r\n\r\n        <div className={styles.flexend}>\r\n            <ButtonClean\r\n                className={styles.addnote}\r\n                onClick={() => setIsVisible(!isVisible)}\r\n                title='+ Add Task'\r\n            />\r\n            {\r\n                isVisible ?\r\n                    <div>\r\n                        <Transparent hideForm={() => setIsVisible(!isVisible)}>\r\n                            <CreateCard hideForm={() => setIsVisible(!isVisible)} listId={ props.listId} project={props.project} />\r\n                        </Transparent>\r\n                    </div> : null\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\nconst ColumnData = (startDay) => {\r\n    const formatDate = (date) => {\r\n        return date.toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit' })\r\n                   .replace('/', '.')\r\n    }\r\n\r\n    const cellDiv = (message, color, messageColor) => {\r\n        const progressStyle = { \r\n            background: color, \r\n            color: messageColor,\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            padding: '5px', \r\n            fontSize: '14px',\r\n            border: '1px solid #363338',\r\n            borderRadius: '5px'\r\n        }\r\n\r\n        return (\r\n            <div className={styles.daylyProgress}>\r\n                <div style={progressStyle}>\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const getCellData = (value, num) => {\r\n\r\n        if (num === 0) {\r\n            if (value) {\r\n                let token = value.split('/')\r\n                let date = Number(token[1])\r\n                let progress = Number(token[2])\r\n                let history = token[0]\r\n                let checked = startDay.setDate(startDay.getDate());\r\n\r\n                let color = ''\r\n                let message = ''\r\n\r\n                \r\n                if (progress === 100) {\r\n                    color = '#0E8D27';\r\n                    message = 'Finished'\r\n                    return (\r\n                        cellDiv(message, color, 'black')\r\n                    )\r\n                }\r\n                if (history) {\r\n                    let currElement = history.split(',')\r\n                    for (let i = 0; i < currElement.length; i++) {\r\n                        let element = currElement[i].split('*')\r\n                        let eventDate = element[0]\r\n\r\n                        let event = element[1]\r\n                        let currDate = new Date(eventDate)\r\n                        currDate.setHours(0, 0, 0, 0)\r\n\r\n                        let thisHistoryDate = currDate.getTime()\r\n\r\n\r\n                        if (thisHistoryDate > checked && event === 'Created') {\r\n                            return (\r\n                                ''\r\n                            )\r\n                        } else if (thisHistoryDate === checked) {\r\n                            message = event\r\n                        }\r\n                        if (thisHistoryDate === checked && !date) {\r\n                            message = event\r\n                            return (\r\n                                cellDiv(message, color, 'black')\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n                \r\n\r\n                if (date) {\r\n                    switch (true) {\r\n                        case (date === checked):\r\n                            color = '#EF2D2D';\r\n                            message = 'Due Date'\r\n                            break;\r\n                        case ((progress === 100) || (date === 100)):\r\n                            color = '#0E8D27';\r\n                            message = 'Finished'\r\n                            break;\r\n                        case (date > checked):\r\n                            color = '#5E9DDC';\r\n                            if (message === '') {\r\n                                message = 'In Progress'\r\n                            }\r\n                            break;\r\n                        case (date < checked && (progress < 100 || !progress)):\r\n                            color = '#EF2D2D';\r\n                            message = 'Delayed'\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    if (history) {\r\n                        let currElement = history.split(',')\r\n                        for (let i = 0; i < currElement.length; i++) {\r\n                            let element = currElement[i].split('*')\r\n                            let eventDate = element[0]\r\n    \r\n                            let event = element[1]\r\n                            let currDate = new Date(eventDate)\r\n                            currDate.setHours(0, 0, 0, 0)\r\n    \r\n                            let thisHistoryDate = currDate.getTime()\r\n    \r\n    \r\n                            if (thisHistoryDate > checked && event === 'Created') {\r\n                                return (\r\n                                    ''\r\n                                )\r\n                            } else if (thisHistoryDate === checked) {\r\n                                message = event\r\n                            }\r\n                            if (thisHistoryDate === checked && !date) {\r\n                                message = event\r\n                                return (\r\n                                    cellDiv(message, color, 'black')\r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return (\r\n                        cellDiv(message, color, 'black')\r\n                    )\r\n                } else {\r\n                    return ''\r\n                }\r\n            } else {\r\n                return value\r\n            }\r\n        } else if (num !== 0) {\r\n            if (value) {\r\n                let token = value.split('/')\r\n                let date = Number(token[1])\r\n                let progress = Number(token[2])\r\n                let history = token[0]\r\n                var checkedDate = new Date(startDay);\r\n                let checked = checkedDate.setDate(checkedDate.getDate() + num);\r\n\r\n                let color = ''\r\n                let messageColor = ''\r\n                let message = ''\r\n\r\n                if (history) {\r\n                    let currElement = history.split(',')\r\n                    for (let i = 0; i < currElement.length; i++) {\r\n\r\n                        let element = currElement[i].split('*')\r\n                        let eventDate = element[0]\r\n\r\n                        let event = element[1]\r\n                        let currDate = new Date(eventDate)\r\n                        currDate.setHours(0, 0, 0, 0)\r\n\r\n                        let thisHistoryDate = currDate.getTime()\r\n\r\n\r\n                        if (thisHistoryDate > checked && event === 'Created') {\r\n                            return (\r\n                                ''\r\n                            )\r\n                        } else if (thisHistoryDate === checked) {\r\n                            message = event\r\n                            messageColor = 'black'\r\n                        }\r\n                        if (thisHistoryDate === checked && !date) {\r\n                            message = event\r\n                            messageColor = 'black'\r\n                            return (\r\n                                cellDiv(message, color, messageColor)\r\n                            )\r\n                        }\r\n\r\n                    }\r\n                }\r\n                if (date) {\r\n                    switch (true) {\r\n                        case (date === checked):\r\n                            color = '#EF2D2D';\r\n                            message = 'Due Date'\r\n                            messageColor = 'black'\r\n                            return (\r\n                                cellDiv(message, color, messageColor)\r\n                            )\r\n                        case (date > checked && progress !== 100):\r\n                            color = '#5E9DDC';\r\n                            if (message === '') {\r\n                                messageColor = '#5E9DDC';\r\n                                message = 'In Progress'\r\n                            }\r\n                            break;\r\n                        default:\r\n                            if (message === '') {\r\n                                return null\r\n                            }\r\n\r\n                    }\r\n\r\n                    return (\r\n                        cellDiv(message, color, messageColor)\r\n                    )\r\n\r\n                } else {\r\n                    return ''\r\n                }\r\n            } else {\r\n                return value\r\n            }\r\n        } else {\r\n            return value\r\n        }\r\n    }\r\n\r\n    const getHeaderDate = (num) => {\r\n        var currDay = new Date(startDay)\r\n        currDay.setDate(currDay.getDate() + num)\r\n        let dayOfWeek = weekdays[currDay.getDay()]\r\n        let day = formatDate(currDay)\r\n        let color = ''\r\n\r\n        let thisDay = new Date()\r\n        let thisDate = thisDay.getTime()\r\n\r\n        var checkedDate = new Date(startDay);\r\n        let checked = checkedDate.setDate(checkedDate.getDate() + num)\r\n\r\n        if (checked === thisDate) {\r\n            color = \"#CFE2EC\"\r\n        }\r\n\r\n        return (\r\n            <div style={{ background: color, color: 'black' }}>\r\n                <div style={{ fontWeight: '600' }}>{dayOfWeek}</div>\r\n                <div style={{ fontSize: '80%' }}>{day}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const wrapCellData = (cellData) => {\r\n        return (\r\n            <div style={{ whiteSpace: 'normal', overflowWrap: 'anywhere', textAlign: 'left' }}>\r\n                {cellData}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        [\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Task</div>\r\n                },\r\n                accessor: \"task\",\r\n                minWidth: 400,\r\n                Cell: ({ value }) => wrapCellData(value)\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Progress</div>\r\n                },\r\n                accessor: \"progress\",\r\n                minWidth: 80,\r\n                Cell: ({ value }) => wrapCellData(value)\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Teammates</div>\r\n                },\r\n                accessor: \"assigned\",\r\n                minWidth: 150,\r\n                Cell: ({ value }) => wrapCellData(value)\r\n            },\r\n            {\r\n                Header: getHeaderDate(0),\r\n                accessor: \"monday\",\r\n                minWidth: 90,\r\n                Cell: ({ value }) => {\r\n                    return getCellData(value, 0)\r\n                }\r\n            },\r\n            {\r\n                Header: getHeaderDate(1),\r\n                accessor: \"tuesday\",\r\n                minWidth: 90,\r\n                Cell: ({ value }) => {\r\n                    return getCellData(value, 1)\r\n                }\r\n            },\r\n            {\r\n                Header: getHeaderDate(2),\r\n                accessor: \"wednesday\",\r\n                minWidth: 90,\r\n                Cell: ({ value }) => {\r\n                    return getCellData(value, 2)\r\n                }\r\n            },\r\n            {\r\n                Header: getHeaderDate(3),\r\n                accessor: \"thursday\",\r\n                minWidth: 90,\r\n                Cell: ({ value }) => {\r\n                    return getCellData(value, 3)\r\n                }\r\n            },\r\n            {\r\n                Header: getHeaderDate(4),\r\n                accessor: \"friday\",\r\n                minWidth: 90,\r\n                Cell: ({ value }) => {\r\n                    return getCellData(value, 4)\r\n                }\r\n            },\r\n            {\r\n                Header: getHeaderDate(5),\r\n                accessor: \"saturday\",\r\n                minWidth: 90,\r\n                Cell: ({ value }) => {\r\n                    return getCellData(value, 5)\r\n                }\r\n            },\r\n            {\r\n                Header: getHeaderDate(6),\r\n                accessor: \"sunday\",\r\n                minWidth: 90,\r\n                Cell: ({ value }) => {\r\n                    return getCellData(value, 6)\r\n                }\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Due Date</div>\r\n                },\r\n                accessor: \"dueDate\",\r\n                minWidth: 120,\r\n            }\r\n        ]\r\n    )\r\n}\r\n\r\n\r\nexport default ColumnData\r\n","export default __webpack_public_path__ + \"static/media/previous-day.09ac9e31.svg\";","export default __webpack_public_path__ + \"static/media/next-day.4c8f041a.svg\";","import React, { useCallback, useEffect, useState, useContext } from \"react\";\r\nimport styles from './index.module.css'\r\nimport ReactTable from \"react-table\"\r\nimport \"react-table/react-table.css\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport DatePicker from \"react-datepicker\"\r\nimport TaskName from '../calendar-data/task-name'\r\nimport TaskProgress from \"../calendar-data/task-progress\"\r\nimport TaskDueDate from \"../calendar-data/task-dueDate\"\r\nimport AddList from \"../calendar-data/add-list\"\r\nimport AddTask from \"../calendar-data/add-task\"\r\nimport TaskMembers from \"../calendar-data/task-members\"\r\nimport ProjectContext from \"../../contexts/ProjectContext\"\r\nimport ColumnData from \"../calendar-data/column-data\"\r\nimport Transparent from \"../transparent\"\r\nimport EditList from \"../edit-list\"\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useParams } from \"react-router-dom\"\r\nimport previous from '../../images/project-list/previous-day.svg'\r\nimport next from '../../images/project-list/next-day.svg'\r\nimport MembersList from \"../members-list\";\r\n\r\nconst createTableEntry = (entryData) => {\r\n    return {\r\n        task: entryData.task || '',\r\n        progress: entryData.progress || '',\r\n        assigned: entryData.assigned || '',\r\n        monday: entryData.monday || '',\r\n        tuesday: entryData.tuesday || '',\r\n        wednesday: entryData.wednesday || '',\r\n        thursday: entryData.thursday || '',\r\n        friday: entryData.friday || '',\r\n        saturday: entryData.saturday || '',\r\n        sunday: entryData.sunday || '',\r\n        dueDate: entryData.dueDate || ''\r\n    }\r\n}\r\n\r\nconst TableDndApp = (props) => {\r\n    const [startDate, setStartDate] = useState(getMonday())\r\n    const [tableData, setTableData] = useState([])\r\n    const [currList, setCurrList] = useState('')\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const params = useParams()\r\n\r\n    const onListClick = useCallback((list) => {\r\n        const member = projectContext.project.membersRoles.find(m => \r\n                            m.memberId._id === userContext.user.id)                    \r\n\r\n        if (member && member.admin) {\r\n            setCurrList(list)\r\n        }\r\n\r\n        projectContext.setLists(projectContext.project.lists)\r\n    }, [projectContext, userContext.user.id])\r\n\r\n\r\n    const updateTableData = () => {\r\n        const data = []\r\n        const lists = props.project.lists\r\n        projectContext.setLists(lists)\r\n\r\n        lists.forEach((list, index) => {\r\n            if (projectContext.hiddenLists.includes(list._id)) {\r\n                return\r\n            }\r\n\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <div \r\n                        key={index} \r\n                        className={styles.listNameContainer} \r\n                        style={{ background: list.color || '#A6A48E' }}\r\n                        onClick={() => onListClick(list)}\r\n                    >\r\n                        <span className={styles.listNameText} >\r\n                            {list.name}\r\n                        </span>\r\n                    </div>\r\n                ),\r\n                dueDate: (\r\n                    <div>\r\n                        <AddTask listId={list._id} project={props.project} />\r\n                    </div>\r\n                )\r\n            }))\r\n\r\n            let listCards = list.cards.filter(card => {\r\n                let cardFilter = false\r\n                if (props.filter.bool['Not Started'] && \r\n                    (card.progress === 0 || card.progress === null)) {\r\n                    cardFilter = true\r\n                }\r\n\r\n                if (props.filter.bool['In Progress'] && card.progress > 0 && card.progress < 100) {\r\n                    cardFilter = true\r\n                }\r\n                \r\n                if (props.filter.bool['Done'] && card.progress === 100) {\r\n                    cardFilter = true\r\n                }\r\n\r\n                const userFilter = props.filter.member \r\n                                        ? card.members.some(m => m._id === props.filter.member.id) \r\n                                        : true\r\n\r\n                return cardFilter && userFilter\r\n            })\r\n\r\n            listCards.forEach(card => {\r\n\r\n                let cardDate = ''\r\n                let thisCardDate = ''\r\n                if (card.dueDate) {\r\n                    cardDate = new Date(card.dueDate)\r\n                    thisCardDate = cardDate.getTime()\r\n                }\r\n\r\n                let historyArr\r\n                if (card.history) {\r\n                    historyArr = []\r\n                    let taskHistory = card.history\r\n                    for (let i = 0; i < taskHistory.length; i++) {\r\n                        let currElement = taskHistory[i]\r\n\r\n                        if (i === taskHistory.length - 1) {\r\n                            historyArr.push(`${currElement.date}*${currElement.event}`)\r\n                            break;\r\n                        }\r\n\r\n                        const currElementSlice = currElement.event.slice(0, 8)\r\n                        const taskHistorySlice = taskHistory[i + 1].event.slice(0, 8)\r\n                        if (currElementSlice === taskHistorySlice && currElement.date === taskHistory[i + 1].date) {\r\n\r\n                        } else {\r\n                            historyArr.push(`${currElement.date}*${currElement.event}`)\r\n                        }\r\n                    }\r\n                } else {\r\n                    historyArr = null\r\n                }\r\n\r\n                data.push(createTableEntry({\r\n                    task:\r\n                        (\r\n                            <TaskName\r\n                                // value={card.name + '/' + card._id + '/' + list._id}\r\n                                card={card} listId={list._id}\r\n                                project={props.project} />\r\n                        ),\r\n                    progress:\r\n                        (\r\n                            <TaskProgress\r\n                                value={card.progress + '/' + card._id + '/' + list._id}\r\n                                listId={list._id}\r\n                                project={props.project} card={card} />\r\n                        ),\r\n                    assigned:\r\n                        (\r\n                            // <TaskMembers value={card.members} card={card} cardId={card._id} listId={list._id} project={props.project} size={30} title='+' />\r\n                            <MembersList\r\n                                members={card.members}\r\n                                maxLength={3}\r\n                                maxDisplayLength={3}                                \r\n                            />\r\n                        ),\r\n                    monday: historyArr + '/' + thisCardDate + \"/\" + card.progress,\r\n                    tuesday: historyArr + '/' + thisCardDate + \"/\" + card.progress,\r\n                    wednesday: historyArr + '/' + thisCardDate + \"/\" + card.progress,\r\n                    thursday: historyArr + '/' + thisCardDate + \"/\" + card.progress,\r\n                    friday: historyArr + '/' + thisCardDate + \"/\" + card.progress,\r\n                    saturday: historyArr + '/' + thisCardDate + \"/\" + card.progress,\r\n                    sunday: historyArr + '/' + thisCardDate + \"/\" + card.progress,\r\n                    dueDate: (\r\n                        <div>\r\n                            <span>\r\n                                <TaskDueDate\r\n                                    value={(thisCardDate !== '' && thisCardDate !== 0) ? ('0' + cardDate.getDate()).slice(-2) + '-' + ('0' + (cardDate.getMonth() + 1)).slice(-2) + '-' + cardDate.getFullYear() : ''}\r\n                                    cardDueDate={cardDate}\r\n                                    cardId={card._id}\r\n                                    listId={list._id}\r\n                                    props={props}\r\n                                    project={props.project}\r\n                                    card={card}\r\n                                    teamId={params.teamid}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                }))\r\n            })\r\n            return data\r\n        })\r\n\r\n        data.push(createTableEntry({\r\n            task: (\r\n                <AddList props={props} project={props.project} />\r\n            )\r\n        }))\r\n\r\n        setTableData(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateTableData()\r\n    }, [props.filter, props.project])\r\n\r\n    const changeStartDate = (dayDiff) => {\r\n        const newStartDate = new Date(startDate)\r\n        newStartDate.setDate(newStartDate.getDate() + dayDiff)\r\n        updateTableData()\r\n        setStartDate(newStartDate)\r\n    }\r\n\r\n    function getMonday (date) {\r\n        date = date || new Date()\r\n    \r\n        // need to change to 7 in case date is Sunday (which in JS is 0, while Monday is 1)\r\n        const dateDay = date.getDay() || 7\r\n        const monday = new Date(date)\r\n        monday.setDate(date.getDate() - (dateDay - 1))\r\n    \r\n        return monday\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageContainer}>\r\n            {\r\n                currList ?\r\n                    < div >\r\n                        <Transparent hideForm={() => setCurrList('')} >\r\n                            <EditList hideForm={() => setCurrList('')} list={currList} project={props.project} />\r\n                        </Transparent >\r\n                    </div > : null\r\n            }\r\n            <div className={styles.buttoDiv}>\r\n                <span>\r\n                    <DatePicker\r\n                        selected={startDate}\r\n                        customInput={\r\n                            <div className={styles.navigateButtons}>\r\n                                Choose Week\r\n                                </div>\r\n                        }\r\n                        // className={styles.reactDatepicker}\r\n                        showWeekNumbers\r\n                        onChange={date => setStartDate(getMonday(date))} />\r\n                </span>\r\n                <span className={styles.daysButtons}>\r\n\r\n                    <button className={styles.navigateButtons} onClick={() => changeStartDate(-7)}>\r\n                        Previous week\r\n                    </button>\r\n                    \r\n                    <div className={styles.picContainer} onClick={() => changeStartDate(-1)}>\r\n                        <img \r\n                            className={styles.buttonPreviousDay} \r\n                            src={previous} alt=\"...\" width=\"126\" height=\"27\"\r\n                        />\r\n                        <div className={styles.centeredText}>Previous day</div>\r\n                    </div>\r\n\r\n                    <div className={styles.picContainer} onClick={() => changeStartDate(1)}>\r\n                        <img \r\n                            className={styles.buttonPreviousDay} \r\n                            src={next} alt=\"...\" width=\"126\"\r\n                            height=\"27\" \r\n                        />\r\n                        <div className={styles.centeredText}>Next day</div>\r\n                    </div>\r\n\r\n                    <button \r\n                        className={styles.navigateButtons}\r\n                        onClick={() => changeStartDate(7)}\r\n                    >\r\n                        Next week\r\n                    </button>\r\n                </span>\r\n                \r\n            </div>\r\n            <div>\r\n                {/* <DragDropContext onDragEnd={handleDragEnd} > */}\r\n                <ReactTable\r\n                    // TrComponent={DragTrComponent}\r\n                    // TbodyComponent={DropTbodyComponent}\r\n                    // getTrProps={getTrProps}\r\n                    data={tableData}\r\n                    columns={\r\n                        ColumnData(startDate)\r\n                    }\r\n                    defaultPageSize={10}\r\n                    pageSize={tableData.length}\r\n                    showPagination={false}\r\n                    background={\r\n                        'white'\r\n                    }\r\n                    style={{\r\n                        'background': '#DFE9EE',\r\n                        'borderRadius': '10px',\r\n                        'border': '1px solid #707070',\r\n                        'width': 'auto',\r\n                        'display': 'flex',\r\n                        'height': '70vh'                        \r\n                    }}\r\n                />\r\n\r\n                {/* </DragDropContext> */}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TableDndApp\r\n\r\n\r\n","import React,{ useRef } from 'react'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonClean from '../button-clean'\r\nimport styles from './index.module.css'\r\n\r\nconst ButtonCleanDropdown = ({ options, title, onOptionClick, onOptionClear }) => {\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n\r\n    const handleOptionClick = (optionValue, optionDisplay) => {\r\n        onOptionClick(optionValue, optionDisplay)\r\n        setIsActive(false)\r\n    }\r\n\r\n    const handleOptionClear = () => {\r\n        onOptionClear()\r\n        setIsActive(false)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <ButtonClean\r\n                className={styles.filter}\r\n                onClick={() => setIsActive(!isActive)}\r\n                title={title}\r\n            />\r\n            {\r\n                isActive &&\r\n                <div className={styles.options} ref={dropdownRef}>\r\n                    <div \r\n                        key='clear options' \r\n                        className={`${styles.option} ${styles['option-blank']}`}\r\n                        onClick={handleOptionClear}\r\n                    >\r\n                        Leave blank\r\n                    </div>\r\n                    { options.map(option => {\r\n                        return (\r\n                            <div\r\n                                key={option.value}\r\n                                className={styles.option}\r\n                                onClick={() => handleOptionClick(option.value, option.displayValue)}\r\n                            >\r\n                                {option.displayValue}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonCleanDropdown","import React, { useCallback, useEffect, useState, useContext } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport PageLayout from '../../components/page-layout'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport TableDndApp from '../../components/calendar-table'\r\nimport Loader from 'react-loader-spinner'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport ButtonClean from '../../components/button-clean'\r\nimport ButtonCleanDropdown from '../../components/button-clean-dropdown'\r\n\r\nexport default function ProjectList() {\r\n    const params = useParams()\r\n    const [isFilterActive, setIsFilterActive] = useState(false)\r\n    const [filter, setFilter] = useState({\r\n        bool: {\r\n            'Not Started': true,\r\n            'In Progress': true,\r\n            'Done': true,\r\n        },\r\n        member: null,\r\n        isUsed: false\r\n    })\r\n\r\n    const socket = useSocket()\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n        projectContext.setProject(project)\r\n    }, [projectContext])\r\n\r\n    useEffect(() => {\r\n        const id = params.projectid\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, params.projectid])\r\n\r\n    const toggleFilter = (filterName) => {\r\n        const newFilters = { ...filter }\r\n\r\n        // deactivate all other filters on initial filter click\r\n        if (!filter.isUsed) {\r\n            for (let key in newFilters.bool) {\r\n                newFilters.bool[key] = false\r\n            }\r\n        }\r\n\r\n        newFilters.bool[filterName] = !newFilters.bool[filterName]\r\n\r\n        // reset filters to initial state if all are set to true\r\n        newFilters.isUsed = !Object.values(newFilters.bool).every(f => f)\r\n\r\n        setFilter(newFilters)\r\n    }\r\n\r\n    if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n        return (\r\n            <PageLayout>\r\n                <Loader\r\n                    type=\"TailSpin\"\r\n                    color=\"#363338\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PageLayout className={styles.conteiner}>\r\n            <ButtonClean\r\n                className={styles.filter}\r\n                onClick={() => setIsFilterActive(!isFilterActive)}\r\n                title='Task filters'\r\n            />\r\n            {\r\n                isFilterActive &&\r\n                <div className={styles.filters}>\r\n                    <ButtonClean\r\n                        title={'Not Started'}\r\n                        onClick={() => toggleFilter('Not Started')}\r\n                        className={`${styles.filter} ${!filter.bool['Not Started'] \r\n                                                            ? styles['filter-off'] : \r\n                                                            ''}`}\r\n                    />\r\n                    <ButtonClean\r\n                        title={'In Progress'}\r\n                        className={`${styles.filter} ${!filter.bool['In Progress'] \r\n                                                            ? styles['filter-off'] \r\n                                                            : ''}`}\r\n                        onClick={() => toggleFilter('In Progress')}\r\n                    />\r\n                    <ButtonClean\r\n                        title={'Done'}\r\n                        className={`${styles.filter} ${!filter.bool['Done'] \r\n                                                            ? styles['filter-off'] \r\n                                                            : ''}`}\r\n                        onClick={() => toggleFilter('Done')}\r\n                    />\r\n                    <ButtonCleanDropdown\r\n                        options={projectContext.project.membersRoles.map(mr => {\r\n                            return {\r\n                                value: mr.memberId._id,\r\n                                displayValue: mr.memberId.username\r\n                            }\r\n                        })}\r\n                        title={(filter.member && filter.member.name) || 'Member'}\r\n                        onOptionClick={(memberId, memberName) => setFilter({\r\n                            ...filter,\r\n                            member: { id: memberId, name: memberName }\r\n                        })}\r\n                        onOptionClear={() => setFilter({ ...filter, member: null })}\r\n                    />\r\n                </div>\r\n            }\r\n            <div className={styles.calendarPageContainer}>\r\n                <div>\r\n                    <div className={styles.calendarContainer}>\r\n                        <TableDndApp project={projectContext.project} filter={filter} />\r\n                        {/* <TableDndApp2 filter={filter} /> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PageLayout >\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport ProjectContext from './ProjectContext'\r\n\r\nfunction ProjectProvider({ children }) {\r\n  const [lists, setLists] = useState([])\r\n  const [hiddenLists, setHiddenLists] = useState([])\r\n  const [project, setProject] = useState(null)\r\n  const [projectName, setProjectName] = useState('Select')\r\n  \r\n  return (\r\n    <ProjectContext.Provider value={ { lists, setLists, hiddenLists, setHiddenLists, project, setProject, projectName, setProjectName } }>\r\n      {children}\r\n    </ProjectContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ProjectProvider\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport getCookie from '../utils/cookie'\r\nimport userObject from '../utils/userObject'\r\nimport { useSocket } from './SocketProvider'\r\nimport TeamContext from './TeamContext'\r\nimport UserContext from './UserContext'\r\n\r\nfunction TeamProvider({ children }) {\r\n  const [teams, setTeams] = useState([])\r\n  const [selectedTeam, setSelectedTeam] = useState('Select')\r\n  const [currentProjects, setCurrentProjects] = useState([])\r\n  const userContext = useContext(UserContext)\r\n  const socket = useSocket()\r\n\r\n  function getCurrentProjects(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setCurrentProjects(current.projects)\r\n    }\r\n  }\r\n\r\n\r\n  function updateSelectedTeam(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setSelectedTeam(current.name)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTeams(userContext.user.teams)\r\n  }, [userContext.user.teams])\r\n\r\n  const teamUpdate = useCallback(async () => {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const promise = await fetch(\"/api/teams\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token\r\n      }\r\n    })\r\n\r\n    const response = await promise.json()\r\n\r\n    setTeams(response.teams)\r\n\r\n    const user =  userObject(response)\r\n    userContext.logIn(user)\r\n\r\n  }, [userContext])\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return\r\n    socket.on('team-updated', teamUpdate)\r\n    return () => socket.off('team-updated')\r\n  }, [socket, teamUpdate])\r\n\r\n  return (\r\n    <TeamContext.Provider value={{ teams, setTeams, selectedTeam, setSelectedTeam, currentProjects, setCurrentProjects, getCurrentProjects, updateSelectedTeam }}>\r\n      {children}\r\n    </TeamContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TeamProvider\r\n","import React, { useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport EditProject from '../edit-project'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Project(props) {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const params = useParams()\r\n\r\n    return (\r\n        <div>\r\n            {isVisible ?\r\n                < div >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditProject hideForm={() => setIsVisible(!isVisible)} project={props.project} />\r\n                    </Transparent >\r\n                </div > : null\r\n            }\r\n            <div className={styles.container}>\r\n                <div className={styles.leftSide}>\r\n                    <Link to={`/project-board/${params.teamid}/${props.project._id}`} className={styles.key}>Name: <span className={styles.value}>{props.project.name}</span></Link>\r\n\r\n                    <div className={styles.key}>\r\n                        Creator: <span className={styles.value}>{props.project.author.username}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.info} onClick={() => setIsVisible(!isVisible)}>\r\n                    Info\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic1.5bdefb31.svg\";","import React, { useState, useContext, useEffect, useCallback } from \"react\"\r\nimport styles from './index.module.css'\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Project from '../../components/project'\r\nimport Transparent from \"../../components/transparent\"\r\nimport CreateProject from '../../components/create-project'\r\nimport { useParams } from \"react-router-dom\"\r\nimport EditTeam from \"../../components/edit-team\"\r\nimport TeamMembers from \"../../components/team-members\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport pic1 from '../../images/team-page/pic1.svg'\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\n\r\n\r\n\r\n\r\n\r\nconst TeamPage = () => {\r\n\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [members, setMembers] = useState([])\r\n    const [invited, setInvited] = useState([])\r\n    const [projects, setProjects] = useState([])\r\n    const [currTeamUser, setCurrteamUser] = useState({})\r\n    const params = useParams()\r\n    const userContext = useContext(UserContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const socket = useSocket()\r\n    // const [teams, setTeams] = useState([])\r\n\r\n\r\n\r\n    const teamId = params.teamid\r\n\r\n\r\n    const teamUpdate = useCallback(() => {\r\n        let currTeam = {}\r\n        let found        \r\n        teamContext.teams.forEach(t => {\r\n            if (t._id === teamId) {\r\n                currTeam = t\r\n                setCurrteamUser(t)\r\n                found = true\r\n            }\r\n        })  \r\n        if (!found) {\r\n            return\r\n        }\r\n        setMembers(currTeam.members)\r\n        setInvited(currTeam.requests)\r\n        setProjects(currTeam.projects)\r\n    }, [teamId, teamContext.teams])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('team-update', teamUpdate())\r\n        // return () => socket.off('team-updated')\r\n    }, [socket, teamUpdate, params, teamContext.teams, userContext, teamId])\r\n\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     let currTeam = {}\r\n    //     let found        \r\n    //     teamContext.teams.forEach(t => {\r\n    //         if (t._id === teamId) {\r\n    //             currTeam = t\r\n    //             setCurrteamUser(t)\r\n    //             found = true\r\n    //         }\r\n    //     })\r\n    //     if (!found) {\r\n    //         return\r\n    //     }        \r\n\r\n    //     setMembers(currTeam.members)\r\n    //     setInvited(currTeam.requests)\r\n    //     setProjects(currTeam.projects)\r\n    // }, [teamContext.teams, teamId, teamContext, userContext])\r\n\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div className={styles.teamContainer}>\r\n                <div className={styles.leftSide}>\r\n                    <div>\r\n                        {projects.map((project, index) => {\r\n                            return (\r\n                                <Project key={project._id} index={index} project={project} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <button className={styles.newProjectButton} onClick={() => setIsVisible(true)} >New Project</button>\r\n                    {\r\n                        isVisible ?\r\n                            <div>\r\n                                <Transparent hideForm={() => setIsVisible(false)}>\r\n                                    <CreateProject />\r\n                                </Transparent>\r\n                            </div> : null\r\n                    }\r\n\r\n                </div>\r\n               \r\n               \r\n               \r\n                <div className={styles.rightSde}>\r\n                    <div className={styles.rightSideTeam}>\r\n                        <TeamMembers\r\n                            members={members} invited={invited}\r\n                        />\r\n                        <button className={styles.newProjectButton} onClick={() => setShowForm(true)} >View Team</button>\r\n                        {\r\n                            showForm ?\r\n                                (<Transparent hideForm={() => setShowForm(false)}>\r\n                                    <EditTeam currTeam={currTeamUser} hideForm={() => { setShowForm(false) }} />\r\n                                </Transparent>)\r\n                                : null\r\n                        }\r\n                    </div>\r\n\r\n                <div className={styles.pic1}>\r\n                    <img src={pic1} alt=\"\" />\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default TeamPage;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Button from \"../../components/button\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\n\r\nconst ConfirmationPage = () => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [loading, setLoading] = useState(true)\r\n    const [success, setSuccess] = useState(false)\r\n    const userContext = useContext(UserContext)\r\n\r\n    \r\n    const confirmToken = async () => {\r\n        const token = params.token\r\n\r\n\r\n        console.log(token);\r\n        const response = await fetch('/api/user/confirmation', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n          \r\n            userContext.logIn({\r\n                username: user.username,\r\n                id: user._id,\r\n                inbox: user.inbox,\r\n                confirmed: user.confirmed\r\n            })\r\n            setLoading(false)\r\n            setSuccess(true)\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        confirmToken()\r\n    })\r\n    \r\n    \r\n    if (params.token === 'not-confirmed') {\r\n        return (\r\n            <div>Please check your email to confirm your account</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && <div>Validating your email.</div>}\r\n            {!loading && success && <div>\r\n                <div>Thank you. Your account has been verified.</div>\r\n                <Button title='Proceed' onClick={() => history.push('/')} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage;","import React, { useContext } from \"react\"\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\"\r\n\r\nimport Home from \"./pages/home\"\r\nimport WelcomePage from \"./pages/welcome\"\r\nimport ProfilePage from \"./pages/profile\"\r\nimport InboxPage from \"./pages/inbox\"\r\nimport MyTasksPage from \"./pages/my-tasks\"\r\nimport ErrorPage from \"./pages/error\"\r\nimport UserContext from \"./contexts/UserContext\"\r\nimport ProjectBoard from \"./pages/project-board\"\r\nimport ProjectList from \"./pages/project-list\"\r\nimport { SocketProvider } from \"./contexts/SocketProvider\"\r\nimport ProjectProvider from \"./contexts/ProjectProvider\"\r\nimport TeamProvider from \"./contexts/TeamProvider\"\r\nimport TeamPage from \"./pages/team\"\r\nimport ConfirmationPage from \"./pages/confirmation\"\r\n\r\nconst Navigation = () => {\r\n\r\n    const context = useContext(UserContext)\r\n    const loggedIn = context.user.loggedIn\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <SocketProvider user={context.user}>\r\n                <ProjectProvider>\r\n                    <TeamProvider>\r\n                        <Switch>\r\n                            <Route path=\"/confirmation/:token\"><ConfirmationPage /></Route>\r\n                            {loggedIn && !context.user.confirmed && <Redirect to=\"/confirmation/not-confirmed\" />}\r\n                            <Route exact path=\"/\" >\r\n                                {loggedIn ? (<Home />) : (<WelcomePage />)}\r\n                            </Route>\r\n                            <Route path=\"/profile/:userid\">\r\n                                {loggedIn ? (<ProfilePage />) : (<Redirect to=\"/\" />)}\r\n                            </Route>\r\n                            <Route path=\"/inbox/:userid\">\r\n                                {loggedIn ? (<InboxPage />) : (<Redirect to=\"/\" />)}\r\n                            </Route>\r\n                            <Route path=\"/my-tasks/:userid\">\r\n                                {loggedIn ? (<MyTasksPage />) : (<Redirect to=\"/\" />)}\r\n                            </Route>\r\n                            <Route path=\"/project-board/:teamid/:projectid\">\r\n                                {loggedIn ? (<ProjectBoard />) : (<Redirect to=\"/\" />)}\r\n                            </Route>\r\n                            <Route path=\"/project-list/:teamid/:projectid\">\r\n                                {loggedIn ? (<ProjectList />) : (<Redirect to=\"/\" />)}\r\n                            </Route>\r\n                            <Route path=\"/team/:teamid\">\r\n                                {loggedIn ? (<TeamPage />) : (<Redirect to=\"/\" />)}\r\n                            </Route>\r\n                            <Route component={ErrorPage} />\r\n                        </Switch>\r\n                    </TeamProvider>\r\n                </ProjectProvider>\r\n            </SocketProvider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css';\r\nimport Navigation from \"./navigation\"\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App>\r\n      <Navigation />\r\n    </App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"my-tasks-task_card__3BAWy\",\"task\":\"my-tasks-task_task__1lp6I\",\"progress\":\"my-tasks-task_progress__2gxJ6\",\"days\":\"my-tasks-task_days__fOUDh\",\"deadline\":\"my-tasks-task_deadline__2lfRD\",\"list\":\"my-tasks-task_list__1qGpr\",\"pen\":\"my-tasks-task_pen__1NBud\",\"input\":\"my-tasks-task_input__2s3ei\",\"bad-input\":\"my-tasks-task_bad-input__3kwUX\",\"no-border\":\"my-tasks-task_no-border__1QKqD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-list_container__1PV_g\",\"form\":\"edit-list_form__1Ipgs\",\"inputContainer\":\"edit-list_inputContainer__2b92G\",\"inputListName\":\"edit-list_inputListName__1l3BY\",\"changeColor\":\"edit-list_changeColor__nfyWy\",\"listColor\":\"edit-list_listColor__3X8fE\",\"color-pick\":\"edit-list_color-pick__3MYZG\",\"color-button\":\"edit-list_color-button__1duo6\",\"editListButton\":\"edit-list_editListButton__CVAtc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pic\":\"project-board_pic__3YRcb\",\"flex\":\"project-board_flex__13yXL\",\"list\":\"project-board_list__jeXIy\",\"addlist\":\"project-board_addlist__-i_Vu\",\"input\":\"project-board_input__ljKcM\",\"container\":\"project-board_container__1yKm3\",\"navigateButtons\":\"project-board_navigateButtons__2-7tX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__35DiC\",\"leftSide\":\"card_leftSide__IXAlc\",\"cardName\":\"card_cardName__r87r0\",\"bar\":\"card_bar__V0jN_\",\"progress\":\"card_progress__S2h6J\",\"flex\":\"card_flex__1dGe1\",\"pen\":\"card_pen__23iOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teamContainer\":\"team_teamContainer__3_ZXX\",\"leftSide\":\"team_leftSide__2pHfH\",\"rightSde\":\"team_rightSde__2AmS7\",\"newProjectButton\":\"team_newProjectButton__39sxK\",\"rightSideTeam\":\"team_rightSideTeam__14fo7\",\"pic1\":\"team_pic1__2NH3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"project_container__2Nl29\",\"leftSide\":\"project_leftSide__1PQ-Q\",\"key\":\"project_key__2DKXD\",\"value\":\"project_value__1hM7g\",\"info\":\"project_info__16VKJ\",\"newProjectButton\":\"project_newProjectButton__2OKqw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members\":\"members-list_members__3UTNX\",\"avatar\":\"members-list_avatar__ZxnGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"button-clean-dropdown_container__lmTcx\",\"filter\":\"button-clean-dropdown_filter__3vBvQ\",\"options\":\"button-clean-dropdown_options__3O297\",\"option\":\"button-clean-dropdown_option__2s24D\",\"option-blank\":\"button-clean-dropdown_option-blank__2ijHE\"};"],"sourceRoot":""}