{"version":3,"sources":["components/MembersList/index.module.css","components/List/index.module.css","components/CalendarData/TableDateNavigation/index.module.css","pages/Welcome/index.module.css","components/HeaderDropdowns/ProfileDropdown/index.module.css","pages/Profile/index.module.css","components/EditCardOptions/TaskProgress/index.module.css","pages/ProjectBoard/index.module.css","components/ListDropdown/index.module.css","components/AddProjectBoardTask/index.module.css","components/AddProjectBoardList/index.module.css","components/ToggleSwitch/index.module.css","components/HeaderDropdowns/index.module.css","components/CalendarData/index.module.css","components/PageLayout/index.module.css","components/ButtonHideList/index.module.css","components/EditCardOptions/TaskAttach/index.module.css","components/Attachment/index.module.css","pages/Error/index.module.css","pages/ProjectList/index.module.css","components/CalendarData/TaskName/index.module.css","components/CalendarData/TaskDueDate/index.module.css","components/FilterWrapper/index.module.css","components/EditTeam/index.module.css","components/SignupForm/index.module.css","components/AddProjectMember/index.module.css","pages/GetStarted/index.module.css","components/ListColor/index.module.css","components/SearchResults/index.module.css","components/MyTeamsMenu/index.module.css","components/Inputs/ProfilePageInputs/index.module.css","components/TeamMembers/index.module.css","components/EditCardOptions/TaskMembers/index.module.css","components/ProgressBar/index.module.css","components/AttachmentsLink/index.module.css","components/Inputs/ProgressInput/index.module.css","components/CalendarData/FilterDueDate/index.module.css","components/CreateTeam/index.module.css","components/FormForgotPassword/index.module.css","components/LoginForm/index.module.css","components/CreateProject/index.module.css","pages/Confirmation/index.module.css","components/Aside/index.module.css","components/Link/index.module.css","components/ButtonClean/index.module.css","components/Transparent/index.module.css","components/FormAddPassword/index.module.css","components/ButtonGrey/index.module.css","components/AvatarUser/index.module.css","components/LinkTitle/index.module.css","components/ButtonCleanTitle/index.module.css","components/Title/index.module.css","components/ButtonGreyTitle/index.module.css","components/Alert/index.module.css","components/UpdateUserData/index.module.css","pages/Inbox/index.module.css","components/EditCardOptions/TaskDueDate/index.module.css","components/EditCardOptions/TaskHistory/index.module.css","components/Inputs/EditCardProgressInput/index.module.css","components/Inputs/ProjectBoardInput/index.module.css","components/CalendarData/TaskFilters/index.module.css","components/Button/index.module.css","components/EditCardOptions/index.module.css","components/EditProject/index.module.css","components/MyTasksProject/index.module.css","components/EditCard/index.module.css","pages/Home/index.module.css","components/UpdateUserImage/index.module.css","pages/MyTasks/index.module.css","components/CalendarTable/index.module.css","pages/Team/index.module.css","components/MyTasksTask/index.module.css","components/EditList/index.module.css","utils/cookie.js","services/useUserServices.js","contexts/UserContext.js","contexts/UserProvider.js","App.js","components/Link/index.js","contexts/SocketProvider.js","contexts/ProjectContext.js","components/ListColor/index.js","components/ButtonHideList/index.js","components/ButtonClean/index.js","components/Transparent/index.js","contexts/TeamContext.js","components/ButtonGrey/index.js","images/logo.svg","utils/constats.js","components/ConfirmationDialog/index.js","components/AvatarUser/index.js","services/useProjectsServices.js","services/useTeamServices.js","components/AddProjectMember/index.js","utils/checkIsUserAdmin.js","components/EditProject/index.js","images/aside/menu.svg","images/aside/home.svg","images/aside/tasks.svg","images/aside/inbox.svg","images/aside/inbox-bell.svg","images/aside/project-info.svg","components/Aside/index.js","utils/useDetectOutsideClick.js","components/SearchResults/index.js","images/search.svg","components/SearchField/index.js","components/LinkTitle/index.js","components/CreateTeam/index.js","components/ButtonCleanTitle/index.js","components/HeaderDropdowns/TeamDropdown/index.js","components/CreateProject/index.js","components/HeaderDropdowns/ProjectDropdown/index.js","components/HeaderDropdowns/ViewDropdown/index.js","components/HeaderDropdowns/ProfileDropdown/index.js","components/Header/index.js","components/PageLayout/index.js","components/Title/index.js","components/ButtonGreyTitle/index.js","images/home-page-pic.svg","components/MyTeamsMenu/index.js","pages/Home/index.js","components/Alert/index.js","components/FormAddPassword/index.js","images/welcome-page/google.svg","components/LoginForm/index.js","components/SignupForm/index.js","components/FormForgotPassword/index.js","images/welcome-page/welcome-page-1.svg","images/welcome-page/welcome-page-2.svg","images/welcome-page/welcome-page-3.svg","images/welcome-page/welcome-page-4.svg","images/welcome-page/welcome-page-5.svg","images/welcome-page/welcome-page-6.svg","images/welcome-page/twitter-icon.svg","images/welcome-page/facebook-icon.svg","images/welcome-page/instagram-icon.svg","pages/Welcome/index.js","images/profile-page-pic.svg","components/Inputs/ProfilePageInputs/index.js","components/UpdateUserData/index.js","images/pen.svg","components/UpdateUserImage/index.js","pages/Profile/index.js","components/TeamMembers/index.js","components/EditTeam/index.js","components/Inbox/useInboxUtils/index.js","components/Inbox/TeamInvitationInbox/index.js","components/Inbox/TeamInvitationHistory/index.js","components/Inbox/TeamInvitationResponse/index.js","components/Inbox/TaskAssignment/index.js","components/Inbox/ElementDeleted/index.js","components/Inbox/TeamInvitationCanceled/index.js","pages/Inbox/index.js","services/useCardsServices.js","components/ShowAllTaskMembers/index.js","components/MembersList/index.js","images/edit-card/members.svg","components/EditCardOptions/TaskMembers/index.js","images/edit-card/due-date.svg","utils/date.js","components/EditCardOptions/TaskDueDate/index.js","components/EditCardOptions/TaskHistory/index.js","utils/getProgressBackgroundColor.js","components/ProgressBar/index.js","components/Inputs/EditCardProgressInput/index.js","images/edit-card/progress.svg","components/EditCardOptions/TaskProgress/index.js","images/edit-card/download.svg","images/edit-card/remove.svg","components/AttachmentList/index.js","images/edit-card/task-name.svg","components/Attachment/index.js","images/edit-card/attachments.svg","components/EditCardOptions/TaskAttach/index.js","components/Inputs/ResponsiveTextarea/index.js","images/edit-card/delete.svg","components/EditCardOptions/TaskDelete/index.js","components/EditCard/index.js","components/AttachmentsLink/index.js","components/Inputs/ProgressInput/index.js","components/MyTasksTask/index.js","components/MyTasksProject/index.js","images/my-tasks/my-tasks.svg","pages/MyTasks/index.js","images/error-page.svg","pages/Error/index.js","images/get-started/pic1.svg","images/get-started/pic2.svg","images/get-started/pic3.svg","images/get-started/pic4.svg","pages/GetStarted/index.js","components/Card/index.js","services/useListsServices.js","components/EditList/index.js","components/ListDropdown/index.js","components/Inputs/ProjectBoardInput/index.js","components/AddProjectBoardTask/index.js","images/dots.svg","components/List/index.js","images/project-board.svg","utils/useUpdateUserLastTeam.js","components/AddProjectBoardList/index.js","pages/ProjectBoard/index.js","components/CalendarData/TaskName/index.js","components/CalendarData/TaskDueDate/index.js","components/CalendarData/AddProjectElement/index.js","components/CalendarData/AddTask/index.js","components/CalendarData/AddList/index.js","components/CalendarData/columnData.js","components/FilterWrapper/index.js","components/CalendarData/FilterMembers/index.js","components/CalendarData/FilterDueDate/index.js","components/ToggleSwitch/index.js","components/CalendarData/FilterProgress/index.js","components/CalendarData/TaskFilters/index.js","images/project-list/previous-day.svg","images/project-list/next-day.svg","components/CalendarData/TableDateNavigation/index.js","components/CalendarTable/utils.js","components/CalendarTable/index.js","pages/ProjectList/index.js","contexts/ProjectProvider.js","contexts/TeamProvider.js","components/Project/index.js","images/team-page/pic1.svg","pages/Team/index.js","components/Button/index.js","pages/Confirmation/index.js","navigation.js","index.js","components/SearchField/index.module.css","components/Project/index.module.css","components/CalendarData/FilterProgress/index.module.css","components/ConfirmationDialog/index.module.css","components/ShowAllTaskMembers/index.module.css","components/CalendarData/FilterMembers/index.module.css","components/Inbox/index.module.css","components/Header/index.module.css","components/AttachmentList/index.module.css","components/Card/index.module.css"],"names":["module","exports","getCookie","name","cookieValue","document","cookie","match","USER_URL","useUserServices","history","useHistory","getHeaders","getUser","useCallback","userId","a","fetch","method","response","ok","push","json","getAllUsers","headers","updateUser","username","teamId","body","JSON","stringify","lastTeamSelected","updateUserPassword","password","updateUserImage","newImage","oldImage","addNewPassword","userLogin","email","promise","authToken","get","user","moveMessageToHistory","message","deleteUserMessage","_id","confirmToken","token","registerUser","logoutUser","verifyLogin","getUserInbox","getUserTasks","data","updateRecentProjects","recentProjects","googleLoginUser","tokenId","UserContext","React","createContext","logIn","logOut","UserProvider","props","useState","setUser","loading","setLoading","id","teams","inbox","confirmed","newPasswordConfirmed","image","loggedIn","handleVerifyLogin","status","useEffect","type","color","height","width","timeout","Provider","value","children","App","LinkComponent","title","href","className","onClick","to","styles","link","SocketContext","useSocket","useContext","SocketProvider","socket","setSocket","url","window","location","includes","teamsId","map","t","teamsStr","newSocket","io","query","transports","close","ProjectContext","lists","setLists","hiddenLists","setHiddenLists","project","setProject","ListColor","xmlns","viewBox","data-name","transform","d","fill","ButtonHideList","list","newHiddenLists","listIndex","indexOf","splice","submit","opacity","ButtonClean","style","clean","Transparent","hideForm","transparent","TeamContext","setTeams","selectedTeam","setSelectedTeam","getCurrentTeam","currentTeam","currentProjects","setCurrentTeam","getTeams","updateSelectedTeam","getCurrentProjects","ButtonGrey","button","ESCAPE_KEY_CODE","ENTER_KEY_CODE","ConfirmDialog","hideConfirm","onConfirm","onDecline","accept","decline","onKeyPress","event","keyCode","addEventListener","removeEventListener","container","logo","src","alt","buttons","AvatarUser","size","publicId","gravity","crop","round","maxInitials","PROJECTS_URL","useProjectsServices","getProjectInfo","projectId","createProject","description","members","editProject","isFinished","deleteProject","changeUserRole","memberRoleId","memberAdmin","userRole","isAdmin","addProjectMember","member","admin","removeProjectMember","memberId","TEAMS_URL","useTeamServices","getTeamUsers","currentTeamId","createTeam","requests","team","updateTeam","updatedTeam","removeTeamInvitations","removeInvitation","console","log","deleteTeam","deletedTeam","teamInvitations","accepted","getTeamInvitationInfo","getUserTeams","AddProjectMember","users","setUsers","context","teamContext","isActive","setIsActive","showMembers","setShowMembers","setMember","membersRoles","setMembers","params","useParams","confirmOpen","setConfirmOpen","confirmTitle","setConfirmTitle","currElement","setCurrElement","updateProjectSocket","emit","teamid","result","destination","draggableId","filter","droppableId","arr","newArr","m","updatedUser","deleteMember","handleAdd","memberRole","onFocus","length","projects","p","teamUsers","filtered","e","find","element","confirmationObjectFunctions","autoComplete","onBlur","setTimeout","onChange","target","label","placeholder","u","toLowerCase","sort","b","localeCompare","onDragEnd","provided","droppable","ref","innerRef","droppableProps","index","dragHandleProps","draggableProps","checkIsUserAdmin","EditProject","setName","setDescription","setIsFinished","setIsAdmin","userContext","deletedProject","form","handleDeleteProject","spellCheck","Aside","isAsideOn","setIsAsideOn","isListShown","setIsListShown","isEditProjectShown","setIsEditProjectShown","isEditButtonProjectShown","setIsEditButtonProjectShown","on","off","aside","hamburger","options","menu","Link","home","tasks","bell","settings","projectInfo","useDetectOutsideClick","useRef","current","contains","SearchResults","searchInput","hideSearchResult","searchResults","useMemo","searchResultsArray","goToPage","SearchField","setSearchInput","showSearchForm","setShowSearchForm","dropdownRefSearch","isShownSearchInput","setIsShownSearchInput","searchImg","input","LinkComponentTitle","CreateTeam","allUsers","setAllUsers","inputMembers","handleSubmit","preventDefault","addMember","removeMember","ButtonCleanTitle","TeamDropdown","isShownTeamForm","setIsShownTeamForm","isTeamActive","setIsTeamActive","teamRef","commonStyles","dropdown","teamName","CreateProject","areMembersShown","setAreMembersShown","allTeamMembers","setAllTeamMembers","handleCreateProject","membersArray","ProjectDropdown","isShownProjectForm","setIsShownProjectForm","isShownOldProjects","setIsShownOldProjects","isProjectActive","setIsProjectActive","projectRef","reverse","ViewDropdown","isViewActive","setIsViewActive","viewRef","viewState","setViewState","goToSelectedView","view","ProfileDropdown","isProfileActive","setIsProfileActive","profileRef","avatar","profile","Header","isProjectVisibble","setIsProjectVisibble","isViewVisibble","setIsViewVisibble","getData","projectid","goToHomePage","deletedTeamId","goToTeamPage","deletedProjectId","navigation","small","links","font","PageLayout","contentClassName","app","content","Title","ButtonGreyTitle","MyTeamsMenu","userTeams","Home","isTeamFormShown","setIsTeamFormShown","areUserTeamsShown","setAreUserTeamsShown","dropdownRef","userName","userRecentProjects","pic1","homePagePicture","slice","forEach","Alert","alert","AddPassword","setPassword","rePassword","setRePassword","setAlert","fillAlert","setFillAlert","alerts","LoginForm","setEmail","showForm","setShowForm","setUserId","wrongPassAllert","setWrongPassAllert","wrongUserAllert","setWrongUserAllert","needPassword","wrongPassword","wrongUser","handleGoogle","googleResponse","onSubmit","goToForgotPassword","goToSignUp","render","renderProps","google","clientId","buttonText","onSuccess","cookiePolicy","SignupForm","setUsername","userExist","setUserExist","validEmailAlert","setValidEmailAlert","validateEmail","test","exist","goToLogin","ForgotPasswordForm","changePassResponse","emailInput","passInput","buttonDivLogin","loginButton","textDiv","newToSmM","signUpBtn","buttonDivGoogleLogin","googleLoginBtn","WelcomePage","isLogInFormShown","setIsLogInFormShown","isSignUpFormShown","setIsSignUpFormShown","isForgotPassFormShown","setIsForgotPassFormShown","welcomePagePic1","pic2","welcomePagePic2","lucida","paragraph","picture","welcomePagePic3","welcomePagePic4","welcomePagePic5","welcomePagePic6","footer","instagram","twitter","facebook","sd2006","ProfilePageInputs","classNameDiv","disabled","UpdateUserData","userEmail","isPasswordActive","setIsPaswordActive","isUserNameActive","setIsUserNameActive","isAlertOn","setIsAlertOn","handleUpdateUser","myTeamsContainer","UpdateUserImage","userid","isEditPictureActive","setIsEditPictureActive","isConfirmOpen","setIsConfirmOpen","userImage","deletePic","changeProfilePicture","cloudinary","createUploadWidget","cloudName","process","uploadPreset","error","path","info","public_id","open","relative","edit","delete","pen","ProfilePage","setUserEmail","profilePagePic","TeamMembers","invited","EditTeam","currTeam","setCurrTeam","setInvited","forInvite","setForInvite","teamAuthor","author","removeTeamMember","updatedMembers","membersForInvite","confirm","recievers","membersAvatars","isMessage","useInboxUtils","isMoveActive","setIsMoveActive","moveToHistory","deleteMessage","setInboxHistory","inboxHistory","viewTeam","setShowEditTeamForm","responseInvitation","setInbox","sendFrom","TeamInvitationInbox","bold","subject","Date","createdAt","toLocaleDateString","inline","isDeleted","TeamInvitationHistory","setIsComfirmOpen","undefined","TeamInvitationResponse","isInbox","TaskAssignment","margin","card","ElementDeleted","deletedElement","TeamInvitationCanceled","weekday","year","month","day","InboxPage","getInbox","inboxUser","CARDS_URL","useCardsServices","createTask","listId","taskName","progress","editTask","cardId","editedFields","deleteTask","addTaskMember","selectedUser","newMember","addAttachment","attachment","removeAttachment","attachmentId","ShowAllTaskMembers","deleteMemberOption","deleteMemberObj","updateSocket","cardMembers","setCardMembers","MembersList","maxLength","shownMembers","split","join","TaskMembers","setSelectedUser","handleGetTeamUsers","obj","handleAddTaskMember","shouldAddProjectMebmer","pics","membersPic","select","handleSelect","FORMAT_REGEX","MONTHS","WEEKDAYS","MILLISECONDS_IN_DAY","FORMAT_OPTIONS","date","getUTCFullYear","toString","getMonth","getDate","getDay","getWeekNumber","getDateWithOffset","initialDate","daysOffset","getTime","getMonday","dateDay","monday","setDate","currWeekThursday","week1","getFullYear","week1Thursday","Math","formatDate","formatString","replace","substr","formatType","checkDateEquality","firstDate","secondDate","getYear","compareDates","firstDateYear","secondDateYear","firstDateMonth","secondDateMonth","firstDateDay","secondDateDay","TaskDueDate","dueDate","taskDueDate","setTaskDueDate","formatedDueDate","setFormatedDueDate","windowWidth","setWindowWidth","today","setUTCHours","updateDimensions","innerWidth","w","editCardDueDate","customInput","dueDatePic","selected","popperPlacement","TaskHistory","taskHistory","getProgressBackgroundColor","Number","ProgressBar","bar","backgroundColor","EditCardProgressInput","setIsInputVisible","setTaskHistory","inputClassName","placeholderClassName","isInputActive","setIsInputActive","setProgress","currInput","setCurrInput","isInputOk","setIsInputOk","changeProgress","autoFocus","min","max","onKeyDown","onKeyUp","TaskProgress","isInputVisible","progressPic","AttachmentList","attachments","listRef","setIsDragCardDisabled","setIsDragListDisabled","attachmentsArr","setAttachmentsArr","handleDeteleAttachment","att","updatedCard","format","download","getFullDocumentUrl","remove","Attachment","isListVisible","setIsListVisible","TaskAttach","setAttachments","resourceType","original_filename","attachmentPic","remaining","ResponsiveTextArea","setValue","toggleActive","inputRef","areaHeight","setAreaHeight","currValue","setCurrValue","scrollHeight","focus","blur","setSelectionRange","TaskDelete","handleDeleteTask","EditCard","taskNamePic","text","AttachmentsLink","isVisible","setIsVisible","attPic","ProgressInput","isBackgroundStyled","border","add","MyTasksTask","isEditCardActive","setIsEditCardActive","daysLeft","ceil","parse","now","task","days","deadline","MyTasksProject","header","raw","cards","MyTasksPage","setProjects","selectTeam","taskTeamUpdate","box","pic","myTasks","ErrorPage","errorPic","GetStarted","getStartedPagePic1","getStartedPagePic2","pic3","getStartedPagePic3","getStartedPagePic4","greeting","Card","LISTS_URL","useListsServices","createList","listName","editList","deleteList","dragAndDropList","position","dragAndDropCard","source","EditList","setColor","isColorActive","setIsColorActive","background","onChangeComplete","hex","ListDropdown","isDropdownActive","setIsDropdownActive","isVisibleEditList","setIsVisibleEditList","handleDeleteList","ProjectBoardInput","onEnter","onEscape","AddProjectBoardTask","setTaskName","isAddTaskVisible","setIsAddTaskVisible","cardRef","addTask","List","isDragCardDisabled","dotsPic","isDragDisabled","useUpdateUserLastTeam","AddProjectBoardList","setListName","isAddListActive","setIsAddListActive","addList","ProjectBoard","isDndActive","setIsDndActive","isDragListDisabled","projectUpdate","updateUserRecentProjects","newRecentProjects","shift","handleDragAndDropList","filteredList","previousId","newListsArr","reorderedList","updatedProject","handleDragAndDropCard","oldPosition","sourcePosition","findIndex","destinationPosition","handleOnDragEnd","direction","draggable","projectBoardPic","TaskName","cardName","setCardName","editCardName","cardDueDate","setCardDueDate","closeOnScroll","getElementsByClassName","AddProjectElement","handleInputRemove","elementName","setElementName","nameHeight","setNameHeight","AddTask","AddList","CELL_COLORS","assembleColumnData","startDate","currentDate","cardData","getWeekdayCellHtml","messageColor","progressStyle","getWeekdayCellData","dataString","numDaysOffset","cellDate","taskStartDate","eventInCell","events","isAfterDueDate","isBeforeToday","finishedDate","eventType","eventValue","cellText","cellColor","lastEventDate","cellBackgroundColor","isMonday","eventsInWeek","hasEventsInWeek","getHeaderDateHtml","headerDate","displayedDate","displayedDayOfWeek","wrapCellData","cellData","accessor","minWidth","Cell","sortable","resizable","maxWidth","sortMethod","getProps","overflow","FilterWrapper","legendContent","legend","MembersFilter","membersFilter","setMembersFilter","handleFilterClear","mr","displayValue","buttonStyles","option","optionValue","optionDisplay","DueDateFilter","dueBefore","showWeekNumbers","ToggleSwitch","toggleStatus","containerStyle","ProgressFilters","filters","toggleFilter","notStarted","inProgress","done","TaskFilters","setFilter","filterName","currentFilterValue","TableDateNavigation","changeStartDate","setStartDate","previous","next","sortByTask","cardOne","cardTwo","sortByProgress","firstValue","secondValue","sortByDueDate","parsedDateOne","parsedDateTwo","createTableEntry","entryData","assigned","tuesday","wednesday","thursday","friday","saturday","sunday","CalendarTable","tableData","setTableData","currList","setCurrList","newEntries","setNewEntries","columnName","isDescending","sortCriteria","setSortCriteria","isUsed","onListClick","updateTableData","cardsSortMethod","sortingFunc","sortingEvaluation","getCardsSortMethod","histIndex","newTask","listCards","isCardFilterPassed","isUserFilterPassed","some","isDueDateFilterPassed","applyCardFilters","historyByDate","elementDate","lastHistoryEvent","parseCardHistory","weekdayData","newList","dayDiff","newStartDate","columns","defaultPageSize","pageSize","showPagination","getTbodyProps","getTrGroupProps","onSortedChange","sortInfo","desc","ProjectList","calendarPageContainer","ProjectProvider","projectName","setProjectName","TeamProvider","setCurrentProjects","teamUpdate","Project","isEditTeamShown","setIsEditTeamShown","key","TeamPage","isCreateProjectFormVisible","setIssCreateProjectFormVisible","isEditTeamFormVisible","setIsEditTeamFormVisible","areOldProjectsShown","setAreOldProjectsShown","teamPagePicture","Button","ConfirmationPage","isLoading","setIsLoading","isFirstRegistration","handleConfirmToken","cheers","Navigation","Confirmation","exact","Welcome","Profile","Inbox","MyTasks","Team","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79b5d4b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"members\":\"MembersList_members__1wnnB\",\"avatar\":\"MembersList_avatar__3m5RY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3CC1i\",\"header\":\"List_header__16_c6\",\"name\":\"List_name__2pQkI\",\"button\":\"List_button__2JdEh\",\"droppable\":\"List_droppable__rjf6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TableDateNavigation_container__2gKbz\",\"pic-container\":\"TableDateNavigation_pic-container__3PBX_\",\"text-centered\":\"TableDateNavigation_text-centered__Tg_5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Welcome_container__Blv2d\",\"top-container\":\"Welcome_top-container__1kWsD\",\"top-div-container\":\"Welcome_top-div-container__wAc50\",\"header-nav\":\"Welcome_header-nav__23dVS\",\"logo\":\"Welcome_logo__1FHqc\",\"first-buttons\":\"Welcome_first-buttons__1zNCr\",\"pic1\":\"Welcome_pic1__WdSLj\",\"pic2\":\"Welcome_pic2__3kR7y\",\"lower-div-container\":\"Welcome_lower-div-container__11mp2\",\"first-text\":\"Welcome_first-text__2wMqP\",\"login-button\":\"Welcome_login-button__2aVK9\",\"sign-up-button\":\"Welcome_sign-up-button__2DTaq\",\"headers\":\"Welcome_headers__YqCjW\",\"lucida\":\"Welcome_lucida__3OQA8\",\"paragraph\":\"Welcome_paragraph__2xlYA\",\"second-sign-up-button\":\"Welcome_second-sign-up-button__3YQut\",\"second-container\":\"Welcome_second-container__3oB5N\",\"first-row\":\"Welcome_first-row__kdO8F\",\"second-text\":\"Welcome_second-text__wGxh7\",\"third-sign-up-button\":\"Welcome_third-sign-up-button__E-21v\",\"pic3-container\":\"Welcome_pic3-container__3y42i\",\"picture\":\"Welcome_picture__1LfpA\",\"second-row\":\"Welcome_second-row__2gFr0\",\"second-row-colum\":\"Welcome_second-row-colum__1QPMm\",\"second-row-pic\":\"Welcome_second-row-pic__25QT9\",\"pic4-container\":\"Welcome_pic4-container__31mTt\",\"third-row\":\"Welcome_third-row__2pG7q\",\"pic6-container\":\"Welcome_pic6-container__1SSNA\",\"content-wrap\":\"Welcome_content-wrap__2dveJ\",\"footer\":\"Welcome_footer__2XGx5\",\"footer-column\":\"Welcome_footer-column__1v0eJ\",\"footer-headers\":\"Welcome_footer-headers__3JwzT\",\"footer-info\":\"Welcome_footer-info__1Sdrd\",\"last-column\":\"Welcome_last-column__1XKLT\",\"social-media-container\":\"Welcome_social-media-container__3rB36\",\"social-media\":\"Welcome_social-media__14Zva\",\"sd2006\":\"Welcome_sd2006__1n8bn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileDropdown_avatar__1ym0C\",\"profile\":\"ProfileDropdown_profile__naz8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2jn1d\",\"inputs-container\":\"Profile_inputs-container__1ZyQB\",\"pic-container\":\"Profile_pic-container__NkUuW\",\"pic1\":\"Profile_pic1__10iGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress-input\":\"TaskProgress_progress-input__3908Y\",\"progress-input-container\":\"TaskProgress_progress-input-container__2J7Ub\",\"progress-bar\":\"TaskProgress_progress-bar__3xRgL\",\"bad-input\":\"TaskProgress_bad-input__1yL_J\",\"progress\":\"TaskProgress_progress__28eAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProjectBoard_container__QRlM3\",\"container-droppable\":\"ProjectBoard_container-droppable__3rdHA\",\"draggable\":\"ProjectBoard_draggable__1PYpJ\",\"pic\":\"ProjectBoard_pic__1BIrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relative\":\"ListDropdown_relative__nqt0j\",\"menu\":\"ListDropdown_menu__3Jgqi\",\"edit\":\"ListDropdown_edit__DMJG_\",\"delete\":\"ListDropdown_delete__1MpOF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"AddProjectBoardTask_task__1T3CX\",\"container\":\"AddProjectBoardTask_container__3_jAn\",\"button\":\"AddProjectBoardTask_button__1cM8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"AddProjectBoardList_list__1gIwy\",\"container\":\"AddProjectBoardList_container__1ZqCq\",\"button\":\"AddProjectBoardList_button__3vR1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ToggleSwitch_container__1XYXK\",\"switch-container\":\"ToggleSwitch_switch-container__2fcJU\",\"container-active\":\"ToggleSwitch_container-active__2KlxI\",\"state-circle\":\"ToggleSwitch_state-circle__27vlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HeaderDropdowns_container__29rcz\",\"dropdown-container\":\"HeaderDropdowns_dropdown-container__3wSui\",\"button\":\"HeaderDropdowns_button__X-O6a\",\"title\":\"HeaderDropdowns_title__sf-dL\",\"dropdown\":\"HeaderDropdowns_dropdown__314x4\",\"options-container\":\"HeaderDropdowns_options-container__2j26N\",\"options\":\"HeaderDropdowns_options__1fdRp\",\"last-option\":\"HeaderDropdowns_last-option__1epJE\",\"team-media\":\"HeaderDropdowns_team-media__iRnD9\",\"project-media\":\"HeaderDropdowns_project-media__2geIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-name\":\"CalendarData_input-name__3R2GJ\",\"dayly-progress\":\"CalendarData_dayly-progress__1TJ3J\",\"week-day-cell\":\"CalendarData_week-day-cell__27SgK\",\"cell-data\":\"CalendarData_cell-data__1NOAi\",\"header\":\"CalendarData_header__2Ssi7\",\"filter\":\"CalendarData_filter__2FDSG\",\"nav-buttons\":\"CalendarData_nav-buttons__13sz9\",\"filter-clear\":\"CalendarData_filter-clear__3I8E6\",\"date-container\":\"CalendarData_date-container__2s3M2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"PageLayout_app__2ictT\",\"content\":\"PageLayout_content__2RzM6\",\"small\":\"PageLayout_small__1Mq-R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"ButtonHideList_submit__3glNU\",\"name\":\"ButtonHideList_name__24VGN\",\"opacity\":\"ButtonHideList_opacity__2oef5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"att-container\":\"TaskAttach_att-container__SiE3v\",\"attachment\":\"TaskAttach_attachment__1J-EX\",\"att-picture\":\"TaskAttach_att-picture__2Rokb\",\"format\":\"TaskAttach_format__3GKAb\",\"remaining\":\"TaskAttach_remaining__36HSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attachment\":\"Attachment_attachment__1LGL-\",\"att-picture\":\"Attachment_att-picture__2rF6n\",\"format\":\"Attachment_format__1ATQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Error_title__1VvYs\",\"errorPic\":\"Error_errorPic__1gUzF\",\"text\":\"Error_text__3jaPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectInfoContainer\":\"ProjectList_projectInfoContainer__2--XA\",\"calendar-container\":\"ProjectList_calendar-container__2tN25\",\"layout-container\":\"ProjectList_layout-container__1xU4h\",\"table\":\"ProjectList_table__3UAlN\",\"column\":\"ProjectList_column__3etaq\",\"columnChild\":\"ProjectList_columnChild__1r7DM\",\"daylyElement\":\"ProjectList_daylyElement__vjLXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name-container\":\"TaskName_name-container__2PHbp\",\"text\":\"TaskName_text__s5f9s\",\"attachments-container\":\"TaskName_attachments-container__3HNq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TaskDueDate_container__1h0U1\",\"formated-date\":\"TaskDueDate_formated-date__13V6d\",\"pen\":\"TaskDueDate_pen__2Z3JC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterWrapper_container__2mc8F\",\"legend-wrapper\":\"FilterWrapper_legend-wrapper__2H0G_\",\"legend\":\"FilterWrapper_legend__2ixJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditTeam_container__jOWEK\",\"title\":\"EditTeam_title__1SlVn\",\"input-container\":\"EditTeam_input-container__20E2D\",\"input-container-invite\":\"EditTeam_input-container-invite__34vji\",\"input-name\":\"EditTeam_input-name__3l4BG\",\"input-disable\":\"EditTeam_input-disable__1x6K4\",\"text-invite\":\"EditTeam_text-invite__2pe88\",\"input-invite\":\"EditTeam_input-invite__2Bo-1\",\"input-container-descr\":\"EditTeam_input-container-descr__oVXbs\",\"text-area-descr\":\"EditTeam_text-area-descr__1zqXP\",\"button-div\":\"EditTeam_button-div__3L4JE\",\"create-button\":\"EditTeam_create-button__--HPe\",\"members-div\":\"EditTeam_members-div__2htec\",\"invite-input\":\"EditTeam_invite-input__1YcA-\",\"select-for-invite\":\"EditTeam_select-for-invite__3CS0n\",\"members\":\"EditTeam_members__39VP2\",\"user\":\"EditTeam_user__WOpOa\",\"email\":\"EditTeam_email__3ZwGR\",\"leave-team-btn-div\":\"EditTeam_leave-team-btn-div__zLSrF\",\"leave-team-btn\":\"EditTeam_leave-team-btn__l6dJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignupForm_container__1EUzX\",\"alerts\":\"SignupForm_alerts__3SVKz\",\"inner-container\":\"SignupForm_inner-container__3WHa3\",\"logo\":\"SignupForm_logo__3kCbY\",\"right-side\":\"SignupForm_right-side__11WBG\",\"title\":\"SignupForm_title__Fapvf\",\"input-container\":\"SignupForm_input-container__2Ab8N\",\"sign-up-input\":\"SignupForm_sign-up-input__Qllfz\",\"pass-instructions\":\"SignupForm_pass-instructions__3dV59\",\"sign-up-button\":\"SignupForm_sign-up-button__30sA_\",\"button-div-login\":\"SignupForm_button-div-login__1VwbR\",\"text-div\":\"SignupForm_text-div__2HDuw\",\"already-sign-up\":\"SignupForm_already-sign-up__lhjkC\",\"sign-up-btn\":\"SignupForm_sign-up-btn__1IrDl\",\"button-div-google-login\":\"SignupForm_button-div-google-login__20p6X\",\"google-login-btn\":\"SignupForm_google-login-btn__1dUjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddProjectMember_container__1Yv-E\",\"form\":\"AddProjectMember_form__25ZT2\",\"current-members\":\"AddProjectMember_current-members__24r6z\",\"admins-container\":\"AddProjectMember_admins-container__1B9Ro\",\"admins\":\"AddProjectMember_admins__17_bM\",\"big-container\":\"AddProjectMember_big-container__3NFuQ\",\"members-container\":\"AddProjectMember_members-container__36xCp\",\"title\":\"AddProjectMember_title__3Sqes\",\"select-for-invite\":\"AddProjectMember_select-for-invite__3sFhG\",\"members\":\"AddProjectMember_members__3NmI1\",\"member-select\":\"AddProjectMember_member-select__3rsJu\",\"add-button\":\"AddProjectMember_add-button__1ASmv\",\"draggable\":\"AddProjectMember_draggable__3_zby\",\"droppable\":\"AddProjectMember_droppable__21y0a\",\"droppable-members\":\"AddProjectMember_droppable-members__qZCTH\",\"input-container\":\"AddProjectMember_input-container__22Seg\",\"text-invite\":\"AddProjectMember_text-invite__2PZAa\",\"invite-input\":\"AddProjectMember_invite-input__2USeg\",\"members-input\":\"AddProjectMember_members-input__1AohK\",\"user\":\"AddProjectMember_user__1z2g4\",\"email\":\"AddProjectMember_email__1wPCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GetStarted_container__2H_7b\",\"title\":\"GetStarted_title__TgCLw\",\"paragraph\":\"GetStarted_paragraph__1CUHy\",\"logo-div\":\"GetStarted_logo-div__1-6bQ\",\"logo\":\"GetStarted_logo__LHiNS\",\"pic-div\":\"GetStarted_pic-div__1Jy4O\",\"navigate-buttons\":\"GetStarted_navigate-buttons__bbFe8\",\"pic\":\"GetStarted_pic__3Ntuu\",\"pic3\":\"GetStarted_pic3__GgMVL\",\"greeting\":\"GetStarted_greeting__aNbMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"ListColor_aside__3JtLX\",\"list\":\"ListColor_list__Vd3bu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-container\":\"SearchResults_search-container__MlAXI\",\"result\":\"SearchResults_result__3ytDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teams-container\":\"MyTeamsMenu_teams-container__1_QNt\",\"buttons-teams\":\"MyTeamsMenu_buttons-teams__3JXxm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button-input-div\":\"ProfilePageInputs_button-input-div__1VkEz\",\"navigate-buttons\":\"ProfilePageInputs_navigate-buttons__2-BSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members-avatars\":\"TeamMembers_members-avatars__1huAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"TaskMembers_select__29UZk\",\"members\":\"TaskMembers_members__1Qheh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"ProgressBar_bar__3HFkM\",\"progress\":\"ProgressBar_progress__17L3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AttachmentsLink_button__dAzPs\",\"attachments\":\"AttachmentsLink_attachments__33y53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bad-input\":\"ProgressInput_bad-input__1QldA\",\"add\":\"ProgressInput_add__2MWzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter-used\":\"FilterDueDate_filter-used__3i-jX\",\"filter-blank\":\"FilterDueDate_filter-blank__3fwmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateTeam_container__2WhLz\",\"form\":\"CreateTeam_form__24Mfc\",\"title\":\"CreateTeam_title__1PJSO\",\"input-container\":\"CreateTeam_input-container__2KxsA\",\"input-name\":\"CreateTeam_input-name__1aoJu\",\"input-container-descr\":\"CreateTeam_input-container-descr__Ub7xw\",\"input-container-members\":\"CreateTeam_input-container-members__2ykPg\",\"description-text\":\"CreateTeam_description-text__2gAfb\",\"text-area-descr\":\"CreateTeam_text-area-descr__1bd9_\",\"members-text\":\"CreateTeam_members-text__1r2Kf\",\"input-members\":\"CreateTeam_input-members__2RQGG\",\"button-div\":\"CreateTeam_button-div__1biFv\",\"create-button\":\"CreateTeam_create-button__-2tDq\",\"members-avatars\":\"CreateTeam_members-avatars__17gAf\",\"invite-input\":\"CreateTeam_invite-input__h19QP\",\"select-for-invite\":\"CreateTeam_select-for-invite__nSIlB\",\"members-pop-up\":\"CreateTeam_members-pop-up__1CTGn\",\"members\":\"CreateTeam_members__1ErPS\",\"user\":\"CreateTeam_user__2cHWm\",\"email\":\"CreateTeam_email__1DwA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormForgotPassword_container__1NEtt\",\"alerts\":\"FormForgotPassword_alerts__28_6E\",\"inner-container\":\"FormForgotPassword_inner-container__1oKG5\",\"logo\":\"FormForgotPassword_logo__3W4yw\",\"right-side\":\"FormForgotPassword_right-side__1Q0k3\",\"title\":\"FormForgotPassword_title__U05Qo\",\"input-container\":\"FormForgotPassword_input-container__5c-Sk\",\"emailInput\":\"FormForgotPassword_emailInput__3vKfR\",\"passInput\":\"FormForgotPassword_passInput__1W_mV\",\"loginButton\":\"FormForgotPassword_loginButton__-Fujb\",\"buttonDivLogin\":\"FormForgotPassword_buttonDivLogin__xk6yS\",\"textDiv\":\"FormForgotPassword_textDiv__1a0R_\",\"buttonDivGoogleLogin\":\"FormForgotPassword_buttonDivGoogleLogin__2IzTS\",\"forgotPass\":\"FormForgotPassword_forgotPass__2RBW2\",\"newToSmM\":\"FormForgotPassword_newToSmM__2tAK-\",\"signUpBtn\":\"FormForgotPassword_signUpBtn__381qn\",\"googleLoginBtn\":\"FormForgotPassword_googleLoginBtn__2TldA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginForm_container__3mSDm\",\"alerts\":\"LoginForm_alerts__3oX4D\",\"inner-container\":\"LoginForm_inner-container__2sUKy\",\"logo\":\"LoginForm_logo__3hg3V\",\"right-side\":\"LoginForm_right-side__3C-eo\",\"title\":\"LoginForm_title__3njFN\",\"input-container\":\"LoginForm_input-container__2m6Dv\",\"email-input\":\"LoginForm_email-input__1_iak\",\"pass-input\":\"LoginForm_pass-input__24yg5\",\"login-button\":\"LoginForm_login-button__3pm-s\",\"button-div-login\":\"LoginForm_button-div-login__2im8C\",\"text-div\":\"LoginForm_text-div__1i1zE\",\"button-div-google-login\":\"LoginForm_button-div-google-login__1zFxo\",\"forgot-pass\":\"LoginForm_forgot-pass__2GUJp\",\"new-to-sm\":\"LoginForm_new-to-sm__1eNbD\",\"sign-up-btn\":\"LoginForm_sign-up-btn__OvfKJ\",\"google-login-btn\":\"LoginForm_google-login-btn__HJ--x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateProject_container__3yvf3\",\"title\":\"CreateProject_title__p1t6m\",\"input-container\":\"CreateProject_input-container__-X6Hn\",\"input-name\":\"CreateProject_input-name__3d2jC\",\"invite-input\":\"CreateProject_invite-input__1aTwm\",\"select-for-invite\":\"CreateProject_select-for-invite__1pqBV\",\"members-input\":\"CreateProject_members-input__3L2Zm\",\"input-container-descr\":\"CreateProject_input-container-descr__3uWP2\",\"text-area-descr\":\"CreateProject_text-area-descr__1p4fI\",\"text-invite\":\"CreateProject_text-invite__JdBCK\",\"button-div\":\"CreateProject_button-div__3eNE3\",\"create-button\":\"CreateProject_create-button__6x5pZ\",\"members-avatars\":\"CreateProject_members-avatars__2s-RG\",\"members\":\"CreateProject_members__2wR8K\",\"user\":\"CreateProject_user__sHVQv\",\"email\":\"CreateProject_email__lk9sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Confirmation_container__1twF0\",\"logo\":\"Confirmation_logo__1cPi0\",\"title\":\"Confirmation_title__2GTN6\",\"text\":\"Confirmation_text__1c54f\",\"cheers\":\"Confirmation_cheers__3-74p\",\"team\":\"Confirmation_team__2Ws9D\",\"proceed-button\":\"Confirmation_proceed-button__2BlXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Aside_aside__2Njbe\",\"container\":\"Aside_container__2dzBw\",\"button\":\"Aside_button__djeVy\",\"logo\":\"Aside_logo__2fhgX\",\"top-left\":\"Aside_top-left__OTH7h\",\"menu\":\"Aside_menu__2LcGf\",\"top-right\":\"Aside_top-right__2oRKj\",\"link\":\"Aside_link__3_X5_\",\"bottom-right\":\"Aside_bottom-right__8HfKT\",\"bell\":\"Aside_bell__21fDz\",\"hamburger\":\"Aside_hamburger__3YfcW\",\"settings\":\"Aside_settings__1GECq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__2v7Ip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"ButtonClean_clean__MmpNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"Transparent_transparent__3eLJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormAddPassword_container__kt31_\",\"alerts\":\"FormAddPassword_alerts__26Enm\",\"inner-container\":\"FormAddPassword_inner-container__2lYc6\",\"logo\":\"FormAddPassword_logo__3hGrj\",\"right-side\":\"FormAddPassword_right-side__3Vb4J\",\"title\":\"FormAddPassword_title__1yoyV\",\"input-container\":\"FormAddPassword_input-container__eszIy\",\"pass-instructions\":\"FormAddPassword_pass-instructions__3wv_r\",\"pass-input\":\"FormAddPassword_pass-input__1RvQT\",\"login-button\":\"FormAddPassword_login-button__7QZcK\",\"button-div-login\":\"FormAddPassword_button-div-login__n04Yh\",\"text-login\":\"FormAddPassword_text-login__2FLj3\",\"new-pass-alert\":\"FormAddPassword_new-pass-alert__2lx9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonGrey_button__22yhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-picture\":\"AvatarUser_profile-picture__BQ0ww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkTitle_link__3986T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"ButtonCleanTitle_clean__3CTSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__31TWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonGreyTitle_button__19TJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__Wb40V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputs-container\":\"UpdateUserData_inputs-container__1c7ho\",\"button-input-div\":\"UpdateUserData_button-input-div__1cg3e\",\"navigate-buttons\":\"UpdateUserData_navigate-buttons__2OY6w\",\"input-fields-profile\":\"UpdateUserData_input-fields-profile__PRdAE\",\"button-input-div-tasks\":\"UpdateUserData_button-input-div-tasks__1y3PO\",\"alerts\":\"UpdateUserData_alerts__2GiZA\",\"new-pass-alert\":\"UpdateUserData_new-pass-alert__7r9_q\",\"select-team-container\":\"UpdateUserData_select-team-container__1SVEy\",\"button-div-save\":\"UpdateUserData_button-div-save__KWERY\",\"save-button\":\"UpdateUserData_save-button__1KMaj\",\"input-fields-tasks\":\"UpdateUserData_input-fields-tasks___Erw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Inbox_title__2V72A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"TaskDueDate_date__3vocQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TaskHistory_history__2QW7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bad-input\":\"EditCardProgressInput_bad-input__ZZjh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ProjectBoardInput_input__374jY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters-container\":\"TaskFilters_filters-container__XjlYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3Y-q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small-buttons\":\"EditCardOptions_small-buttons__1hy9d\",\"pics\":\"EditCardOptions_pics__SnHKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditProject_form__2Zerv\",\"input-disable\":\"EditProject_input-disable__u2Tvp\",\"title\":\"EditProject_title__1us1P\",\"buttons-div\":\"EditProject_buttons-div__3Yg3P\",\"navigate-buttons\":\"EditProject_navigate-buttons__1t3PE\",\"input-container\":\"EditProject_input-container__2IfEj\",\"input-pr-name\":\"EditProject_input-pr-name__1c4Fa\",\"input-container-descr\":\"EditProject_input-container-descr__Iroze\",\"text-area-descr\":\"EditProject_text-area-descr__1LiJL\",\"edit-members\":\"EditProject_edit-members__XwwXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"MyTasksProject_project__rHlgP\",\"project-name\":\"MyTasksProject_project-name__3aymQ\",\"link\":\"MyTasksProject_link__3MdQ7\",\"bold\":\"MyTasksProject_bold__1QpQl\",\"header\":\"MyTasksProject_header__2ZGgL\",\"raw\":\"MyTasksProject_raw__9VRZE\",\"list\":\"MyTasksProject_list__cXEZm\",\"container\":\"MyTasksProject_container__1Dbw8\",\"task\":\"MyTasksProject_task__3s1Cn\",\"progress\":\"MyTasksProject_progress__521wN\",\"days\":\"MyTasksProject_days__3gD8m\",\"task-container\":\"MyTasksProject_task-container__3oXUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditCard_container__36pBB\",\"task-name\":\"EditCard_task-name__3HFFc\",\"name-input\":\"EditCard_name-input__296eI\",\"task-body\":\"EditCard_task-body__MN9SU\",\"text\":\"EditCard_text__3svz-\",\"left-side\":\"EditCard_left-side__1VJBW\",\"right-side\":\"EditCard_right-side__24WUw\",\"task-component\":\"EditCard_task-component__edf0Y\",\"description-input\":\"EditCard_description-input__3QJ0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1xEq7\",\"pic-container\":\"Home_pic-container__3V468\",\"pic1\":\"Home_pic1__1KI5l\",\"welcome-user\":\"Home_welcome-user__3PicL\",\"left-buttons\":\"Home_left-buttons__18tIE\",\"right-buttons\":\"Home_right-buttons__1WbYz\",\"my-teams-container\":\"Home_my-teams-container__3vSsH\",\"teams-home\":\"Home_teams-home__3znif\",\"select-team-container\":\"Home_select-team-container__1xTnE\",\"navigate-buttons\":\"Home_navigate-buttons__1vBH_\",\"navigate-buttons-teams\":\"Home_navigate-buttons-teams__1O_HP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-pic\":\"UpdateUserImage_profile-pic__30-IX\",\"profile-pic-container\":\"UpdateUserImage_profile-pic-container__viDSu\",\"profile-picture\":\"UpdateUserImage_profile-picture__NKr3f\",\"relative\":\"UpdateUserImage_relative__scFlW\",\"menu\":\"UpdateUserImage_menu__1WbDz\",\"edit\":\"UpdateUserImage_edit__32vty\",\"delete\":\"UpdateUserImage_delete__187m5\",\"no-pic\":\"UpdateUserImage_no-pic__RCQkW\",\"load-pic-text\":\"UpdateUserImage_load-pic-text__2H4NT\",\"pen\":\"UpdateUserImage_pen__2mV1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyTasks_title__1C8P6\",\"button-container\":\"MyTasks_button-container__3ojpk\",\"team-buttons\":\"MyTasks_team-buttons__rwLN9\",\"teams\":\"MyTasks_teams__bacAI\",\"projects-button\":\"MyTasks_projects-button__QEKL1\",\"selected\":\"MyTasks_selected__2L6Mh\",\"pic\":\"MyTasks_pic__2sXbq\",\"box\":\"MyTasks_box__3GKSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button-div\":\"CalendarTable_button-div__1DkX_\",\"add-task\":\"CalendarTable_add-task__1B9sA\",\"list-name-container\":\"CalendarTable_list-name-container__3YlJQ\",\"list-name-text\":\"CalendarTable_list-name-text__3QrsS\",\"react-table\":\"CalendarTable_react-table__2-Zjw\",\"react-table-body\":\"CalendarTable_react-table-body__2gJGZ\",\"react-table-tr-group\":\"CalendarTable_react-table-tr-group__1qtoa\",\"progress-input\":\"CalendarTable_progress-input__3lqu0\",\"progress-placeholder\":\"CalendarTable_progress-placeholder__72KJj\",\"add-list-button\":\"CalendarTable_add-list-button__1F18N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Team_container__1NMEF\",\"title\":\"Team_title__20bpO\",\"left-side\":\"Team_left-side__7jKvf\",\"right-side\":\"Team_right-side__3QAvM\",\"right-side-team\":\"Team_right-side-team__2EGTD\",\"team-page-picture\":\"Team_team-page-picture__2MZSb\",\"button-div\":\"Team_button-div__2OcBw\",\"team-page-button\":\"Team_team-page-button__2Zwn8\",\"picture\":\"Team_picture__PQLrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MyTasksTask_card__7SxjV\",\"task\":\"MyTasksTask_task__3jiD9\",\"progress\":\"MyTasksTask_progress__1_nbW\",\"days\":\"MyTasksTask_days__PYXHu\",\"deadline\":\"MyTasksTask_deadline__1snIh\",\"buttons-container\":\"MyTasksTask_buttons-container__1QSJP\",\"button\":\"MyTasksTask_button__2kM0-\",\"input\":\"MyTasksTask_input__O7BKr\",\"progress-div\":\"MyTasksTask_progress-div__2B_6J\",\"edit\":\"MyTasksTask_edit__1SH_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditList_container__1b94R\",\"input-container\":\"EditList_input-container__36jfK\",\"name\":\"EditList_name__2Hhat\",\"name-input\":\"EditList_name-input__1gg6i\",\"change-color\":\"EditList_change-color__3EZry\",\"color-title\":\"EditList_color-title__3pzlD\",\"color-pick\":\"EditList_color-pick__LMc5r\",\"color-button\":\"EditList_color-button__3CEZF\",\"edit-list-button\":\"EditList_edit-list-button__1k-qo\",\"text\":\"EditList_text__CXAIj\"};","const getCookie = (name) => {\r\n    const cookieValue = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)')\r\n    return cookieValue ? cookieValue[2] : null\r\n}\r\n\r\nexport default getCookie","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from '../utils/cookie'\r\n\r\nconst USER_URL = '/api/user'\r\n\r\nexport default function useUserServices() {\r\n    const history = useHistory()\r\n\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const getUser = useCallback(async (userId) => {\r\n\r\n        const response = await fetch(`${USER_URL}/${userId}`, {\r\n            method: 'GET'\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const getAllUsers = useCallback(async () => {\r\n        const response = await fetch(`${USER_URL}/get-all`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const updateUser = useCallback(async (userId, username, teamId) => {\r\n\r\n        const response = await fetch(`${USER_URL}/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                username: username,\r\n                lastTeamSelected: teamId\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n\r\n    }, [history])\r\n\r\n    const updateUserPassword = useCallback(async (userId, password) => {\r\n\r\n        const response = await fetch(`${USER_URL}/password/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                password: password\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n\r\n    }, [history])\r\n\r\n    const updateUserImage = useCallback(async (userId, newImage, oldImage) => {\r\n\r\n        const response = await fetch(`${USER_URL}/image/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                newImage,\r\n                oldImage\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n\r\n    }, [history])\r\n\r\n    const addNewPassword = useCallback(async (userId, password) => {\r\n\r\n        const response = await fetch(`${USER_URL}/addNewPassword/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                password\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n\r\n    }, [history])\r\n\r\n    const userLogin = useCallback(async (email, password) => {\r\n\r\n        const promise = await fetch(`${USER_URL}/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const authToken = promise.headers.get('Authorization')\r\n        const response = await promise.json()\r\n\r\n        if (response.user && response.user.username && authToken) {\r\n            document.cookie = `x-auth-token=${authToken};path=/`\r\n        }\r\n\r\n        return response\r\n    }, [])\r\n\r\n    const moveMessageToHistory = useCallback(async (message) => {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                message\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n    }, [history])\r\n\r\n    const deleteUserMessage = useCallback(async (message) => {\r\n        const response = await fetch(`/api/user/message/${message._id}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders(),\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const confirmToken = useCallback(async (token) => {\r\n\r\n        const promise = await fetch(`${USER_URL}/confirmation`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                token\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const authToken = promise.headers.get('Authorization')\r\n        const response = await promise.json()\r\n        \r\n        if (response.user && response.user.username && authToken) {\r\n            document.cookie = `x-auth-token=${authToken};path=/`\r\n            return response\r\n        }\r\n    }, [])\r\n\r\n    const registerUser = useCallback(async (email, username, password) => {\r\n\r\n        const promise = await fetch(`${USER_URL}/register`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email,\r\n                username,\r\n                password\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const authToken = promise.headers.get('Authorization')\r\n        const response = await promise.json()\r\n\r\n        if (response.user && response.user.username && authToken) {\r\n            document.cookie = `x-auth-token=${authToken};path=/`\r\n        }\r\n\r\n        return response\r\n    }, [])\r\n\r\n    const logoutUser = useCallback(async () => {\r\n\r\n        const response = await fetch(`${USER_URL}/logout`, {\r\n            method: 'POST',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        } else {\r\n            document.cookie = 'x-auth-token= ; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/;'\r\n\r\n            return response\r\n        }\r\n    }, [history])\r\n\r\n    const verifyLogin = useCallback(async () => {\r\n        const response = await fetch(`${USER_URL}/verify`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        }\r\n        \r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const getUserInbox = useCallback(async () => {\r\n        const response = await fetch(`${USER_URL}/inbox`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        const user = await response.json()\r\n        return user\r\n\r\n    }, [history])\r\n\r\n    const getUserTasks = useCallback(async (teamId) => {\r\n        const response = await fetch(`${USER_URL}/tasks/${teamId}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        }\r\n\r\n        const data = await response.json()\r\n        return data\r\n    }, [history])\r\n    \r\n    const updateRecentProjects = useCallback(async (userId, recentProjects) => {\r\n        const response = await fetch(`${USER_URL}/recentProjects/${userId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({ recentProjects })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const googleLoginUser = useCallback(async (tokenId) => {\r\n\r\n        const promise = await fetch(`${USER_URL}/google-login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ tokenId }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const authToken = promise.headers.get('Authorization')\r\n        const response = await promise.json()\r\n        \r\n        if (response.user && response.user.username && authToken) {\r\n            document.cookie = `x-auth-token=${authToken};path=/`\r\n        }\r\n\r\n        return response\r\n    }, [])\r\n\r\n    return {\r\n        getUser,\r\n        getAllUsers,\r\n        updateUser,\r\n        updateUserPassword,\r\n        updateUserImage,\r\n        addNewPassword,\r\n        userLogin,\r\n        moveMessageToHistory,\r\n        deleteUserMessage,\r\n        confirmToken,\r\n        registerUser,\r\n        logoutUser,\r\n        verifyLogin,\r\n        getUserInbox,\r\n        getUserTasks,\r\n        updateRecentProjects,\r\n        googleLoginUser\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nconst UserContext = React.createContext({\r\n    user: null,\r\n    logIn: () => {},\r\n    logOut: () => {}\r\n})\r\n\r\nexport default UserContext","import React, { useState, useEffect, useCallback } from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nimport useUserServices from '../services/useUserServices'\r\nimport getCookie from '../utils/cookie'\r\nimport UserContext from './UserContext'\r\n\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const { logoutUser, verifyLogin } = useUserServices()\r\n    const token = getCookie('x-auth-token')\r\n\r\n\r\n    const logIn = (data) => {\r\n        setUser({\r\n            username: data.user.username,\r\n            id: data.user._id,\r\n            teams: data.teams,\r\n            inbox: data.user.inbox,\r\n            confirmed: data.user.confirmed,\r\n            newPasswordConfirmed: data.user.newPasswordConfirmed,\r\n            recentProjects: data.user.recentProjects,\r\n            image: data.user.image,\r\n            lastTeamSelected: data.user.lastTeamSelected,\r\n            loggedIn: true\r\n        })\r\n    }\r\n\r\n    const logOut = useCallback(async () => {\r\n        if (!token) {\r\n            return\r\n        }\r\n\r\n        await logoutUser()\r\n        setUser({\r\n            loggedIn: false\r\n        })\r\n    }, [logoutUser, token])\r\n\r\n    const handleVerifyLogin = useCallback(async () => {\r\n        if (!loading) {\r\n            return\r\n        }\r\n\r\n        if (!token) {\r\n            setUser({\r\n                loggedIn: false\r\n            })\r\n            setLoading(false)\r\n            return\r\n        }\r\n\r\n        const response = await verifyLogin()\r\n        if (response.status) {\r\n            logIn(response)\r\n        } else {\r\n            logOut()\r\n        }\r\n        \r\n        setLoading(false)\r\n    }, [verifyLogin, logOut, loading, token])\r\n\r\n    useEffect(() => {\r\n        handleVerifyLogin()\r\n    }, [handleVerifyLogin])\r\n\r\n    if (loading) {\r\n        return (\r\n            <Loader\r\n                type='TailSpin'\r\n                color='#363338'\r\n                height={100}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            user,\r\n            setUser,\r\n            logIn,\r\n            logOut\r\n        }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider","import React from 'react'\r\nimport UserProvider from './contexts/UserProvider'\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n        <UserProvider>\r\n            {props.children}\r\n        </UserProvider>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LinkComponent = ({ title, href, className, onClick }) => {\r\n    return (\r\n        <Link to={href} className={`${styles.link} ${className}`} onClick={onClick} >\r\n            {title}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponent","import React, { useContext, useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport function useSocket() {\r\n    return useContext(SocketContext)\r\n}\r\n\r\nexport function SocketProvider({ user, children }) {\r\n    const [socket, setSocket] = useState()\r\n    const url = window.location.href.includes('heroku') ? '/' : 'http://localhost:4000'\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            return\r\n        }\r\n\r\n        if (!user.teams) {\r\n            return\r\n        }\r\n\r\n        const { username } = user\r\n        const userId = user.id\r\n        const teams = [...user.teams]\r\n        const teamsId = teams.map(t => t._id)\r\n        const teamsStr = JSON.stringify(teamsId)\r\n        const newSocket = io(\r\n            url, {\r\n                query: { teamsStr, username, userId },\r\n                transports: ['websocket']\r\n            }\r\n        )\r\n        setSocket(newSocket)\r\n\r\n        return () => newSocket.close()\r\n    }, [user, url])\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst ProjectContext = React.createContext({\r\n    lists: [],\r\n    setLists: () => { },\r\n    hiddenLists: [],\r\n    setHiddenLists: () => { },\r\n    project: {},\r\n    setProject: () => { }\r\n})\r\n\r\nexport default ProjectContext\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ListColor = ({ color, type }) => {\r\n    if (type === 'aside') {\r\n        return (\r\n            <svg className={`${styles[type]}`} xmlns='http://www.w3.org/2000/svg' width='110' height='26.931' viewBox='0 0 110 26.931'>\r\n                <g id='Layer_2' data-name='Layer 2' transform='translate(0.002 0.014)'>\r\n                    <g id='Layer_1' data-name='Layer 1' transform='translate(-0.002 -0.014)'>\r\n                        <path\r\n                            id='Path_60'\r\n                            data-name='Path 60'\r\n                            d='M4.208,22.578l-.277-.26c-.594-.366-.814-1.074-1.351-1.49-1-.749-1.14-2.214-2.352-2.784a1.237,1.237,0,0,1-.187-.391,1.628,1.628,0,0,1,.554-1.628,5.636,5.636,0,0,1,3.1-.456,6.862,6.862,0,0,0,1.083,0,.733.733,0,0,0,.765-.765c.049-.48-.057-.814-.586-.871a1.628,1.628,0,0,1-.513-.163c-.92-.456-.961-1.083-.106-1.7a3.256,3.256,0,0,0,.545-.448,1.27,1.27,0,0,1,.659-.383c.667-.244,1.538.3,2.027-.545a.651.651,0,0,0-.244-.374,6.894,6.894,0,0,1-.659-.554,1.278,1.278,0,0,1-.415-.814A1.9,1.9,0,0,0,5.022,6.933C4.2,6.509,3.6,5.891,4.411,4.881c2.263-1.628,4.933-1.937,7.57-2.328,1.27-.309,2.589-.187,3.858-.48a4.811,4.811,0,0,1,1.449-.09c.643.073,1.254.317,1.921-.147a2.011,2.011,0,0,1,1.718-.106,2.808,2.808,0,0,0,2.32-.2,3.394,3.394,0,0,1,2.2.122c1.628-.6,3.313-.391,4.957-.667.765-.147,1.563-.114,2.328-.3a8.873,8.873,0,0,1,3.557.13.252.252,0,0,0,.269,0A2.914,2.914,0,0,1,39.885.73h.277A2.182,2.182,0,0,1,42.075.307a22.922,22.922,0,0,0,3.883.057A34.326,34.326,0,0,0,56.165.2,1.75,1.75,0,0,1,57.85.51h.277C59.136-.3,60.276.054,61.383.128a28.856,28.856,0,0,0,4.436.26,8.669,8.669,0,0,1,2.751,0c1.188.317,2.442,0,3.606.244A22.083,22.083,0,0,0,75.7.917l.464.041a16.752,16.752,0,0,0,3.191.228h.464c1.083.057,2.157.285,3.256.269,1.351,0,2.678.3,4.021.309.814.171,1.685.2,2.523.334.545.269,1.254.065,1.709.578a4.746,4.746,0,0,0,1.9.309,26.545,26.545,0,0,1,4.548.392c1.166.211,2.347.235,3.527.333,1.091.3,2.271,0,3.329.5,1.408,0,2.825,0,4.241.081.3,0,.716.1.676.513s-.374.586-.814.383c-1.034-.09-2.059-.155-2.523,1.083-.317.814-.961.562-1.555.488-.537.228-1.14.147-1.677.358a5.576,5.576,0,0,1-.814.106,20.26,20.26,0,0,0-4.591.765c.814.676,1.245,1.555,2.255,1.758a1.934,1.934,0,0,1,1.424.334c-.057,1.026-.936.586-1.449.814a.578.578,0,0,1-.383-.065.057.057,0,0,0,0,.057h3.972a1.042,1.042,0,0,1,.92.448c-.244.814-1.058.521-1.587.814-.407.212-1.156.187-.545.961a4.613,4.613,0,0,0,.391.407,11.928,11.928,0,0,0,3,.155,5.421,5.421,0,0,1,.961,0c.814.147,1.058.44.407,1.156-1.074,1.188-2.442,2.165-3.012,3.769,1.742,0,3.565.041,5.389,0,.863.4.879.92.236,1.547a1.148,1.148,0,0,0-.3.814c.114.35.073.733.212,1.074.562,1.384.5,1.547-.863,2.068a13.569,13.569,0,0,1-2.637.814c-1.571.049-3.118.521-4.7.309-1.628-.554-3.329.212-4.99-.081a9.589,9.589,0,0,0-4.884.147,2.816,2.816,0,0,1-2.076.488H79.771a5.739,5.739,0,0,0-1.9.179,10.631,10.631,0,0,1-1.831.1c-4.485,0-8.954.081-13.455,0a4.933,4.933,0,0,0-1.758.187,9.247,9.247,0,0,1-2.507.106h-.529a28.6,28.6,0,0,1-3.126,0h-.48a6.137,6.137,0,0,1-1.726-.1,11.209,11.209,0,0,0-3.533-.2c-2.222.065-4.461-.106-6.675.163a6.658,6.658,0,0,1-1.929.081,4.168,4.168,0,0,1-.456,0c-1.286,0-2.572.106-3.858.049a12.474,12.474,0,0,0-3.394,0c-1.319.2-2.67-.138-3.98.187a16.768,16.768,0,0,1-2.556.236c-1.368-.366-2.711.342-4.07.106a2.133,2.133,0,0,1-.456-.073,9.475,9.475,0,0,0-2.711-.179c-1.213-.09-2.442-.236-3.63-.342a9.377,9.377,0,0,0-1.058-.228,17.6,17.6,0,0,0-2.068-.114c-1.335-.472-2.768-.22-4.119-.521a.969.969,0,0,1-.684-.814l-.594-.537c-.244-.236-.627-.26-.814-.529l-.529-.342A1.913,1.913,0,0,1,4.208,22.578Z'\r\n                            transform='translate(0.002 0.014)'\r\n                            fill={color}\r\n                        />\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        )\r\n    }\r\n\r\n    if (type === 'list') {\r\n        return (\r\n            <svg className={`${styles[type]}`} xmlns='http://www.w3.org/2000/svg' width='267.316' height='26.931' viewBox='0 0 267.316 26.931'>\r\n                <path\r\n                    id='Path_60'\r\n                    data-name='Path 60'\r\n                    d='M10.229,22.578l-.673-.26c-1.444-.366-1.978-1.074-3.284-1.49C3.84,20.079,3.5,18.614.556,18.044A1.347,1.347,0,0,1,.1,17.653c-.341-.6.18-1.235,1.345-1.628,2.334-.61,4.985-.431,7.537-.456.876.029,1.755.029,2.631,0a3.5,3.5,0,0,0,1.34-.214c.354-.146.542-.346.52-.551.119-.48-.138-.814-1.424-.871A8.487,8.487,0,0,1,10.8,13.77c-2.235-.456-2.334-1.083-.257-1.7a10.411,10.411,0,0,0,1.325-.448,5.16,5.16,0,0,1,1.6-.383c1.622-.244,3.739.3,4.926-.545a1.011,1.011,0,0,0-.593-.374q-.842-.256-1.6-.554c-.569-.211-.928-.5-1.009-.814.269-.877-.97-1.715-2.987-2.019-2-.423-3.462-1.042-1.484-2.051,5.5-1.628,11.987-1.937,18.4-2.328,3.086-.309,6.29-.187,9.376-.48a28.141,28.141,0,0,1,3.521-.09,13.688,13.688,0,0,0,4.668-.147,11.345,11.345,0,0,1,4.174-.106,15.811,15.811,0,0,0,5.638-.2,19.52,19.52,0,0,1,5.341.122c3.956-.6,8.051-.391,12.047-.667,1.859-.147,3.8-.114,5.657-.3a51.868,51.868,0,0,1,8.644.13,1.4,1.4,0,0,0,.653,0A15.916,15.916,0,0,1,96.93.73H97.6a11.592,11.592,0,0,1,4.649-.423c3.136.129,6.292.148,9.436.057A201.717,201.717,0,0,0,136.493.2a9.383,9.383,0,0,1,4.095.309h.673c2.453-.814,5.222-.456,7.913-.383,3.572.2,7.176.288,10.781.26a50.926,50.926,0,0,1,6.686,0c2.888.317,5.934,0,8.763.244,2.832.189,5.7.284,8.565.285L185.1.958c2.561.178,5.158.254,7.754.228h1.128c2.631.057,5.242.285,7.913.269,3.284,0,6.508.3,9.772.309,1.978.171,4.095.2,6.132.334,1.325.269,3.046.065,4.154.578a26.89,26.89,0,0,0,4.609.309c3.714,0,7.407.131,11.052.392,2.834.211,5.7.235,8.571.333,2.651.3,5.519,0,8.091.5,3.422,0,6.864,0,10.306.081.732,0,1.741.1,1.642.513s-.91.586-1.978.383c-2.512-.09-5-.155-6.132,1.083-.771.814-2.334.562-3.778.488-1.306.228-2.769.147-4.075.358-.652.055-1.313.091-1.978.106-3.778.078-7.522.335-11.157.765,1.978.676,3.027,1.555,5.479,1.758a10.354,10.354,0,0,1,3.462.334c-.138,1.026-2.275.586-3.521.814a3.213,3.213,0,0,1-.93-.065.031.031,0,0,0,0,.057h9.653a4.468,4.468,0,0,1,2.235.448c-.593.814-2.572.521-3.857.814-.989.212-2.809.187-1.325.961q.444.215.949.407a69.98,69.98,0,0,0,7.28.155c.777-.028,1.558-.028,2.334,0,1.978.147,2.572.44.989,1.156-2.611,1.188-5.934,2.165-7.319,3.769,4.233,0,8.664.041,13.1,0,2.1.4,2.136.92.574,1.547-.493.221-.756.514-.732.814.277.35.178.733.514,1.074,1.365,1.384,1.207,1.547-2.1,2.068-2.064.36-4.211.633-6.409.814-3.818.049-7.576.521-11.434.309-3.956-.554-8.091.212-12.126-.081a55.789,55.789,0,0,0-11.869.147,15.064,15.064,0,0,1-5.044.488H193.858a33.325,33.325,0,0,0-4.609.179c-1.474.085-2.963.118-4.451.1-10.9,0-21.759.081-32.7,0a28.531,28.531,0,0,0-4.273.187,54.277,54.277,0,0,1-6.093.106h-1.286q-3.8.085-7.6,0h-1.167a35.951,35.951,0,0,1-4.194-.1,65.578,65.578,0,0,0-8.585-.2c-5.4.065-10.84-.106-16.221.163A39.063,39.063,0,0,1,98,26.289q-.553.012-1.108,0c-3.125,0-6.251.106-9.376.049a73.383,73.383,0,0,0-8.249,0c-3.2.2-6.488-.138-9.673.187-2.053.144-4.129.223-6.211.236-3.323-.366-6.587.342-9.891.106-.375-.008-.746-.032-1.108-.073a55.413,55.413,0,0,0-6.587-.179c-2.947-.09-5.934-.236-8.822-.342q-1.269-.144-2.572-.228c-1.668-.079-3.346-.117-5.024-.114-3.244-.472-6.726-.22-10.009-.521-.9-.111-1.551-.431-1.662-.814l-1.444-.537c-.593-.236-1.523-.26-1.978-.529L13,23.188A8.056,8.056,0,0,1,10.229,22.578Z'\r\n                    transform='translate(0.002 0.014)'\r\n                    fill={color} />\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListColor","import React, { useContext } from 'react'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport ListColor from '../ListColor'\r\nimport styles from './index.module.css'\r\n\r\nconst ButtonHideList = ({ list, type }) => {\r\n    const { hiddenLists, setHiddenLists } = useContext(ProjectContext)\r\n\r\n    const onClick = () => {\r\n        const newHiddenLists = [...hiddenLists]\r\n        const listIndex = newHiddenLists.indexOf(list._id)\r\n        if (listIndex >= 0) {\r\n            newHiddenLists.splice(listIndex, 1)\r\n        } else {\r\n            newHiddenLists.push(list._id)\r\n        }\r\n\r\n        setHiddenLists(newHiddenLists)\r\n    }\r\n\r\n    return (\r\n        <button onClick={onClick} className={`${styles.submit} ${hiddenLists.includes(list._id) && styles.opacity}`}>\r\n            <ListColor color={list.color || '#A6A48E'} type={type} />\r\n            <div className={styles.name} title={list.name} >{list.name}</div>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonHideList","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ButtonClean = ({ title, onClick, type, className, children, style }) => {\r\n    return (\r\n        <button\r\n            type={type || 'button'}\r\n            onClick={onClick}\r\n            className={`${styles.clean} ${className}`}\r\n            style={style}\r\n        >\r\n            {title}{children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonClean","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst Transparent = ({ children, hideForm }) => {\r\n    return (\r\n        <>\r\n            <div onClick={hideForm} className={styles.transparent}></div>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Transparent\r\n","import React from 'react'\r\n\r\nconst TeamContext = React.createContext({\r\n    teams: [],\r\n    setTeams: () => { },\r\n    selectedTeam: 'Select',\r\n    setSelectedTeam: () => { },\r\n    getCurrentTeam: () => { },\r\n    currentTeam: '',\r\n    currentProjects: [],\r\n    setCurrentTeam: () => { },\r\n    getTeams: () => { },\r\n    updateSelectedTeam: () => { },\r\n    getCurrentProjects: () => { }\r\n})\r\n\r\nexport default TeamContext","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ButtonGrey = ({ title, onClick, className }) => {\r\n    return (\r\n        <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonGrey","export default __webpack_public_path__ + \"static/media/logo.11e90948.svg\";","const ESCAPE_KEY_CODE = 27\r\nconst ENTER_KEY_CODE = 13\r\n\r\nexport {\r\n    ESCAPE_KEY_CODE,\r\n    ENTER_KEY_CODE\r\n}","import React, { useCallback, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport logo from '../../images/logo.svg'\r\nimport { ESCAPE_KEY_CODE, ENTER_KEY_CODE } from '../../utils/constats'\r\n\r\nconst ConfirmDialog = ({ title, hideConfirm, onConfirm, onDecline }) => {\r\n    const accept = useCallback(() => {\r\n        hideConfirm()\r\n        onConfirm()\r\n    }, [hideConfirm, onConfirm])\r\n\r\n    const decline = useCallback(() => {\r\n        hideConfirm()\r\n        \r\n        if (onDecline) onDecline()\r\n    }, [hideConfirm, onDecline])\r\n\r\n    useEffect(() => {\r\n        const onKeyPress = (event) => {\r\n            \r\n            if (event.keyCode === ESCAPE_KEY_CODE) {\r\n                decline()\r\n                return\r\n            }\r\n            \r\n            if (event.keyCode === ENTER_KEY_CODE) {\r\n                accept()\r\n                return\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', onKeyPress)\r\n        \r\n        return () => document.removeEventListener('keydown', onKeyPress)\r\n    }, [accept, decline])\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles['transparent-confirm']}></div>\r\n            <div className={styles.container}>\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt='logo' width='194' height='142' />\r\n                </div>\r\n                <div className={styles.title}>{`Are you sure you want to ${title}?`}</div>\r\n                <div className={styles.buttons}>\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        title={'Yes'}\r\n                        onClick={accept}\r\n                    />\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        title={'No'}\r\n                        onClick={decline}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfirmDialog","import React from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport Image from 'cloudinary-react/lib/components/Image'\r\nimport Transformation from 'cloudinary-react/lib/components/Transformation'\r\nimport styles from './index.module.css'\r\n\r\nconst AvatarUser = ({ user, onClick, className, size }) => {\r\n    return (\r\n        user.image\r\n            ? <Image\r\n                publicId={user.image.publicId}\r\n                onClick={onClick}\r\n                className={`${styles['profile-picture']} ${className}`}\r\n                title={user.username}\r\n            >\r\n                <Transformation\r\n                    width={size}\r\n                    height={size}\r\n                    gravity='faces'\r\n                    crop='fill'\r\n                />\r\n            </Image>\r\n            : <Avatar\r\n                className={className}\r\n                onClick={onClick}\r\n                name={user.username}\r\n                size={size}\r\n                round={true}\r\n                maxInitials={2}\r\n            />\r\n    )\r\n}\r\n\r\nexport default AvatarUser","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from '../utils/cookie'\r\n\r\nconst PROJECTS_URL = '/api/projects'\r\n\r\nexport default function useProjectsServices() {\r\n    const history = useHistory()\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const getProjectInfo = useCallback(async (projectId) => {\r\n        const response = await fetch(`${PROJECTS_URL}/info/${projectId}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const createProject = useCallback(async (name, description, teamId, members) => {\r\n        const response = await fetch(`${PROJECTS_URL}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                teamId,\r\n                members\r\n            })\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const editProject = useCallback(async (projectId, name, description, isFinished) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                isFinished\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const deleteProject = useCallback(async (projectId) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const changeUserRole = useCallback(async (projectId, memberRoleId, memberAdmin) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}/user-roles`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                userRole: memberRoleId,\r\n                isAdmin: !memberAdmin\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n    \r\n    const addProjectMember = useCallback(async (projectId, member) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}/user`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                member,\r\n                admin: false\r\n            })\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        \r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const removeProjectMember = useCallback(async (projectId, memberId) => {\r\n        const response = await fetch(`${PROJECTS_URL}/${projectId}/user-remove`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                memberId\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    return {\r\n        getProjectInfo,\r\n        createProject,\r\n        editProject,\r\n        deleteProject,\r\n        changeUserRole,\r\n        addProjectMember,\r\n        removeProjectMember\r\n    }\r\n}","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from '../utils/cookie'\r\n\r\nconst TEAMS_URL = '/api/teams'\r\n\r\nexport default function useTeamServices() {\r\n    const history = useHistory()\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const getTeamUsers = useCallback(async (currentTeamId) => {\r\n        const response = await fetch(`${TEAMS_URL}/get-users/${currentTeamId}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        }\r\n\r\n        const data = await response.json()\r\n        return data\r\n    }, [history])\r\n\r\n    const createTeam = useCallback(async (name, description, requests) => {\r\n        const response = await fetch(`${TEAMS_URL}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                requests\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        const team = await response.json()\r\n        return team\r\n    }, [history])\r\n\r\n    const updateTeam = useCallback(async (teamId, name, description, members, requests) => {\r\n\r\n        const response = await fetch(`${TEAMS_URL}/${teamId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members,\r\n                requests\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        const updatedTeam = await response.json()\r\n        return updatedTeam\r\n    }, [history])\r\n\r\n    const removeTeamInvitations = useCallback(async (teamId, removeInvitation) => {\r\n\r\n        const response = await fetch(`${TEAMS_URL}/removeInvitations/${teamId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({ removeInvitation })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        console.log('success')\r\n    }, [history])\r\n\r\n    const deleteTeam = useCallback(async (teamId) => {\r\n        const response = await fetch(`${TEAMS_URL}/${teamId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n        }\r\n\r\n        const deletedTeam = await response.json()\r\n        return deletedTeam\r\n    }, [history])\r\n\r\n    const teamInvitations = useCallback(async (teamId, message, accepted) => {\r\n        const response = await fetch(`${TEAMS_URL}/invitations/${teamId}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                message,\r\n                accepted\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        const user = await response.json()\r\n        return user\r\n    }, [history])\r\n\r\n    const getTeamInvitationInfo = useCallback(async (teamId) => {\r\n        const response = await fetch(`${TEAMS_URL}/${teamId}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        const team = await response.json()\r\n        return team\r\n    }, [history])\r\n\r\n    const getUserTeams = useCallback(async () => {\r\n        const promise = await fetch(`${TEAMS_URL}`, {\r\n            method: 'GET',\r\n            headers: getHeaders()\r\n        })\r\n        if (!promise.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        const response = await promise.json()\r\n        return response\r\n    }, [history])\r\n\r\n    return {\r\n        getTeamUsers,\r\n        createTeam,\r\n        updateTeam,\r\n        removeTeamInvitations,\r\n        deleteTeam,\r\n        teamInvitations,\r\n        getTeamInvitationInfo,\r\n        getUserTeams\r\n    }\r\n}","import React, { useCallback, useContext, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ButtonClean from '../ButtonClean'\r\nimport useProjectsServices from '../../services/useProjectsServices'\r\nimport useTeamServices from '../../services/useTeamServices'\r\n\r\n\r\nexport default function AddProjectMember(props) {\r\n\r\n    const socket = useSocket()\r\n    const [users, setUsers] = useState([])\r\n    const context = useContext(UserContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState(props.project.membersRoles)\r\n    const isAdmin = props.admin\r\n    const projectId = props.project._id\r\n    const params = useParams()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n    const { changeUserRole, addProjectMember, removeProjectMember } = useProjectsServices()\r\n    const { getTeamUsers } = useTeamServices()\r\n\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('team-update', params.teamid)\r\n    }, [socket, props, params.teamid])\r\n\r\n    async function handleOnDragEnd(result) {\r\n\r\n        if (!result.destination) {\r\n            console.log('no destination')\r\n            return\r\n        }\r\n\r\n        const memberRoleId = result.draggableId\r\n\r\n        const member = members.filter(a => a._id === memberRoleId)[0]['memberId']\r\n\r\n        if (member._id === context.user.id) {\r\n            console.log('can`t move self')\r\n            return\r\n        }\r\n\r\n        const memberAdmin = members.filter(a => a._id === memberRoleId)[0]['admin']\r\n\r\n        if (result.destination.droppableId === 'admins' && memberAdmin) {\r\n            return\r\n        }\r\n\r\n        if (result.destination.droppableId === 'members' && !memberAdmin) {\r\n            return\r\n        }\r\n\r\n        const arr = [...members]\r\n        const newArr = arr.filter(m => m._id !== memberRoleId)\r\n        // eslint-disable-next-line prefer-destructuring\r\n        const updatedUser = members.filter(a => a._id === memberRoleId)[0]\r\n        updatedUser.admin = !memberAdmin\r\n        newArr.push(updatedUser)\r\n        setMembers(newArr)\r\n\r\n        await changeUserRole(projectId, memberRoleId, memberAdmin)\r\n\r\n        updateProjectSocket()\r\n\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        if (member._id === context.user.id) {\r\n            return\r\n        }\r\n\r\n        await removeProjectMember(projectId, member._id)\r\n\r\n        updateProjectSocket()\r\n        const arr = [...members]\r\n        const newArr = arr.filter(m => m.memberId._id !== member._id)\r\n        setMembers(newArr)\r\n    }\r\n\r\n    const handleAdd = async (member) => {\r\n\r\n        if (!member) {\r\n            setIsActive(!isActive)\r\n            return\r\n        }\r\n\r\n        const memberRole = await addProjectMember(projectId, member)\r\n        updateProjectSocket()\r\n        memberRole.memberId = member\r\n        setIsActive(!isActive)\r\n        const arr = [...members]\r\n        arr.push(memberRole)\r\n        setMembers(arr)\r\n        setUsers([])\r\n    }\r\n\r\n    const onFocus = async () => {\r\n\r\n        if (users.length === 0) {\r\n            let currentTeamId = ''\r\n\r\n            teamContext.teams.map(t => {\r\n                return (\r\n                    t.projects.map(p => {\r\n                        if (p._id === projectId) {\r\n                            currentTeamId = t._id\r\n                        }\r\n\r\n                        return currentTeamId\r\n                    })\r\n                )\r\n            })\r\n\r\n            const data = await getTeamUsers(currentTeamId)\r\n\r\n            const teamUsers = data.members\r\n\r\n            const filtered = teamUsers.filter((e) => {\r\n                const found = members.find(element => element.memberId.username === e.username)\r\n                if (found) {\r\n                    return false\r\n                } else {\r\n                    return true\r\n                }\r\n            })\r\n\r\n            setUsers(filtered)\r\n        }\r\n\r\n        setShowMembers(true)\r\n\r\n\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n\r\n    const confirmationObjectFunctions = {\r\n        'delete this member': deleteMember\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n            <div className={styles['big-container']}>\r\n                {isAdmin ?\r\n                    <div>\r\n                        <div className={styles['input-container']}>\r\n                            <span className={styles['text-invite']}>Add Members</span>\r\n                            <div className={styles['invite-input']}>\r\n                                <input\r\n                                    className={styles['members-input']}\r\n                                    autoComplete='off'\r\n                                    value={member}\r\n                                    onFocus={onFocus}\r\n                                    onBlur={onBlur}\r\n                                    onChange={(e) => setMember(e.target.value)}\r\n                                    label='Invite members'\r\n                                    id='members'\r\n                                    placeholder='Teammate Username'\r\n                                />\r\n                                <div className={styles['select-for-invite']}>\r\n                                    {\r\n                                        showMembers &&\r\n                                        <div className={styles.members}>\r\n                                            {\r\n                                                users.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(context.user.username))\r\n                                                    .filter((e) => {\r\n                                                        const found = members.find(element => element.username === e.username)\r\n                                                        if (found) {\r\n                                                            return false\r\n                                                        } else {\r\n                                                            return true\r\n                                                        }\r\n                                                    })\r\n                                                    .sort((a, b) => a.username.localeCompare(b.username))\r\n                                                    .map(u => {\r\n                                                        return (\r\n                                                            <ButtonClean\r\n                                                                key={u._id}\r\n                                                                className={styles.user}\r\n                                                                onClick={() => { handleAdd(u) }}\r\n                                                                title={<div>\r\n                                                                    <div>{u.username}</div>\r\n                                                                    <div className={styles.email}>{u.email}</div>\r\n                                                                </div>}\r\n                                                            />)\r\n                                                    })\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                            <div className={styles['admins-container']}>\r\n                                <span className={styles.title}>Admins:</span>\r\n                                <Droppable droppableId={'admins'}>\r\n                                    {(provided) => (\r\n                                        <div className={styles.droppable} ref={provided.innerRef}  {...provided.droppableProps} >\r\n                                            {\r\n                                                members.filter(a => a.admin === true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index}>\r\n                                                            {(provided) => (\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                    <AvatarUser user={element.memberId}\r\n                                                                        size={40} />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n\r\n                            <div className={styles['members-container']}>\r\n                                <span className={styles.title}>Members:</span>\r\n                                <Droppable droppableId={'members'}>\r\n                                    {(provided) => (\r\n                                        <div className={styles['droppable-members']} ref={provided.innerRef} {...provided.droppableProps}>\r\n                                            {\r\n                                                members.filter(a => a.admin !== true).map((element, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={element.memberId._id} draggableId={element._id} index={index} >\r\n                                                            {(provided) => (\r\n\r\n                                                                <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                    <AvatarUser user={element.memberId}\r\n                                                                        // key={index} \r\n                                                                        size={40} round={true}\r\n                                                                        onClick={() => {\r\n                                                                            setConfirmOpen(true)\r\n                                                                            setConfirmTitle('delete this member')\r\n                                                                            setCurrElement(element.memberId)\r\n                                                                        }}\r\n                                                                    />\r\n                                                                    {provided.placeholder}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n                        </DragDropContext>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className={styles['admins-container']}>\r\n                            <span className={styles.title}>Admins:</span>\r\n                            <div className={styles.droppable}>\r\n                                {\r\n                                    members.filter(a => a.admin === true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index} >\r\n                                                <AvatarUser user={element.memberId} size={40} />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={styles['admins-container']}>\r\n                            <span className={styles.title}>Members:</span>\r\n                            <div className={styles.droppable}>\r\n                                {\r\n                                    members.filter(a => a.admin !== true).map((element, index) => {\r\n                                        return (\r\n                                            <span key={index}>                                                                                                <AvatarUser user={element.memberId} size={40} />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const checkIsUserAdmin = (id, members) => {\r\n    const member = members.find(m => m.memberId._id === id)\r\n\r\n    if (!member) {\r\n        return false\r\n    }\r\n\r\n    return member.admin\r\n}\r\n\r\nexport default checkIsUserAdmin\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AddProjectMember from '../AddProjectMember'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport checkIsUserAdmin from '../../utils/checkIsUserAdmin'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport useProjectsServices from '../../services/useProjectsServices'\r\n\r\n\r\nexport default function EditProject(props) {\r\n    const [name, setName] = useState(props.project.name)\r\n    const [description, setDescription] = useState(props.project.description)\r\n    const [isFinished, setIsFinished] = useState(props.project.isFinished)\r\n    const members = props.project.membersRoles\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const { editProject, deleteProject } = useProjectsServices()\r\n\r\n    const projectId = props.project._id\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n    }, [socket, props])\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(checkIsUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id, props])\r\n\r\n    async function handleSubmit() {\r\n        await editProject(projectId, name, description, isFinished)\r\n        updateProjectSocket()\r\n        props.hideForm()\r\n        socket.emit('team-update', params.teamid)\r\n    }\r\n\r\n    async function handleDeleteProject() {\r\n        await deleteProject(projectId)\r\n        props.hideForm()\r\n        const deletedProject = {\r\n            projectId: props.project._id,\r\n            teamId: params.teamid\r\n        }\r\n        socket.emit('project-deleted', deletedProject)\r\n        history.push(`/team/${params.teamid}`)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this project'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => handleDeleteProject()}\r\n                />\r\n            }\r\n\r\n            <div className={styles.container} >\r\n                <div className={styles.title} >Project</div>\r\n\r\n                <div className={styles['input-container']}>\r\n                    <span> Name</span>\r\n                    <input\r\n                        className={`${styles['input-pr-name']} ${isAdmin ? '' : styles['input-disable']}`}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label='Name'\r\n                        id='name'\r\n                    />\r\n                </div>\r\n                <div className={styles['input-container-descr']}>\r\n                    <span> Description</span>\r\n                    <textarea\r\n                        className={`${styles['text-area-descr']} ${isAdmin ? '' : styles['input-disable']}`}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        label='Description'\r\n                        id='description'\r\n                        placeholder='Project Description'\r\n                        spellCheck='false'\r\n                    />\r\n                </div>\r\n                <div className={styles['edit-members']}>\r\n                    <AddProjectMember admin={isAdmin} project={props.project} members={members} />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {isAdmin ?\r\n                    <div className={styles['buttons-div']}>\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Edit'} onClick={handleSubmit} />\r\n                        <ButtonGrey className={styles['navigate-buttons']}\r\n                            title={isFinished ?\r\n                                'Set Current' : 'Set Finished'}\r\n                            onClick={() => setIsFinished(!isFinished)} />\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Delete Project'}\r\n                            onClick={() => {\r\n                                setConfirmOpen(true)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/menu.c7591865.svg\";","export default __webpack_public_path__ + \"static/media/home.f4ff998e.svg\";","export default __webpack_public_path__ + \"static/media/tasks.3208aed2.svg\";","export default __webpack_public_path__ + \"static/media/inbox.c6537480.svg\";","export default __webpack_public_path__ + \"static/media/inbox-bell.7f4fc855.svg\";","export default __webpack_public_path__ + \"static/media/project-info.eb151f7e.svg\";","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport LinkComponent from '../Link'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport styles from './index.module.css'\r\nimport ButtonHideList from '../ButtonHideList'\r\nimport ButtonClean from '../ButtonClean'\r\nimport Transparent from '../Transparent'\r\nimport EditProject from '../EditProject'\r\nimport logo from '../../images/logo.svg'\r\nimport menu from '../../images/aside/menu.svg'\r\nimport home from '../../images/aside/home.svg'\r\nimport tasks from '../../images/aside/tasks.svg'\r\nimport inbox from '../../images/aside/inbox.svg'\r\nimport bell from '../../images/aside/inbox-bell.svg'\r\nimport projectInfo from '../../images/aside/project-info.svg'\r\n\r\nconst Aside = ({ isAsideOn, setIsAsideOn }) => {\r\n    const [isListShown, setIsListShown] = useState(false)\r\n    const [isEditProjectShown, setIsEditProjectShown] = useState(false)\r\n    const [isEditButtonProjectShown, setIsEditButtonProjectShown] = useState(false)\r\n    const { lists, project } = useContext(ProjectContext)\r\n    const { user, logIn } = useContext(UserContext)\r\n    const socket = useSocket()\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('project')) {\r\n            setIsListShown(true)\r\n            setIsEditButtonProjectShown(true)\r\n        }\r\n    }, [])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        logIn(response)\r\n    }, [logIn])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <div className={styles.aside}>\r\n            <aside className={styles.container}>\r\n                <div className={styles['top-left']}>\r\n                    <ButtonClean\r\n                        className={styles.hamburger}\r\n                        onClick={() => setIsAsideOn(!isAsideOn)}\r\n                        title={<img className={styles.options} src={menu} alt='menu' width='32' height='24' />}\r\n                    />\r\n                </div>\r\n                <LinkComponent\r\n                    href='/'\r\n                    title={<img src={home} alt='home' width='34' height='32' />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/my-tasks/${user.id}`}\r\n                    title={<img src={tasks} alt='my-tasks' width='30' height='25' />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/inbox/${user.id}`}\r\n                    title={<>\r\n                        <img src={inbox} alt='inbox' width='33' height='34' />\r\n                        {user.inbox.length !== 0 &&\r\n                            <img className={styles.bell} src={bell} alt='inbox' width='33' height='34' />\r\n                        }\r\n                    </>}\r\n                />\r\n                {isEditButtonProjectShown &&\r\n                    <ButtonClean\r\n                        className={styles.settings}\r\n                        onClick={() => setIsEditProjectShown(!isEditProjectShown)}\r\n                        title={<img className={styles.options} src={projectInfo} alt='' width='40' />}\r\n                    />\r\n                }\r\n            </aside>\r\n            {isAsideOn &&\r\n                <div className={styles.menu}>\r\n                    <div className={styles['top-right']}>\r\n                        <div className={styles.logo}>\r\n                            <img src={logo} alt='logo' width='87' height='65' />\r\n                        </div>\r\n                        <LinkComponent\r\n                            href='/'\r\n                            title='Home'\r\n                            className={styles.link}\r\n                        />\r\n                        <LinkComponent\r\n                            href={`/my-tasks/${user.id}`}\r\n                            title='My Tasks'\r\n                            className={styles.link}\r\n                        />\r\n                        <LinkComponent\r\n                            href={`/inbox/${user.id}`}\r\n                            title='Inbox'\r\n                            className={styles.link}\r\n                        />\r\n                        {isEditButtonProjectShown &&\r\n                            <ButtonClean\r\n                                className={styles.link}\r\n                                onClick={() => setIsEditProjectShown(!isEditProjectShown)}\r\n                                title={'Settings'}\r\n                            />\r\n                        }\r\n                    </div>\r\n                    {isListShown && <div className={styles['bottom-right']}>\r\n                        {\r\n                            lists.map((element) => {\r\n                                return (\r\n                                    <ButtonHideList key={element._id} list={element} type={'aside'} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>}\r\n                </div>\r\n            }\r\n            {isEditProjectShown &&\r\n                < div >\r\n                    <Transparent hideForm={() => setIsEditProjectShown(!isEditProjectShown)} >\r\n                        <EditProject hideForm={() => setIsEditProjectShown(!isEditProjectShown)} project={project} />\r\n                    </Transparent >\r\n                </div >\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Aside","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const useDetectOutsideClick = () => {\r\n    const [isActive, setIsActive] = useState(false)\r\n    const ref = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const onClick = e => {\r\n            // If the active element exists and is clicked outside of\r\n            if (ref.current !== null && !ref.current.contains(e.target)) {\r\n                setIsActive(!isActive)\r\n            }\r\n        }\r\n\r\n        // If the item is active (ie open) then listen for clicks outside\r\n        if (isActive) {\r\n            window.addEventListener('click', onClick)\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('click', onClick)\r\n        }\r\n    }, [isActive])\r\n\r\n    return [isActive, setIsActive, ref]\r\n}","import React, { useContext, useMemo } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport styles from './index.module.css'\r\n\r\n\r\nconst SearchResults = ({ searchInput, hideSearchResult }) => {\r\n    const { user: { teams } } = useContext(UserContext)\r\n    const { updateSelectedTeam } = useContext(TeamContext)\r\n    const history = useHistory()\r\n\r\n    const searchResults = useMemo(() => {\r\n        const searchResultsArray = []\r\n        for (const team of teams) {\r\n            if (team.name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n                searchResultsArray.push({ name: `Team: ${team.name}`, id: team._id, type: 'team' })\r\n            }\r\n\r\n            for (const project of team.projects) {\r\n                if (project.name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n                    searchResultsArray.push({ \r\n                        name: `Project: ${project.name}`,\r\n                        id: project._id,\r\n                        teamId: team._id,\r\n                        type: 'project' \r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        return searchResultsArray\r\n    }, [teams, searchInput])\r\n\r\n    const goToPage = (element) => {\r\n\r\n        if (element.type === 'project') {\r\n            history.push(`/project-board/${element.teamId}/${element.id}`)\r\n            updateSelectedTeam(element.teamId)\r\n            hideSearchResult()\r\n            return\r\n        }\r\n\r\n        history.push(`/team/${element.id}`)\r\n        updateSelectedTeam(element.id)\r\n        hideSearchResult()\r\n    }\r\n\r\n    return (\r\n        <div className={styles['search-container']}>\r\n            { searchResults.map((element, index) => {\r\n                return (\r\n                    <div\r\n                        key={index}\r\n                        className={styles.result}\r\n                        onClick={() => goToPage(element)}\r\n                    >\r\n                        {element.name}\r\n                    </div>\r\n                )\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults","export default __webpack_public_path__ + \"static/media/search.eabb7a59.svg\";","import React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport SearchResults from '../SearchResults'\r\nimport searchImg from '../../images/search.svg'\r\n\r\n\r\nconst SearchField = ({ isAsideOn }) => {\r\n    const [searchInput, setSearchInput] = useState('')\r\n    const [showSearchForm, setShowSearchForm, dropdownRefSearch] = useDetectOutsideClick()\r\n    const [isShownSearchInput, setIsShownSearchInput] = useState(false)\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => (setShowSearchForm(false)), 120)\r\n        setTimeout(() => (setIsShownSearchInput(!isShownSearchInput)), 120)\r\n    }\r\n\r\n    const hideSearchResult = () => {\r\n        setShowSearchForm(!showSearchForm)\r\n        setSearchInput('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles['search-button']} onClick={() => setIsShownSearchInput(!isShownSearchInput)} >\r\n                <img className={styles['search-icon']} src={searchImg} alt='search' />\r\n            </div>\r\n            <div className={isShownSearchInput ?\r\n                ( isAsideOn\r\n                    ? (`${styles['new-line']} ${styles['search-fields']} ${isAsideOn && styles['small']}`)\r\n                    : (`${styles['new-line']} ${styles['search-fields']}`)\r\n                )\r\n                : styles['search-fields']} >\r\n                <input \r\n                    className={styles.input} \r\n                    type='text'\r\n                    placeholder={!showSearchForm ? 'Search...' : 'Enter Project or Team name'}\r\n                    autoComplete='off'\r\n                    value={searchInput}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                    onClick={() => setShowSearchForm(true)}\r\n                    onBlur={onBlur}\r\n                />\r\n                {( searchInput.length > 0 && showSearchForm)\r\n                    ? <div ref={dropdownRefSearch}>\r\n                        <SearchResults searchInput={searchInput} hideSearchResult={hideSearchResult} />\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchField","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\n\r\nconst LinkComponentTitle = ({ title, href, className, onClick }) => {\r\n    return (\r\n        <Link \r\n            to={href}\r\n            className={`${styles.link} ${className}`}\r\n            onClick={onClick}\r\n            title={title} \r\n        >\r\n            {title}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponentTitle","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport useUserServices from '../../services/useUserServices'\r\nimport useTeamServices from '../../services/useTeamServices'\r\n\r\n\r\nexport default function CreateTeam(props) {\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const { getAllUsers } = useUserServices()\r\n    const { createTeam } = useTeamServices()\r\n\r\n    console.log(members)\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const users = await getAllUsers()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u._id !== input._id)\r\n        setMembers(arr)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n        const team = await createTeam(name, description, members)\r\n        const arr = [...teamContext.teams]\r\n        arr.push(team)        \r\n        teamContext.setTeams(arr)\r\n        teamContext.setSelectedTeam(team.name)\r\n        props.hideForm()\r\n        socket.emit('team-update', team._id)\r\n        socket.emit('multiple-messages-sent', members)\r\n        history.push(`/team/${team._id}`)\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n\r\n            <div className={styles.title} >Create New Team</div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label='Name'\r\n                    id='name'\r\n                    placeholder='Team Name'\r\n                    autoComplete='off'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span className={styles['description-text']}> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label='Description'\r\n                    id='description'\r\n                    placeholder='Team Description'\r\n                    spellCheck='false'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-members']}>\r\n                <span className={styles['members-text']}> Invite Members</span>\r\n\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['input-members']}\r\n                        autoComplete='off'\r\n                        value={member}\r\n                        onChange={inputMembers}\r\n                        label='Invite members'\r\n                        id='members'\r\n                        placeholder='username'\r\n                        onBlur={onBlur}\r\n\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            showMembers &&\r\n                            <div className={styles['members-pop-up']}>\r\n                                <div className={styles.members}>\r\n                                    {\r\n                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                            .filter((e) => {\r\n                                                const found = members.find(element => element.username === e.username)\r\n                                                if (found) {\r\n                                                    return false\r\n                                                } else {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                            .map(u => {\r\n                                                return (\r\n                                                    <ButtonClean\r\n                                                        key={u._id}\r\n                                                        className={styles.user}\r\n                                                        onClick={() => addMember(u)}\r\n                                                        title={<div>\r\n                                                            <div>{u.username}</div>\r\n                                                            <div className={styles.email}>{u.email}</div>\r\n                                                        </div>}\r\n                                                    />)\r\n                                            })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map(m => {\r\n                        return (\r\n                            <ButtonClean\r\n                                key={m._id}\r\n                                onClick={() => removeMember(m)}\r\n                                title={\r\n                                    <AvatarUser user={m} size={40} />\r\n                                }\r\n                            />\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n                <ButtonGrey onClick={(e) => handleSubmit(e)} title='Create' className={styles['create-button']} />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ButtonCleanTitle = ({ title, onClick, type, className, children, style }) => {\r\n    return (\r\n        <button\r\n            type={type || 'button'}\r\n            onClick={onClick}\r\n            className={`${styles.clean} ${className}`} style={style}\r\n            title={title}\r\n        >{title}{children}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonCleanTitle","import React, { useContext, useState } from 'react'\r\nimport TeamContext from '../../../contexts/TeamContext'\r\nimport commonStyles from '../index.module.css'\r\nimport LinkComponentTitle from '../../LinkTitle'\r\nimport ButtonClean from '../../ButtonClean'\r\nimport Transparent from '../../Transparent'\r\nimport CreateTeam from '../../CreateTeam'\r\nimport ButtonCleanTitle from '../../ButtonCleanTitle'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\n\r\nconst TeamDropdown = () => {\r\n    const { selectedTeam, teams, getCurrentProjects, setSelectedTeam } = useContext(TeamContext)\r\n    const [isShownTeamForm, setIsShownTeamForm] = useState(false)\r\n    const [isTeamActive, setIsTeamActive, teamRef] = useDetectOutsideClick()\r\n\r\n    const selectTeam = (teamId, teamName) => {\r\n        getCurrentProjects(teamId)\r\n        setSelectedTeam(teamName)\r\n        setIsTeamActive(false)\r\n    }\r\n\r\n    return (\r\n        <div className={`${commonStyles.container} ${commonStyles['team-media']}`}>\r\n            <div className={commonStyles.title}>Team:</div>\r\n            <div className={commonStyles['dropdown-container']}>\r\n                <ButtonCleanTitle\r\n                    className={commonStyles.button}\r\n                    onClick={() => setIsTeamActive(!isTeamActive)}\r\n                    title={selectedTeam}\r\n                />\r\n                {isTeamActive && <div className={commonStyles.dropdown} ref={teamRef}>\r\n                    <div className={commonStyles['options-container']}>\r\n                        {teams.map(t => (\r\n                            <LinkComponentTitle\r\n                                href={`/team/${t._id}`}\r\n                                key={t._id}\r\n                                title={t.name}\r\n                                onClick={() => selectTeam(t._id, t.name)}\r\n                                className={commonStyles.options}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <ButtonClean\r\n                        onClick={() => setIsShownTeamForm(true)}\r\n                        title='Create Team'\r\n                        className={`${commonStyles.options} ${commonStyles['last-option']}`}\r\n                    />\r\n                </div>}\r\n            </div>\r\n            {isShownTeamForm &&\r\n                <Transparent hideForm={() => setIsShownTeamForm(false)}>\r\n                    <CreateTeam hideForm={() => { setIsShownTeamForm(false) }} />\r\n                </Transparent>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamDropdown","import React, { useState, useContext } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport useProjectsServices from '../../services/useProjectsServices'\r\nimport useTeamServices from '../../services/useTeamServices'\r\n\r\nexport default function CreateProject({ hideForm }) {\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const { teamid: teamId } = useParams()\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [areMembersShown, setAreMembersShown] = useState(false)\r\n    const [allTeamMembers, setAllTeamMembers] = useState([])\r\n    const { user } = useContext(UserContext)\r\n    const { createProject } = useProjectsServices()\r\n    const { getTeamUsers } = useTeamServices()\r\n\r\n\r\n    const handleCreateProject = async (event) => {\r\n        event.preventDefault()\r\n        if (name === '') {\r\n            return\r\n        }\r\n        \r\n        const project = await createProject(name, description, teamId, members)\r\n        hideForm && hideForm()\r\n        socket.emit('team-update', teamId)\r\n        history.push(`/project-board/${teamId}/${project._id}`)\r\n    }\r\n\r\n    const onFocus = async () => {\r\n        setAreMembersShown(true)\r\n        if (allTeamMembers.length === 0) {\r\n            const users = await getTeamUsers(teamId)\r\n            setAllTeamMembers(users.members)\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setAreMembersShown(false), 120)\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const membersArray = [...members]\r\n        membersArray.push(input)\r\n        setMembers(membersArray)\r\n        setAreMembersShown(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const membersArray = members.filter(member => member._id !== input._id)\r\n        setMembers(membersArray)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            <div className={styles.title} >Create New Project</div>\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label='Name'\r\n                    id='name'\r\n                    placeholder='Project Name'\r\n                    autoComplete='off'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label='Description'\r\n                    id='description'\r\n                    placeholder='Project Description'\r\n                    spellCheck='false'\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span className={styles['text-invite']}>Add Members</span>\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['members-input']}\r\n                        autoComplete='off'\r\n                        value={member}\r\n                        onFocus={onFocus}\r\n                        onBlur={onBlur}\r\n                        onChange={(e) => setMember(e.target.value)}\r\n                        label='Invite members'\r\n                        id='members'\r\n                        placeholder='Teammate Username'\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            areMembersShown &&\r\n                            <div className={styles.members}>\r\n                                {\r\n                                    allTeamMembers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(user.username))\r\n                                        .filter((e) => {\r\n                                            const found = members.find(element => element.username === e.username)\r\n                                            if (found) {\r\n                                                return false\r\n                                            } else {\r\n                                                return true\r\n                                            }\r\n                                        })\r\n                                        .sort((a, b) => a.username.localeCompare(b.username))\r\n                                        .map(u => {\r\n                                            return (\r\n                                                <ButtonClean\r\n                                                    key={u._id}\r\n                                                    className={styles.user}\r\n                                                    onClick={() => addMember(u)}\r\n                                                    title={<div>\r\n                                                        <div>{u.username}</div>\r\n                                                        <div className={styles.email}>{u.email}</div>\r\n                                                    </div>}\r\n                                                />)\r\n                                        })\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map((member, index) => {\r\n                        return (\r\n                            <span key={index}>\r\n                                <AvatarUser user={member} onClick={() => removeMember(member)} size={40} />\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n                <ButtonGrey\r\n                    title='Create'\r\n                    className={styles['create-button']}\r\n                    onClick={(e) => handleCreateProject(e)}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport TeamContext from '../../../contexts/TeamContext'\r\nimport ProjectContext from '../../../contexts/ProjectContext'\r\nimport commonStyles from '../index.module.css'\r\nimport LinkComponentTitle from '../../LinkTitle'\r\nimport ButtonClean from '../../ButtonClean'\r\nimport Transparent from '../../Transparent'\r\nimport CreateProject from '../../CreateProject'\r\nimport ButtonCleanTitle from '../../ButtonCleanTitle'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\n\r\nconst ProjectDropdown = () => {\r\n    const { currentProjects } = useContext(TeamContext)\r\n    const { project } = useContext(ProjectContext)\r\n    const [isShownProjectForm, setIsShownProjectForm] = useState(false)\r\n    const [isShownOldProjects, setIsShownOldProjects] = useState(false)\r\n    const [isProjectActive, setIsProjectActive, projectRef] = useDetectOutsideClick()\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n        \r\n        if (project.isFinished === true) {\r\n            return setIsShownOldProjects(true)\r\n        }\r\n\r\n        setIsShownOldProjects(false)\r\n        \r\n    }, [project.isFinished])\r\n\r\n\r\n    return (\r\n        <div className={`${commonStyles.container} ${commonStyles['project-media']}`}>\r\n            <div className={commonStyles.title}>Project:</div>\r\n            <div className={commonStyles['dropdown-container']}>\r\n                <ButtonCleanTitle\r\n                    className={commonStyles.button}\r\n                    onClick={() => setIsProjectActive(!isProjectActive)}\r\n                    title={project.name}\r\n                />\r\n                {isProjectActive && <div ref={projectRef} className={commonStyles.dropdown} >\r\n                    <div className={commonStyles['options-container']} >\r\n                        {currentProjects.filter(p => isShownOldProjects === !!(p.isFinished))\r\n                            .reverse()\r\n                            .map(p => (\r\n                                <LinkComponentTitle\r\n                                    href={`/project-board/${params.teamid}/${p._id}`}\r\n                                    key={p._id}\r\n                                    title={p.name}\r\n                                    onClick={() => setIsProjectActive(false)}\r\n                                    className={commonStyles.options}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <ButtonClean\r\n                        onClick={() => setIsShownProjectForm(true)}\r\n                        title='Create Project'\r\n                        className={`${commonStyles.options} ${commonStyles['last-option']}`}\r\n                    />\r\n                </div>}\r\n            </div>\r\n            {isShownProjectForm &&\r\n                <Transparent hideForm={() => setIsShownProjectForm(false)}>\r\n                    <CreateProject hideForm={() => setIsShownProjectForm(false)} />\r\n                </Transparent>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectDropdown","import React, { useContext, useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport ProjectContext from '../../../contexts/ProjectContext'\r\nimport commonStyles from '../index.module.css'\r\nimport ButtonClean from '../../ButtonClean'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\n\r\nconst ViewDropdown = () => {\r\n    const { project } = useContext(ProjectContext)\r\n    const [isViewActive, setIsViewActive, viewRef] = useDetectOutsideClick()\r\n    const [viewState, setViewState] = useState(null)\r\n    const history = useHistory()\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('board')) {\r\n            setViewState('Board')\r\n        } \r\n        \r\n        if (window.location.href.includes('list')) {\r\n            setViewState('List')\r\n        }\r\n    }, [])\r\n\r\n    const goToSelectedView = (view) => {\r\n        history.push(`/project-${view}/${params.teamid}/${project._id}`)\r\n        setIsViewActive(false)\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.container}>\r\n            <div className={commonStyles.title}>View:</div>\r\n            <div className={commonStyles['dropdown-container']}>\r\n                <ButtonClean\r\n                    className={commonStyles.button}\r\n                    onClick={() => setIsViewActive(!isViewActive)}\r\n                    title={viewState}\r\n                />\r\n                {isViewActive && <div ref={viewRef} className={commonStyles.dropdown} >\r\n                    <ButtonClean\r\n                        title='Board'\r\n                        className={commonStyles.options}\r\n                        onClick={() => goToSelectedView('board')}\r\n                    />\r\n                    <ButtonClean\r\n                        title='List'\r\n                        className={`${commonStyles.options} ${commonStyles['last-option']}`}\r\n                        onClick={() => goToSelectedView('list')}\r\n                    />\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewDropdown","import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserContext from '../../../contexts/UserContext'\r\nimport commonStyles from '../index.module.css'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../../ButtonClean'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\nimport AvatarUser from '../../AvatarUser'\r\n\r\nconst ProfileDropdown = () => {\r\n    const { user, logOut } = useContext(UserContext)\r\n    const [isProfileActive, setIsProfileActive, profileRef] = useDetectOutsideClick()\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div className={commonStyles['dropdown-container']}>\r\n            <ButtonClean\r\n                className={styles.avatar}\r\n                onClick={() => setIsProfileActive(!isProfileActive)}\r\n                title={<AvatarUser user={user} size={40} />}\r\n            />\r\n            {isProfileActive &&\r\n                <div\r\n                    ref={profileRef}\r\n                    className={`${commonStyles.dropdown} ${styles.profile}`}\r\n                >\r\n                    <ButtonClean\r\n                        title='Profile'\r\n                        className={`${commonStyles.options} ${styles.profile}`}\r\n                        onClick={() => history.push(`/profile/${user && user.id}`)}\r\n                    />\r\n                    <ButtonClean\r\n                        onClick={logOut}\r\n                        title='Log Out'\r\n                        className={`${commonStyles.options} ${commonStyles['last-option']} ${styles.profile}`}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileDropdown","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport SearchField from '../SearchField'\r\nimport TeamDropdown from '../HeaderDropdowns/TeamDropdown'\r\nimport ProjectDropdown from '../HeaderDropdowns/ProjectDropdown'\r\nimport ViewDropdown from '../HeaderDropdowns/ViewDropdown'\r\nimport ProfileDropdown from '../HeaderDropdowns/ProfileDropdown'\r\nimport useProjectsServices from '../../services/useProjectsServices'\r\n\r\nconst Header = ({ isAsideOn }) => {\r\n    const [isProjectVisibble, setIsProjectVisibble] = useState(false)\r\n    const [isViewVisibble, setIsViewVisibble] = useState(false)\r\n    const { project, setProject } = useContext(ProjectContext)\r\n    const { selectedTeam, setSelectedTeam, updateSelectedTeam, getCurrentProjects } = useContext(TeamContext)\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const { getProjectInfo } = useProjectsServices()\r\n\r\n    const getData = useCallback(async () => {\r\n        const data = await getProjectInfo(params.projectid)\r\n        setProject(data)\r\n    }, [getProjectInfo, params, setProject])\r\n\r\n    const goToHomePage = useCallback((deletedTeamId) => {\r\n        if (deletedTeamId !== params.teamid) return\r\n        history.push('/')\r\n    }, [history, params.teamid])\r\n\r\n    const goToTeamPage = useCallback((deletedProjectId) => {\r\n        if (deletedProjectId !== params.projectid) return\r\n        history.push(`/team/${params.teamid}`)\r\n    }, [history, params.projectid, params.teamid])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) {\r\n            setSelectedTeam('Select')\r\n            return\r\n        }\r\n\r\n        if (selectedTeam === 'Select') {\r\n            const teamId = params.teamid\r\n            updateSelectedTeam(teamId)\r\n        }\r\n\r\n        if (window.location.href.includes('project')) {\r\n            setIsViewVisibble(true)\r\n            setIsProjectVisibble(true)\r\n            getCurrentProjects(params.teamid)\r\n\r\n            if (project === null || project._id !== params.projectid) {\r\n                getData()\r\n            }\r\n        }\r\n    }, [getData, params, params.teamid, project, selectedTeam, setSelectedTeam, updateSelectedTeam, getCurrentProjects])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) return\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('team-deleted', goToHomePage)\r\n        return () => socket.off('team-deleted')\r\n    }, [goToHomePage, socket])\r\n\r\n    useEffect(() => {\r\n        if (!window.location.href.includes('project')) return\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-deleted', goToTeamPage)\r\n        return () => socket.off('project-deleted')\r\n    }, [goToTeamPage, socket])\r\n\r\n    if (window.location.href.includes('project') && !project) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <header className={`${styles.navigation} ${isAsideOn ? styles.small : ''}`} >\r\n            <div className={styles.container}>\r\n                <div className={styles.links}>\r\n                    <TeamDropdown />\r\n                    {isProjectVisibble && <ProjectDropdown />}\r\n                    {isViewVisibble && <ViewDropdown />}\r\n                </div>\r\n\r\n                <div className={`${styles.links} ${styles.font}`}>\r\n                    <SearchField isAsideOn={isAsideOn} />\r\n                    <ProfileDropdown />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport Aside from '../Aside'\r\nimport Header from '../Header'\r\n\r\nconst PageLayout = ({ children, contentClassName }) => {\r\n    const [isAsideOn, setIsAsideOn] = useState(false)\r\n\r\n    return (\r\n        <div className={styles.app}>\r\n            <Aside isAsideOn={isAsideOn} setIsAsideOn={setIsAsideOn} />\r\n            <Header isAsideOn={isAsideOn} />\r\n            <div className={contentClassName ? contentClassName : `${styles.content} ${isAsideOn && styles.small}`}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageLayout","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst Title = ({ title }) => {\r\n    return (\r\n        <div className={styles.title}>{title}</div>\r\n    )\r\n}\r\n\r\nexport default Title","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ButtonGreyTitle = ( { title, onClick, className } ) => {\r\n    return (\r\n        <button onClick={onClick} className={`${styles.button} ${className}`} title={title} >{title}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonGreyTitle","export default __webpack_public_path__ + \"static/media/home-page-pic.97aa1e71.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\n\r\nconst MyTeamsMenu = ({ userTeams, goToTeamPage }) => {\r\n\r\n    return (\r\n        <div className={styles['teams-container']}>\r\n            {\r\n                userTeams.length > 0 ?\r\n                    userTeams.map((team, index) => {\r\n                        return (\r\n\r\n                            <div key={index}\r\n                                className={styles['buttons-teams']}\r\n                                onClick={() => goToTeamPage(team._id)}\r\n                                title={team.name}\r\n                            >\r\n                                {team.name}\r\n                            </div>\r\n\r\n\r\n                        )\r\n                    }\r\n                    )\r\n                    : 'You have not joined any teams yet'\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTeamsMenu\r\n","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Transparent from '../../components/Transparent'\r\nimport CreateTeam from '../../components/CreateTeam'\r\nimport Title from '../../components/Title'\r\nimport ButtonGreyTitle from '../../components/ButtonGreyTitle'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport homePagePicture from '../../images/home-page-pic.svg'\r\nimport MyTeamsMenu from '../../components/MyTeamsMenu'\r\n\r\n\r\nconst Home = () => {\r\n    const history = useHistory()\r\n    const { user } = useContext(UserContext)\r\n    const [isTeamFormShown, setIsTeamFormShown] = useState(false)\r\n    const [areUserTeamsShown, setAreUserTeamsShown, dropdownRef] = useDetectOutsideClick()\r\n    const userName = user.username\r\n    const userTeams = user.teams\r\n    const userId = user._id\r\n    const userRecentProjects = user.recentProjects\r\n\r\n\r\n    const goToTeamPage = (teamId) => {\r\n        history.push(`/team/${teamId}`)\r\n    }\r\n\r\n    const goToProjectPage = (projectId) => {\r\n        userTeams.map(team => {\r\n            return (\r\n                team.projects.forEach(project => {\r\n                    if (project._id === projectId) {\r\n                        history.push(`/project-board/${team._id}/${projectId}`)\r\n                    }\r\n                })\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <PageLayout>\r\n            <>\r\n                {\r\n                    isTeamFormShown &&\r\n                    <Transparent hideForm={() => setIsTeamFormShown(false)}>\r\n                        <CreateTeam hideForm={() => { setIsTeamFormShown(false) }} />\r\n                    </Transparent>\r\n                }\r\n            </>\r\n            <Title title='Home' />\r\n            <div className={styles.container}>\r\n                <div className={styles['left-buttons']}>\r\n                    <ButtonGreyTitle\r\n                        className={styles['navigate-buttons']}\r\n                        title={'My Tasks'}\r\n                        onClick={() => history.push(`/my-tasks/${userId}`)}\r\n                    />\r\n\r\n                    <ButtonGreyTitle\r\n                        className={styles['navigate-buttons']}\r\n                        title={'My Teams'}\r\n                        onClick={() => setAreUserTeamsShown(!areUserTeamsShown)}\r\n                    />\r\n\r\n                    <div className={styles['select-team-container']} ref={dropdownRef}>\r\n                        {\r\n                            areUserTeamsShown &&\r\n                            <MyTeamsMenu userTeams={userTeams} goToTeamPage={goToTeamPage} />\r\n                        }\r\n                    </div>\r\n\r\n                    <ButtonGreyTitle\r\n                        className={styles['navigate-buttons']}\r\n                        title={'Create New Team'}\r\n                        onClick={() => setIsTeamFormShown(true)}\r\n                    />\r\n                </div>\r\n\r\n                <div className={styles['pic-container']}>\r\n                    <img className={styles.pic1} src={homePagePicture} alt='' />\r\n\r\n                    <div className={styles['welcome-user']}>\r\n                        {`Welcome ${userName}!`}\r\n                    </div>\r\n\r\n                    <ButtonGreyTitle\r\n                        className={styles['navigate-buttons']}\r\n                        title={'Get Started'}\r\n                        onClick={() => history.push(`${/get-started/}`)}\r\n                    />\r\n                </div>\r\n\r\n                <div className={styles['right-buttons']}>\r\n                    {\r\n                        userRecentProjects &&\r\n                        <>\r\n                            <div >Recent projects:</div>\r\n                            {\r\n                                userRecentProjects.slice(0).reverse().map((project) => {\r\n                                    return (\r\n                                        <div key={project._id}>\r\n                                            <ButtonGreyTitle\r\n                                                className={styles['navigate-buttons']}\r\n                                                title={project.name}\r\n                                                onClick={() => goToProjectPage(project._id)}\r\n                                            />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div>\r\n            {props.alert ? (<div className={styles.alert}>\r\n                {props.message}\r\n            </div>) : null}\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useContext, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Alert from '../Alert'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\nexport default function AddPassword({ userId }) {\r\n    const [password, setPassword] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const { addNewPassword } = useUserServices()\r\n\r\n\r\n    const userContext = useContext(UserContext)\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n\r\n\r\n        if (!password || !rePassword) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n\r\n        const response = await addNewPassword(userId, password)\r\n        userContext.logIn(response.user)\r\n        history.push('/')\r\n                \r\n\r\n    }, [history, userContext, password, rePassword, userId, addNewPassword])\r\n\r\n    return (\r\n\r\n        <form className={styles.container} >\r\n\r\n            <div className={styles['inner-container']}>\r\n\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt='logo' width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    </div>\r\n\r\n                    <div className={styles.title} >Add password to user</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['pass-input']}\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            label='New Password'\r\n                            id='password'\r\n                        />\r\n\r\n                        <div className={styles['pass-instructions']}>\r\n                            <p>Use 8 or more characters with a mix </p>\r\n                            <p>of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Confirm Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['pass-input']}\r\n                            type='password'\r\n                            value={rePassword}\r\n                            onChange={e => setRePassword(e.target.value)}\r\n                            label='Confirm Password'\r\n                            id='rePassword'\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className={styles['new-pass-alert']}>\r\n                        Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n                    </div>\r\n\r\n                    <div className={styles['button-div-login']}>\r\n                        <button type='submit' className={styles['login-button']} onClick={handleSubmit}>Submit</button>\r\n                    </div>\r\n\r\n                    <div className={styles['text-login']}>User was registered with Google. Please add password for this Website</div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google.e72ffc18.svg\";","import React, { useState, useContext } from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport Transparent from '../Transparent'\r\nimport AddPassword from '../FormAddPassword'\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from '../Alert'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\nconst LoginForm = (props) => {\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [userId, setUserId] = useState('')\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n    const { userLogin, googleLoginUser } = useUserServices()\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n\r\n        const response = await userLogin(email, password)\r\n        if (response.needPassword) {\r\n            setUserId(response.userId)\r\n            setShowForm(true)\r\n            return\r\n        }\r\n\r\n        if (response.wrongPassword) {\r\n            setWrongPassAllert(true)\r\n            return\r\n        }\r\n\r\n        if (response.wrongUser) {\r\n            setWrongUserAllert(true)\r\n            return\r\n        }\r\n\r\n        context.logIn(response)\r\n        history.push('/')\r\n    }\r\n\r\n    const handleGoogle = async (googleResponse) => {\r\n        const { tokenId } = googleResponse\r\n        const user = await googleLoginUser(tokenId)\r\n        context.logIn(user)\r\n        history.push('/')\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setShowForm(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                showForm &&\r\n                <Transparent hideForm={hideForm}>\r\n                    <AddPassword hideForm={hideForm} userId={userId} email={email} />\r\n                </Transparent>\r\n            }\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n                <div className={styles['inner-container']}>\r\n\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt='logo' width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n                        <div className={styles.alerts}>\r\n                            <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                            <Alert alert={wrongPassAllert} message={'Wrong Password'} />\r\n                            <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                        </div>\r\n\r\n                        <div className={styles.title} >Log In with E-mail</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles['email-input']}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label='Email'\r\n                                id='email'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Password:</div>\r\n                            <input\r\n                                className={styles['pass-input']}\r\n                                placeholder='********'\r\n                                type='password'\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label='Password'\r\n                                id='password'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['button-div-login']}>\r\n                            <button type='submit' className={styles['login-button']}>Log In</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['text-div']}>\r\n                            <p className={styles['forgot-pass']}\r\n                                onClick={() => { props.goToForgotPassword(); props.hideForm() }}>\r\n                                Forgot Password?\r\n                            </p>\r\n                            <p className={styles['new-to-sm']}>\r\n                                New to Smart Manager?\r\n                                <button className={styles['sign-up-btn']}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                            </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['button-div-google-login']}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles['google-login-btn']}\r\n                                    >\r\n                                        <img src={google} alt='logo' width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText='Login'\r\n                                onSuccess={handleGoogle}\r\n                                // onFailure={errorGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React, { useContext, useState } from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport styles from './index.module.css'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Alert from '../Alert'\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\nconst SignupForm = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [userExist, setUserExist] = useState(false)\r\n    const [validEmailAlert, setValidEmailAlert] = useState(false)\r\n    const { logIn } = useContext(UserContext)\r\n    const history = useHistory()\r\n    const { registerUser, googleLoginUser } = useUserServices()\r\n\r\n\r\n    function validateEmail(email) {\r\n        var re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\r\n        return re.test(email)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        setValidEmailAlert(false)\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n        setUserExist(false)\r\n\r\n        const valid = validateEmail(email)\r\n\r\n        if (!valid) {\r\n            setValidEmailAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n\r\n        if (!username || !password || !rePassword || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        const response = await registerUser(email, username, password)\r\n\r\n        if (response.exist) {\r\n            setUserExist(true)\r\n            return\r\n        }\r\n\r\n        logIn(response)\r\n        history.push('/')\r\n\r\n    }\r\n\r\n    const handleGoogle = async (googleResponse) => {\r\n        const { tokenId } = googleResponse\r\n        const user = await googleLoginUser(tokenId)\r\n        logIn(user)\r\n        history.push('/')        \r\n    }\r\n\r\n    return (\r\n        <form className={styles.container} onSubmit={handleSubmit}>\r\n            <div className={styles['inner-container']}>\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt='logo' width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={userExist} message={'User with this email already exists'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                        <Alert alert={validEmailAlert} message={'Please enter valid email address'} />\r\n                    </div>\r\n                    <div className={styles.title}  >Sign Up with E-mail</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Username:</div>\r\n                        <input\r\n                            placeholder='John Smith'\r\n                            className={styles['sign-up-input']}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            label='Username'\r\n                            id='username'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Email:</div>\r\n                        <input\r\n                            placeholder='John@example.com'\r\n                            className={styles['sign-up-input']}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            label='Email'\r\n                            id='email'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            label='Password'\r\n                            id='password'\r\n                        />\r\n                        <div className={styles['pass-instructions']}>\r\n                            <p>Use 8 or more characters with a</p>\r\n                            <p>mix of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Re-type Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type='password'\r\n                            value={rePassword}\r\n                            onChange={(e) => setRePassword(e.target.value)}\r\n                            label='Re-Password'\r\n                            id='re-password'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['button-div-login']}>\r\n                        <button type='submit' className={styles['sign-up-button']}>Get Started</button>\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <h3>\r\n                            or\r\n                        </h3>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles['button-div-google-login']}>\r\n                        <GoogleLogin\r\n                            render={renderProps => (\r\n                                <button onClick={renderProps.onClick}\r\n                                    className={styles['google-login-btn']}\r\n                                >\r\n                                    <img src={google} alt='logo' width='25' height='25' />Sign Up with Google</button>\r\n                            )}\r\n                            clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                            buttonText='Sign up with Google'\r\n                            onSuccess={handleGoogle}\r\n                            // onFailure={errorGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <p className={styles['already-sign-up']}>\r\n                            Already Sign Up?\r\n                            <button className={styles['sign-up-btn']} onClick={() => { props.goToLogin(); props.hideForm() }}>Log In</button>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SignupForm","import React, { useState, useContext } from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from '../Alert'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n    const { userLogin, addNewPassword, googleLoginUser } = useUserServices()\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n        \r\n        if (password !== rePassword) {\r\n            setWrongPassAllert(true)\r\n            return\r\n        }\r\n\r\n        const response = await userLogin(email, password)\r\n\r\n        if (response.wrongUser) {\r\n            setWrongUserAllert(true)\r\n            return\r\n        }\r\n\r\n        let userId\r\n\r\n        if (response.id) {\r\n            userId = response.id\r\n        }\r\n\r\n        if (response.userId) {\r\n            // eslint-disable-next-line prefer-destructuring\r\n            userId = response.userId\r\n        }\r\n\r\n        const changePassResponse = await addNewPassword(userId, password)\r\n        context.logIn(changePassResponse.user)\r\n        history.push('/')\r\n\r\n    }\r\n\r\n    const handleGoogle = async (googleResponse) => {\r\n        const { tokenId } = googleResponse\r\n        const user = await googleLoginUser(tokenId)\r\n        context.logIn(user)\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n                <div className={styles['inner-container']}>\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt='logo' width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n                        <div className={styles.alerts}>\r\n                            <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                            <Alert alert={wrongPassAllert} message={'Passwords do not match'} />\r\n                            <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                        </div>\r\n\r\n                        <div className={styles.title} >Forgot Password Form</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles.emailInput}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label='Email'\r\n                                id='email'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type='password'\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label='Password'\r\n                                id='password'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>Re-type New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type='password'\r\n                                value={rePassword}\r\n                                onChange={e => setRePassword(e.target.value)}\r\n                                label='Confirm Password'\r\n                                id='rePassword'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles.buttonDivLogin}>\r\n                            <button type='submit' className={styles.loginButton}>Submit</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.textDiv}>\r\n\r\n                            <p className={styles.newToSmM}>\r\n                                New to Smart Manager?\r\n                                <button className={styles.signUpBtn}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                            </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.buttonDivGoogleLogin}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles.googleLoginBtn}\r\n                                    >\r\n                                        <img src={google} alt='logo' width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText='Login'\r\n                                onSuccess={handleGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordForm","export default __webpack_public_path__ + \"static/media/welcome-page-1.6bf905f1.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-2.5280cdb7.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-3.012ae353.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-4.8390671d.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-5.1c8ad840.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-6.55796ee0.svg\";","export default __webpack_public_path__ + \"static/media/twitter-icon.738a4da0.svg\";","export default __webpack_public_path__ + \"static/media/facebook-icon.0b7bb0f2.svg\";","export default __webpack_public_path__ + \"static/media/instagram-icon.8c3f39e6.svg\";","import React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport LoginForm from '../../components/LoginForm'\r\nimport Transparent from '../../components/Transparent'\r\nimport SignupForm from '../../components/SignupForm'\r\nimport ForgotPasswordForm from '../../components/FormForgotPassword'\r\nimport logo from '../../images/logo.svg'\r\nimport welcomePagePic1 from '../../images/welcome-page/welcome-page-1.svg'\r\nimport welcomePagePic2 from '../../images/welcome-page/welcome-page-2.svg'\r\nimport welcomePagePic3 from '../../images/welcome-page/welcome-page-3.svg'\r\nimport welcomePagePic4 from '../../images/welcome-page/welcome-page-4.svg'\r\nimport welcomePagePic5 from '../../images/welcome-page/welcome-page-5.svg'\r\nimport welcomePagePic6 from '../../images/welcome-page/welcome-page-6.svg'\r\nimport twitter from '../../images/welcome-page/twitter-icon.svg'\r\nimport facebook from '../../images/welcome-page/facebook-icon.svg'\r\nimport instagram from '../../images/welcome-page/instagram-icon.svg'\r\n\r\n\r\nconst WelcomePage = () => {\r\n    const [isLogInFormShown, setIsLogInFormShown] = useState(false)\r\n    const [isSignUpFormShown, setIsSignUpFormShown] = useState(false)\r\n    const [isForgotPassFormShown, setIsForgotPassFormShown] = useState(false)\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {\r\n                isLogInFormShown &&\r\n                <Transparent hideForm={() => setIsLogInFormShown(!isLogInFormShown)} >\r\n                    <LoginForm\r\n                        hideForm={() => setIsLogInFormShown(!isLogInFormShown)}\r\n                        goToSignUp={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n                        goToForgotPassword={() => setIsForgotPassFormShown(!isForgotPassFormShown)}\r\n                    />\r\n                </Transparent >\r\n            }\r\n            {\r\n                isSignUpFormShown &&\r\n                <Transparent hideForm={() => setIsSignUpFormShown(!isSignUpFormShown)} >\r\n                    <SignupForm\r\n                        hideForm={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n                        goToLogin={() => setIsLogInFormShown(!isLogInFormShown)}\r\n                    />\r\n                </Transparent >\r\n            }\r\n            {\r\n                isForgotPassFormShown &&\r\n                <Transparent hideForm={() => setIsForgotPassFormShown(!isForgotPassFormShown)} >\r\n                    <ForgotPasswordForm\r\n                        hideForm={() => setIsForgotPassFormShown(!isForgotPassFormShown)}\r\n                        goToSignUp={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n                    />\r\n                </Transparent >\r\n            }\r\n\r\n            <div className={styles['content-wrap']}>\r\n                <div className={styles['top-container']}>\r\n                    <div className={styles['top-div-container']}>\r\n                        <div className={styles['header-nav']}>\r\n                            <span className={styles.logo}>\r\n                                <img src={logo} alt='logo' width='100%' height='100%' />\r\n                            </span>\r\n                            <span className={styles['first-buttons']}>\r\n                                <button\r\n                                    className={styles['login-button']}\r\n                                    onClick={() => setIsLogInFormShown(!isLogInFormShown)}\r\n                                >Log In</button>\r\n                                <button\r\n                                    className={styles['sign-up-button']}\r\n                                    onClick={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n                                >Sign Up</button>\r\n                            </span>\r\n                        </div>\r\n                        <div className={styles.pic1}>\r\n                            <img src={welcomePagePic1} alt='' width='100%' />\r\n                        </div>\r\n                        <div className={styles.pic2}>\r\n                            <img src={welcomePagePic2} alt='' width='100%' />\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles['lower-div-container']}>\r\n                        <div className={styles['first-text']}>\r\n                            <p className={styles.headers}>\r\n                                Manage your work in a\r\n                                <span className={styles.lucida}>Smart</span>\r\n                 way!</p>\r\n                            <div className={styles.paragraph}>\r\n                                <p >The ideas get more clear, organized and focused on.</p>\r\n                                <p >Flexible and time saving for the whole team. </p>\r\n                                <button\r\n                                    className={styles['second-sign-up-button']}\r\n                                    onClick={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n                                >Free Sign Up</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles['second-container']}>\r\n                    <div className={styles['first-row']}>\r\n                        <div className={styles['second-text']}>\r\n                            <p className={styles.headers}>Work and participate in different teams </p>\r\n                            <div className={styles.paragraph}>\r\n                                <p >Follow who and when is doing tasks. Be always</p>\r\n                                <p >informed with the accomplishment of the projects. </p>\r\n                                <button\r\n                                    className={styles['third-sign-up-button']}\r\n                                    onClick={() => setIsSignUpFormShown(!isSignUpFormShown)}\r\n                                >Try It Now</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles['pic3-container']}>\r\n                            <img className={styles.picture} src={welcomePagePic3} alt='' />\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles['second-row']}>\r\n                        <div className={styles['pic4-container']}>\r\n                            <img className={styles.picture} src={welcomePagePic4} alt='' />\r\n                        </div>\r\n                        <div className={styles['second-row-colum']}>\r\n                            <div className={styles['second-text']}>\r\n                                <p className={styles.headers}>Еаsy to manage all the information</p>\r\n                                <div className={styles.paragraph}>\r\n                                    <p >Add stickers, notes, comments, attachments in your</p>\r\n                                    <p >  Smart Manager.</p>\r\n                                    <p >Collaborate with others in your Team.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles['second-row-pic']} >\r\n                                <img className={styles.picture} src={welcomePagePic5} alt='' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles['third-row']}>\r\n                        <div className={styles['second-text']}>\r\n                            <p className={styles.headers}>Start your <span className={styles.lucida}>Smart Manager</span> Now </p>\r\n                            <div className={styles.paragraph}>\r\n                                <p >Connect with other teams from <span className={styles.lucida}>The Smart Family</span>,</p>\r\n                                <p > save time with more work done.</p>\r\n                                <button className={styles['second-sign-up-button']} onClick={() => setIsSignUpFormShown(!isSignUpFormShown)} >Get Started</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles['pic6-container']}>\r\n                            <img className={styles.picture} src={welcomePagePic6} alt='' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <footer className={styles.footer}>\r\n                <div className={styles['footer-column']}>\r\n                    <div className={styles['footer-headers']}>\r\n                        <p>Contact Us</p>\r\n                    </div>\r\n                    <div className={styles['footer-info']}>\r\n                        <p>+359 52 317 395</p>\r\n                        <p>smartmanager@gmail.com</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles['footer-column']}>\r\n                    <div className={styles['footer-headers']}>\r\n                        <p>SERVICES</p>\r\n                    </div>\r\n                    <div className={styles['footer-info']}>\r\n                        <p>Contact Us</p>\r\n                        <p>Ordering & Payment FAQ</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles['footer-column']}>\r\n                    <div className={styles['footer-headers']}>\r\n                        <p>INFORMATION</p>\r\n                    </div>\r\n                    <div className={styles['footer-info']}>\r\n                        <p>About SMART MANAGER</p>\r\n                        <p>Work With US</p>\r\n                        <p>Privacy Policy</p>\r\n                        <p>Terms & Conditions</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles['last-column']}>\r\n                    <div className={styles['social-media-container']}>\r\n                        <span>\r\n                            <img className={styles['social-media']} src={instagram} alt='' />\r\n                        </span>\r\n                        <span>\r\n                            <img className={styles['social-media']} src={twitter} alt='' />\r\n                        </span>\r\n                        <span>\r\n                            <img className={styles['social-media']} src={facebook} alt='' />\r\n                        </span>\r\n                    </div>\r\n                    <div className={styles.sd2006}>SD2006</div>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WelcomePage","export default __webpack_public_path__ + \"static/media/profile-page-pic.258ed489.svg\";","import React from 'react'\r\nimport ButtonGrey from '../../ButtonGrey'\r\nimport styles from './index.module.css'\r\n\r\n\r\nconst ProfilePageInputs = ({\r\n    className,\r\n    classNameDiv,\r\n    title,\r\n    onClick,\r\n    onChange,\r\n    placeholder,\r\n    disabled,\r\n    type,\r\n    value\r\n}) => {\r\n\r\n    return (\r\n        <div className={styles['button-input-div']} classNameDiv={classNameDiv}>\r\n            <ButtonGrey\r\n                title={title}\r\n                className={styles['navigate-buttons']}\r\n                onClick={onClick}\r\n            />\r\n            < input\r\n                onChange={onChange}\r\n                className={className}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n                type={type}\r\n                value={value}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePageInputs\r\n","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport styles from './index.module.css'\r\nimport Alert from '../Alert'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport useUserServices from '../../services/useUserServices'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport MyTeamsMenu from '../MyTeamsMenu'\r\nimport ProfilePageInputs from '../Inputs/ProfilePageInputs'\r\n\r\nconst UpdateUserData = ({ user, userEmail, getData }) => {\r\n    const { logIn } = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [isPasswordActive, setIsPaswordActive] = useState(false)\r\n    const [isUserNameActive, setIsUserNameActive] = useState(false)\r\n    const [username, setUsername] = useState(user.username)\r\n    const [password, setPassword] = useState(null)\r\n    const [rePassword, setRePassword] = useState(null)\r\n    const [isAlertOn, setIsAlertOn] = useState(false)\r\n    const [areUserTeamsShown, setAreUserTeamsShown, teamRef] = useDetectOutsideClick()\r\n    const { updateUser, updateUserPassword } = useUserServices()\r\n    const userTeams = user.teams\r\n    const userId = user.id\r\n\r\n\r\n    const goToTeamPage = (teamId) => {\r\n        history.push(`/team/${teamId}`)\r\n    }\r\n\r\n    const handleUpdateUser = async (event) => {\r\n        event.preventDefault()\r\n\r\n        setIsAlertOn(false)\r\n        setIsPaswordActive(false)\r\n        setIsUserNameActive(false)\r\n\r\n        if (!username && !password) {\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setIsAlertOn(true)\r\n            return\r\n        }\r\n\r\n        if (username) {\r\n            const user = await updateUser(userId, username)\r\n            logIn(user)\r\n        }\r\n\r\n        if (password) {\r\n            const user = await updateUserPassword(userId, password)\r\n            logIn(user)\r\n            return\r\n        }\r\n        \r\n        getData()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles['inputs-container']}>\r\n            <ProfilePageInputs\r\n                title={'Username:'}\r\n                onClick={() => { setIsUserNameActive(!isUserNameActive) }}\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                className={styles['input-fields-profile']}\r\n                placeholder={username}\r\n                disabled={!isUserNameActive}\r\n            />\r\n            <ProfilePageInputs\r\n                title={'Change Password'}\r\n                onClick={() => { setIsPaswordActive(!isPasswordActive) }}\r\n                onChange={e => setPassword(e.target.value)}\r\n                className={styles['input-fields-profile']}\r\n                placeholder={'********'}\r\n                disabled={!isPasswordActive}\r\n                type='password'\r\n            />\r\n            <div className={styles.alerts}>\r\n                <Alert alert={isAlertOn} message={'Passwords do not match'} />\r\n            </div>\r\n            {\r\n                isPasswordActive &&\r\n                <div className={styles['new-pass-alert']}>\r\n                    Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n                </div>\r\n            }\r\n            <ProfilePageInputs\r\n                title={'Confirm Password'}\r\n                onClick={() => { setIsPaswordActive(!isPasswordActive) }}\r\n                onChange={e => setRePassword(e.target.value)}\r\n                className={styles['input-fields-profile']}\r\n                placeholder={'********'}\r\n                disabled={!isPasswordActive}\r\n                type='password'\r\n            />\r\n\r\n            <ProfilePageInputs\r\n                title={'Email:'}\r\n                className={styles['input-fields-profile']}\r\n                value={userEmail}\r\n                disabled={true}\r\n            />\r\n\r\n            <ProfilePageInputs\r\n                classNameDiv={styles['button-input-div-tasks']}\r\n                title={'My Tasks'}\r\n                onClick={() => history.push(`/my-tasks/${userId}`)}\r\n                className={styles['input-fields-tasks']}\r\n                value={''}\r\n                disabled={true}\r\n            />\r\n\r\n            <div className={styles['button-input-div']}>\r\n                <div className={styles.myTeamsContainer}>\r\n                    <ButtonGrey\r\n                        title={'My Teams'}\r\n                        className={styles['navigate-buttons']}\r\n                        onClick={() => setAreUserTeamsShown(!areUserTeamsShown)}\r\n                    />\r\n                    <div className={styles['select-team-container']} ref={teamRef}>\r\n                        {\r\n                            areUserTeamsShown &&\r\n                            <MyTeamsMenu userTeams={userTeams} goToTeamPage={goToTeamPage} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles['button-div-save']}>\r\n                    <ButtonGrey\r\n                        title={'SAVE'}\r\n                        className={styles['save-button']}\r\n                        onClick={(e) => handleUpdateUser(e)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateUserData","export default __webpack_public_path__ + \"static/media/pen.2057bbca.svg\";","import React, { useContext, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { Image, Transformation } from 'cloudinary-react'\r\nimport styles from './index.module.css'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport useUserServices from '../../services/useUserServices'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../../components/ConfirmationDialog'\r\nimport pen from '../../images/pen.svg'\r\n\r\nconst UpdateUserImage = ({ user, getData }) => {\r\n    const history = useHistory()\r\n    const { userid } = useParams()\r\n    const { logIn } = useContext(UserContext)\r\n    const [isEditPictureActive, setIsEditPictureActive, dropdownRef] = useDetectOutsideClick()\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const { updateUserImage } = useUserServices()\r\n\r\n    const userName = user.username\r\n    const userImage = user.image\r\n\r\n    const deletePic = async () => {\r\n        const newImage = null\r\n        const user = await updateUserImage(userid, newImage, userImage)\r\n        logIn(user)\r\n        getData()\r\n    }\r\n\r\n    const changeProfilePicture = () => {\r\n        const widget = window.cloudinary.createUploadWidget({\r\n            cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n            uploadPreset: process.env.REACT_APP_UPLOAD_PRESET\r\n        }, async (error, result) => {\r\n\r\n            if (result.event === 'success') {\r\n                const { path } = result.info\r\n                const publicId = result.info.public_id\r\n                const newImage = {\r\n                    path,\r\n                    publicId\r\n                }\r\n                const user = await updateUserImage(userid, newImage, userImage)\r\n                logIn(user)\r\n                getData()\r\n            }\r\n\r\n            if (error) {\r\n                history.push('/error')\r\n                return\r\n            }\r\n        })\r\n        widget.open()\r\n    }\r\n\r\n    return (\r\n        <div className={styles['profile-pic-container']}>\r\n            {\r\n                isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this picture'}\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => deletePic()}\r\n                />\r\n            }\r\n            <div className={styles['profile-pic']}\r\n                onClick={() => {\r\n                    userImage ?\r\n                        setIsEditPictureActive(!isEditPictureActive)\r\n                        : changeProfilePicture()\r\n                }}\r\n            >\r\n                {\r\n                    userImage ?\r\n                        <div className={styles['profile-picture']}>\r\n                            <Image publicId={userImage.publicId} className={styles['profile-picture-pic']} >\r\n                                <Transformation width='200' height='200' gravity='faces' crop='fill' />\r\n                            </Image>\r\n                            <div className={styles.relative}>\r\n                                {\r\n                                    isEditPictureActive &&\r\n                                    <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                                        <ButtonGrey\r\n                                            onClick={changeProfilePicture}\r\n                                            title='Edit'\r\n                                            className={styles.edit}\r\n                                        />\r\n                                        <ButtonGrey\r\n                                            onClick={() => {\r\n                                                setIsConfirmOpen(true)\r\n                                            }}\r\n                                            title='Delete'\r\n                                            className={styles.delete}\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className={styles['no-pic']}>\r\n                            <div className={styles['load-pic-text']}>\r\n                                Load a profile picture\r\n                            </div>\r\n\r\n                            <img className={styles.pen} src={pen} alt='' />\r\n                        </div>\r\n                }\r\n            </div>\r\n            <div>{userName}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateUserImage\r\n","import React, { useState, useEffect, useCallback, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Loader from 'react-loader-spinner'\r\nimport Title from '../../components/Title'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport useUserServices from '../../services/useUserServices'\r\nimport profilePagePic from '../../images/profile-page-pic.svg'\r\nimport UpdateUserData from '../../components/UpdateUserData'\r\nimport UpdateUserImage from '../../components/UpdateUserImage'\r\n\r\n\r\nconst ProfilePage = () => {\r\n    const { userid } = useParams()\r\n    const { user } = useContext(UserContext)\r\n    const [userEmail, setUserEmail] = useState(null)\r\n    const { getUser } = useUserServices()\r\n    const { username } = user\r\n\r\n    const getData = useCallback(async () => {\r\n        const user = await getUser(userid)\r\n        setUserEmail(user.email)\r\n    }, [getUser, userid])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [getData])   \r\n\r\n    return (\r\n        <PageLayout>\r\n            {!username ?\r\n                <Loader\r\n                    type='TailSpin'\r\n                    color='#363338'\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n                :\r\n                <>\r\n                    <Title title='Profile' />\r\n                    <div className={styles.container}>\r\n                        <div className={styles['inputs-container']}>\r\n                            <UpdateUserData user={user} userEmail={userEmail} getData={getData} />\r\n                        </div>\r\n\r\n                        <div className={styles['pic-container']}>\r\n                            <UpdateUserImage user={user} getData={getData} />\r\n\r\n                            <img className={styles.pic1} src={profilePagePic} alt='' />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ProfilePage","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport AvatarUser from '../AvatarUser'\r\n\r\n\r\nconst TeamMembers = ({ members, invited }) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['members-avatars']}>\r\n                <div>\r\n                    Team Members:\r\n                </div>\r\n                {\r\n                    members.map((member, index) => {\r\n                        return (\r\n                            <ButtonClean\r\n                                key={index}\r\n                                title={<AvatarUser user={member} size={40} />}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                invited.length !== 0 &&\r\n                <div className={styles['members-avatars']}>\r\n                    <div>\r\n                        Invited Members:\r\n                    </div>\r\n                    {\r\n                        invited.map((member, index) => {\r\n                            return (\r\n                                <span key={index}>\r\n                                    <AvatarUser user={member} size={40} />\r\n                                </span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamMembers","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../ButtonClean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamMembers from '../TeamMembers'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport AvatarUser from '../AvatarUser'\r\nimport useTeamServices from '../../services/useTeamServices'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\n\r\nexport default function EditTeam(props) {\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [currTeam, setCurrTeam] = useState(props.currTeam)\r\n    const [name, setName] = useState(currTeam.name)\r\n    const [description, setDescription] = useState(currTeam.description)\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState(currTeam.members)\r\n    const [invited, setInvited] = useState(currTeam.requests)\r\n    const [forInvite, setForInvite] = useState([])\r\n    const [areMembersShown, setAreMembersShown] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n    const { user } = useContext(UserContext)\r\n    const { setSelectedTeam } = useContext(TeamContext)\r\n    const { getAllUsers } = useUserServices()\r\n    const { updateTeam, removeTeamInvitations, deleteTeam } = useTeamServices()\r\n\r\n    const teamId = params.teamid\r\n\r\n    const getData = useCallback(() => {\r\n        user.teams.forEach(team => {\r\n            if (team._id === teamId) {\r\n                setCurrTeam(team)\r\n            }\r\n        })\r\n        const teamAuthor = currTeam.author\r\n        setMembers(currTeam.members)\r\n        setInvited(currTeam.requests)\r\n        setDescription(currTeam.description)\r\n        setName(currTeam.name)\r\n        if (user.id === teamAuthor) {\r\n            setIsAdmin(true)\r\n        }\r\n    }, [user, currTeam.author, currTeam.description, currTeam.members, currTeam.name, currTeam.requests, teamId])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [getData])\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setAreMembersShown(false)\r\n        if (allUsers.length === 0) {\r\n            const users = await getAllUsers()\r\n            setAllUsers(users)\r\n        }\r\n\r\n        if (member.length >= 2) {\r\n            setAreMembersShown(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const membersForInvite = [...forInvite]\r\n        membersForInvite.push(input)\r\n        setForInvite(membersForInvite)\r\n        setAreMembersShown(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeTeamMember = async (member) => {\r\n        const updatedMembers = members.filter(m => m._id !== member._id)\r\n        await updateTeam(teamId, name, description, updatedMembers)\r\n        socket.emit('team-update', teamId)\r\n        if (member.id === user.id) {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    const removeInvitation = async (input) => {\r\n        const removeInvitation = input\r\n        await removeTeamInvitations(teamId, removeInvitation)\r\n        getData()\r\n        socket.emit('team-update', teamId)\r\n        socket.emit('message-sent', input._id)\r\n    }\r\n\r\n    const removeMemberForInvite = (input) => {\r\n        const membersForInvite = forInvite.filter(u => u._id !== input._id)\r\n        setForInvite(membersForInvite)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        await updateTeam(teamId, name, description, members, forInvite)\r\n        setSelectedTeam(name)\r\n        getData()\r\n        socket.emit('team-update', teamId)\r\n        socket.emit('multiple-messages-sent', forInvite)\r\n        props.hideForm()\r\n    }\r\n\r\n    const handleDeleteTeam = async () => {\r\n        if (!window.confirm('You will lost all team information - projects, lists and tasks')) {\r\n            return\r\n        }\r\n\r\n        const deletedTeam = await deleteTeam(teamId)\r\n        const recievers = [...deletedTeam.members, ...deletedTeam.requests]\r\n        socket.emit('team-deleted', { id: teamId, recievers })\r\n        history.push('/')\r\n        props.hideForm()\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setAreMembersShown(false), 120)\r\n    }\r\n\r\n    const confirmationObjectFunctions = {\r\n        'remove this member': removeMemberForInvite,\r\n        'leave this team': removeTeamMember,\r\n        'delete this member from team': removeTeamMember,\r\n        'delete this member from invited': removeInvitation,\r\n        'delete this team': handleDeleteTeam\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n            <div className={styles.form}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.title} >Team</div>\r\n                    <div className={styles['input-container']}>\r\n                        <span> Name</span>\r\n                        <input\r\n                            className={`${styles['input-name']} ${isAdmin ? '' : styles['input-disable']}`}\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                            label='Name'\r\n                            id='name'\r\n                        />\r\n                    </div>\r\n                \r\n                    <div className={styles['input-container-descr']}>\r\n                        <span> Description</span>\r\n                        <textarea\r\n                            className={`${styles['text-area-descr']} ${isAdmin ? '' : styles['input-disable']}`}\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            label='Description'\r\n                            id='description'\r\n                            spellCheck='false'\r\n\r\n                        />\r\n                    </div>\r\n                    {\r\n                        isAdmin &&\r\n                        <div className={styles['input-container-invite']}>\r\n                            <span className={styles['text-invite']}> Invite Members</span>\r\n                            <div className={styles['invite-input']}>\r\n                                <input\r\n                                    className={styles['input-invite']}\r\n                                    autoComplete='off'\r\n                                    value={member}\r\n                                    onChange={inputMembers}\r\n                                    label='Invite members'\r\n                                    id='members'\r\n                                    placeholder='username'\r\n                                    onBlur={onBlur}\r\n                                />\r\n                                <div className={styles['select-for-invite']}>\r\n                                    {\r\n                                        areMembersShown &&\r\n                                        <div className={styles.members}>\r\n                                            {\r\n                                                allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(user.username))\r\n                                                    .filter((e) => {\r\n                                                        const found = members.find(element => element.username === e.username)\r\n                                                        if (found) {\r\n                                                            return false\r\n                                                        } else {\r\n                                                            return true\r\n                                                        }\r\n                                                    })\r\n                                                    .filter((e) => {\r\n                                                        const found = invited.find(element => element.username === e.username)\r\n                                                        if (found) {\r\n                                                            return false\r\n                                                        } else {\r\n                                                            return true\r\n                                                        }\r\n                                                    })\r\n                                                    .filter((e) => {\r\n                                                        const found = forInvite.find(element => element.username === e.username)\r\n                                                        if (found) {\r\n                                                            return false\r\n                                                        } else {\r\n                                                            return true\r\n                                                        }\r\n                                                    })\r\n                                                    .sort((a, b) => a.username.localeCompare(b.username))\r\n                                                    .map((u, index) => {\r\n                                                        return (\r\n                                                            <ButtonClean\r\n                                                                key={index}\r\n                                                                className={styles.user}\r\n                                                                onClick={() => addMember(u)}\r\n                                                                title={<div>\r\n                                                                    <div>{u.username}</div>\r\n                                                                    <div className={styles.email}>{u.email}</div>\r\n                                                                </div>}\r\n                                                            />)\r\n                                                    })\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        isAdmin ?\r\n                            <div className={styles['members-div']}>\r\n                                <div className={styles['members-avatars']}>\r\n                                    <span>\r\n                                        <div>\r\n                                            Send Invitation:\r\n                                        </div>\r\n                                        {\r\n                                            forInvite.map((m, index) => {\r\n                                                return (\r\n                                                    <span key={index}>\r\n                                                        <AvatarUser user={m}\r\n                                                            size={40}\r\n                                                            onClick={() => {\r\n                                                                setIsConfirmOpen(true)\r\n                                                                setConfirmTitle('remove this member')\r\n                                                                setCurrElement(m)\r\n                                                            }} />\r\n                                                    </span>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div className={styles.membersAvatars}>\r\n                                        <div>\r\n                                            Team Members:\r\n                                        </div>\r\n                                        {\r\n                                            members.map((m, index) => {\r\n                                                return (\r\n                                                    <span key={index}>\r\n                                                        <AvatarUser user={m} size={40}\r\n                                                            onClick={() => {\r\n                                                                setIsConfirmOpen(true)\r\n                                                                setConfirmTitle('delete this member from team')\r\n                                                                setCurrElement(m)\r\n                                                            }}\r\n                                                        />\r\n                                                    </span>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        (invited.length !== 0) &&\r\n                                        <div className={styles.membersAvatars}>\r\n                                            <div>\r\n                                                Invited Members:\r\n                                            </div>\r\n                                            {\r\n                                                invited.map((m, index) => {\r\n                                                    return (\r\n                                                        <span key={index}>\r\n                                                            <AvatarUser user={m}\r\n                                                                size={40}\r\n                                                                onClick={() => {\r\n                                                                    setIsConfirmOpen(true)\r\n                                                                    setConfirmTitle('delete this member from invited')\r\n                                                                    setCurrElement(m)\r\n                                                                }}\r\n                                                            />\r\n                                                        </span>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className={styles['button-div']}>\r\n                                    <ButtonGrey\r\n                                        className={styles['create-button']}\r\n                                        onClick={() => handleSubmit()}\r\n                                        title={'Submit Changes'}\r\n                                    />\r\n                                    <ButtonGrey\r\n                                        className={styles['create-button']}\r\n                                        title={'Delete Team'}\r\n                                        onClick={() => {\r\n                                            setIsConfirmOpen(true)\r\n                                            setConfirmTitle('delete this team')\r\n                                            setCurrElement('')\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <TeamMembers\r\n                                    members={members} invited={invited}\r\n                                />\r\n                                {\r\n                                    !props.isMessage &&\r\n                                    <div className={styles['leave-team-btn-div']}>\r\n                                        <ButtonGrey\r\n                                            title={'Leave Team'}\r\n                                            className={styles['leave-team-btn']}\r\n                                            onClick={() => {\r\n                                                setIsConfirmOpen(true)\r\n                                                setConfirmTitle('leave this team')\r\n                                                setCurrElement(user)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport useTeamServices from '../../../services/useTeamServices'\r\nimport useUserServices from '../../../services/useUserServices'\r\n\r\nconst useInboxUtils = () => {\r\n    const socket = useSocket()\r\n    const { userid: userId  } = useParams()\r\n    // If move message is invoked this state is set to true and doesn`t allow to move it again\r\n    const [isMoveActive, setIsMoveActive] = useState(false)  \r\n    const { moveMessageToHistory, deleteUserMessage } = useUserServices()\r\n    const { getTeamInvitationInfo, teamInvitations } = useTeamServices()\r\n\r\n    return {\r\n\r\n        moveToHistory: async (message) => {\r\n            if (isMoveActive) return\r\n\r\n            setIsMoveActive(true)\r\n\r\n            await moveMessageToHistory(message)\r\n\r\n            socket.emit('message-sent', userId)\r\n        },\r\n\r\n        deleteMessage: async (message, setInboxHistory) => {\r\n\r\n            const user = await deleteUserMessage(message)\r\n\r\n            setInboxHistory(user.inboxHistory.reverse())\r\n        },\r\n\r\n        viewTeam: async (message, setCurrTeam, setShowEditTeamForm) => {\r\n\r\n            const team = await getTeamInvitationInfo(message.team.id)\r\n\r\n            setCurrTeam(team)\r\n            setShowEditTeamForm(true)\r\n        },\r\n\r\n        responseInvitation: async (message, accepted, setInbox, setInboxHistory) => {\r\n\r\n            const user = await teamInvitations(message.team.id, message, accepted)\r\n\r\n            socket.emit('team-update', message.team.id)\r\n            setInbox(user.inbox.reverse())\r\n            setInboxHistory(user.inboxHistory.reverse())\r\n            socket.emit('message-sent', userId)\r\n            socket.emit('message-sent', message.sendFrom._id)\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default useInboxUtils","import React, { useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport ButtonGrey from '../../ButtonGrey'\r\nimport EditTeam from '../../EditTeam'\r\nimport Transparent from '../../Transparent'\r\nimport useInboxUtils from '../useInboxUtils'\r\n\r\nconst TeamInvitationInbox = ({ message, setInbox, setInboxHistory, options }) => {\r\n    const [isShownTeamForm, setIsShownTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const { responseInvitation, viewTeam, moveToHistory } = useInboxUtils()\r\n\r\n    return (\r\n        <div className={commonStyles.message}>\r\n            <div className={commonStyles.container}>\r\n                <div className={commonStyles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Team name:</div>\r\n                <div className={commonStyles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Invited by:</div>\r\n                <div className={commonStyles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                message.team.isDeleted\r\n                    ? <div>\r\n                        <div className={commonStyles.bold}>Team deleted</div>\r\n                        <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => responseInvitation(message, true, setInbox, setInboxHistory)}\r\n                            title='Accept'\r\n                        />\r\n                        <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => responseInvitation(message, false, setInbox, setInboxHistory)}\r\n                            title='Decline'\r\n                        />\r\n                        <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => viewTeam(message, setCurrTeam, setIsShownTeamForm)}\r\n                            title='View Team'\r\n                        />\r\n                    </div>\r\n            }\r\n            {\r\n                isShownTeamForm &&\r\n                <Transparent hideForm={() => setIsShownTeamForm(false)}>\r\n                    <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setIsShownTeamForm(false) }} />\r\n                </Transparent>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamInvitationInbox","import React, { useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport ButtonGrey from '../../ButtonGrey'\r\nimport ConfirmDialog from '../../ConfirmationDialog'\r\nimport EditTeam from '../../EditTeam'\r\nimport Transparent from '../../Transparent'\r\nimport useInboxUtils from '../useInboxUtils'\r\n\r\nconst TeamInvitationHistory = ({ message, options, setInboxHistory }) => {\r\n    const [isShownTeamForm, setIsShownTeamForm] = useState(false)\r\n    const [isConfirmOpen, setIsComfirmOpen] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const { deleteMessage, viewTeam } = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            { isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setIsComfirmOpen(false)}\r\n                    onConfirm={() => deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={commonStyles.message}>\r\n                <div className={commonStyles.container}>\r\n                    {message.accepted === undefined \r\n                        ? <div className={commonStyles.container}>\r\n                            <div className={commonStyles.bold}>{message.subject}</div>\r\n                        </div>\r\n                        : <div className={commonStyles.container}>\r\n                            <div className={commonStyles.bold}>{message.subject}:</div>\r\n                            {message.accepted ? <div>Accepted</div> : <div>Declined</div>}\r\n                        </div>\r\n                    }\r\n                    <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Team name:</div>\r\n                    <div className={commonStyles.inline}>{message.team.name}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Invited by:</div>\r\n                    <div className={commonStyles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                { message.team.isDeleted &&\r\n                    <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Team deleted</div>\r\n                }\r\n                <div>\r\n                    { !message.team.isDeleted &&\r\n                        <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => viewTeam(message, setCurrTeam, setIsShownTeamForm)}\r\n                            title='View Team'\r\n                        />\r\n                    }\r\n                    <ButtonGrey\r\n                        className={commonStyles.button}\r\n                        onClick={() => setIsComfirmOpen(true)}\r\n                        title='Delete Message'\r\n                    />\r\n                    { isShownTeamForm &&\r\n                        <Transparent hideForm={() => setIsShownTeamForm(false)}>\r\n                            <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => setIsShownTeamForm(false) } />\r\n                        </Transparent>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeamInvitationHistory","import React, { useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport ButtonGrey from '../../ButtonGrey'\r\nimport ConfirmDialog from '../../ConfirmationDialog'\r\nimport useInboxUtils from '../useInboxUtils'\r\n\r\nconst TeamInvitationResponse = ({ message, setInboxHistory, options, isInbox }) => {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const { deleteMessage, moveToHistory } = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={commonStyles.message}>\r\n                <div className={commonStyles.container}>\r\n                    <div className={commonStyles.container}>\r\n                        <div className={commonStyles.bold}>{message.subject}:</div>\r\n                        <span>\r\n                            {message.sendFrom.username}\r\n                            {message.accepted\r\n                                ? <span> accepted</span>\r\n                                : <span> declined</span>}\r\n                        </span>\r\n                    </div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Team name:</div>\r\n                    <div className={commonStyles.inline}>{message.team.name}</div>\r\n                </div>\r\n                <div>\r\n                    { isInbox\r\n                        ? <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                        : <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => setIsConfirmOpen(true)} \r\n                            title='Delete Message'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeamInvitationResponse","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport commonStyles from '../index.module.css'\r\nimport ButtonGrey from '../../ButtonGrey'\r\nimport ConfirmDialog from '../../ConfirmationDialog'\r\nimport useInboxUtils from '../useInboxUtils'\r\n\r\nconst TaskAssignment = ({ message, setInboxHistory, options, isInbox }) => {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const { deleteMessage, moveToHistory } = useInboxUtils()\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <>\r\n            { isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={commonStyles.message}>\r\n                <div className={commonStyles.container}>\r\n                    <div className={commonStyles.bold}>{message.subject}</div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${commonStyles.inline} ${commonStyles.margin}`}>\r\n                        <span className={commonStyles.bold}>Project:</span>\r\n                        {message.project.name}\r\n                    </div>\r\n                    <div className={`${commonStyles.inline} ${commonStyles.margin}`}>\r\n                        <span className={commonStyles.bold}>List:</span>\r\n                        {message.list.name}\r\n                    </div>\r\n                    <div className={`${commonStyles.inline} ${commonStyles.margin}`}>\r\n                        <span className={commonStyles.bold}>Task:</span>\r\n                        {message.card.name}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Assigned by:</div>\r\n                    <div className={commonStyles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                { (message.team.isDeleted || message.project.isDeleted) &&\r\n                    <div className={commonStyles.bold}>Project deleted</div>\r\n                }\r\n                <div>\r\n                    { !message.team.isDeleted && !message.project.isDeleted &&\r\n                        <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => history.push(`/project-board/${message.team.id}/${message.project.id}`)}\r\n                            title='Go to Project'\r\n                        />\r\n                    }\r\n                    { isInbox\r\n                        ? <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                        : <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => setIsConfirmOpen(true)} \r\n                            title='Delete Message'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskAssignment","import React, { useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport ButtonGrey from '../../ButtonGrey'\r\nimport ConfirmDialog from '../../ConfirmationDialog'\r\nimport useInboxUtils from '../useInboxUtils'\r\n\r\nconst ElementDeleted = ({ message, setInboxHistory, options, isInbox, deletedElement }) => {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const { deleteMessage, moveToHistory } = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            { isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={commonStyles.message}>\r\n                <div className={commonStyles.container}>\r\n                    <div className={commonStyles.container}>\r\n                        {<div className={commonStyles.bold}>\r\n                            {deletedElement} {deletedElement === 'Team' ? message.team.name : message.project.name} deleted\r\n                        </div>}\r\n                    </div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Deleted by:</div>\r\n                    <div className={commonStyles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                <div>\r\n                    { isInbox\r\n                        ? <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                        : <ButtonGrey\r\n                            className={commonStyles.button}\r\n                            onClick={() => setIsConfirmOpen(true)}\r\n                            title='Delete Message'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ElementDeleted","import React, { useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport ButtonGrey from '../../ButtonGrey'\r\nimport ConfirmDialog from '../../ConfirmationDialog'\r\nimport EditTeam from '../../EditTeam'\r\nimport Transparent from '../../Transparent'\r\nimport useInboxUtils from '../useInboxUtils'\r\n\r\nconst TeamInvitationCanceled = ({ message, setInboxHistory, options, isInbox }) => {\r\n    const [isShownTeamForm, setIsShownTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const { deleteMessage, viewTeam, moveToHistory } = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            { isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={commonStyles.message}>\r\n                <div className={commonStyles.container}>\r\n                    <div className={commonStyles.bold}>{message.subject}</div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString('en-US', options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Team name:</div>\r\n                    <div className={commonStyles.inline}>{message.team.name}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${commonStyles.bold} ${commonStyles.inline}`}>Invited by:</div>\r\n                    <div className={commonStyles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                { message.team.isDeleted\r\n                    ? <div className={commonStyles.bold}>Team deleted</div>\r\n                    : <ButtonGrey\r\n                        className={commonStyles.button}\r\n                        onClick={() => viewTeam(message, setCurrTeam, setIsShownTeamForm)}\r\n                        title='View Team'\r\n                    />\r\n                }\r\n                { isInbox \r\n                    ? <ButtonGrey\r\n                        className={commonStyles.button}\r\n                        onClick={() => moveToHistory(message)}\r\n                        title='Move to History'\r\n                    />\r\n                    : <ButtonGrey\r\n                        className={commonStyles.button}\r\n                        onClick={() => setIsConfirmOpen(true)}\r\n                        title='Delete Message'\r\n                    />\r\n                }\r\n                { isShownTeamForm &&\r\n                    <Transparent hideForm={() => setIsShownTeamForm(false)}>\r\n                        <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => setIsShownTeamForm(false)} />\r\n                    </Transparent>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeamInvitationCanceled","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport TeamInvitationInbox from '../../components/Inbox/TeamInvitationInbox'\r\nimport TeamInvitationHistory from '../../components/Inbox/TeamInvitationHistory'\r\nimport TeamInvitationResponse from '../../components/Inbox/TeamInvitationResponse'\r\nimport TaskAssignment from '../../components/Inbox/TaskAssignment'\r\nimport Title from '../../components/Title'\r\nimport ElementDeleted from '../../components/Inbox/ElementDeleted'\r\nimport TeamInvitationCanceled from '../../components/Inbox/TeamInvitationCanceled'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\nconst options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }\r\n\r\nconst InboxPage = () => {\r\n    const [inbox, setInbox] = useState([])\r\n    const [inboxHistory, setInboxHistory] = useState([])\r\n    const socket = useSocket()\r\n    const { getUserInbox } = useUserServices()\r\n\r\n    const getInbox = useCallback(async () => {\r\n        const user = await getUserInbox()\r\n        setInbox(user.inbox.reverse())\r\n        setInboxHistory(user.inboxHistory.reverse())\r\n    }, [getUserInbox])\r\n\r\n    useEffect(() => {\r\n        getInbox()\r\n    }, [getInbox])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        setInbox(response.inboxUser.inbox.reverse())\r\n        setInboxHistory(response.inboxUser.inboxHistory.reverse())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Title title='Inbox' />\r\n            {\r\n                inbox.length === 0 && <div className={styles.title}>Inbox is empty</div>\r\n            }\r\n            {\r\n                inbox.map(m => {\r\n                    switch (m.subject) {\r\n                        case 'Team invitation':\r\n                            return <TeamInvitationInbox\r\n                                key={m._id}\r\n                                message={m}\r\n                                setInbox={setInbox}\r\n                                setInboxHistory={setInboxHistory}\r\n                                options={options}\r\n                            />\r\n\r\n                        case 'Team invitation response':\r\n                            return <TeamInvitationResponse\r\n                                key={m._id}\r\n                                message={m}\r\n                                setInboxHistory={setInboxHistory}\r\n                                options={options}\r\n                                isInbox={true}\r\n                            />\r\n\r\n                        case 'Team invitation canceled':\r\n                            return <TeamInvitationCanceled\r\n                                key={m._id}\r\n                                message={m}\r\n                                setInboxHistory={setInboxHistory}\r\n                                options={options}\r\n                                isInbox={true}\r\n                            />\r\n\r\n                        case 'Task assignment':\r\n                            return <TaskAssignment\r\n                                key={m._id}\r\n                                message={m}\r\n                                setInboxHistory={setInboxHistory}\r\n                                options={options}\r\n                                isInbox={true}\r\n                            />\r\n\r\n                        case 'Team deleted':\r\n                            return <ElementDeleted\r\n                                key={m._id}\r\n                                message={m}\r\n                                setInboxHistory={setInboxHistory}\r\n                                options={options}\r\n                                isInbox={true}\r\n                                deletedElement={'Team'}\r\n                            />\r\n\r\n                        case 'Project deleted':\r\n                            return <ElementDeleted\r\n                                key={m._id}\r\n                                message={m}\r\n                                setInboxHistory={setInboxHistory}\r\n                                options={options}\r\n                                isInbox={true}\r\n                                deletedElement={'Project'}\r\n                            />\r\n\r\n                        default:\r\n                            break\r\n                    }\r\n\r\n                    return ''\r\n                })\r\n            }\r\n            {\r\n                inboxHistory.length !== 0 &&\r\n                <>\r\n                    <Title title='History' />\r\n                    {\r\n                        inboxHistory.map(m => {\r\n                            switch (m.subject) {\r\n                                case 'Team invitation':\r\n                                    return <TeamInvitationHistory\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                    />\r\n\r\n                                case 'Team invitation response':\r\n                                    return <TeamInvitationResponse\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team invitation canceled':\r\n                                    return <TeamInvitationCanceled\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Task assignment':\r\n                                    return <TaskAssignment\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team deleted':\r\n                                    return <ElementDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                        deletedElement={'Team'}\r\n                                    />\r\n\r\n                                case 'Project deleted':\r\n                                    return <ElementDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                        deletedElement={'Project'}\r\n                                    />\r\n\r\n                                default:\r\n                                    break\r\n                            }\r\n\r\n                            return ''\r\n                        })\r\n                    }\r\n                </>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default InboxPage","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from '../utils/cookie'\r\n\r\nconst CARDS_URL = '/api/projects/lists/cards'\r\n\r\nexport default function useCardsServices() {\r\n    const history = useHistory()\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const createTask = useCallback(async (listId, taskName) => {\r\n        const response = await fetch(`${CARDS_URL}/${listId}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                name: taskName,\r\n                progress: ''\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const editTask = useCallback(async (listId, cardId, editedFields) => {\r\n        const response = await fetch(`${CARDS_URL}/${listId}/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify(editedFields)\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n    \r\n    const deleteTask = useCallback(async (listId, cardId) => {\r\n        const response = await fetch(`${CARDS_URL}/${listId}/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n        \r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const addTaskMember = useCallback(async (listId, cardId, members, selectedUser, teamId, projectId) => {\r\n        const response = await fetch(`${CARDS_URL}/${listId}/${cardId}/add-member`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                members,\r\n                newMember: selectedUser,\r\n                teamId,\r\n                projectId,\r\n                cardId,\r\n                listId\r\n            })\r\n        })\r\n        \r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const addAttachment = useCallback(async (cardId, attachment) => {\r\n        const response = await fetch(`${CARDS_URL}/attachments/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                attachment\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const removeAttachment = useCallback(async (cardId, attachmentId) => {\r\n        const response = await fetch(`${CARDS_URL}/attachments/${cardId}/${attachmentId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    return {\r\n        createTask,\r\n        editTask,\r\n        deleteTask,\r\n        addTaskMember,\r\n        addAttachment,\r\n        removeAttachment\r\n    }\r\n}","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport AvatarUser from '../AvatarUser'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\nconst ShowAllTaskMembers = ({ members, deleteMemberOption, deleteMemberObj }) => {\r\n    const socket = useSocket()\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n    const { editTask } = useCardsServices()\r\n\r\n    function onClick(m) {\r\n        if (deleteMemberOption) {\r\n            setIsConfirmOpen(true)\r\n            setCurrElement(m)\r\n        }\r\n    }\r\n\r\n    const updateSocket = () => {\r\n        const { project, teamId } = deleteMemberObj\r\n\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        const { cardMembers, setCardMembers, cardId, listId } = deleteMemberObj\r\n\r\n        const index = cardMembers.indexOf(member)\r\n        const members = [...cardMembers]\r\n\r\n        if (index !== -1) {\r\n            members.splice(index, 1)\r\n        }\r\n\r\n        const editedFields = { members }\r\n        await editTask(listId, cardId, editedFields)\r\n\r\n        updateSocket()\r\n        setCardMembers(members)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this member'}\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => deleteMember(currElement)}\r\n                />\r\n            }\r\n            <div className={styles['all-card-members']}>\r\n                {members.map((m, index) => {\r\n                    return (\r\n                        <div key={index} className={styles['each-member']} onClick={() => onClick(m)} >\r\n                            <div className={styles.name}>\r\n                                <span className={styles.avatar} key={m._id}>\r\n                                    <AvatarUser user={m}\r\n                                        size={30}\r\n                                        className={styles.avatar}\r\n                                    />\r\n                                </span>\r\n                                <span className={styles.username}>{m.username}</span>\r\n                            </div>\r\n                            { deleteMemberOption && <span className={styles['delete-icon']}>x</span>}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowAllTaskMembers","import React, { useMemo } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport styles from './index.module.css'\r\nimport AvatarUser from '../AvatarUser'\r\nimport ShowAllTaskMembers from '../ShowAllTaskMembers'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nconst MembersList = ({ members, maxLength, deleteMemberOption, deleteMemberObj }) => {\r\n    const [isActive, setIsActive, ref] = useDetectOutsideClick()\r\n    const shownMembers = useMemo(() => (members.length > maxLength) ? members.slice(0, maxLength - 1) : members, [members, maxLength])\r\n\r\n    return (\r\n        <div\r\n            className={styles.members}\r\n            onClick={() => setIsActive(true)}\r\n            ref={ref}\r\n        >\r\n            { isActive &&\r\n                <ShowAllTaskMembers\r\n                    members={members}\r\n                    deleteMemberOption={deleteMemberOption}\r\n                    deleteMemberObj={deleteMemberObj}\r\n                />\r\n            }\r\n            {shownMembers.map(member => {\r\n                return (\r\n                    <span className={styles.avatar} key={member._id}>\r\n                        <AvatarUser user={member}\r\n                            size={30}\r\n                            className={styles.avatar}\r\n                        />\r\n                    </span>\r\n                )\r\n            })}\r\n            {(members.length > maxLength) &&\r\n                <span className={styles.avatar}>\r\n                    <Avatar\r\n                        color={'grey'}\r\n                        // split number of remaining members (and + sign) with spaces in b/n\r\n                        // so that they are correctly displayed by the Avatar component\r\n                        name={['+', ...(`${members.length - maxLength + 1}`.split(''))].join(' ')}\r\n                        size={30}\r\n                        round={true}\r\n                        maxInitials={3}\r\n                        className={styles.avatar}\r\n                    />\r\n                </span>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MembersList","export default __webpack_public_path__ + \"static/media/members.ec534a02.svg\";","import React, { useEffect, useState } from 'react'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport commonStyles from '../index.module.css'\r\nimport styles from './index.module.css'\r\nimport MembersList from '../../MembersList'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\nimport useProjectsServices from '../../../services/useProjectsServices'\r\nimport useTeamServices from '../../../services/useTeamServices'\r\nimport membersPic from '../../../images/edit-card/members.svg'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\nimport ConfirmDialog from '../../ConfirmationDialog'\r\n\r\nconst TaskMembers = ({ card, listId, project, teamId }) => {\r\n    const socket = useSocket()\r\n    const [users, setUsers] = useState([])\r\n    const [cardMembers, setCardMembers] = useState(null)\r\n    const [selectedUser, setSelectedUser] = useState(null)\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const [isActive, setIsActive, ref] = useDetectOutsideClick()\r\n    const { addProjectMember } = useProjectsServices()\r\n    const { addTaskMember } = useCardsServices()\r\n    const { getTeamUsers } = useTeamServices()\r\n\r\n    useEffect(() => {\r\n        setCardMembers(card.members)\r\n    }, [card.members])\r\n\r\n    const handleGetTeamUsers = async () => {\r\n        const data = await getTeamUsers(teamId)\r\n        let teamUsers = data.members\r\n\r\n        for (const member in cardMembers) {\r\n            teamUsers = teamUsers.filter((obj) => obj._id !== cardMembers[member]._id)\r\n        }\r\n        \r\n        setUsers(teamUsers)\r\n    }\r\n\r\n    const handleSelect = (id) => {\r\n        if (id === 'select') return\r\n\r\n        const user = users.find(u => u._id === id)\r\n        setSelectedUser(user)\r\n\r\n        // eslint-disable-next-line prefer-destructuring\r\n        const result = project.membersRoles.filter(p => p.memberId._id === user._id)[0]\r\n\r\n        if (!result) {\r\n            setIsConfirmOpen(true)\r\n            return\r\n        }\r\n        \r\n        handleAddTaskMember(false, user)\r\n    }\r\n    \r\n    const onClick = () => {\r\n        handleGetTeamUsers()\r\n        setIsActive(!isActive)\r\n    }\r\n    \r\n    const handleAddTaskMember = async (shouldAddProjectMebmer, user) => {\r\n        if (shouldAddProjectMebmer) {\r\n            await addProjectMember(project._id, user)\r\n        }\r\n\r\n        const members = [...cardMembers, user]\r\n\r\n        await addTaskMember(listId, card._id, members, user, teamId, project._id)\r\n\r\n        setIsActive(!isActive)\r\n        setCardMembers(members)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n        socket.emit('message-sent', user._id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={commonStyles['small-buttons']} onClick={onClick} >\r\n                <img className={commonStyles.pics} src={membersPic} alt='' />\r\n                Add Teammate\r\n            </div>\r\n            { isActive && <form ref={ref} >\r\n                <select className={styles.select} onChange={e => { handleSelect(e.target.value) }}>\r\n                    <option value={'select'}>Select</option>\r\n                    {users.map(m => (\r\n                        <option key={m._id} value={m._id}>{m.username}</option>\r\n                    ))}\r\n                </select>\r\n            </form>}\r\n            { !isActive && card.members.length > 0 && <div className={styles.members}>\r\n                <MembersList\r\n                    members={card.members}\r\n                    maxLength={4}\r\n                    deleteMemberOption={true}\r\n                    deleteMemberObj={{\r\n                        cardMembers,\r\n                        setCardMembers,\r\n                        cardId: card._id,\r\n                        listId,\r\n                        project,\r\n                        teamId,\r\n                    }}\r\n                />\r\n            </div>}\r\n            {isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title={`add ${selectedUser.username} to project`}\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => handleAddTaskMember(true, selectedUser)}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TaskMembers","export default __webpack_public_path__ + \"static/media/due-date.13437b35.svg\";","const FORMAT_REGEX = /%[aAbBdmwyY]/g\r\n\r\nconst MONTHS = [ \r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', \r\n    'August', 'September', 'October', 'November', 'December'\r\n]\r\n\r\nconst WEEKDAYS = [ \r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', \r\n    'Thursday', 'Friday', 'Saturday', 'Sunday'\r\n]\r\n\r\nconst MILLISECONDS_IN_DAY = 86400000\r\n\r\nconst FORMAT_OPTIONS = {\r\n    'y': (date) => date.getUTCFullYear().toString().slice(-2),      // short year (2018 => 18)\r\n    'Y': (date) => date.getUTCFullYear(),                           // full year (2018 => 2018)\r\n    'm': (date) => `0${date.getMonth() + 1}`.slice(-2),             // month as a number (01 - 12)\r\n    'b': (date) => MONTHS[date.getMonth()].slice(0, 3),             // month, short (Dec, Apr etc.)\r\n    'B': (date) => MONTHS[date.getMonth()],                         // month, long (December)\r\n    'd': (date) => `0${date.getDate()}`.slice(-2),                  // day of month (01 - 31)\r\n    'a': (date) => WEEKDAYS[date.getDay()].slice(0, 3),             // weekday, short (Mon, Wed)\r\n    'A': (date) => WEEKDAYS[date.getDay()],                         // weekday, long (Monday)\r\n    'w': (date) => getWeekNumber(date),                             // week number of the year (1-53)\r\n}\r\n\r\nconst getDateWithOffset = (initialDate, daysOffset) => {\r\n    return new Date(initialDate.getTime() + daysOffset * MILLISECONDS_IN_DAY)\r\n}\r\n\r\nconst getMonday = (date) => {\r\n    date = date || new Date()\r\n\r\n    // need to change to 7 in case date is Sunday (which in JS is 0, while Monday is 1)\r\n    const dateDay = date.getDay() || 7\r\n    const monday = new Date(date)\r\n    monday.setDate(date.getDate() - (dateDay - 1))\r\n\r\n    return monday\r\n}\r\n\r\nconst getWeekNumber = (date) => {\r\n    // Thursday in current week decides the year\r\n    // (each week's year is the Gregorian year in which the Thursday falls)\r\n    const currWeekThursday = getDateWithOffset(getMonday(date), 3)\r\n\r\n    // January 4th is always in week 1\r\n    const week1 = new Date(date.getFullYear(), 0, 4)\r\n    const week1Thursday = getDateWithOffset(getMonday(week1), 3)\r\n\r\n    return 1 + Math.round((currWeekThursday.getTime() - week1Thursday.getTime()) / ( 7 * MILLISECONDS_IN_DAY))\r\n}\r\n\r\n/*  Receives a Javascript date as a first parameter and a format string \r\nas a second parameter and returns a string representing the date in \r\nthe desired format. The format string has several options which can be\r\nseen in the 'FORMAT_OPTIONS' constant above. \r\n!!! Every format option must be preceded by a percentage sign (%)\r\nExamples: \r\n    In: (date: new Date('2021-01-28'), formatString: '%y_%B_%d')\r\n   Out: '21_January_28'\r\n\r\n   In: (date: new Date('2020-05-12), formatString: '%a, %d %b, %Y')\r\n  Out: 'Tue, 12 May, 2020'\r\n */\r\nconst formatDate = (date, formatString) => {\r\n    return formatString.replace(FORMAT_REGEX, (substr) => {\r\n        // eslint-disable-next-line prefer-destructuring\r\n        const formatType = substr[1]\r\n        const result = FORMAT_OPTIONS[formatType](date)\r\n        return result\r\n    })\r\n}\r\n\r\n/* Returns true if the year, month and day of two dates are the same,\r\nand false otherwise (i.e. ignores time)\r\n*/\r\nconst checkDateEquality = (firstDate, secondDate) => {\r\n    return firstDate.getYear() === secondDate.getYear() \r\n        && firstDate.getMonth() === secondDate.getMonth() \r\n        && firstDate.getDate() === secondDate.getDate()\r\n}\r\n\r\n/* Returns 1 if firstDate is larger, -1 if secondDate is larger\r\nand 0 if the year, month and day of both dates are equal (ignores time)\r\n*/\r\nconst compareDates = (firstDate, secondDate) => {\r\n    const firstDateYear = firstDate.getYear()\r\n    const secondDateYear = secondDate.getYear()\r\n\r\n    if (firstDateYear !== secondDateYear) {\r\n        return 1 - 2 * (secondDateYear > firstDateYear)\r\n    }\r\n\r\n    const firstDateMonth = firstDate.getMonth()\r\n    const secondDateMonth = secondDate.getMonth() \r\n    \r\n    if (firstDateMonth !== secondDateMonth) {\r\n        return 1 - 2 * (secondDateMonth > firstDateMonth)\r\n    }\r\n\r\n    const firstDateDay = firstDate.getDate()\r\n    const secondDateDay = secondDate.getDate()\r\n\r\n    if (firstDateDay !== secondDateDay) {\r\n        return 1 - 2 * (secondDateDay > firstDateDay)\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nconst getDaysLeft = (dueDate) => {\r\n    return Math.ceil((Date.parse(dueDate) - Date.now()) / MILLISECONDS_IN_DAY)\r\n}\r\n\r\nexport {\r\n    formatDate,\r\n    checkDateEquality,\r\n    compareDates,\r\n    getDateWithOffset,\r\n    getMonday,\r\n    getDaysLeft\r\n}","import React, { useState, useEffect } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport commonStyles from '../index.module.css'\r\nimport styles from './index.module.css'\r\nimport dueDatePic from '../../../images/edit-card/due-date.svg'\r\nimport { formatDate } from '../../../utils/date'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\n\r\nconst TaskDueDate = ({ dueDate, card, listId, project, teamId }) => {\r\n    const socket = useSocket()\r\n    const [taskDueDate, setTaskDueDate] = useState(null)\r\n    const [formatedDueDate, setFormatedDueDate] = useState(null)\r\n    const [windowWidth, setWindowWidth] = useState(0)\r\n    const { editTask } = useCardsServices()\r\n    const today = new Date()\r\n    today.setUTCHours(0, 0, 0, 0)\r\n\r\n    useEffect(() => {\r\n        updateDimensions()\r\n        window.addEventListener('resize', updateDimensions)\r\n        return () => window.removeEventListener('resize', updateDimensions)\r\n    }, [])\r\n\r\n    const updateDimensions = () => {\r\n        setWindowWidth(window.innerWidth)\r\n    }\r\n\r\n    const datePickerPosition = (w) => {\r\n        if (w > 750) {\r\n            return 'bottom-end'\r\n        }\r\n\r\n        return 'bottom-start'\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTaskDueDate(dueDate)\r\n        if (taskDueDate) {\r\n            // taskDueDate.getTime() returns the number of milliseconds since the Unix Epoch (1 January 1970)\r\n            const date = taskDueDate.getTime() ? formatDate(taskDueDate, '%d-%m-%Y') : ''\r\n            setFormatedDueDate(date)\r\n        }\r\n    }, [dueDate, taskDueDate])\r\n\r\n    const updateProjectSocket = () => {\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const editCardDueDate = async (date) => {\r\n        if (taskDueDate === '' && date === '') {\r\n            console.log('return')\r\n            return\r\n        }\r\n\r\n        const editedFields = { dueDate: date }\r\n\r\n        await editTask(listId, card._id, editedFields)\r\n        updateProjectSocket()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DatePicker\r\n                customInput={\r\n                    <div className={commonStyles['small-buttons']} >\r\n                        <img className={commonStyles.pics} src={dueDatePic} alt='' />\r\n                        Due Date\r\n                    </div>\r\n                }\r\n                selected={formatedDueDate ? taskDueDate : today}\r\n                onChange={(date) => {\r\n                    setTaskDueDate(date)\r\n                    editCardDueDate(date)\r\n                }}\r\n                label='Go to date'\r\n                popperPlacement={datePickerPosition(windowWidth)}\r\n            />\r\n            { formatedDueDate && <div className={styles.date}>{formatedDueDate}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskDueDate","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport { formatDate } from '../../../utils/date'\r\n\r\nconst TaskHistory = ({ taskHistory }) => {\r\n\r\n    return (\r\n        <div className={styles.history}>\r\n            { taskHistory &&\r\n                [...taskHistory]\r\n                    .reverse()\r\n                    .map((m, index) => {\r\n                        return(\r\n                            <div key={index} >\r\n                                {`${formatDate(new Date(m.date), '%d.%m.%Y')} - ${m['event']}`}\r\n                            </div>\r\n                        )})\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskHistory","const getProgressBackgroundColor = (input) => {\r\n    if (Number(input) <= 10) {\r\n        return '#EF2D2D'\r\n    }\r\n\r\n    if (Number(input) < 100) {\r\n        return '#5E9DDC'\r\n    }\r\n    \r\n    if (Number(input) === 100) {\r\n        return '#0E8D27'\r\n    }\r\n}\r\n\r\nexport default getProgressBackgroundColor","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport getProgressBackgroundColor from '../../utils/getProgressBackgroundColor'\r\n\r\nconst ProgressBar = ({ progress }) => {\r\n\r\n    return (\r\n        <div className={styles.bar}>\r\n            <div\r\n                style={{\r\n                    width: `${progress}%`,\r\n                    backgroundColor: getProgressBackgroundColor(progress)\r\n                }}\r\n                className={styles.progress}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React, { useEffect, useState } from 'react'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\nimport { ESCAPE_KEY_CODE, ENTER_KEY_CODE } from '../../../utils/constats'\r\n\r\nconst EditCardProgressInput = ({\r\n    card,\r\n    listId,\r\n    project,\r\n    teamId,\r\n    setIsInputVisible,\r\n    taskHistory,\r\n    setTaskHistory,\r\n    inputClassName,\r\n    placeholderClassName,\r\n    isInputActive,\r\n    setIsInputActive\r\n}) => {\r\n    const socket = useSocket()\r\n    const [progress, setProgress] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const { editTask } = useCardsServices()\r\n    const today = new Date()\r\n    today.setUTCHours(0, 0, 0, 0)\r\n\r\n    useEffect(() => {\r\n        setProgress(card.progress)\r\n    }, [card.progress])\r\n\r\n    const changeProgress = async () => {\r\n        if (progress === null) {\r\n            setIsInputVisible(false)\r\n            setIsInputActive(false)\r\n            return\r\n        }\r\n\r\n        if (currInput === progress || !isInputOk) {\r\n            setProgress(currInput)\r\n            setIsInputOk(true)\r\n            setIsInputActive(false)\r\n            return\r\n        }\r\n\r\n        const history = [...taskHistory]\r\n        history.push({\r\n            event: `Progress ${progress}%`,\r\n            date: today\r\n        })\r\n        setTaskHistory(history)\r\n\r\n        const editedFields = { progress, history }\r\n        await editTask(listId, card._id, editedFields)\r\n\r\n        setIsInputActive(false)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n\r\n    }\r\n\r\n    const onKeyDown = (event) => {\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            setProgress(currInput)\r\n            setIsInputActive(false)\r\n            setIsInputOk(true)\r\n\r\n            if (currInput === null) {\r\n                setIsInputVisible(false)\r\n            }\r\n            \r\n            return\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            changeProgress()\r\n        }\r\n    }\r\n\r\n    const onKeyUp = () => {\r\n        if (!progress || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n            return\r\n        }\r\n\r\n        setIsInputOk(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isInputActive\r\n                ? <input\r\n                    autoFocus\r\n                    type='number'\r\n                    min='0'\r\n                    max='100'\r\n                    className={`${inputClassName} ${!isInputOk && styles['bad-input']}`}\r\n                    value={progress}\r\n                    onKeyDown={onKeyDown}\r\n                    onKeyUp={onKeyUp}\r\n                    onChange={e => setProgress(e.target.value)}\r\n                    onBlur={changeProgress}\r\n                    onFocus={() => setCurrInput(progress)}\r\n                />\r\n                : <div className={placeholderClassName} onClick={() => setIsInputActive(true)}>{card.progress}%</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCardProgressInput","export default __webpack_public_path__ + \"static/media/progress.da3fabc3.svg\";","import React, { useState, useEffect } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport styles from './index.module.css'\r\nimport ProgressBar from '../../ProgressBar'\r\nimport EditCardProgressInput from '../../Inputs/EditCardProgressInput'\r\nimport progressPic from '../../../images/edit-card/progress.svg'\r\n\r\nconst TaskProgress = ({ card, listId, project, teamId, taskHistory, setTaskHistory }) => {\r\n    const [isInputVisible, setIsInputVisible] = useState(false)\r\n    const [isInputActive, setIsInputActive] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsInputVisible(card.progress !== null)\r\n    }, [card.progress])\r\n\r\n    const onClick = () => {\r\n        setIsInputVisible(true)\r\n        setIsInputActive(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={commonStyles['small-buttons']} onClick={onClick} >\r\n                <img className={commonStyles.pics} src={progressPic} alt='' />\r\n                Progress\r\n            </div>\r\n            {card.progress !== null &&\r\n                <div className={styles['progress-bar']} >\r\n                    <ProgressBar progress={card.progress} />\r\n                </div>\r\n            }\r\n            {isInputVisible && <div className={styles['progress-input-container']}>\r\n                <EditCardProgressInput\r\n                    card={card}\r\n                    listId={listId}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                    setIsInputVisible={setIsInputVisible}\r\n                    taskHistory={taskHistory}\r\n                    setTaskHistory={setTaskHistory}\r\n                    inputClassName={styles['progress-input']}\r\n                    placeholderClassName={styles.progress}\r\n                    isInputActive={isInputActive}\r\n                    setIsInputActive={setIsInputActive}\r\n                />\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskProgress","export default __webpack_public_path__ + \"static/media/download.14191704.svg\";","export default __webpack_public_path__ + \"static/media/remove.ce4f1a54.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport download from '../../images/edit-card/download.svg'\r\nimport remove from '../../images/edit-card/remove.svg'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\nconst AttachmentList = ({\r\n    attachments,\r\n    listRef,\r\n    card,\r\n    project,\r\n    teamId,\r\n    setIsDragCardDisabled,\r\n    setIsDragListDisabled\r\n}) => {\r\n    const socket = useSocket()\r\n    const [attachmentsArr, setAttachmentsArr] = useState([])\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n    const { removeAttachment } = useCardsServices()\r\n\r\n    useEffect(() => {\r\n        setAttachmentsArr(attachments)\r\n    }, [attachments])\r\n\r\n    const getFullDocumentUrl = (att) => {\r\n        return `https://res.cloudinary.com/${process.env.REACT_APP_CLOUD_NAME}/raw/upload/fl_attachment/${att.path}`\r\n    }\r\n\r\n    const handleDeteleAttachment = async (att) => {\r\n        const updatedCard = await removeAttachment(card._id, att._id)\r\n\r\n        setAttachmentsArr(updatedCard.attachments)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const onConfirm = () => {\r\n        handleDeteleAttachment(currElement)\r\n        \r\n        if (setIsDragCardDisabled) {\r\n            setIsDragCardDisabled(false)\r\n        }\r\n\r\n        if (setIsDragListDisabled) {\r\n            setIsDragListDisabled(false)\r\n        }\r\n    }\r\n    \r\n    const onDecline = () => {\r\n        if (setIsDragCardDisabled) {\r\n            setIsDragCardDisabled(false)\r\n        }\r\n\r\n        if (setIsDragListDisabled) {\r\n            setIsDragListDisabled(false)\r\n        }\r\n    }\r\n\r\n    const onRemoveClick = (attachment) => {\r\n        setConfirmOpen(true)\r\n        setCurrElement(attachment)\r\n    }\r\n\r\n    return (\r\n        <div ref={listRef}>\r\n            <div className={styles.container}>\r\n                <div className={styles.title}>Task Attachments</div>\r\n                {attachmentsArr.map((att, index) => (\r\n                    <div key={index} className={styles.attachment}>\r\n                        <div className={styles.name}>{att.name}.{att.format}</div>\r\n                        <div>\r\n                            <ButtonClean\r\n                                title={<img className={styles.button} src={download} alt='Download' />}\r\n                                onClick={() => window.open(getFullDocumentUrl(att), '_blank')}\r\n                            />\r\n                            <ButtonClean\r\n                                title={<img className={styles.button} src={remove} alt='Remove' />}\r\n                                onClick={() => onRemoveClick(att)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='remove this attachment'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={onConfirm}\r\n                    onDecline={onDecline}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  AttachmentList","export default __webpack_public_path__ + \"static/media/task-name.ca559522.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport AttachmentList from '../AttachmentList'\r\nimport Transparent from '../Transparent'\r\nimport pic1 from '../../images/edit-card/task-name.svg'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nconst Attachment = ({ att, attachments, card, project, teamId }) => {\r\n    const [isListVisible, setIsListVisible, listRef] = useDetectOutsideClick()\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className={styles.attachment}\r\n                onClick={() => setIsListVisible(true)}\r\n                title={att.name}\r\n            >\r\n                <img src={pic1} alt='' className={styles['att-picture']} />\r\n                <div className={styles.format}>{att.format}</div>\r\n            </div>\r\n            {isListVisible && <Transparent hideForm={() => setIsListVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                />\r\n            </Transparent >}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Attachment","export default __webpack_public_path__ + \"static/media/attachments.c59aaea5.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport commonStyles from '../index.module.css'\r\nimport styles from './index.module.css'\r\nimport Attachment from '../../Attachment'\r\nimport attachmentPic from '../../../images/edit-card/attachments.svg'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\n\r\nconst TaskAttach = ({ card, project, teamId }) => {\r\n    const socket = useSocket()\r\n    const [attachments, setAttachments] = useState(null)\r\n    const { addAttachment } = useCardsServices()\r\n\r\n    useEffect(() => {\r\n        setAttachments(card.attachments)\r\n    }, [card.attachments])\r\n\r\n    const handleAddAttachment = () => {\r\n        const widget = window.cloudinary.createUploadWidget({\r\n            cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n            uploadPreset: process.env.REACT_APP_UPLOAD_PRESET,\r\n            resourceType: 'raw'\r\n\r\n        }, async (error, result) => {\r\n            if (result.event === 'success') {\r\n                const { path } = result.info\r\n                const name = result.info.original_filename\r\n                let { format } = result.info\r\n\r\n                // Gets the format from path if cloudinary doesn`t recognize it (path example: v1615887046/vov2gj7vmvqi6h8dzfxf.png)\r\n                if (!format) {\r\n                    // eslint-disable-next-line prefer-destructuring\r\n                    format = path.split('.')[1]\r\n                }\r\n\r\n                const publicId = result.info.public_id\r\n                const attachment = { path, name, format, publicId }\r\n\r\n                const updatedCard = await addAttachment(card._id, attachment)\r\n                setAttachments(updatedCard.attachments)\r\n                socket.emit('project-update', project)\r\n                socket.emit('task-team-update', teamId)\r\n            }\r\n\r\n            if (error) {\r\n                //TODO: Handle errors\r\n\r\n                return\r\n            }\r\n        })\r\n\r\n        widget.open()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={commonStyles['small-buttons']} onClick={handleAddAttachment}>\r\n                <img className={commonStyles.pics} src={attachmentPic} alt='attachmentPic' />\r\n                Attach File\r\n            </div>\r\n            { attachments && <div className={styles['att-container']}>\r\n                {attachments.length <= 4 ? attachments.map(att => (\r\n                    <Attachment\r\n                        key={att._id}\r\n                        att={att}\r\n                        attachments={attachments}\r\n                        card={card}\r\n                        project={project}\r\n                        teamId={teamId}\r\n                    />\r\n                )) :\r\n                    <>\r\n                        {attachments.slice(0, 3).map(att => (\r\n                            <Attachment\r\n                                key={att._id}\r\n                                att={att}\r\n                                attachments={attachments}\r\n                                card={card}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                            />\r\n                        ))}\r\n                        <div className={`${styles.remaining} ${styles.attachment}`}>\r\n                            +{attachments.length - 3}\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskAttach","import React, { useEffect, useRef, useState } from 'react'\r\nimport { ESCAPE_KEY_CODE, ENTER_KEY_CODE } from '../../../utils/constats'\r\n\r\nconst ResponsiveTextArea = ({\r\n    value,\r\n    setValue,\r\n    onBlur,\r\n    onKeyDown,\r\n    onSubmit,\r\n    className,\r\n    toggleActive,\r\n    autoFocus\r\n}) => {\r\n    const inputRef = useRef(null)\r\n    const [areaHeight, setAreaHeight] = useState(null)\r\n    const [currValue, setCurrValue] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (inputRef.current) {\r\n            setAreaHeight(inputRef.current.scrollHeight + 2)\r\n        }\r\n\r\n        if (inputRef.current && autoFocus) {\r\n            inputRef.current.focus()\r\n        }\r\n    }, [autoFocus])\r\n\r\n    const handleBlur = () => {\r\n        if (!onBlur || value === currValue) {\r\n            return\r\n        }\r\n\r\n        onBlur()\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (onKeyDown) {\r\n            return onKeyDown(event)\r\n        }\r\n\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            setValue(currValue)\r\n\r\n            if (toggleActive) {\r\n                return toggleActive()\r\n            }\r\n\r\n            if (inputRef.current) {\r\n                // needs setTimeout in order to call handleBlur after setValue(currValue)\r\n                setTimeout(() => {  \r\n                    inputRef.current.blur()\r\n                }, 1)\r\n            }\r\n\r\n            return\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            if (value === currValue) {\r\n                inputRef.current.blur()\r\n\r\n                if (toggleActive) {\r\n                    toggleActive()\r\n                }\r\n\r\n                return\r\n            }\r\n            \r\n            if (onSubmit) {\r\n                onSubmit(event)\r\n            }\r\n\r\n            inputRef.current.blur()\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        setAreaHeight(inputRef.current.scrollHeight + 2)\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    const onFocus = () => {\r\n        setCurrValue(value)\r\n        const { length } = value\r\n        inputRef.current.setSelectionRange(length, length)\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            ref={inputRef}\r\n            className={className}\r\n            style={{ 'height': areaHeight }}\r\n            value={value}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={onChange}\r\n            onBlur={handleBlur}\r\n            onFocus={onFocus}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ResponsiveTextArea","export default __webpack_public_path__ + \"static/media/delete.fb545938.svg\";","import React, { useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport ConfirmDialog from '../../ConfirmationDialog'\r\nimport deletePic from '../../../images/edit-card/delete.svg'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\n\r\nconst TaskDelete = ({ cardId, listId, project, teamId, hideForm }) => {\r\n    const socket = useSocket()\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const { deleteTask } = useCardsServices()\r\n\r\n    const handleDeleteTask = async () => {\r\n        await deleteTask(listId, cardId)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n        hideForm()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={commonStyles['small-buttons']}\r\n                onClick={() => setIsConfirmOpen(true)}\r\n            >\r\n                <img className={commonStyles.pics} src={deletePic} alt='deletePic' />\r\n                Delete Task\r\n            </button>\r\n            {isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this task'}\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={handleDeleteTask}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskDelete\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport TaskMembers from '../EditCardOptions/TaskMembers'\r\nimport TaskDueDate from '../EditCardOptions/TaskDueDate'\r\nimport TaskHistory from '../EditCardOptions/TaskHistory'\r\nimport TaskProgress from '../EditCardOptions/TaskProgress'\r\nimport TaskAttach from '../EditCardOptions/TaskAttach'\r\nimport ResponsiveTextArea from '../Inputs/ResponsiveTextarea'\r\nimport TaskDelete from '../EditCardOptions/TaskDelete'\r\nimport taskNamePic from '../../images/edit-card/task-name.svg'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\nconst EditCard = ({ listId, card, project, teamId, hideForm }) => {\r\n    const socket = useSocket()\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [taskHistory, setTaskHistory] = useState(null)\r\n    const dueDate = useMemo(() => new Date(card.dueDate), [card.dueDate])\r\n    const { editTask } = useCardsServices()\r\n\r\n    useEffect(() => {\r\n        setName(card.name)\r\n        setDescription(card.description)\r\n        setTaskHistory(card.history)\r\n    }, [card])\r\n\r\n    const handleSubmit = async () => {\r\n        const editedFields = { name, description }\r\n        await editTask(listId, card._id, editedFields)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n            <div className={styles['task-name']}>\r\n                <span>\r\n                    <img src={taskNamePic} alt='taskNamePic' />\r\n                </span>\r\n                <ResponsiveTextArea\r\n                    value={name}\r\n                    setValue={setName}\r\n                    className={`${styles['name-input']} ${styles.text}`}\r\n                    autoFocus={false}\r\n                    onSubmit={handleSubmit}\r\n                    onBlur={handleSubmit}\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['task-body']} >\r\n                <div className={styles['left-side']}>\r\n                    <div>\r\n                        <div className={styles.text}>Description</div>\r\n                        <ResponsiveTextArea\r\n                            value={description}\r\n                            setValue={setDescription}\r\n                            className={styles['description-input']}\r\n                            autoFocus={false}\r\n                            onSubmit={handleSubmit}\r\n                            onBlur={handleSubmit}\r\n                        />\r\n                    </div>\r\n                    <div className={styles['task-component']}>\r\n                        <div className={styles.text}>History</div>\r\n                        <TaskHistory taskHistory={taskHistory} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles['task-component']}>\r\n                        <div className={styles.text}>Manage</div>\r\n                        <TaskDueDate\r\n                            dueDate={dueDate}\r\n                            card={card}\r\n                            listId={listId}\r\n                            project={project}\r\n                            teamId={teamId}\r\n                        />\r\n                        <TaskMembers\r\n                            card={card}\r\n                            listId={listId}\r\n                            project={project}\r\n                            teamId={teamId}\r\n                        />\r\n                        <TaskProgress\r\n                            card={card}\r\n                            listId={listId}\r\n                            project={project}\r\n                            teamId={teamId}\r\n                            taskHistory={taskHistory}\r\n                            setTaskHistory={setTaskHistory}\r\n                        />\r\n                        <TaskAttach\r\n                            card={card}\r\n                            project={project}\r\n                            teamId={teamId}\r\n                        />\r\n                        <TaskDelete\r\n                            cardId={card._id}\r\n                            listId={listId}\r\n                            project={project}\r\n                            teamId={teamId}\r\n                            hideForm={hideForm}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCard","import React from 'react'\r\nimport ButtonClean from '../ButtonClean'\r\nimport styles from './index.module.css'\r\nimport Transparent from '../Transparent'\r\nimport AttachmentList from '../AttachmentList'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport attPic from '../../images/edit-card/attachments.svg'\r\n\r\nconst AttachmentsLink = ({\r\n    card,\r\n    project,\r\n    teamId,\r\n    setIsDragCardDisabled,\r\n    setIsDragListDisabled\r\n}) => {\r\n    const [isVisible, setIsVisible, listRef] = useDetectOutsideClick()\r\n\r\n    const onClick = () => {\r\n        setIsVisible(true)\r\n\r\n        if (setIsDragCardDisabled) {\r\n            setIsDragCardDisabled(true)\r\n        }\r\n        \r\n        if (setIsDragListDisabled) {\r\n            setIsDragListDisabled(true)\r\n        }\r\n\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setIsVisible(false)\r\n\r\n        if (setIsDragCardDisabled) {\r\n            setIsDragCardDisabled(false)\r\n        }\r\n\r\n        if (setIsDragListDisabled) {\r\n            setIsDragListDisabled(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ButtonClean\r\n                className={`${styles.attachments} ${styles.button}`}\r\n                onClick={onClick}\r\n                title={<img src={attPic} alt='' width='14px' />}\r\n            />\r\n            { isVisible &&\r\n            <Transparent hideForm={hideForm} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={card.attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                    setIsDragCardDisabled={setIsDragCardDisabled}\r\n                    setIsDragListDisabled={setIsDragListDisabled}\r\n                />\r\n            </Transparent >\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttachmentsLink","import React, { useEffect, useState } from 'react'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\nimport { ESCAPE_KEY_CODE, ENTER_KEY_CODE } from '../../../utils/constats'\r\nimport getProgressBackgroundColor from '../../../utils/getProgressBackgroundColor'\r\n\r\nconst ProgressInput = ({\r\n    card,\r\n    listId,\r\n    project,\r\n    teamId,\r\n    inputClassName,\r\n    placeholderClassName,\r\n    isBackgroundStyled\r\n}) => {\r\n    const socket = useSocket()\r\n    const [progress, setProgress] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const [isInputActive, setIsInputActive] = useState(false)\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const { editTask } = useCardsServices()\r\n    const today = new Date()\r\n    today.setUTCHours(0, 0, 0, 0)\r\n\r\n    useEffect(() => {\r\n        setProgress(card.progress)\r\n    }, [card.progress])\r\n\r\n    const changeProgress = async () => {\r\n        if (progress === null) {\r\n            setIsInputActive(false)\r\n            return\r\n        }\r\n\r\n        if (Number(currInput) === Number(progress) || !isInputOk) {\r\n            setProgress(currInput)\r\n            setIsInputOk(true)\r\n            setIsInputActive(false)\r\n            return\r\n        }\r\n\r\n        const history = [...card.history]\r\n        history.push({\r\n            event: `Progress ${progress}%`,\r\n            date: today\r\n        })\r\n\r\n        const editedFields = { progress, history }\r\n        await editTask(listId, card._id, editedFields)\r\n\r\n        setIsInputActive(false)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n\r\n    }\r\n\r\n    const onKeyDown = (event) => {\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            setProgress(currInput)\r\n            setIsInputActive(false)\r\n            setIsInputOk(true)\r\n\r\n            return\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            changeProgress()\r\n        }\r\n    }\r\n\r\n    const onKeyUp = () => {\r\n        if (!progress || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n            return\r\n        }\r\n\r\n        setIsInputOk(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isInputActive\r\n                ? <input\r\n                    autoFocus\r\n                    type='number'\r\n                    min='0'\r\n                    max='100'\r\n                    className={`${inputClassName} ${!isInputOk && styles['bad-input']}`}\r\n                    value={progress}\r\n                    onKeyDown={onKeyDown}\r\n                    onKeyUp={onKeyUp}\r\n                    onChange={e => setProgress(e.target.value)}\r\n                    onBlur={changeProgress}\r\n                    onFocus={() => setCurrInput(progress)}\r\n                />\r\n                : card.progress\r\n                    ? <div\r\n                        className={placeholderClassName}\r\n                        onClick={() => setIsInputActive(true)}\r\n                        style={isBackgroundStyled && {\r\n                            backgroundColor: getProgressBackgroundColor(progress),\r\n                            border: 'solid black 1px'\r\n                        }}\r\n                    >{card.progress}%</div>\r\n                    : <div\r\n                        className={`${placeholderClassName} ${styles.add}`}\r\n                        onClick={() => setIsInputActive(true)}\r\n                    >+Add</div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProgressInput","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport Transparent from '../Transparent'\r\nimport EditCard from '../EditCard'\r\nimport AttachmentsLink from '../AttachmentsLink'\r\nimport ProgressInput from '../Inputs/ProgressInput'\r\nimport pen from '../../images/pen.svg'\r\nimport { getDaysLeft } from '../../utils/date'\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst MyTasksTask = ({ teamId, project, list, card }) => {\r\n    const [isEditCardActive, setIsEditCardActive] = useState(false)\r\n    const daysLeft = getDaysLeft(card.dueDate)\r\n\r\n    return (\r\n        <div key={card._id} className={styles.card}>\r\n            <div className={styles.task}>{card.name}</div>\r\n            <div className={styles.progress}>\r\n                <ProgressInput\r\n                    card={card}\r\n                    listId={list._id}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                    inputClassName={styles.input}\r\n                    placeholderClassName={styles['progress-div']}\r\n                />\r\n            </div>\r\n            <div className={styles.days}>\r\n                {card.progress === 100\r\n                    ? <div>Done</div>\r\n                    : Date.parse(card.dueDate) === 0 || !card.dueDate\r\n                        ? <div>No Deadline</div>\r\n                        : daysLeft < 0\r\n                            ? <div className={styles.deadline}>Deadline Passed</div>\r\n                            : <div>{daysLeft}</div>\r\n                }\r\n            </div>\r\n            <div className={styles['buttons-container']}>\r\n                {card.attachments.length > 0 && <AttachmentsLink card={card} project={project} teamId={teamId} />}\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setIsEditCardActive(true)}\r\n                    title={<img src={pen} alt='' width='14' />}\r\n                />\r\n            </div>\r\n            { isEditCardActive &&\r\n                <div className={styles.edit}>\r\n                    <Transparent hideForm={() => setIsEditCardActive(!isEditCardActive)} >\r\n                        <EditCard\r\n                            hideForm={() => setIsEditCardActive(!isEditCardActive)}\r\n                            card={card}\r\n                            listId={list._id}\r\n                            project={project}\r\n                            teamId={teamId}\r\n                        />\r\n                    </Transparent>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTasksTask","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport MyTasksTask from '../../components/MyTasksTask'\r\n\r\nconst MyTasksProject = ({ project, teamId }) => {\r\n    \r\n    return (\r\n        <div key={project._id} className={styles.project}>\r\n            <div className={styles['project-name']}>\r\n                <Link to={`/project-board/${teamId}/${project._id}`} className={styles.link}>\r\n                    <span className={styles.bold}>Project:</span> {project.name}\r\n                </Link>\r\n            </div>\r\n            <div className={`${styles.header} ${styles.raw}`}>\r\n                <div className={styles.list}>List:</div>\r\n                <div className={styles.container}>\r\n                    <div className={styles.task}>Task:</div>\r\n                    <div className={styles.progress}>Progress (%):</div>\r\n                    <div className={styles.days}>Days Till End:</div>\r\n                </div>\r\n            </div>\r\n            { project.lists.map(list => {\r\n                return (\r\n                    <div key={list._id} className={styles.raw}>\r\n                        <div className={styles.list}>{list.name}</div>\r\n                        <div className={styles['task-container']}>\r\n                            {list.cards.map(card => {\r\n                                return (\r\n                                    <MyTasksTask\r\n                                        key={card._id}\r\n                                        teamId={teamId}\r\n                                        project={project}\r\n                                        list={list}\r\n                                        card={card}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTasksProject","export default __webpack_public_path__ + \"static/media/my-tasks.46584e94.svg\";","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Title from '../../components/Title'\r\nimport MyTasksProject from '../../components/MyTasksProject'\r\nimport ButtonCleanTitle from '../../components/ButtonCleanTitle'\r\nimport ButtonClean from '../../components/ButtonClean'\r\nimport useUserServices from '../../services/useUserServices'\r\nimport myTasks from '../../images/my-tasks/my-tasks.svg'\r\n\r\nconst MyTasksPage = () => {\r\n    const { user, setUser } = useContext(UserContext)\r\n    const [projects, setProjects] = useState([])\r\n    const [isShownOldProjects, setIsShownOldProjects] = useState(false)\r\n    const { getUserTasks } = useUserServices()\r\n    const socket = useSocket()\r\n\r\n    const selectTeam = useCallback(async (teamId) => {\r\n        const data = await getUserTasks(teamId)\r\n\r\n        if (data === 'Team not found') return\r\n\r\n        setProjects(data)\r\n\r\n        if (teamId !== user.lastTeamSelected) {\r\n            const updatedUser = { ...user, lastTeamSelected: teamId }\r\n            setUser(updatedUser)\r\n        }\r\n    }, [user, getUserTasks, setUser])\r\n\r\n    useEffect(() => {\r\n        if (!user.lastTeamSelected || !socket) return\r\n        \r\n        socket.on('task-team-updated', taskTeamUpdate)\r\n        socket.on('task-update-team', (teamId) => {\r\n\r\n            if (teamId === user.lastTeamSelected) {\r\n                selectTeam(teamId)\r\n            }\r\n        })\r\n\r\n        socket.emit('task-team-join', user.lastTeamSelected)\r\n\r\n        return () => {\r\n            socket.off('task-team-updated')\r\n            socket.off('task-update-team')\r\n        }\r\n    }, [socket, selectTeam, user.lastTeamSelected])\r\n\r\n    useEffect(() => {\r\n        \r\n        if (user.lastTeamSelected) {\r\n            selectTeam(user.lastTeamSelected)\r\n        }\r\n    }, [selectTeam, user.lastTeamSelected])\r\n\r\n    function taskTeamUpdate(projects) {\r\n        setProjects(projects)\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Title title='My Tasks' />\r\n            <div className={styles['button-container']}>\r\n                <div className={styles['team-buttons']}>\r\n                    <span className={styles.title}>Teams:</span>\r\n                    {user.teams.map(team => {\r\n                        return <ButtonCleanTitle\r\n                            key={team._id}\r\n                            title={team.name}\r\n                            onClick={() => selectTeam(team._id)}\r\n                            className={`${styles.teams} ${user.lastTeamSelected === team._id && styles.selected}`}\r\n                        />\r\n                    })}\r\n                </div>\r\n                <ButtonClean\r\n                    className={`${styles.teams} ${styles['projects-button']}`}\r\n                    title={isShownOldProjects ? 'Current Projects' : 'Old Projects'}\r\n                    onClick={() => setIsShownOldProjects(!isShownOldProjects)}\r\n                />\r\n            </div>\r\n            {user.lastTeamSelected \r\n                ? <div className={styles.box}>\r\n                    {projects.length === 0 \r\n                        ? <div className={styles.title}>There are no current tasks</div> \r\n                        : projects.filter(p => isShownOldProjects === !!(p.isFinished))\r\n                            .reverse()\r\n                            .map(project => {\r\n                                return (\r\n                                    <MyTasksProject key={project._id} project={project} teamId={user.lastTeamSelected} />\r\n                                )\r\n                            })\r\n                    }\r\n                </div>\r\n                : <div className={styles.title}>Select a team</div>\r\n            }\r\n            {(!user.lastTeamSelected || projects.length === 0) &&\r\n                <div className={styles.pic}>\r\n                    <img src={myTasks} alt='' />\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default MyTasksPage","export default __webpack_public_path__ + \"static/media/error-page.65d8c265.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport errorPic from '../../images/error-page.svg' \r\n\r\nconst ErrorPage = () => {\r\n    \r\n    return (\r\n        <PageLayout>\r\n            <div className={styles.title}>Error Page</div>\r\n            <img className={styles.errorPic} src={errorPic} alt='' />\r\n            <div className={styles.text}>Something went wrong.</div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ErrorPage\r\n","export default __webpack_public_path__ + \"static/media/pic1.58db5727.svg\";","export default __webpack_public_path__ + \"static/media/pic2.28616bd4.svg\";","export default __webpack_public_path__ + \"static/media/pic3.939d1110.svg\";","export default __webpack_public_path__ + \"static/media/pic4.78124d5d.svg\";","import React, { useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Transparent from '../../components/Transparent'\r\nimport CreateTeam from '../../components/CreateTeam'\r\nimport ButtonGreyTitle from '../../components/ButtonGreyTitle'\r\nimport logo from '../../images/logo.svg'\r\nimport getStartedPagePic1 from '../../images/get-started/pic1.svg'\r\nimport getStartedPagePic2 from '../../images/get-started/pic2.svg'\r\nimport getStartedPagePic3 from '../../images/get-started/pic3.svg'\r\nimport getStartedPagePic4 from '../../images/get-started/pic4.svg'\r\n\r\nconst GetStarted = () => {\r\n    const [isTeamFormShown, setIsTeamFormShown] = useState(false)\r\n\r\n    return (\r\n        <PageLayout>\r\n            {\r\n                isTeamFormShown &&\r\n                <Transparent hideForm={() => setIsTeamFormShown(false)}>\r\n                    <CreateTeam hideForm={() => { setIsTeamFormShown(false) }} />\r\n                </Transparent>\r\n            }\r\n            <div className={styles.container}>\r\n                <div className={styles['logo-div']}>\r\n                    <img className={styles.logo} src={logo} alt='' />\r\n                </div>\r\n\r\n                <div className={styles.title}>\r\n                    Welcome to Smart Manager\r\n                </div>\r\n\r\n                <div className={styles.title}>\r\n                    Get to know how to use Smart Manager in few quick steps:\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    1. - In order to start using Smart Manager you have to be part of a team - you can create your own and work by yourself,  invite your colleagues and friends or can be invited in others by other smart manager users.\r\n                    You can create and join as many teams you want.\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic} src={getStartedPagePic1} alt='' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    2. - When you are already part of a team you can create and join different projects - again as many as you need. In your projects you can add your teammates and work together or you can organize your tasks by yourself.\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic} src={getStartedPagePic2} alt='' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    3. - In each project you can organize your tasks by separating them into different lists - for example - To Do, Doing and Done or any other way. You can create as many lists you need. The tasks can be moved from one list to another or within the lists.\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic3} src={getStartedPagePic3} alt='' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    4. - You can create as many tasks you need which gives you endless opportunities to keep track of the work you are doing. You can assign people for each task, select a due date and fill the progress as you work. You can attach files for each task and also keep track of the progress with task history.\r\n                    <div className={styles['pic-div']}>\r\n                        <img className={styles.pic} src={getStartedPagePic4} alt='' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.paragraph}>\r\n                    5. - Great! You are all set. Start your Smart experience and continue exploring countless opportunities by creating your first team.\r\n                    <div>\r\n                        <ButtonGreyTitle className={styles['navigate-buttons']} title={'Create New Team'}\r\n                            onClick={() => setIsTeamFormShown(true)} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.greeting}>\r\n                    Enjoy!\r\n                    <div >\r\n                        Smart Manager Team\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default GetStarted","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport MembersList from '../MembersList'\r\nimport ProgressBar from '../ProgressBar'\r\nimport AttachmentsLink from '../AttachmentsLink'\r\nimport Transparent from '../Transparent'\r\nimport EditCard from '../EditCard'\r\nimport pen from '../../images/pen.svg'\r\n\r\nconst Card = ({ card, listId, project, setIsDragCardDisabled, setIsDragListDisabled }) => {\r\n    const { teamid: teamId } = useParams()\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    const hideForm = () => {\r\n        setIsVisible(!isVisible)\r\n        setIsDragCardDisabled(false)\r\n        setIsDragListDisabled(false)\r\n    }\r\n\r\n    const onClick = () => {\r\n        setIsDragCardDisabled(true)\r\n        setIsDragListDisabled(true)\r\n        setIsVisible(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.card}>\r\n                <div>\r\n                    {((card.progress && card.progress !== 0) || card.members.length > 0 || card.attachments.length > 0) &&\r\n                        <div className={styles.container}>\r\n                            { card.progress\r\n                                ? <div className={styles.progress}>\r\n                                    <ProgressBar progress={card.progress} />\r\n                                </div>\r\n                                : <div></div>\r\n                            }\r\n                            <div className={styles.container}>\r\n                                {card.attachments.length > 0 &&\r\n                                    <AttachmentsLink\r\n                                        card={card}\r\n                                        project={project}\r\n                                        teamId={teamId}\r\n                                        setIsDragCardDisabled={setIsDragCardDisabled}\r\n                                        setIsDragListDisabled={setIsDragListDisabled}\r\n                                    />\r\n                                }\r\n                                <MembersList\r\n                                    members={card.members}\r\n                                    maxLength={2}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className={styles['card-name']}>\r\n                        {card.name}\r\n                    </div>\r\n                </div>\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={onClick}\r\n                    title={<img src={pen} alt='' width='11.5' />}\r\n                />\r\n            </div >\r\n            {isVisible &&\r\n                <Transparent hideForm={hideForm} >\r\n                    <EditCard\r\n                        hideForm={hideForm}\r\n                        card={card}\r\n                        listId={listId}\r\n                        project={project}\r\n                        teamId={teamId}\r\n                    />\r\n                </Transparent >\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card","import { useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport getCookie from '../utils/cookie'\r\n\r\nconst LISTS_URL = '/api/projects/lists'\r\n\r\nexport default function useListsServices() {\r\n    const history = useHistory()\r\n\r\n    const getHeaders = () => {\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': getCookie('x-auth-token')\r\n        }\r\n    }\r\n\r\n    const createList = useCallback(async (projectId, listName) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const editList = useCallback(async (projectId, listId, name, color) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}/${listId}`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({ name, color })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const deleteList = useCallback(async (projectId, listId) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}/${listId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders()\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const dragAndDropList = useCallback(async (projectId, listId, position) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}/${listId}/dnd-list`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                position,\r\n                element: 'list',\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        return await response.json()\r\n    }, [history])\r\n\r\n    const dragAndDropCard = useCallback(async (projectId, cardId, position, source, destination) => {\r\n        const response = await fetch(`${LISTS_URL}/${projectId}/${cardId}/dnd-card`, {\r\n            method: 'PUT',\r\n            headers: getHeaders(),\r\n            body: JSON.stringify({\r\n                position,\r\n                element: 'card',\r\n                source,\r\n                destination\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n    }, [history])\r\n\r\n    return {\r\n        createList,\r\n        editList,\r\n        deleteList,\r\n        dragAndDropList,\r\n        dragAndDropCard\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { SketchPicker } from 'react-color'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport Title from '../Title'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ResponsiveTextArea from '../Inputs/ResponsiveTextarea'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport useListsServices from '../../services/useListsServices'\r\n\r\nconst EditList = ({ list, project, hideForm }) => {\r\n    const socket = useSocket()\r\n    const [name, setName] = useState(list.name)\r\n    const [color, setColor] = useState(list.color || '#A6A48E')\r\n    const [isColorActive, setIsColorActive, dropdownRef] = useDetectOutsideClick()\r\n    const { editList } = useListsServices()\r\n\r\n    const { teamid: teamId } = useParams()\r\n\r\n    const handleSubmit = async () => {\r\n        await editList(project._id, list._id, name, color)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n        hideForm()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            <Title title='Edit List' />\r\n            <div className={styles['input-container']}>\r\n                <span className={styles.name}>Name</span>\r\n                <ResponsiveTextArea\r\n                    value={name}\r\n                    setValue={setName}\r\n                    className={`${styles['name-input']} ${styles.text}`}\r\n                    autoFocus={true}\r\n                />\r\n            </div>\r\n            <div className={styles['change-color']}>\r\n                <span className={styles['color-title']}>Color</span>\r\n                <ButtonClean\r\n                    className={styles['color-button']}\r\n                    style={{ background: `${color}` }}\r\n                    onClick={() => setIsColorActive(!isColorActive)}\r\n                />\r\n            </div>\r\n            {isColorActive && <div ref={dropdownRef} >\r\n                <SketchPicker\r\n                    className={styles['color-pick']}\r\n                    color={color} onChangeComplete={color => setColor(color.hex)}\r\n                />\r\n            </div>}\r\n            <div className={styles['edit-list-button']}>\r\n                <ButtonGrey onClick={handleSubmit} title='Edit List' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditList","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport ConfirmDialog from '../ConfirmationDialog'\r\nimport EditList from '../EditList'\r\nimport Transparent from '../Transparent'\r\nimport useListsServices from '../../services/useListsServices'\r\n\r\nconst ListDropdown = ({\r\n    project,\r\n    list,\r\n    isDropdownActive,\r\n    setIsDropdownActive,\r\n    dropdownRef,\r\n    setIsDragListDisabled\r\n}) => {\r\n    const socket = useSocket()\r\n    const [isVisibleEditList, setIsVisibleEditList] = useState(false)\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const { deleteList } = useListsServices()\r\n    \r\n    const { teamid: teamId } = useParams()\r\n\r\n    const handleDeleteList = async () => {\r\n        await deleteList(project._id, list._id)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const editList = () => {\r\n        setIsVisibleEditList(true)\r\n        setIsDropdownActive(!isDropdownActive)\r\n        setIsDragListDisabled(true)\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setIsDragListDisabled(false)\r\n        setIsVisibleEditList(!isVisibleEditList)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.relative}>\r\n                {isDropdownActive && <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                    <ButtonGrey\r\n                        onClick={editList}\r\n                        title='Edit'\r\n                        className={styles.edit}\r\n                    />\r\n                    <ButtonGrey\r\n                        onClick={() => {\r\n                            setIsConfirmOpen(true)\r\n                            setIsDragListDisabled(true)\r\n                        }}\r\n                        title='Delete'\r\n                        className={styles.delete}\r\n                    />\r\n                </div>}\r\n            </div>\r\n\r\n            {isVisibleEditList &&\r\n                <Transparent hideForm={hideForm} >\r\n                    <EditList hideForm={hideForm} list={list} project={project} />\r\n                </Transparent >\r\n            }\r\n\r\n            {isConfirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'you wish to delete this list'}\r\n                    hideConfirm={() => setIsConfirmOpen(false)}\r\n                    onConfirm={() => {\r\n                        handleDeleteList()\r\n                        setIsDragListDisabled(false)\r\n                    }}\r\n                    onDecline={() => setIsDragListDisabled(false)}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListDropdown","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport { ESCAPE_KEY_CODE, ENTER_KEY_CODE } from '../../../utils/constats'\r\n\r\nconst ProjectBoardInput = ({ value, setValue, onEnter, onEscape, className }) => {\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            setValue('')\r\n            onEscape()\r\n            return\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            onEnter()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input\r\n            autoFocus\r\n            className={`${styles.input} ${className}`}\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProjectBoardInput\r\n","import React, { useState } from 'react'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ProjectBoardInput from '../Inputs/ProjectBoardInput'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport useCardsServices from '../../services/useCardsServices'\r\n\r\nconst AddProjectBoardTask = ({ project, listId }) => {\r\n    const socket = useSocket()\r\n    const [taskName, setTaskName] = useState('')\r\n    const [isAddTaskVisible, setIsAddTaskVisible, cardRef] = useDetectOutsideClick()\r\n    const { createTask } = useCardsServices()\r\n\r\n    const addTask = async () => {\r\n        if (taskName === '') {\r\n            setIsAddTaskVisible(false)\r\n            return\r\n        }\r\n\r\n        await createTask(listId, taskName)\r\n        setIsAddTaskVisible(false)\r\n        setTaskName('')\r\n        socket.emit('project-update', project)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.task} >\r\n            {isAddTaskVisible ?\r\n                <div ref={cardRef} className={styles.container} >\r\n                    <ProjectBoardInput\r\n                        value={taskName}\r\n                        setValue={setTaskName}\r\n                        onEnter={addTask}\r\n                        onEscape={() => setIsAddTaskVisible(false)}\r\n                    />\r\n                    <ButtonClean\r\n                        className={styles.button}\r\n                        onClick={addTask}\r\n                        title='+ Add Task'\r\n                    />\r\n                </div>\r\n                :\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setIsAddTaskVisible(true)}\r\n                    title='+ Add Task'\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProjectBoardTask\r\n","export default __webpack_public_path__ + \"static/media/dots.d8dec8c6.svg\";","import React, { useState } from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport Card from '../Card'\r\nimport ListColor from '../ListColor'\r\nimport ListDropdown from '../ListDropdown'\r\nimport AddProjectBoardTask from '../AddProjectBoardTask'\r\nimport dotsPic from '../../images/dots.svg'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nconst List = ({ isAdmin, project, list, setIsDragListDisabled }) => {\r\n    const [isDragCardDisabled, setIsDragCardDisabled] = useState(false)\r\n    const [isDropdownActive, setIsDropdownActive, dropdownRef] = useDetectOutsideClick()\r\n\r\n    return (\r\n        <div className={styles.list}>\r\n            <div className={styles.header}>\r\n                <div>\r\n                    <div className={styles.name} title={list.name} >{list.name}</div>\r\n                    <ListColor color={list.color || '#A6A48E'} type={'list'} />\r\n                </div>\r\n                {isAdmin &&\r\n                    <ButtonClean\r\n                        className={styles.button}\r\n                        onClick={() => setIsDropdownActive(!isDropdownActive)}\r\n                        title={<img src={dotsPic} alt='' width='20' />}\r\n                    />\r\n                }\r\n            </div>\r\n            <ListDropdown\r\n                project={project}\r\n                list={list}\r\n                isDropdownActive={isDropdownActive}\r\n                setIsDropdownActive={setIsDropdownActive}\r\n                dropdownRef={dropdownRef}\r\n                setIsDragListDisabled={setIsDragListDisabled}\r\n            />\r\n            <Droppable droppableId={list._id} type='droppableSubItem'>\r\n                {(provided) => (\r\n                    <div className={styles.droppable} ref={provided.innerRef}>\r\n                        {list.cards.map((element, index) => {\r\n                            return (\r\n                                <Draggable\r\n                                    key={element._id}\r\n                                    draggableId={element._id}\r\n                                    index={index}\r\n                                    isDragDisabled={isDragCardDisabled}\r\n                                >\r\n                                    {(provided) => (<>\r\n                                        <div\r\n                                            {...provided.dragHandleProps}\r\n                                            {...provided.draggableProps}\r\n                                            ref={provided.innerRef}\r\n                                        >\r\n                                            <Card\r\n                                                card={element}\r\n                                                project={project}\r\n                                                listId={list._id}\r\n                                                setIsDragCardDisabled={setIsDragCardDisabled}\r\n                                                setIsDragListDisabled={setIsDragListDisabled}\r\n                                            />\r\n                                        </div>\r\n                                        {provided.placeholder}\r\n                                    </>)}\r\n                                </Draggable>\r\n                            )\r\n                        })\r\n                        }\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n            <AddProjectBoardTask project={project} listId={list._id} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","export default __webpack_public_path__ + \"static/media/project-board.e34d3801.svg\";","import { useContext } from 'react'\r\nimport UserContext from '../contexts/UserContext'\r\nimport useUserServices from '../services/useUserServices'\r\n\r\nasync function useUpdateUserLastTeam(teamId) {\r\n    const userContext = useContext(UserContext)\r\n    const { updateUser } = useUserServices()\r\n\r\n    if (teamId === userContext.user.lastTeamSelected) return\r\n\r\n    await updateUser(userContext.user.id, userContext.user.username, teamId)    \r\n\r\n    const user = { ...userContext.user }\r\n    user.lastTeamSelected = teamId\r\n    userContext.setUser({\r\n        ...user\r\n    })\r\n\r\n}\r\n\r\nexport default useUpdateUserLastTeam\r\n","import React, { useContext, useState } from 'react'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ProjectBoardInput from '../Inputs/ProjectBoardInput'\r\nimport useListsServices from '../../services/useListsServices'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nconst AddProjectBoardList = () => {\r\n    const { project } = useContext(ProjectContext)\r\n    const socket = useSocket()\r\n    const [listName, setListName] = useState('')\r\n    const [isAddListActive, setIsAddListActive, listRef] = useDetectOutsideClick()\r\n    const { createList } = useListsServices()\r\n\r\n    const addList = async () => {\r\n        if (listName === '') {\r\n            setIsAddListActive(false)\r\n            return\r\n        }\r\n\r\n        await createList(project._id, listName)\r\n        setIsAddListActive(false)\r\n        setListName('')\r\n        socket.emit('project-update', project)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.list} >\r\n            { isAddListActive ?\r\n                <div ref={listRef} className={styles.container} >\r\n                    <ProjectBoardInput\r\n                        value={listName}\r\n                        setValue={setListName}\r\n                        onEnter={addList}\r\n                        onEscape={() => setIsAddListActive(false)}\r\n                    />\r\n                    <ButtonClean\r\n                        className={styles.button}\r\n                        onClick={addList}\r\n                        title='+ Add List'\r\n                    />\r\n                </div>\r\n                :\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setIsAddListActive(true)}\r\n                    title='+ Add List'\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProjectBoardList","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport Loader from 'react-loader-spinner'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport List from '../../components/List'\r\nimport projectBoardPic from '../../images/project-board.svg'\r\nimport useUpdateUserLastTeam from '../../utils/useUpdateUserLastTeam'\r\nimport useListsServices from '../../services/useListsServices'\r\nimport AddProjectBoardList from '../../components/AddProjectBoardList'\r\nimport useUserServices from '../../services/useUserServices'\r\nimport checkIsUserAdmin from '../../utils/checkIsUserAdmin'\r\n\r\nconst ProjectBoard = () => {\r\n    const socket = useSocket()\r\n    const { user, logIn } = useContext(UserContext)\r\n    const { project, lists, hiddenLists, setProject, setLists } = useContext(ProjectContext)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [isDndActive, setIsDndActive] = useState(false)\r\n    const [isDragListDisabled, setIsDragListDisabled] = useState(false)\r\n    const { dragAndDropList, dragAndDropCard } = useListsServices()\r\n    const { updateRecentProjects } = useUserServices()\r\n\r\n    const { teamid: teamId, projectid: projectId } = useParams()\r\n    useUpdateUserLastTeam(teamId)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n        setProject(project)\r\n        setLists(project.lists)\r\n    }, [setProject, setLists])\r\n\r\n    useEffect(() => {\r\n        const id = projectId\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, projectId])\r\n\r\n    const updateUserRecentProjects = useCallback(async () => {\r\n        const updatedUser = { ...user }\r\n        const recentProjects = [...updatedUser.recentProjects]\r\n\r\n        // Returns if the last project id from recent projects array is equal to current projectId\r\n        if (recentProjects.length > 0 && recentProjects[recentProjects.length - 1]._id === projectId) return\r\n\r\n        const newRecentProjects = recentProjects.filter(p => p._id !== projectId)\r\n        newRecentProjects.push({ _id: projectId, name: project.name })\r\n\r\n        // Removing the oldest project if recent projects are more than 3\r\n        if (newRecentProjects.length > 3) {\r\n            newRecentProjects.shift()\r\n        }\r\n\r\n        const data = await updateRecentProjects(user.id, newRecentProjects)\r\n        logIn(data)\r\n    }, [projectId, project, updateRecentProjects, logIn, user])\r\n\r\n    useEffect(() => {\r\n        if (!project || project._id !== projectId) return\r\n\r\n        updateUserRecentProjects()\r\n\r\n        if (isDndActive) return\r\n\r\n        setLists(project.lists)\r\n\r\n        setIsAdmin(checkIsUserAdmin(user.id, project.membersRoles))\r\n\r\n    }, [updateUserRecentProjects, project, projectId, user.id, isDndActive, setLists])\r\n\r\n    const handleDragAndDropList = async (result) => {\r\n        let position = result.destination.index\r\n\r\n        const filteredList = lists.filter(element => !(hiddenLists.includes(element._id)))\r\n        const previousId = filteredList[position - 1]\r\n        position = lists.indexOf(previousId) + 1\r\n\r\n        const newListsArr = [...lists]\r\n        const [reorderedList] = newListsArr.splice(result.source.index, 1)\r\n        newListsArr.splice(result.destination.index, 0, reorderedList)\r\n        setLists(newListsArr)\r\n\r\n        const updatedProject = await dragAndDropList(project._id, result.draggableId, position)\r\n        setProject(updatedProject)\r\n    }\r\n\r\n    const handleDragAndDropCard = async (result) => {\r\n        const position = result.destination.index\r\n        const oldPosition = result.source.index\r\n        const source = result.source.droppableId\r\n        const destination = result.destination.droppableId\r\n\r\n        const newListsArr = [...lists]\r\n\r\n        const sourcePosition = newListsArr.findIndex(list => list._id === source)\r\n        const destinationPosition = newListsArr.findIndex(list => list._id === destination)\r\n\r\n        const [task] = newListsArr[sourcePosition].cards.splice(oldPosition, 1)\r\n        newListsArr[destinationPosition].cards.splice(position, 0, task)\r\n        setLists(newListsArr)\r\n\r\n        await dragAndDropCard(project._id, result.draggableId, position, source, destination)\r\n    }\r\n\r\n    const handleOnDragEnd = async (result) => {\r\n        if (!result.destination) return\r\n\r\n        setIsDndActive(true)\r\n\r\n        if (result.type === 'droppableItem') {\r\n            await handleDragAndDropList(result)\r\n        }\r\n\r\n        if (result.type === 'droppableSubItem') {\r\n            await handleDragAndDropCard(result)\r\n        }\r\n\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n        setIsDndActive(false)\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div className={styles.container}>\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId='droppable' direction='horizontal' type='droppableItem'>\r\n                        {(provided) => (\r\n                            <div className={styles['container-droppable']} ref={provided.innerRef} >\r\n                                { !project || project._id !== projectId ?\r\n                                    <Loader\r\n                                        type='TailSpin'\r\n                                        color='#363338'\r\n                                        height={100}\r\n                                        width={100}\r\n                                        timeout={3000} //3 secs\r\n                                    />\r\n                                    :\r\n                                    <>{lists\r\n                                        .filter(element => !(hiddenLists.includes(element._id)))\r\n                                        .map((element, index) => {\r\n                                            return (<Draggable\r\n                                                key={element._id}\r\n                                                draggableId={element._id}\r\n                                                index={index}\r\n                                                isDragDisabled={isDragListDisabled}\r\n                                            >\r\n                                                {(provided) => (\r\n                                                    <div\r\n                                                        className={styles.draggable}\r\n                                                        {...provided.dragHandleProps}\r\n                                                        {...provided.draggableProps}\r\n                                                        ref={provided.innerRef}\r\n                                                    >\r\n                                                        <List\r\n                                                            list={element}\r\n                                                            project={project}\r\n                                                            isAdmin={isAdmin}\r\n                                                            setIsDragListDisabled={setIsDragListDisabled}\r\n                                                        />\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>)\r\n                                        })\r\n                                    }</>\r\n                                }\r\n                                {provided.placeholder}\r\n                                { isAdmin && <AddProjectBoardList />}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                <img className={styles.pic} src={projectBoardPic} alt='' width='340' />\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ProjectBoard","import React, { useCallback, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport commonStyles from '../index.module.css'\r\nimport styles from './index.module.css'\r\nimport AttachmentsLink from '../../AttachmentsLink'\r\nimport ResponsiveTextArea from '../../Inputs/ResponsiveTextarea'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\n\r\nconst TaskName = ({ card, listId, project }) => {\r\n    const [isActive, setIsActive, inputRef] = useDetectOutsideClick()\r\n    const [cardName, setCardName] = useState(card.name)\r\n    const socket = useSocket()\r\n    const { teamid: teamId } = useParams()\r\n    const { editTask } = useCardsServices()\r\n\r\n    const editCardName = useCallback(async () => {\r\n        if (cardName === '') {\r\n            return\r\n        }\r\n\r\n        const editedFields = { name: cardName }\r\n        await editTask(listId, card._id, editedFields)\r\n\r\n        setIsActive(!isActive)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n\r\n    }, [editTask, cardName, isActive, setIsActive, card._id, listId, project, socket, teamId])\r\n\r\n    return (\r\n        <div>\r\n            { isActive ?\r\n                < div ref={inputRef} className={styles['name-container']}>\r\n                    <ResponsiveTextArea\r\n                        value={cardName}\r\n                        setValue={setCardName}\r\n                        className={commonStyles['input-name']}\r\n                        onSubmit={editCardName}\r\n                        toggleActive={() => setIsActive(!isActive)}\r\n                        onBlur={editCardName}\r\n                        autoFocus={true}\r\n                    />\r\n                </div>\r\n                :\r\n                <div>\r\n                    <span className={styles['attachments-container']}>\r\n                        {(card.attachments && card.attachments.length > 0 && !isActive) &&\r\n                            <AttachmentsLink\r\n                                card={card}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                            />\r\n                        }\r\n                    </span>\r\n                    <div className={styles.text} onClick={() => setIsActive(!isActive)}>\r\n                        {cardName}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskName","import React, { useCallback, useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport Transparent from '../../Transparent'\r\nimport EditCard from '../../EditCard'\r\nimport pen from '../../../images/pen.svg'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\n\r\nconst TaskDueDate = ({ dueDate, formatedDueDate, card, listId, project, teamId }) => {\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [cardDueDate, setCardDueDate] = useState(dueDate)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const socket = useSocket()\r\n    const today = new Date()\r\n    today.setUTCHours(0, 0, 0, 0)\r\n    const { editTask } = useCardsServices()\r\n\r\n    const editCardDueDate = useCallback(async (date) => {\r\n        if (cardDueDate === '' && date === '') {\r\n            return\r\n        }\r\n\r\n        const editedFields = { dueDate: date }\r\n        await editTask(listId, card._id, editedFields)\r\n\r\n        setIsActive(!isActive)\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n\r\n    }, [editTask, cardDueDate, setIsActive, isActive, card._id, listId, project, socket, teamId])\r\n\r\n    const changeCardDueDate = (date) => {\r\n        setCardDueDate(date)\r\n        editCardDueDate(date)\r\n    }\r\n\r\n    return (\r\n        <span className={styles.container}>\r\n            <DatePicker\r\n                selected={formatedDueDate ? cardDueDate : today}\r\n                customInput={\r\n                    formatedDueDate\r\n                        ? <div className={styles['formated-date']}>\r\n                            <span>{formatedDueDate}</span>\r\n                        </div>\r\n                        : <span>Select date</span>\r\n                }\r\n                onChange={changeCardDueDate}\r\n                label='Go to date'\r\n                onBlur={formatedDueDate ? () => setIsActive(!isActive) : null}\r\n                popperPlacement='bottom-end'\r\n                closeOnScroll={e => e.target === document.getElementsByClassName('rt-tbody')[0]}\r\n            />\r\n\r\n            { isVisible ?\r\n                < span >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditCard\r\n                            hideForm={() => setIsVisible(!isVisible)}\r\n                            card={card}\r\n                            listId={listId}\r\n                            project={project}\r\n                            teamId={teamId}\r\n                        />\r\n                    </Transparent >\r\n                </span >\r\n                :\r\n                <span>\r\n                    <img\r\n                        className={styles.pen}\r\n                        src={pen}\r\n                        alt=''\r\n                        width='13'\r\n                        onClick={() => setIsVisible(true)}\r\n                    />\r\n                </span>\r\n            }\r\n        </span>\r\n    )\r\n\r\n}\r\n\r\nexport default TaskDueDate","import React, { useRef, useState } from 'react'\r\nimport commonStyles from '../index.module.css'\r\nimport { ESCAPE_KEY_CODE, ENTER_KEY_CODE } from '../../../utils/constats'\r\n\r\nexport default function AddProjectElement({ \r\n    handleSubmit, \r\n    handleInputRemove, \r\n    elementName, \r\n    setElementName, \r\n    placeholder \r\n}) {\r\n    const inputRef = useRef(null)\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n\r\n    const handleChange = (event) => {\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return\r\n        }\r\n\r\n        setElementName(event.target.value)\r\n        setNameHeight(inputRef.current.scrollHeight + 2)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return handleSubmit()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            value={elementName}\r\n            ref={inputRef}\r\n            placeholder={placeholder}\r\n            className={commonStyles['input-name']}\r\n            style={{ 'height': nameHeight, width: '100%' }}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={handleChange}\r\n            onBlur={handleSubmit}\r\n            autoFocus\r\n        />\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport AddProjectElement from '../AddProjectElement'\r\nimport useCardsServices from '../../../services/useCardsServices'\r\n\r\nconst AddTask = ({ listId, project, handleInputRemove }) => {\r\n    const [taskName, setTaskName] = useState('')\r\n    const socket = useSocket()\r\n    const { createTask } = useCardsServices()\r\n\r\n    const handleSubmit = async () => {\r\n        if (!taskName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        await createTask(listId, taskName)\r\n            \r\n        socket.emit('project-update', project)\r\n\r\n        handleInputRemove()\r\n    }\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={taskName}\r\n            setElementName={setTaskName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new task name:'\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddTask","import React, { useCallback, useState } from 'react'\r\nimport { useSocket } from '../../../contexts/SocketProvider'\r\nimport AddProjectElement from '../AddProjectElement'\r\nimport useListsServices from '../../../services/useListsServices'\r\n\r\nconst AddList = ({ project, handleInputRemove }) => {\r\n    const [listName, setListName] = useState('')\r\n    const socket = useSocket()\r\n    const { createList } = useListsServices()\r\n\r\n    const handleSubmit = useCallback(async () => {\r\n        if (!listName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        await createList(project._id, listName)\r\n\r\n        socket.emit('project-update', project)\r\n        handleInputRemove()\r\n            \r\n    }, [createList, listName, project, handleInputRemove, socket])\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={listName}\r\n            setElementName={setListName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new list name:'\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddList","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport { checkDateEquality, compareDates, getDateWithOffset, formatDate } from '../../utils/date'\r\n\r\nconst CELL_COLORS = {\r\n    CREATED: '#0E8D27',\r\n    DUE_DATE: '#EF2D2D',\r\n    DELAYED: '#EF2D2D',\r\n    FINISHED: '#0E8D27',\r\n    PROGRESS: '#5E9DDC',\r\n    PROGRESS_OLD: '#A2A7B0',\r\n}\r\n\r\nconst assembleColumnData = (startDate) => {\r\n    const currentDate = new Date()\r\n    let cardData = null\r\n\r\n    const getWeekdayCellHtml = (message, color, messageColor = 'black') => {\r\n        const progressStyle = { \r\n            background: color, \r\n            color: messageColor\r\n        }\r\n\r\n        return (\r\n            <div className={styles['dayly-progress']}>\r\n                <div style={progressStyle} className={styles['week-day-cell']}>\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getWeekdayCellData = (dataString, numDaysOffset) => {\r\n        if (!dataString) {\r\n            return ''\r\n        }\r\n\r\n        // if cell is first to be displayed for this card, parse the incoming data\r\n        // else, it should already have been parsed so we can use it directly\r\n        if (numDaysOffset === 0) {\r\n            cardData = JSON.parse(dataString)\r\n        }\r\n\r\n        const { date, history, progress } = cardData\r\n        const cellDate = getDateWithOffset(startDate, numDaysOffset)\r\n        \r\n        const taskStartDate = history.startDate && new Date(history.startDate)\r\n        if (!taskStartDate || compareDates(cellDate, taskStartDate) < 0) {\r\n            return ''\r\n        }\r\n\r\n        const eventInCell = history && history.events[formatDate(cellDate, '%d/%m/%y')]\r\n        \r\n        const dueDate = date ? new Date(date) : null\r\n        const isAfterDueDate = dueDate && compareDates(cellDate, dueDate) > 0\r\n        const isBeforeToday = compareDates(cellDate, currentDate) < 0\r\n        let { finishedDate } = history\r\n        finishedDate = finishedDate && new Date(finishedDate)\r\n\r\n        if (eventInCell) {\r\n            const [eventType, eventValue] = eventInCell.event.split(' ')\r\n\r\n            if (eventType === 'Created') {\r\n                return getWeekdayCellHtml(eventType, CELL_COLORS.CREATED)\r\n            }\r\n\r\n            if (eventType === 'Progress' && eventValue && eventValue === '100%') {\r\n                let cellText = 'Finished'\r\n                let cellColor = CELL_COLORS.FINISHED\r\n                \r\n                const lastEventDate = new Date(history.lastEventDate)\r\n                if (compareDates(lastEventDate, cellDate) > 0) {\r\n                    // Task was put at 100% progress at the time, but was later changed again\r\n                    cellText = 'Progress 100%'\r\n                    cellColor = isBeforeToday ? CELL_COLORS.PROGRESS_OLD : CELL_COLORS.PROGRESS\r\n                }\r\n\r\n                return getWeekdayCellHtml(cellText, cellColor)\r\n            }\r\n\r\n            if (isBeforeToday) {\r\n                return getWeekdayCellHtml(eventInCell.event, CELL_COLORS.PROGRESS_OLD)\r\n            }\r\n\r\n            const cellBackgroundColor = isAfterDueDate ? CELL_COLORS.DELAYED : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(eventInCell.event, cellBackgroundColor)\r\n        }\r\n\r\n        // if we get to here, we know that there are no new events on the day of the cell\r\n        const isMonday = numDaysOffset === 0\r\n        const eventsInWeek = history && history.hasEventsInWeek[formatDate(cellDate, '%w/%y')]\r\n        if (isMonday && progress && progress === 100 && !eventsInWeek) {\r\n            // progress for task is 100% and no new events happen during the week\r\n            return getWeekdayCellHtml('Finished', CELL_COLORS.FINISHED)\r\n        }\r\n\r\n        if (dueDate) {\r\n            if (checkDateEquality(cellDate, dueDate)) {\r\n                if (compareDates(currentDate, dueDate) > 0) {\r\n                    // cell date is the task due date and current date is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return getWeekdayCellHtml('Due Date', CELL_COLORS.DUE_DATE)\r\n            }\r\n\r\n            if (compareDates(cellDate, dueDate) > 0) {\r\n                // cell date is after due date\r\n                if (isMonday && compareDates(currentDate, dueDate) > 0) {\r\n                    // cell is first shown column (usually Monday) and today is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return ''\r\n            }\r\n\r\n            if (finishedDate && compareDates(cellDate, finishedDate) > 0) {\r\n                // task has finished in the past and cell date is later than date of finish\r\n                return ''\r\n            }\r\n\r\n            // task is neither Finished, nor Delayed, but has a Due Date\r\n            // therefore, it's In Progress\r\n            const cellText = isMonday ? 'In Progress' : ''\r\n            const cellColor = isBeforeToday ? CELL_COLORS.PROGRESS_OLD : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(cellText, cellColor)\r\n        }\r\n\r\n        if (finishedDate && compareDates(cellDate, finishedDate) > 0) {\r\n            // task has finished in the past and cell date is later than date of finish\r\n            return ''\r\n        }\r\n\r\n        if (isBeforeToday) {\r\n            const cellColor = CELL_COLORS.PROGRESS_OLD\r\n            return getWeekdayCellHtml('', cellColor)\r\n        }\r\n\r\n        if (compareDates(cellDate, currentDate) === 0 && progress !== 100) {\r\n            const cellColor = CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml('', cellColor)\r\n        }\r\n        \r\n        return ''\r\n    }\r\n        \r\n    const getHeaderDateHtml = (numDaysOffset) => {\r\n        const headerDate = getDateWithOffset(startDate, numDaysOffset)\r\n        const color = checkDateEquality(currentDate, headerDate) ? '#CFE2EC' : ''\r\n\r\n        const displayedDate = formatDate(headerDate, '%d.%m')\r\n        const displayedDayOfWeek = formatDate(headerDate, '%A')\r\n\r\n        return (\r\n            <div className={styles['date-container']} style={{ backgroundColor: color }}>\r\n                <div>{displayedDayOfWeek}</div>\r\n                <div>{displayedDate}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const wrapCellData = (cellData) => {\r\n        return (\r\n            <div className={styles['cell-data']}>\r\n                {cellData}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        [\r\n            {\r\n                // eslint-disable-next-line react/display-name\r\n                Header: () => {\r\n                    return <div className={styles.header}>Task</div>\r\n                },\r\n                accessor: 'task',\r\n                minWidth: 350,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n            },\r\n            {\r\n                // eslint-disable-next-line react/display-name\r\n                Header: () => {\r\n                    return <div className={styles.header}>Progress</div>\r\n                },\r\n                accessor: 'progress',\r\n                minWidth: 65,\r\n                maxWidth: 75,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {}  // needed to override default sorting\r\n            },\r\n            {\r\n                // eslint-disable-next-line react/display-name\r\n                Header: () => {\r\n                    return <div className={styles.header}>Team</div>\r\n                },\r\n                accessor: 'assigned',\r\n                minWidth: 75,\r\n                maxWidth: 80,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                getProps: () => ({ style: { overflow: 'visible' } }),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(0),\r\n                accessor: 'monday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 0),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(1),\r\n                accessor: 'tuesday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 1),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(2),\r\n                accessor: 'wednesday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 2),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(3),\r\n                accessor: 'thursday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 3),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(4),\r\n                accessor: 'friday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 4),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(5),\r\n                accessor: 'saturday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 5),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(6),\r\n                accessor: 'sunday',\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 6),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                // eslint-disable-next-line react/display-name\r\n                Header: () => {\r\n                    return <div className={styles.header}>Due Date</div>\r\n                },\r\n                accessor: 'dueDate',\r\n                minWidth: 100,\r\n                maxWidth: 130,\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {} // needed to override default sorting\r\n            }\r\n        ]\r\n    )\r\n}\r\n\r\n\r\nexport default assembleColumnData\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst FilterWrapper = ({ children, isVisible, legendContent }) => {\r\n    return (\r\n        <fieldset className={styles.container}>\r\n            <legend className={styles['legend-wrapper']}>\r\n                {isVisible && \r\n                    <blockquote className={styles.legend}>\r\n                        {legendContent}\r\n                    </blockquote>\r\n                }\r\n            </legend>\r\n            {children}\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default FilterWrapper","import React, { useContext, useMemo } from 'react'\r\nimport ProjectContext from '../../../contexts/ProjectContext'\r\nimport styles from './index.module.css'\r\nimport commonStyles from '../index.module.css'\r\nimport ButtonClean from '../../ButtonClean'\r\nimport FilterWrapper from '../../FilterWrapper'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\n\r\nconst MembersFilter = ({ membersFilter, setMembersFilter, handleFilterClear }) => {\r\n    const [isActive, setIsActive, dropdownRef] = useDetectOutsideClick()\r\n    const { project } = useContext(ProjectContext)\r\n\r\n    const options = useMemo(() => {\r\n        return project.membersRoles.map(mr => ({\r\n            value: mr.memberId._id,\r\n            displayValue: mr.memberId.username\r\n        }))\r\n    }, [project.membersRoles])\r\n\r\n    const buttonStyles = useMemo(() => `${commonStyles.filter} ${commonStyles['nav-buttons']}`, [])\r\n\r\n    const handleOptionClick = (optionValue, optionDisplay) => {\r\n        setMembersFilter(optionValue, optionDisplay)\r\n\r\n        setIsActive(false)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        handleFilterClear()\r\n        setIsActive(false)\r\n    }\r\n\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks assigned to:'\r\n            isVisible={!!(membersFilter)}\r\n        >\r\n            <div className={styles.container}>\r\n                <div className={styles['btn-container']}>\r\n                    <ButtonClean\r\n                        className={\r\n                            `${buttonStyles} ${isActive && styles['btn-clicked']} ${membersFilter\r\n                                ? styles['btn-partial']\r\n                                : styles['btn-whole']}`\r\n                        }\r\n                        onClick={() => setIsActive(!isActive)}\r\n                        title={(membersFilter && membersFilter.name) || 'Tasks Assigned To:'}\r\n                    />\r\n                    {membersFilter &&\r\n                        <ButtonClean\r\n                            className={`${buttonStyles} ${commonStyles['filter-clear']}`}\r\n                            title='X'\r\n                            onClick={handleClear}\r\n                        />\r\n                    }\r\n                </div>\r\n                {isActive &&\r\n                    <div className={styles.options} ref={dropdownRef}>\r\n                        {options.map(option => {\r\n                            return (\r\n                                <div\r\n                                    key={option.value}\r\n                                    className={styles.option}\r\n                                    onClick={() => handleOptionClick(option.value, option.displayValue)}\r\n                                >\r\n                                    {option.displayValue}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </FilterWrapper>\r\n    )\r\n}\r\n\r\nexport default MembersFilter","import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport styles from './index.module.css'\r\nimport commonStyles from '../index.module.css'\r\nimport FilterWrapper from '../../FilterWrapper'\r\nimport { formatDate } from '../../../utils/date'\r\n\r\nconst DueDateFilter = ({ dueBefore, onChange, handleFilterClear }) => {\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks due before:'\r\n            isVisible={!!(dueBefore)}\r\n        >\r\n            <DatePicker\r\n                selected={dueBefore}\r\n                customInput={\r\n                    <button\r\n                        className={\r\n                            `${commonStyles['nav-buttons']} ${commonStyles.filter} ${ dueBefore\r\n                                ? styles['filter-used']\r\n                                : styles['filter-blank']}`}\r\n                    >\r\n                        {dueBefore ? formatDate(dueBefore, '%d-%m-%Y') : 'Due Before:'}\r\n                    </button>\r\n                }\r\n                showWeekNumbers={true}\r\n                onChange={onChange}\r\n            />\r\n            { dueBefore &&\r\n                <button\r\n                    className={`${commonStyles['nav-buttons']} ${commonStyles.filter} ${commonStyles['filter-clear']}`}\r\n                    onClick={handleFilterClear}\r\n                >\r\n                    X\r\n                </button>\r\n            }\r\n        </FilterWrapper>\r\n    )\r\n}\r\n\r\nexport default DueDateFilter","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ToggleSwitch = ({ isActive, toggleStatus, label, containerStyle }) => {\r\n    return (\r\n        <div className={`${styles.container} ${containerStyle}`}>\r\n            <label>{label}</label>\r\n            <span \r\n                className={`${styles['switch-container']} ${isActive && styles['container-active']}`}\r\n                onClick={toggleStatus}\r\n            >\r\n                <span className={styles['state-circle']}></span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleSwitch","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport commonStyles from '../index.module.css'\r\nimport ButtonClean from '../../ButtonClean'\r\nimport ToggleSwitch from '../../ToggleSwitch'\r\nimport { useDetectOutsideClick } from '../../../utils/useDetectOutsideClick'\r\n\r\nconst ProgressFilters = ({ filters, toggleFilter }) => {\r\n    const [isActive, setIsActive, dropdownRef] = useDetectOutsideClick()\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <ButtonClean\r\n                title='Filter By Progress:'\r\n                className={`${commonStyles.filter} ${commonStyles['nav-buttons']} ${styles['btn-progress']}`}\r\n                onClick={() => setIsActive(!isActive)}\r\n            />\r\n            { isActive &&\r\n                <div className={styles.dropdown} ref={dropdownRef}>\r\n                    <ToggleSwitch\r\n                        isActive={filters.notStarted}\r\n                        label='Not Started'\r\n                        toggleStatus={() => toggleFilter('notStarted')}\r\n                        containerStyle={`${styles['progress-switch']} ${styles['progress-switch-top']}`}\r\n                    />\r\n                    <ToggleSwitch\r\n                        isActive={filters.inProgress}\r\n                        label='In Progress'\r\n                        toggleStatus={() => toggleFilter('inProgress')}\r\n                        containerStyle={styles['progress-switch']}\r\n                    />\r\n                    <ToggleSwitch\r\n                        isActive={filters.done}\r\n                        label='Done'\r\n                        toggleStatus={() => toggleFilter('done')}\r\n                        containerStyle={`${styles['progress-switch']} ${styles['progress-switch-bottom']}`}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressFilters","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport MembersFilter from '../FilterMembers'\r\nimport DueDateFilter from '../FilterDueDate'\r\nimport ProgressFilters from '../FilterProgress'\r\n\r\nconst TaskFilters = ({ filter, setFilter }) => {\r\n    const toggleProgressFilter = (filterName) => {\r\n        const currentFilterValue = filter.progress[[filterName]]\r\n\r\n        setFilter({ ...filter, progress: { ...filter.progress, [filterName]: !currentFilterValue } })\r\n    }\r\n\r\n    return (\r\n        <div className={styles['filters-container']}>\r\n            <ProgressFilters \r\n                filters={filter.progress} \r\n                toggleFilter={toggleProgressFilter} \r\n            />\r\n            <MembersFilter\r\n                membersFilter={filter.member}\r\n                setMembersFilter={(id, name) => setFilter({ ...filter, member: { id, name } })}\r\n                handleFilterClear={() => setFilter({ ...filter, member: null })}\r\n            />\r\n            <DueDateFilter\r\n                dueBefore={filter.dueBefore}\r\n                onChange={date => setFilter({ ...filter, dueBefore: date })}\r\n                handleFilterClear={() => setFilter({ ...filter, dueBefore: null })}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskFilters","export default __webpack_public_path__ + \"static/media/previous-day.b509304f.svg\";","export default __webpack_public_path__ + \"static/media/next-day.11199c8f.svg\";","import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport styles from './index.module.css'\r\nimport commonStyles from '../index.module.css'\r\nimport { getMonday } from '../../../utils/date'\r\nimport previous from '../../../images/project-list/previous-day.svg'\r\nimport next from '../../../images/project-list/next-day.svg'\r\n\r\nconst TableDateNavigation = ({ startDate, changeStartDate, setStartDate }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <DatePicker\r\n                selected={startDate}\r\n                customInput={\r\n                    <button className={commonStyles['nav-buttons']}>\r\n                        Choose Week\r\n                    </button>\r\n                }\r\n                showWeekNumbers\r\n                onChange={date => setStartDate(getMonday(date))}\r\n            />\r\n            <button className={commonStyles['nav-buttons']} onClick={() => changeStartDate(-7)}>\r\n                Previous week\r\n            </button>\r\n\r\n            <div className={styles['pic-container']} onClick={() => changeStartDate(-1)}>\r\n                <img src={previous} alt='previous' />\r\n                <div className={styles['text-centered']}>Previous day</div>\r\n            </div>\r\n\r\n            <div className={styles['pic-container']} onClick={() => changeStartDate(1)}>\r\n                <img src={next} alt='next' />\r\n                <div className={styles['text-centered']}>Next day</div>\r\n            </div>\r\n\r\n            <button className={commonStyles['nav-buttons']} onClick={() => changeStartDate(7)}>\r\n                Next week\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDateNavigation","import { compareDates, formatDate } from '../../utils/date'\r\n\r\nconst sortByTask = (cardOne, cardTwo) => cardOne.name.localeCompare(cardTwo.name)\r\n\r\nconst sortByProgress = (cardOne, cardTwo) => {\r\n    const firstValue = cardOne.progress || 0\r\n    const secondValue = cardTwo.progress || 0\r\n\r\n    if (firstValue > secondValue) {\r\n        return 1\r\n    } else if (firstValue < secondValue) {\r\n        return -1\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nconst sortByDueDate = (cardOne, cardTwo) => {\r\n    const parsedDateOne = cardOne.dueDate ? new Date(cardOne.dueDate) : new Date('1970-01-01')\r\n    const parsedDateTwo = cardTwo.dueDate ? new Date(cardTwo.dueDate) : new Date('1970-01-01')\r\n\r\n    return compareDates(parsedDateOne, parsedDateTwo)\r\n}\r\n\r\nconst getCardsSortMethod = (columnName, isDescending) => {\r\n    let sortingFunc = null\r\n    switch(columnName) {\r\n        case 'task':\r\n            sortingFunc = sortByTask\r\n            break\r\n        case 'progress':\r\n            sortingFunc = sortByProgress\r\n            break\r\n        case 'dueDate':\r\n            sortingFunc = sortByDueDate\r\n            break\r\n        default:\r\n            return null\r\n    }\r\n\r\n    return (firstValue, secondValue) => {\r\n        const sortingEvaluation = sortingFunc(firstValue, secondValue)\r\n        return isDescending ? -sortingEvaluation : sortingEvaluation\r\n    }\r\n}\r\n\r\nconst createTableEntry = (entryData) => {\r\n    return {\r\n        task: entryData.task || '',\r\n        progress: entryData.progress || '',\r\n        assigned: entryData.assigned || '',\r\n        monday: entryData.monday || '',\r\n        tuesday: entryData.tuesday || '',\r\n        wednesday: entryData.wednesday || '',\r\n        thursday: entryData.thursday || '',\r\n        friday: entryData.friday || '',\r\n        saturday: entryData.saturday || '',\r\n        sunday: entryData.sunday || '',\r\n        dueDate: entryData.dueDate || ''\r\n    }\r\n}\r\n\r\nconst parseCardHistory = (taskHistory) => {\r\n    if (!taskHistory) {\r\n        return null\r\n    }\r\n\r\n    const historyByDate = { events: {}, hasEventsInWeek: {} }\r\n    for (const element of taskHistory) {\r\n        const elementDate = new Date(element.date)\r\n\r\n        historyByDate.events[formatDate(elementDate, '%d/%m/%y')] = element\r\n        historyByDate.hasEventsInWeek[formatDate(elementDate, '%w/%y')] = true\r\n    }\r\n\r\n    historyByDate.startDate = taskHistory[0] && taskHistory[0].date\r\n    \r\n    const lastHistoryEvent = taskHistory[taskHistory.length - 1]\r\n    historyByDate.lastEventDate = lastHistoryEvent && lastHistoryEvent.date\r\n    \r\n    if (lastHistoryEvent && lastHistoryEvent.event === 'Progress 100%') {\r\n        historyByDate.finishedDate = lastHistoryEvent.date\r\n    }\r\n    \r\n    return historyByDate\r\n}\r\n\r\nconst applyCardFilters = (card, filters) => {\r\n    let isCardFilterPassed = false\r\n    if (filters.progress.notStarted && \r\n        (card.progress === 0 || !card.progress)) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    if (filters.progress.inProgress && card.progress > 0 && card.progress < 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n    \r\n    if (filters.progress.done && card.progress === 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    const isUserFilterPassed = filters.member \r\n        ? card.members.some(m => m._id === filters.member.id) \r\n        : true\r\n\r\n    const isDueDateFilterPassed = filters.dueBefore\r\n        ? card.dueDate && compareDates(new Date(card.dueDate), filters.dueBefore) <= 0\r\n        : true\r\n\r\n    return isCardFilterPassed && isUserFilterPassed && isDueDateFilterPassed\r\n}\r\n\r\nexport {\r\n    createTableEntry,\r\n    parseCardHistory,\r\n    applyCardFilters,\r\n    getCardsSortMethod\r\n}","import React, { useCallback, useEffect, useState, useContext } from 'react'\r\nimport ReactTable from 'react-table'\r\nimport { useParams } from 'react-router-dom'\r\nimport 'react-table/react-table.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport styles from './index.module.css'\r\nimport TaskName from '../CalendarData/TaskName'\r\nimport TaskDueDate from '../CalendarData/TaskDueDate'\r\nimport AddTask from '../CalendarData/AddTask'\r\nimport AddList from '../CalendarData/AddList'\r\nimport assembleColumnData from '../CalendarData/columnData'\r\nimport Transparent from '../Transparent'\r\nimport EditList from '../EditList'\r\nimport TaskFilters from '../CalendarData/TaskFilters'\r\nimport MembersList from '../MembersList'\r\nimport TableDateNavigation from '../CalendarData/TableDateNavigation'\r\nimport ButtonClean from '../ButtonClean'\r\nimport ProgressInput from '../Inputs/ProgressInput'\r\nimport { formatDate, getDateWithOffset, getMonday } from '../../utils/date'\r\nimport { createTableEntry, parseCardHistory, applyCardFilters, getCardsSortMethod } from './utils'\r\nimport checkIsUserAdmin from '../../utils/checkIsUserAdmin'\r\n\r\nconst CalendarTable = () => {\r\n    const { project, setLists, hiddenLists } = useContext(ProjectContext)\r\n    const { user } = useContext(UserContext)\r\n    const { teamid: teamId } = useParams()\r\n    const [startDate, setStartDate] = useState(getMonday())\r\n    const [tableData, setTableData] = useState([])\r\n    const [currList, setCurrList] = useState('')\r\n    const [newEntries, setNewEntries] = useState(null)\r\n    const [sortCriteria, setSortCriteria] = useState({ columnName: null, isDescending: false })\r\n    const [filter, setFilter] = useState({\r\n        progress: { notStarted: true, inProgress: true, done: true },\r\n        member: null,\r\n        dueBefore: null,\r\n        isUsed: false\r\n    })\r\n\r\n    const onListClick = useCallback((list) => {\r\n        const isUserAdmin = checkIsUserAdmin(user.id, project.membersRoles)\r\n\r\n        if (isUserAdmin) {\r\n            setCurrList(list)\r\n        }\r\n    }, [project, user.id])\r\n\r\n    const updateTableData = useCallback(() => {\r\n        const data = []\r\n        const { lists } = project\r\n        setLists(lists)\r\n        const cardsSortMethod = getCardsSortMethod(sortCriteria.columnName, sortCriteria.isDescending)\r\n\r\n        lists.forEach((list, histIndex) => {\r\n            if (hiddenLists.includes(list._id)) {\r\n                return\r\n            }\r\n\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <div\r\n                        key={histIndex}\r\n                        className={styles['list-name-container']}\r\n                        style={{ background: list.color || '#A6A48E' }}\r\n                        onClick={() => onListClick(list)}\r\n                    >\r\n                        <span className={styles['list-name-text']} >\r\n                            {list.name}\r\n                        </span>\r\n                    </div>\r\n                ),\r\n                dueDate: (\r\n                    <div\r\n                        className={styles['add-task']}\r\n                        onClick={() => setNewEntries({ newTask: list._id })}\r\n                    >\r\n                        + Add Task\r\n                    </div>\r\n                )\r\n            }))\r\n\r\n            let listCards = list.cards.filter(card => applyCardFilters(card, filter))\r\n\r\n            if (sortCriteria.columnName) {\r\n                listCards = listCards.sort(cardsSortMethod)\r\n            }\r\n\r\n            listCards.forEach(card => {\r\n                const cardDueDate = card.dueDate ? new Date(card.dueDate) : ''\r\n                const historyByDate = parseCardHistory(card.history)\r\n\r\n                const cellData = {\r\n                    date: cardDueDate,\r\n                    history: historyByDate,\r\n                    progress: card.progress\r\n                }\r\n\r\n                const weekdayData = JSON.stringify(cellData)\r\n\r\n                data.push(createTableEntry({\r\n                    task:\r\n                        (\r\n                            <TaskName\r\n                                card={card}\r\n                                listId={list._id}\r\n                                project={project}\r\n                            />\r\n                        ),\r\n                    progress:\r\n                        (\r\n                            <ProgressInput\r\n                                card={card}\r\n                                listId={list._id}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                inputClassName={styles['progress-input']}\r\n                                placeholderClassName={styles['progress-placeholder']}\r\n                                isBackgroundStyled={true}\r\n                            />\r\n                        ),\r\n                    assigned:\r\n                        (\r\n                            <MembersList\r\n                                members={card.members}\r\n                                maxLength={2}\r\n                            />\r\n                        ),\r\n                    monday: weekdayData,\r\n                    tuesday: weekdayData,\r\n                    wednesday: weekdayData,\r\n                    thursday: weekdayData,\r\n                    friday: weekdayData,\r\n                    saturday: weekdayData,\r\n                    sunday: weekdayData,\r\n                    dueDate: (\r\n                        <TaskDueDate\r\n                            formatedDueDate={cardDueDate ? formatDate(cardDueDate, '%d-%m-%Y') : ''}\r\n                            dueDate={cardDueDate}\r\n                            listId={list._id}\r\n                            project={project}\r\n                            card={card}\r\n                            teamId={teamId}\r\n                        />\r\n                    )\r\n                }))\r\n            })\r\n\r\n            if (newEntries && newEntries.newTask && newEntries.newTask === list._id) {\r\n                data.push(createTableEntry({\r\n                    task: (\r\n                        <AddTask\r\n                            listId={list._id}\r\n                            project={project}\r\n                            handleInputRemove={() => setNewEntries(null)}\r\n                        />\r\n                    )\r\n                }))\r\n            }\r\n        })\r\n\r\n        if (newEntries && newEntries.newList) {\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <AddList project={project} handleInputRemove={() => setNewEntries(null)} />\r\n                )\r\n            }))\r\n        }\r\n\r\n        /* \r\n        Rows need to be reversed if descending sort as by default ReactTable simply reverses \r\n        the data if descending sort is selected, expecting the data to already be sorted in \r\n        ascending order. However, this puts the list names below their respective tasks, \r\n        so we need to do this terrible hack of pre-reversing the data in that case.\r\n        Possible solution to avoid this 'hack' is to switch to subcomponents in ReactTable\r\n        and make each list a subtable. Then the sort should act per-subcomponent \r\n        */\r\n        setTableData(sortCriteria.isDescending ? data.reverse() : data)\r\n    }, [filter, onListClick, teamId, hiddenLists, setLists, project, newEntries, sortCriteria.columnName, sortCriteria.isDescending])\r\n\r\n    useEffect(() => {\r\n        updateTableData()\r\n    }, [filter, project, hiddenLists, sortCriteria, updateTableData])\r\n\r\n    const changeStartDate = (dayDiff) => {\r\n        const newStartDate = getDateWithOffset(startDate, dayDiff)\r\n        setStartDate(newStartDate)\r\n    }\r\n\r\n    return (\r\n        <div className={styles['page-container']}>\r\n            { currList &&\r\n                < div >\r\n                    <Transparent hideForm={() => setCurrList('')} >\r\n                        <EditList\r\n                            hideForm={() => setCurrList('')}\r\n                            list={currList}\r\n                            project={project}\r\n                        />\r\n                    </Transparent >\r\n                </div >\r\n            }\r\n            <div className={styles['button-div']}>\r\n                <TaskFilters filter={filter} setFilter={setFilter} />\r\n                <TableDateNavigation\r\n                    startDate={startDate}\r\n                    setStartDate={setStartDate}\r\n                    changeStartDate={changeStartDate}\r\n                />\r\n                <ButtonClean\r\n                    className={styles['add-list-button']}\r\n                    onClick={() => setNewEntries({ newList: true })}\r\n                    title='+ Add List'\r\n                />\r\n            </div>\r\n            <div>\r\n                <ReactTable\r\n                    data={tableData}\r\n                    columns={assembleColumnData(startDate)}\r\n                    defaultPageSize={10}\r\n                    pageSize={tableData.length}\r\n                    showPagination={false}\r\n                    background={'white'}\r\n                    className={`${styles['react-table']} -highlight`}\r\n                    getTbodyProps={() => ({ className: styles['react-table-body'] })}\r\n                    getTrGroupProps={() => ({ className: styles['react-table-tr-group'] })}\r\n                    onSortedChange={(sortInfo) => {\r\n                        // eslint-disable-next-line prefer-destructuring\r\n                        const { id: columnName, desc: isDescending } = sortInfo[0]\r\n                        setSortCriteria({ columnName, isDescending })\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarTable","import React, { useCallback, useEffect, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport CalendarTable from '../../components/CalendarTable'\r\n\r\n\r\nconst ProjectList = () => {\r\n    const socket = useSocket()\r\n    const { projectid: projectId } = useParams()\r\n    const { project, setProject } = useContext(ProjectContext)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n        setProject(project)\r\n    }, [setProject])\r\n\r\n    useEffect(() => {\r\n        const id = projectId\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, projectId])\r\n\r\n    return (\r\n        <PageLayout contentClassName={styles['layout-container']}>\r\n            { !project || project._id !== projectId\r\n                ? <Loader\r\n                    type='TailSpin'\r\n                    color='#363338'\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n                : <div className={styles.calendarPageContainer}>\r\n                    <div className={styles['calendar-container']}>\r\n                        <CalendarTable/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { useState } from 'react'\r\nimport ProjectContext from './ProjectContext'\r\n\r\nfunction ProjectProvider({ children }) {\r\n    const [lists, setLists] = useState([])\r\n    const [hiddenLists, setHiddenLists] = useState([])\r\n    const [project, setProject] = useState(null)\r\n    const [projectName, setProjectName] = useState('Select')\r\n\r\n    return (\r\n        <ProjectContext.Provider value={{ lists, setLists, hiddenLists, setHiddenLists, project, setProject, projectName, setProjectName }}>\r\n            {children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProjectProvider\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport useTeamServices from '../services/useTeamServices'\r\nimport { useSocket } from './SocketProvider'\r\nimport TeamContext from './TeamContext'\r\nimport UserContext from './UserContext'\r\n\r\nfunction TeamProvider({ children }) {\r\n    const [teams, setTeams] = useState([])\r\n    const [selectedTeam, setSelectedTeam] = useState('Select')\r\n    const [currentProjects, setCurrentProjects] = useState([])\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const { getUserTeams } = useTeamServices()\r\n\r\n\r\n    function getCurrentProjects(teamId) {\r\n        const current = teams.find(t => t._id === teamId)\r\n        if (current) {\r\n            setCurrentProjects(current.projects)\r\n        }\r\n    }\r\n\r\n\r\n    function updateSelectedTeam(teamId) {\r\n        const current = teams.find(t => t._id === teamId)\r\n        if (current) {\r\n            setSelectedTeam(current.name)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTeams(userContext.user.teams)\r\n    }, [userContext.user.teams])\r\n\r\n    const teamUpdate = useCallback(async () => {\r\n        const response = await getUserTeams()\r\n\r\n        setTeams(response.teams)\r\n\r\n        userContext.logIn(response)\r\n\r\n    }, [userContext, getUserTeams])\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n        socket.on('team-updated', teamUpdate)\r\n        return () => socket.off('team-updated')\r\n    }, [socket, teamUpdate])\r\n\r\n    return (\r\n        <TeamContext.Provider value={{\r\n            teams,\r\n            setTeams,\r\n            selectedTeam,\r\n            setSelectedTeam,\r\n            currentProjects,\r\n            setCurrentProjects,\r\n            getCurrentProjects,\r\n            updateSelectedTeam\r\n        }}>\r\n            {children}\r\n        </TeamContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TeamProvider\r\n","import React, { useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport ButtonGrey from '../ButtonGrey'\r\nimport EditProject from '../EditProject'\r\nimport Transparent from '../Transparent'\r\n\r\nconst Project = ({ project }) => {\r\n    const params = useParams()\r\n    const [isEditTeamShown, setIsEditTeamShown] = useState(false)\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isEditTeamShown &&\r\n                < div >\r\n                    <Transparent hideForm={() => setIsEditTeamShown(!isEditTeamShown)} >\r\n                        <EditProject hideForm={() => setIsEditTeamShown(!isEditTeamShown)} project={project} />\r\n                    </Transparent >\r\n                </div >\r\n            }\r\n            <div className={styles.container}>\r\n                <div className={styles['top-side']}>\r\n                    <Link to={`/project-board/${params.teamid}/${project._id}`} className={styles.key}>\r\n                        Name: <span className={styles.value}>{project.name}</span>\r\n                    </Link>\r\n                </div >\r\n                <div className={styles['lower-side']}>\r\n                    <div className={styles['key-lower']}>\r\n                        Creator: <span className={styles.value}>{project.author.username}</span>\r\n                    </div>\r\n                    <div className={styles.info} >\r\n                        <ButtonGrey\r\n                            className={styles['info-btn']}\r\n                            title={'Info'}\r\n                            onClick={() => setIsEditTeamShown(!isEditTeamShown)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project\r\n","export default __webpack_public_path__ + \"static/media/pic1.9d44d970.svg\";","import React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport styles from './index.module.css'\r\nimport PageLayout from '../../components/PageLayout'\r\nimport Project from '../../components/Project'\r\nimport Transparent from '../../components/Transparent'\r\nimport CreateProject from '../../components/CreateProject'\r\nimport EditTeam from '../../components/EditTeam'\r\nimport TeamMembers from '../../components/TeamMembers'\r\nimport ButtonGrey from '../../components/ButtonGrey'\r\nimport useUpdateUserLastTeam from '../../utils/useUpdateUserLastTeam'\r\nimport teamPagePicture from '../../images/team-page/pic1.svg'\r\n\r\nconst TeamPage = () => {\r\n    const [isCreateProjectFormVisible, setIssCreateProjectFormVisible] = useState(false)\r\n    const [isEditTeamFormVisible, setIsEditTeamFormVisible] = useState(false)\r\n    const [areOldProjectsShown, setAreOldProjectsShown] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [projects, setProjects] = useState([])\r\n    const [members, setMembers] = useState([])\r\n    const [invited, setInvited] = useState([])\r\n    const { user } = useContext(UserContext)\r\n    const { teamid } = useParams()\r\n\r\n\r\n    useEffect(() => {\r\n        user.teams.forEach(team => {\r\n            if (team._id === teamid) {\r\n                setCurrTeam(team)\r\n                setProjects(team.projects)\r\n                setMembers(team.members)\r\n                setInvited(team.requests)\r\n            }\r\n        })\r\n    }, [user, teamid])\r\n\r\n    useUpdateUserLastTeam(teamid)\r\n\r\n    return (\r\n        <PageLayout>\r\n            {\r\n                isCreateProjectFormVisible &&\r\n                <Transparent hideForm={() => setIssCreateProjectFormVisible(false)}>\r\n                    <CreateProject />\r\n                </Transparent>\r\n            }\r\n            {\r\n                isEditTeamFormVisible &&\r\n                <Transparent hideForm={() => setIsEditTeamFormVisible(false)}>\r\n                    <EditTeam currTeam={currTeam} hideForm={() => { setIsEditTeamFormVisible(false) }} />\r\n                </Transparent>\r\n            }\r\n            <div className={styles.container}>\r\n                <div className={styles['team-page-picture']}>\r\n                    <img className={styles.picture} src={teamPagePicture} alt='' />\r\n                </div>\r\n                <div className={styles['left-side']}>\r\n                    <div>\r\n                        <div className={styles.title}>\r\n                            {areOldProjectsShown ? 'Old Projects' : 'Current Projects:'}\r\n                        </div>\r\n                        {\r\n                            projects.filter(areOldProjectsShown ?\r\n                                (p => (p.isFinished === true))\r\n                                :\r\n                                (p => ((p.isFinished === false) || (p.isFinished === undefined))))\r\n                                .reverse().map((project) => {\r\n                                    return (\r\n                                        <Project\r\n                                            key={project._id}\r\n                                            project={project}\r\n                                        />)\r\n                                })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles['right-side-team']}>\r\n                        <TeamMembers\r\n                            members={members}\r\n                            invited={invited}\r\n                        />\r\n                        <div className={styles['button-div']}>\r\n                            <ButtonGrey\r\n                                className={styles['team-page-button']}\r\n                                title={'View Team'}\r\n                                onClick={() => setIsEditTeamFormVisible(true)}\r\n                            />\r\n                            <ButtonGrey\r\n                                className={styles['team-page-button']}\r\n                                title={'New Project'}\r\n                                onClick={() => setIssCreateProjectFormVisible(true)}\r\n                            />\r\n                            <ButtonGrey\r\n                                className={styles['team-page-button']}\r\n                                title={!areOldProjectsShown ? 'Old Projects' : 'Current Projects'}\r\n                                onClick={() => setAreOldProjectsShown(!areOldProjectsShown)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default TeamPage","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst Button = ( { title, onClick, className } ) => {\r\n    return (\r\n        <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styles from './index.module.css'\r\nimport Button from '../../components/Button'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport logo from '../../images/logo.svg'\r\nimport useUserServices from '../../services/useUserServices'\r\n\r\n\r\nconst ConfirmationPage = () => {\r\n    const { token } = useParams()\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const { user, logIn } = useContext(UserContext)\r\n    const { confirmToken } = useUserServices()\r\n\r\n    const isFirstRegistration = user.newPasswordConfirmed\r\n\r\n    const handleConfirmToken = useCallback(async () => {\r\n        if (token === 'not-confirmed') {\r\n            return\r\n        }\r\n\r\n        if (user.confirmed && user.newPasswordConfirmed) {\r\n            return\r\n        }\r\n\r\n        const response = await confirmToken(token)\r\n        logIn(response)\r\n        setIsLoading(false)\r\n\r\n\r\n    }, [token, logIn, user, confirmToken])\r\n\r\n    useEffect(() => {\r\n        handleConfirmToken()\r\n    }, [handleConfirmToken])\r\n\r\n\r\n    if (token === 'not-confirmed') {\r\n        return (\r\n            <div>\r\n                {\r\n                    isFirstRegistration ?\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt='logo' width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}>\r\n                                Confirm your email address\r\n                            </div >\r\n                            <div className={styles.text}>\r\n                                Please check your email to confirm your account\r\n                            </div>\r\n                            <div className={styles.text}>\r\n                                Once confirmed, this email address will be uniquely associated with your Smart Manager  account.\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt='logo' width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}>\r\n                                Confirm your new password\r\n                            </div >\r\n                            <div className={styles.text}>\r\n                                Please check your email to confirm your new password\r\n                            </div>\r\n                            <div className={styles.text}>\r\n                                Once confirmed, your new password will be active for your Smart Manager  account.\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ?\r\n                    <div>\r\n                        Validating your email.\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt='logo' width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}>\r\n                                Thank you\r\n                            </div >\r\n                            <div className={styles.text}>\r\n                                You can continue to Smart Manager now\r\n                            </div>\r\n                            <Button\r\n                                title='Proceed'\r\n                                className={styles['proceed-button']}\r\n                                onClick={() => history.push('/')}\r\n                            />\r\n                            <div className={styles.cheers}>\r\n                                Cheers,\r\n                            </div >\r\n                            <div className={styles.team}>\r\n                                The Smart Manager Team\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom'\r\n\r\nimport Home from './pages/Home'\r\nimport WelcomePage from './pages/Welcome'\r\nimport ProfilePage from './pages/Profile'\r\nimport InboxPage from './pages/Inbox'\r\nimport MyTasksPage from './pages/MyTasks'\r\nimport ErrorPage from './pages/Error'\r\nimport GetStarted from './pages/GetStarted'\r\nimport UserContext from './contexts/UserContext'\r\nimport ProjectBoard from './pages/ProjectBoard'\r\nimport ProjectList from './pages/ProjectList'\r\nimport { SocketProvider } from './contexts/SocketProvider'\r\nimport ProjectProvider from './contexts/ProjectProvider'\r\nimport TeamProvider from './contexts/TeamProvider'\r\nimport TeamPage from './pages/Team'\r\nimport ConfirmationPage from './pages/Confirmation'\r\nimport { CloudinaryContext } from 'cloudinary-react'\r\n\r\nconst Navigation = () => {\r\n\r\n    const context = useContext(UserContext)\r\n    const { loggedIn } = context.user\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <SocketProvider user={context.user}>\r\n                <ProjectProvider>\r\n                    <TeamProvider>\r\n                        <CloudinaryContext cloudName={process.env.REACT_APP_CLOUD_NAME}>\r\n                            <Switch>\r\n                                <Route path='/confirmation/:token'><ConfirmationPage /></Route>\r\n                                {((loggedIn && !context.user.confirmed)\r\n                                    || (loggedIn && !context.user.newPasswordConfirmed)\r\n                                ) && <Redirect to='/confirmation/not-confirmed' />}\r\n                                <Route exact path='/' >\r\n                                    {loggedIn ? (<Home />) : (<WelcomePage />)}\r\n                                </Route>\r\n                                <Route path='/get-started/'>\r\n                                    {loggedIn ? (<GetStarted />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/profile/:userid'>\r\n                                    {loggedIn ? (<ProfilePage />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/inbox/:userid'>\r\n                                    {loggedIn ? (<InboxPage />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/my-tasks/:userid'>\r\n                                    {loggedIn ? (<MyTasksPage />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/project-board/:teamid/:projectid'>\r\n                                    {loggedIn ? (<ProjectBoard />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/project-list/:teamid/:projectid'>\r\n                                    {loggedIn ? (<ProjectList />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route path='/team/:teamid'>\r\n                                    {loggedIn ? (<TeamPage />) : (<Redirect to='/' />)}\r\n                                </Route>\r\n                                <Route component={ErrorPage} />\r\n                            </Switch>\r\n                        </CloudinaryContext>\r\n                    </TeamProvider>\r\n                </ProjectProvider>\r\n            </SocketProvider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport Navigation from './navigation'\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App>\r\n            <Navigation />\r\n        </App>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchField_input__1Wkh2\",\"search-fields\":\"SearchField_search-fields__3Cyjd\",\"search-button\":\"SearchField_search-button__fdpXW\",\"search-icon\":\"SearchField_search-icon__1sope\",\"new-line\":\"SearchField_new-line__2gYIx\",\"small\":\"SearchField_small__3XVqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Project_container__3b6H2\",\"top-side\":\"Project_top-side__X336F\",\"key\":\"Project_key__3WELP\",\"key-lower\":\"Project_key-lower__3PFoo\",\"value\":\"Project_value__3hJST\",\"info\":\"Project_info__2N3kr\",\"info-btn\":\"Project_info-btn__1UGh1\",\"lower-side\":\"Project_lower-side__3Nohu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterProgress_container__1PUX9\",\"dropdown\":\"FilterProgress_dropdown__3NPzq\",\"progress-switch\":\"FilterProgress_progress-switch__3MD23\",\"progress-switch-top\":\"FilterProgress_progress-switch-top__3cT_a\",\"progress-switch-bottom\":\"FilterProgress_progress-switch-bottom__2nURD\",\"btn-progress\":\"FilterProgress_btn-progress__24xxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent-confirm\":\"ConfirmationDialog_transparent-confirm__2fAy0\",\"container\":\"ConfirmationDialog_container__3b6l0\",\"logo\":\"ConfirmationDialog_logo__jbg1u\",\"title\":\"ConfirmationDialog_title__1DS7_\",\"buttons\":\"ConfirmationDialog_buttons__BTev_\",\"button\":\"ConfirmationDialog_button__2WKkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-card-members\":\"ShowAllTaskMembers_all-card-members__1d2Ib\",\"each-member\":\"ShowAllTaskMembers_each-member__3I63a\",\"name\":\"ShowAllTaskMembers_name__2nHLd\",\"username\":\"ShowAllTaskMembers_username__1_yDw\",\"delete-icon\":\"ShowAllTaskMembers_delete-icon__2Q6rv\",\"avatar\":\"ShowAllTaskMembers_avatar__1UK0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterMembers_container__2_kFP\",\"btn-container\":\"FilterMembers_btn-container__3iyG2\",\"btn-clicked\":\"FilterMembers_btn-clicked__39vRd\",\"btn-partial\":\"FilterMembers_btn-partial__2lOCS\",\"btn-whole\":\"FilterMembers_btn-whole__1LOkj\",\"options\":\"FilterMembers_options__3kKgU\",\"option\":\"FilterMembers_option__3Uf0Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Inbox_message__8eDky\",\"bold\":\"Inbox_bold__3qAva\",\"container\":\"Inbox_container__2-WWh\",\"button\":\"Inbox_button__jP9ub\",\"inline\":\"Inbox_inline__W3jgq\",\"margin\":\"Inbox_margin__27P_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Header_navigation__3jzmG\",\"small\":\"Header_small__8uGux\",\"container\":\"Header_container__3f9rB\",\"links\":\"Header_links__2BYSL\",\"font\":\"Header_font__A3LaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AttachmentList_container__3CKYA\",\"attachment\":\"AttachmentList_attachment__3eJ-y\",\"title\":\"AttachmentList_title__1sJjZ\",\"name\":\"AttachmentList_name__1Fp27\",\"button\":\"AttachmentList_button__288mX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1zCVy\",\"container\":\"Card_container__2sYk9\",\"card-name\":\"Card_card-name__SB7bM\",\"button\":\"Card_button__2IaS-\",\"attachments\":\"Card_attachments__2FepI\",\"progress\":\"Card_progress__ZgeWv\"};"],"sourceRoot":""}