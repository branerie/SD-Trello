{"version":3,"sources":["pages/welcome/index.module.css","components/header/index.module.css","components/show-all-task-members/index.module.css","components/toggle-switch/index.module.css","pages/profile/index.module.css","components/button-hide-list/index.module.css","components/page-layout/index.module.css","components/attachment/index.module.css","pages/error/index.module.css","pages/project-list/index.module.css","components/filter-wrapper/index.module.css","components/filter-due-date/index.module.css","components/calendar-data/index.module.css","pages/my-tasks/index.module.css","components/edit-card-options/index.module.css","components/edit-team/index.module.css","components/signup-form/index.module.css","components/list-color/index.module.css","components/search-results/index.module.css","components/team-members/index.module.css","components/progress-bar/index.module.css","components/attachmentsLink/index.module.css","components/create-team/index.module.css","components/form-forgot-password/index.module.css","components/login-form/index.module.css","components/add-project-member/index.module.css","components/button-clean/index.module.css","components/create-project/index.module.css","components/avatar-user/index.module.css","components/button-grey/index.module.css","components/link/index.module.css","components/transparent/index.module.css","components/button-clean-title/index.module.css","components/link-title/index.module.css","components/title/index.module.css","pages/confirmation/index.module.css","components/button-grey-title/index.module.css","components/alert/index.module.css","pages/inbox/index.module.css","components/edit-card/index.module.css","components/button/index.module.css","components/form-add-password/index.module.css","components/list/index.module.css","components/aside/index.module.css","pages/home/index.module.css","components/edit-project/index.module.css","pages/team/index.module.css","components/my-tasks-task/index.module.css","components/edit-list/index.module.css","components/table-date-navigation/index.module.css","utils/cookie.js","utils/userObject.js","contexts/UserContext.js","contexts/UserProvider.js","App.js","contexts/TeamContext.js","components/button-clean/index.js","contexts/SocketProvider.js","components/avatar-user/index.js","components/button-grey/index.js","components/create-team/index.js","components/link/index.js","images/logo.svg","images/aside/menu.svg","images/aside/home.svg","images/aside/tasks.svg","images/aside/inbox.svg","images/aside/inbox-bell.svg","contexts/ProjectContext.js","components/list-color/index.js","components/button-hide-list/index.js","components/aside/index.js","utils/useDetectOutsideClick.js","components/transparent/index.js","components/create-project/index.js","components/search-results/index.js","images/search.svg","components/searchField/index.js","components/button-clean-title/index.js","components/link-title/index.js","components/header/index.js","components/page-layout/index.js","components/title/index.js","images/home-page-pic.svg","components/button-grey-title/index.js","pages/home/index.js","images/welcome-page/welcome-page-1.svg","images/welcome-page/welcome-page-2.svg","images/welcome-page/welcome-page-3.svg","images/welcome-page/welcome-page-4.svg","images/welcome-page/welcome-page-5.svg","images/welcome-page/welcome-page-6.svg","images/welcome-page/instagram-icon.svg","images/welcome-page/twitter-icon.svg","images/welcome-page/facebook-icon.svg","utils/authenticate.js","utils/responseGoogle.js","components/alert/index.js","utils/authenticate-update.js","components/form-add-password/index.js","images/welcome-page/google.svg","components/login-form/index.js","components/signup-form/index.js","components/form-forgot-password/index.js","pages/welcome/index.js","images/profile-page-pic.svg","images/pen.svg","components/confirmation-dialog/index.js","pages/profile/index.js","components/team-members/index.js","components/edit-team/index.js","components/inbox/useInboxUtils.js","components/inbox/team-invitation-inbox.js","components/inbox/team-invitation-history.js","components/inbox/team-invitation-response.js","components/inbox/task-assignment.js","components/inbox/team-deleted.js","components/inbox/project-deleted.js","components/inbox/team-invitation-canceled.js","pages/inbox/index.js","images/my-tasks/my-tasks.svg","images/edit-card/pic1.svg","images/edit-card/pic12.svg","images/edit-card/pic10.svg","components/show-all-task-members/index.js","components/members-list/index.js","components/edit-card-options/taskMembers.js","utils/date.js","images/edit-card/pic5.svg","components/edit-card-options/taskDueDate.js","components/edit-card-options/taskHistory.js","images/edit-card/pic2.svg","components/progress-bar/index.js","components/edit-card-options/taskProgress.js","images/edit-card/pic6.svg","images/edit-card/download.svg","images/edit-card/remove.svg","components/attachmentList/index.js","components/attachment/index.js","components/edit-card-options/taskAttach.js","components/edit-card/index.js","components/attachmentsLink/index.js","components/my-tasks-task/index.js","pages/my-tasks/index.js","images/error-page.svg","pages/error/index.js","components/add-project-member/index.js","utils/isUserAdmin.js","components/edit-project/index.js","components/card/index.js","images/dots.svg","components/list/index.js","images/pic.svg","components/edit-list/index.js","utils/useUpdateUserLastTeam.js","pages/project-board/index.js","components/responsive-textarea/index.js","components/calendar-data/task-name.js","components/calendar-data/task-progress.js","components/calendar-data/task-dueDate.js","components/calendar-data/add-project-element.js","components/calendar-data/add-task.js","components/calendar-data/add-list.js","components/calendar-data/column-data.js","components/filter-wrapper/index.js","components/filter-members/index.js","components/filter-due-date/index.js","components/toggle-switch/index.js","components/filter-progress/index.js","components/calendar-data/task-filters.js","images/project-list/previous-day.svg","images/project-list/next-day.svg","components/table-date-navigation/index.js","components/calendar-table/utils.js","components/calendar-table/index.js","pages/project-list/index.js","contexts/ProjectProvider.js","contexts/TeamProvider.js","components/project/index.js","images/team-page/pic1.svg","pages/team/index.js","components/button/index.js","pages/confirmation/index.js","navigation.js","index.js","components/searchField/index.module.css","pages/project-board/index.module.css","components/calendar-table/index.module.css","components/project/index.module.css","components/inbox/index.module.css","components/confirmation-dialog/index.module.css","components/filter-members/index.module.css","components/filter-progress/index.module.css","components/members-list/index.module.css","components/attachmentList/index.module.css","components/card/index.module.css"],"names":["module","exports","getCookie","name","cookieValue","document","cookie","match","userObject","response","username","user","id","_id","teams","inbox","confirmed","newPasswordConfirmed","recentProjects","image","lastTeamSelected","UserContext","React","createContext","logIn","logOut","UserProvider","props","useState","setUser","loading","setLoading","history","useHistory","loggedIn","useCallback","token","fetch","method","headers","then","ok","push","verifyLogin","promise","json","status","useEffect","type","color","height","width","timeout","Provider","value","children","App","TeamContext","setTeams","selectedTeam","setSelectedTeam","getCurrentTeam","currentTeam","setCurrentTeam","getTeams","ButtonClean","title","onClick","className","style","styles","clean","SocketContext","useSocket","useContext","SocketProvider","socket","setSocket","url","window","location","href","includes","userId","teamsId","map","t","teamsStr","JSON","stringify","newSocket","io","query","transports","close","AvatarUser","key","size","publicId","gravity","crop","round","maxInitials","ButtonGrey","button","CreateTeam","setName","description","setDescription","member","setMember","members","setMembers","showMembers","setShowMembers","allUsers","setAllUsers","teamContext","userContext","inputMembers","event","a","target","length","users","handleSubmit","preventDefault","body","requests","team","arr","hideForm","emit","container","onChange","e","label","placeholder","autocomplete","spellcheck","autoComplete","onBlur","setTimeout","filter","u","toLowerCase","find","element","sort","b","localeCompare","input","addMember","email","m","removeMember","LinkComponent","to","link","ProjectContext","lists","setLists","hiddenLists","setHiddenLists","project","setProject","ListColor","xmlns","viewBox","data-name","transform","d","fill","ButtonHideList","list","projectContext","newHiddenLists","index","indexOf","splice","submit","opacity","Aside","asideOn","setAsideOn","listVisibility","setListVisibility","updateUser","on","off","aside","hamburger","options","src","menu","alt","home","tasks","bell","logo","useDetectOutsideClick","el","isActive","setIsActive","current","contains","addEventListener","removeEventListener","Transparent","transparent","CreateProject","params","useParams","teamId","teamid","onFocus","SearchResults","searchInput","resultArr","obj","projects","result","updateSelectedTeam","gotToPage","SearchField","dropdownRefSearch","useRef","setSearchInput","showSearchForm","setShowSearchForm","showSearchInput","setShowSearchInput","searchImg","ref","ButtonCleanTitle","LinkComponentTitle","Header","dropdownRefProfile","dropdownRefView","dropdownRefProject","dropdownRefTeam","isProjectVisibble","setIsProjectVisibble","isProjectActive","setIsProjectActive","isTeamActive","setIsTeamActive","isViewVisibble","setIsViewVisibble","isViewActive","setIsViewActive","viewState","setViewState","isProfileActive","setIsProfileActive","showTeamForm","setShowTeamForm","showProjectForm","setShowProjectForm","context","showOldProjects","setShowOldProjects","getData","projectid","data","goToHomePage","deletedTeamId","goToTeamPage","deletedProjectId","getCurrentProjects","isFinished","navigation","small","links","flex","margin","hover","teamName","overflow","logout","currentProjects","p","undefined","reverse","font","avatar","PageLayout","contentClassName","app","content","Title","ButtonGreyTitle","Home","dropdownRef","showTeamsVisibleForm","setShowTeamsVisibleForm","userName","userTeams","pic1","slice","projectId","forEach","authenticate","onSuccess","onFailure","authToken","get","needPassword","wrongPassword","wrongUser","exist","responseGoogle","googleResponse","tokenId","Alert","alert","message","authenticateUpdate","AddPassword","password","setPassword","rePassword","setRePassword","setAlert","fillAlert","setFillAlert","console","log","alerts","LoginForm","setEmail","showForm","setShowForm","setUserId","wrongPassAllert","setWrongPassAllert","wrongUserAllert","setWrongUserAllert","onSubmit","goToForgotPassword","goToSignUp","render","renderProps","google","clientId","buttonText","cookiePolicy","SignupForm","setUsername","userExist","setUserExist","validEmailAlert","setValidEmailAlert","validateEmail","test","goToLogin","ForgotPasswordForm","emailInput","passInput","buttonDivLogin","loginButton","textDiv","newToSmM","signUpBtn","buttonDivGoogleLogin","googleLoginBtn","WelcomePage","isVisible","setIsVisible","isVisibleSignUp","setIsVisibleSignUp","isVisibleForgot","setIsVisibleForgot","pic2","lucida","paragraph","picture","pic3","pic4","pic5","pic6","footer","instagram","twitter","facebook","sd2006","ConfirmDialog","buttons","hideConfirm","onConfirm","ProfilePage","userEmail","setUserEmail","passwordActive","setPaswordActive","userNameActive","setUserNameActive","isEditListActive","setIsEditListActive","confirmOpen","setConfirmOpen","userid","changeProfilePicture","cloudinary","createUploadWidget","cloudName","process","uploadPreset","error","newImage","path","info","public_id","oldImage","open","deletePic","focus","disabled","myTeamsContainer","relative","edit","delete","pen","TeamMembers","invited","EditTeam","currTeam","setCurrTeam","setInvited","forInvite","setForInvite","isAdmin","setIsAdmin","confirmTitle","setConfirmTitle","currElement","setCurrElement","teamAuthor","author","removeInvited","removeInvitation","confirm","deletedTeam","recievers","confirmationObjectFunctions","form","membersAvatars","isMessage","useInboxUtils","isMoveActive","setIsMoveActive","moveToHistory","deleteMessage","setInboxHistory","inboxHistory","viewTeam","setShowEditTeamForm","TeamInvitationInbox","setInbox","showEditTeamForm","utils","acceptInvitation","accepted","sendFrom","bold","subject","Date","createdAt","toLocaleDateString","inline","isDeleted","TeamInvitationHistory","TeamInvitationResponse","isInbox","TaskAssignment","card","TeamDeleted","ProjectDeleted","TeamInvitationCanceled","InboxPage","weekday","year","month","day","getInbox","inboxUser","ShowAllTaskMembers","deleteMemberOption","deleteMemberObj","updateSocket","deleteMember","cardMembers","setCardMembers","cardId","listId","updatedCard","setCurrCard","MembersList","maxLength","Math","min","split","join","TaskMembers","setUsers","getTeamUsers","filtered","handleSelect","selectedUser","membersRoles","memberId","admin","newMember","pics","pic10","select","FORMAT_REGEX","MONTHS","WEEKDAYS","MILLISECONDS_IN_DAY","FORMAT_OPTIONS","date","getUTCFullYear","toString","getMonth","getDate","getDay","getWeekNumber","getDateWithOffset","initialDate","daysOffset","getTime","getMonday","dateDay","monday","setDate","currWeekThursday","week1","getFullYear","week1Thursday","formatDate","formatString","replace","substr","formatType","checkDateEquality","firstDate","secondDate","getYear","compareDates","firstDateYear","secondDateYear","firstDateMonth","secondDateMonth","firstDateDay","secondDateDay","TaskDueDate","dueDate","cardDueDate","setCardDueDate","taskDueDate","setTaskDueDate","setWindowWidth","today","updateDimensions","innerWidth","w","updateProjectSocket","editCardDueDate","customInput","selected","popperPlacement","TaskHistory","taskHistory","i","showDate","currDate","currDay","ProgressBar","progress","bar","backgroundColor","Number","TaskProgress","setTaskHistory","setProgress","currInput","setCurrInput","isInputOk","setIsInputOk","isInputActive","setIsInputActive","isInputVisible","setIsInputVisible","useMemo","changeProgress","max","onKeyDown","keyCode","onKeyUp","AttachmentList","attachments","listRef","attachmentsArr","setAttachmentsArr","att","deteleAttachment","attachment","format","download","getFullDocumentUrl","remove","Attachment","isListVisible","setIsListVisible","TaskAttach","setAttachments","resourceType","original_filename","remaining","EditCard","initialCard","nameRef","descriptionRef","setCard","nameHeight","setNameHeight","deleteCard","onEscPressed","setElement","blur","scrollHeight","text","pic12","AttachmentsLink","attPic","MyTasksTask","inputRef","showEditCard","setShowEditCard","days","ceil","parse","now","task","isNaN","deadline","MyTasksPage","setProjects","selectTeam","taskTeamUpdate","box","header","raw","cards","pic","myTasks","ErrorPage","AddMember","setSelectedUser","currentTeamId","teamUsers","destination","memberRoleId","draggableId","memberAdmin","droppableId","userRole","handleAdd","onDragEnd","provided","droppable","innerRef","droppableProps","dragHandleProps","draggableProps","isUserAdmin","EditProject","setIsFinished","deleteProject","Card","showCurrentCard","List","showEditList","cardRef","cardName","setCardName","addCard","deleteList","row","dots","flexend","autoFocus","addlist","EditList","isColorActive","setIsColorActive","setColor","background","onChangeComplete","hex","useUpdateUserLastTeam","ProjectBoard","IsVisibleEdit","setIsVisibleEdit","isVisibleEditList","setIsVisibleEditList","listName","setListName","currCard","currList","setCurrList","dndActive","setDndActive","projectUpdate","memberArr","updateUserRecentProjects","updatedUser","oldArr","shift","position","filteredList","previousId","newListsArr","source","reorderedList","updatedProject","oldPosition","sourcePosition","destinationPosition","addList","direction","ResponsiveTextArea","setValue","toggleActive","areaHeight","setAreaHeight","initValue","TaskName","editCardName","nameContainer","inputElementName","tableText","UTC","taskprogress","cardProgress","setCardProgress","editCardProgress","cardProgressNum","newCardProgress","newTaskHistory","getBackGroundColor","currColor","taskProgress","taskProgressButtonInput","padding","border","borderRadius","minHeight","textAlign","display","alignItems","justifyContent","showTaskProgress","dueDateField","dueDateFieldInput","closeOnScroll","getElementsByClassName","AddProjectElement","handleInputRemove","elementName","setElementName","AddTask","taskName","setTaskName","AddList","CELL_COLORS","assembleColumnData","startDate","currentDate","cardData","getWeekdayCellHtml","messageColor","progressStyle","daylyProgress","getWeekdayCellData","dataString","numDaysOffset","cellDate","eventInCell","events","isAfterDueDate","isBeforeToday","eventType","eventValue","cellBackgroundColor","isMonday","eventsInWeek","hasEventsInWeek","finishedDate","taskStartDate","getHeaderDateHtml","headerDate","displayedDate","displayedDayOfWeek","fontWeight","fontSize","wrapCellData","cellData","whiteSpace","overflowWrap","accessor","minWidth","Cell","sortable","resizable","maxWidth","sortMethod","getProps","state","rowInfo","column","FilterWrapper","legendContent","legend","MembersFilter","membersFilter","setMembersFilter","handleFilterClear","buttonStyle","mr","displayValue","memberRoles","option","optionValue","optionDisplay","DueDateFilter","dueBefore","showWeekNumbers","ToggleSwitch","toggleStatus","containerStyle","ProgressFilters","filters","toggleFilter","class","dropdown","notStarted","inProgress","done","TaskFilters","setFilter","filterName","currentFilterValue","TableDateNavigation","changeStartDate","setStartDate","navigateButtons","picContainer","buttonPreviousDay","previous","centeredText","next","sortByTask","cardOne","cardTwo","sortByProgress","firstValue","secondValue","sortByDueDate","parsedDateOne","parsedDateTwo","createTableEntry","entryData","assigned","tuesday","wednesday","thursday","friday","saturday","sunday","TableDndApp","tableData","setTableData","newEntries","setNewEntries","columnName","isDescending","sortCriteria","setSortCriteria","isUsed","onListClick","updateTableData","cardsSortMethod","sortingFunc","sortingEvaluation","getCardsSortMethod","histIndex","listNameContainer","listNameText","newTask","addTask","listCards","isCardFilterPassed","isUserFilterPassed","some","isDueDateFilterPassed","applyCardFilters","historyByDate","elementDate","lastHistoryEvent","parseCardHistory","weekdayData","newList","pageContainer","buttoDiv","dayDiff","newStartDate","addListButton","columns","defaultPageSize","pageSize","showPagination","reactTable","getTbodyProps","reactTableBody","getTrGroupProps","reactTableTrGroup","onSortedChange","sortInfo","desc","ProjectList","calendarPageContainer","ProjectProvider","projectName","setProjectName","TeamProvider","setCurrentProjects","teamUpdate","Project","TeamPage","Button","ConfirmationPage","success","setSuccess","firstRegistration","confirmToken","cheers","Navigation","exact","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c8642ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"welcome_container__Q_7tA\",\"top-container\":\"welcome_top-container__Cx96Y\",\"top-div-container\":\"welcome_top-div-container__Nez3F\",\"header-nav\":\"welcome_header-nav__2lkBj\",\"logo\":\"welcome_logo__2Xqb5\",\"first-buttons\":\"welcome_first-buttons__3h1jo\",\"pic1\":\"welcome_pic1__qGdZx\",\"pic2\":\"welcome_pic2__1c6_d\",\"lower-div-container\":\"welcome_lower-div-container__1nI_u\",\"first-text\":\"welcome_first-text__2Z5OY\",\"login-button\":\"welcome_login-button__1567E\",\"sign-up-button\":\"welcome_sign-up-button__1wl2z\",\"headers\":\"welcome_headers__3K-We\",\"lucida\":\"welcome_lucida__ptbMc\",\"paragraph\":\"welcome_paragraph__2tZDv\",\"second-sign-up-button\":\"welcome_second-sign-up-button__2NbfZ\",\"second-container\":\"welcome_second-container__DAZ3V\",\"first-row\":\"welcome_first-row__2E0nZ\",\"second-text\":\"welcome_second-text__2SCAX\",\"third-sign-up-button\":\"welcome_third-sign-up-button__2LGI6\",\"pic3-container\":\"welcome_pic3-container__3n972\",\"picture\":\"welcome_picture__4oIrl\",\"second-row\":\"welcome_second-row__3YjEF\",\"second-row-colum\":\"welcome_second-row-colum__3KVao\",\"second-row-pic\":\"welcome_second-row-pic__2gXJQ\",\"pic4-container\":\"welcome_pic4-container__n3-74\",\"third-row\":\"welcome_third-row__VB9B_\",\"pic6-container\":\"welcome_pic6-container__3ke7Z\",\"content-wrap\":\"welcome_content-wrap__YVnx1\",\"footer\":\"welcome_footer__3gtAE\",\"footer-column\":\"welcome_footer-column__3uKqO\",\"footer-headers\":\"welcome_footer-headers__3gxEw\",\"footer-info\":\"welcome_footer-info__1_oxo\",\"last-column\":\"welcome_last-column__2w2xJ\",\"social-media-container\":\"welcome_social-media-container__S34p3\",\"social-media\":\"welcome_social-media__1w-xg\",\"sd2006\":\"welcome_sd2006__1n8Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"header_navigation__fJ63T\",\"small\":\"header_small__1teZG\",\"container\":\"header_container__3KlHF\",\"links\":\"header_links__2hRFR\",\"margin\":\"header_margin__1o7ce\",\"list-container\":\"header_list-container__2hVtR\",\"options\":\"header_options__3k5mV\",\"first-option\":\"header_first-option__2kqDm\",\"last-option\":\"header_last-option__3QlKJ\",\"logout\":\"header_logout__Sqhs8\",\"avatar\":\"header_avatar__2BJ1H\",\"font\":\"header_font__SQRRp\",\"select\":\"header_select__3fnVl\",\"logout-position\":\"header_logout-position__3aXq5\",\"view-position\":\"header_view-position__2YHhc\",\"teams\":\"header_teams__28NdG\",\"team-options\":\"header_team-options__3EQGp\",\"overflow\":\"header_overflow__3pY44\",\"hover\":\"header_hover__1X08T\",\"flex\":\"header_flex__26aaz\",\"projects-position\":\"header_projects-position__KW8oY\",\"list-button\":\"header_list-button__3cIcu\",\"profile-picture\":\"header_profile-picture__19YCA\",\"profile-button\":\"header_profile-button__wEUda\",\"team-container\":\"header_team-container__1KCBL\",\"project-container\":\"header_project-container__OhYzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-card-members\":\"show-all-task-members_all-card-members__3XsbH\",\"each-member\":\"show-all-task-members_each-member__3fQRM\",\"avatar\":\"show-all-task-members_avatar__3H3YY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"toggle-switch_container__1SHrj\",\"switch-container\":\"toggle-switch_switch-container__u2au8\",\"container-active\":\"toggle-switch_container-active__1cMtP\",\"state-circle\":\"toggle-switch_state-circle__1OnkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__1p1bn\",\"left-container\":\"profile_left-container__39W7O\",\"pic-container\":\"profile_pic-container__3CjX9\",\"pic1\":\"profile_pic1__3QhRY\",\"teams\":\"profile_teams__3WNcc\",\"navigate-buttons\":\"profile_navigate-buttons__3etSr\",\"button-input-div\":\"profile_button-input-div__2qBDm\",\"button-input-div-tasks\":\"profile_button-input-div-tasks__1-zEB\",\"input-fields-tasks\":\"profile_input-fields-tasks__2YFdL\",\"input-fields-profile\":\"profile_input-fields-profile__3uu_S\",\"profile-pic\":\"profile_profile-pic__3FZTl\",\"load-pic-text\":\"profile_load-pic-text__1-aLV\",\"pen\":\"profile_pen__BlxgA\",\"profile-pic-container\":\"profile_profile-pic-container__U7RG3\",\"profile-picture\":\"profile_profile-picture__2qwPO\",\"save-button\":\"profile_save-button__1a4Dc\",\"button-div-save\":\"profile_button-div-save__1QmVw\",\"alerts\":\"profile_alerts__17g07\",\"new-pass-alert\":\"profile_new-pass-alert__3y3O0\",\"select-team-container\":\"profile_select-team-container__dJYD1\",\"teams-home\":\"profile_teams-home__2HaTN\",\"navigate-buttons-teams\":\"profile_navigate-buttons-teams__2_h-4\",\"edit\":\"profile_edit__1Xgrq\",\"delete\":\"profile_delete__31xju\",\"relative\":\"profile_relative__3StLS\",\"menu\":\"profile_menu__3eNZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"button-hide-list_submit__3IMBu\",\"name\":\"button-hide-list_name__yyff7\",\"opacity\":\"button-hide-list_opacity__1yCdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"page-layout_app__v-_Gs\",\"content\":\"page-layout_content__Cr_Mh\",\"small\":\"page-layout_small__208gw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attachment\":\"attachment_attachment__3h6P9\",\"att-picture\":\"attachment_att-picture__EmFiD\",\"format\":\"attachment_format__nn8jH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"error_title__jjPK1\",\"pic1\":\"error_pic1__36lnX\",\"text\":\"error_text__3YcuD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectInfoContainer\":\"project-list_projectInfoContainer__3mRLd\",\"calendar-container\":\"project-list_calendar-container__3Tbzi\",\"layout-container\":\"project-list_layout-container__1pq-u\",\"table\":\"project-list_table__ibsXA\",\"column\":\"project-list_column__3rGR1\",\"columnChild\":\"project-list_columnChild__1AVvT\",\"daylyElement\":\"project-list_daylyElement__2Qz1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"filter-wrapper_container__2MpXG\",\"legend-wrapper\":\"filter-wrapper_legend-wrapper__11Nws\",\"legend\":\"filter-wrapper_legend__3uKNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter-used\":\"filter-due-date_filter-used__1Wx2C\",\"filter-blank\":\"filter-due-date_filter-blank__3Puwk\",\"filter-clear\":\"filter-due-date_filter-clear__12ktu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columns\":\"calendar-data_columns__1QWXz\",\"task\":\"calendar-data_task__ZE6uj\",\"buttoDiv\":\"calendar-data_buttoDiv__2J87B\",\"listName\":\"calendar-data_listName__3lv8E\",\"container\":\"calendar-data_container__AkkwG\",\"nameContainer\":\"calendar-data_nameContainer__rkbae\",\"input\":\"calendar-data_input__1VVv0\",\"inputList\":\"calendar-data_inputList__18Si4\",\"addlist\":\"calendar-data_addlist__3ybnS\",\"dueDateField\":\"calendar-data_dueDateField__3nuYW\",\"dueDateFieldInput\":\"calendar-data_dueDateFieldInput__1csSW\",\"inputElementName\":\"calendar-data_inputElementName__1CaRY\",\"clean\":\"calendar-data_clean__ldBxu\",\"taskProgress\":\"calendar-data_taskProgress__1KRv2\",\"taskProgressButton\":\"calendar-data_taskProgressButton__3GJU6\",\"taskProgressButtonInput\":\"calendar-data_taskProgressButtonInput__3n9Rl\",\"tableText\":\"calendar-data_tableText__2Rt8E\",\"select\":\"calendar-data_select__21nQR\",\"pen\":\"calendar-data_pen__1ZWSl\",\"membersDiv\":\"calendar-data_membersDiv__3h7P0\",\"membersContainer\":\"calendar-data_membersContainer__3yEFo\",\"daylyProgress\":\"calendar-data_daylyProgress__2hXc9\",\"header\":\"calendar-data_header__3vmIu\",\"cursorPointer\":\"calendar-data_cursorPointer__i8FeY\",\"filter\":\"calendar-data_filter__vHt4c\",\"filters\":\"calendar-data_filters__2NQez\",\"filters-container\":\"calendar-data_filters-container__1o1Rp\",\"filters-clicked\":\"calendar-data_filters-clicked__35F0-\",\"list\":\"calendar-data_list__3hiib\",\"attachments-container\":\"calendar-data_attachments-container__2rC_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"my-tasks_title__glghp\",\"button-container\":\"my-tasks_button-container__-lRve\",\"team-buttons\":\"my-tasks_team-buttons__1PSLe\",\"teams\":\"my-tasks_teams__1ifMW\",\"projects-button\":\"my-tasks_projects-button__2jbur\",\"selected\":\"my-tasks_selected__2hBIa\",\"pic\":\"my-tasks_pic__37y99\",\"box\":\"my-tasks_box__19wXx\",\"project\":\"my-tasks_project__1KJap\",\"project-name\":\"my-tasks_project-name__2-cBX\",\"link\":\"my-tasks_link__3JjLA\",\"bold\":\"my-tasks_bold__3TzlB\",\"header\":\"my-tasks_header__3-wOE\",\"raw\":\"my-tasks_raw__31kUo\",\"container\":\"my-tasks_container__yU16j\",\"task-container\":\"my-tasks_task-container__svxEy\",\"list\":\"my-tasks_list__33WIh\",\"task\":\"my-tasks_task__tAkep\",\"progress\":\"my-tasks_progress__1ufVZ\",\"days\":\"my-tasks_days__2EVrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small-buttons\":\"edit-card-options_small-buttons__3l5_v\",\"pics\":\"edit-card-options_pics__1Rgep\",\"date\":\"edit-card-options_date__6HShF\",\"select\":\"edit-card-options_select__f8FQ6\",\"members\":\"edit-card-options_members__3YsY4\",\"history\":\"edit-card-options_history__2cvkB\",\"progress-input\":\"edit-card-options_progress-input__AQHwY\",\"progress-input-container\":\"edit-card-options_progress-input-container__2yjqC\",\"progress-bar\":\"edit-card-options_progress-bar__1Zy68\",\"bad-input\":\"edit-card-options_bad-input__1z2vs\",\"progress\":\"edit-card-options_progress__35yqq\",\"att-container\":\"edit-card-options_att-container__3s32p\",\"attachment\":\"edit-card-options_attachment__23zEM\",\"att-picture\":\"edit-card-options_att-picture__1vBGz\",\"format\":\"edit-card-options_format__3YF--\",\"remaining\":\"edit-card-options_remaining__1fXLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-team_container__3iIvO\",\"title\":\"edit-team_title__t532U\",\"input-container\":\"edit-team_input-container__3mGvs\",\"input-container-invite\":\"edit-team_input-container-invite__1-eJB\",\"input-name\":\"edit-team_input-name__NRn4U\",\"text-invite\":\"edit-team_text-invite__GSDwM\",\"input-invite\":\"edit-team_input-invite__3SGX9\",\"input-container-descr\":\"edit-team_input-container-descr__3puM-\",\"text-area-descr\":\"edit-team_text-area-descr__2Z5gO\",\"button-div\":\"edit-team_button-div__2IJzX\",\"create-button\":\"edit-team_create-button__1nkRd\",\"members-div\":\"edit-team_members-div__1VgUe\",\"invite-input\":\"edit-team_invite-input__10J8k\",\"select-for-invite\":\"edit-team_select-for-invite__1bgKl\",\"members\":\"edit-team_members__3Uqvp\",\"user\":\"edit-team_user__3k1aK\",\"email\":\"edit-team_email__1dRrH\",\"leave-team-btn-div\":\"edit-team_leave-team-btn-div__1v5qx\",\"leave-team-btn\":\"edit-team_leave-team-btn__34yGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"signup-form_container__pL3cY\",\"alerts\":\"signup-form_alerts__1NIfM\",\"inner-container\":\"signup-form_inner-container__hoTOj\",\"logo\":\"signup-form_logo__EYNAN\",\"right-side\":\"signup-form_right-side__3LkAs\",\"title\":\"signup-form_title__QLVot\",\"input-container\":\"signup-form_input-container__1qrTE\",\"sign-up-input\":\"signup-form_sign-up-input__1oZmY\",\"pass-instructions\":\"signup-form_pass-instructions__17Qkc\",\"sign-up-button\":\"signup-form_sign-up-button__1XVSK\",\"button-div-login\":\"signup-form_button-div-login__2fD7k\",\"text-div\":\"signup-form_text-div__1wJxN\",\"already-sign-up\":\"signup-form_already-sign-up__A2wg4\",\"sign-up-btn\":\"signup-form_sign-up-btn__56zNu\",\"button-div-google-login\":\"signup-form_button-div-google-login__2CAU5\",\"google-login-btn\":\"signup-form_google-login-btn__2VdiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"list-color_aside__27qHb\",\"list\":\"list-color_list__3JEd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-container\":\"search-results_search-container__1aurP\",\"result\":\"search-results_result__1JoFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members-avatars\":\"team-members_members-avatars__390KK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"progress-bar_bar__4DnDk\",\"progress\":\"progress-bar_progress__1WhBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"attachmentsLink_button__13r6n\",\"attachments\":\"attachmentsLink_attachments__JXZ-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"create-team_container__2x5c_\",\"form\":\"create-team_form__31NMs\",\"title\":\"create-team_title___mRVu\",\"input-container\":\"create-team_input-container__120Le\",\"input-name\":\"create-team_input-name__wbZRq\",\"input-container-descr\":\"create-team_input-container-descr__1ODZz\",\"input-container-members\":\"create-team_input-container-members__1ufrx\",\"description-text\":\"create-team_description-text__1uRG8\",\"text-area-descr\":\"create-team_text-area-descr__2vq-U\",\"members-text\":\"create-team_members-text__2zmpj\",\"input-members\":\"create-team_input-members__bd9o9\",\"button-div\":\"create-team_button-div__w-R_d\",\"create-button\":\"create-team_create-button__1FHVI\",\"members-avatars\":\"create-team_members-avatars__dYqfC\",\"invite-input\":\"create-team_invite-input__2-X5E\",\"select-for-invite\":\"create-team_select-for-invite__3qZYT\",\"members-pop-up\":\"create-team_members-pop-up__1kwPP\",\"members\":\"create-team_members__32-cU\",\"user\":\"create-team_user__2icTP\",\"email\":\"create-team_email__lytiR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"form-forgot-password_container__26C4L\",\"alerts\":\"form-forgot-password_alerts__1fS5n\",\"inner-container\":\"form-forgot-password_inner-container__3W8lt\",\"logo\":\"form-forgot-password_logo__3Hu63\",\"right-side\":\"form-forgot-password_right-side__21XKQ\",\"title\":\"form-forgot-password_title__1KDRx\",\"input-container\":\"form-forgot-password_input-container__IW3bb\",\"emailInput\":\"form-forgot-password_emailInput__VJY2X\",\"passInput\":\"form-forgot-password_passInput__3nmAn\",\"loginButton\":\"form-forgot-password_loginButton__hdTg5\",\"buttonDivLogin\":\"form-forgot-password_buttonDivLogin__2xfcE\",\"textDiv\":\"form-forgot-password_textDiv__1uU55\",\"buttonDivGoogleLogin\":\"form-forgot-password_buttonDivGoogleLogin__2UhZA\",\"forgotPass\":\"form-forgot-password_forgotPass__3QNjx\",\"newToSmM\":\"form-forgot-password_newToSmM__3i_oO\",\"signUpBtn\":\"form-forgot-password_signUpBtn__Zc2y6\",\"googleLoginBtn\":\"form-forgot-password_googleLoginBtn__1cA2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login-form_container__DtpdL\",\"alerts\":\"login-form_alerts__3wIFj\",\"inner-container\":\"login-form_inner-container__7oZRt\",\"logo\":\"login-form_logo__2lNG1\",\"right-side\":\"login-form_right-side__1qmB_\",\"title\":\"login-form_title__I-Bu-\",\"input-container\":\"login-form_input-container__2Gp5r\",\"email-input\":\"login-form_email-input__2gYaE\",\"pass-input\":\"login-form_pass-input__35CUg\",\"login-button\":\"login-form_login-button__1uy1x\",\"button-div-login\":\"login-form_button-div-login__ErLQu\",\"text-div\":\"login-form_text-div__18MK_\",\"button-div-google-login\":\"login-form_button-div-google-login__259W1\",\"forgot-pass\":\"login-form_forgot-pass__2H5x8\",\"new-to-sm\":\"login-form_new-to-sm__2fzoU\",\"sign-up-btn\":\"login-form_sign-up-btn__gw4UI\",\"google-login-btn\":\"login-form_google-login-btn__3sp6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"add-project-member_container__22-qP\",\"form\":\"add-project-member_form__3qaBa\",\"current-members\":\"add-project-member_current-members__3RNVi\",\"admins-container\":\"add-project-member_admins-container__3JjPC\",\"admins\":\"add-project-member_admins__3tdXj\",\"big-container\":\"add-project-member_big-container__1j1-9\",\"members-container\":\"add-project-member_members-container__M6Z1p\",\"title\":\"add-project-member_title__3EGhe\",\"members\":\"add-project-member_members__8u9vO\",\"member-select\":\"add-project-member_member-select__2SrhS\",\"add-button\":\"add-project-member_add-button__2OOOi\",\"draggable\":\"add-project-member_draggable__3PkUN\",\"droppable\":\"add-project-member_droppable__XWc43\",\"droppable-members\":\"add-project-member_droppable-members__1iHfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"button-clean_clean__2SpL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"create-project_container__3mplR\",\"title\":\"create-project_title__2N9HY\",\"input-container\":\"create-project_input-container__28w3g\",\"input-name\":\"create-project_input-name__eAV6y\",\"invite-input\":\"create-project_invite-input__3RmZ5\",\"select-for-invite\":\"create-project_select-for-invite__dgcCU\",\"members-input\":\"create-project_members-input__viVpd\",\"input-container-descr\":\"create-project_input-container-descr__2GHEX\",\"text-area-descr\":\"create-project_text-area-descr__1TOMF\",\"text-invite\":\"create-project_text-invite__3CPaO\",\"button-div\":\"create-project_button-div__L527l\",\"create-button\":\"create-project_create-button__1TcHh\",\"members-avatars\":\"create-project_members-avatars__1q9MH\",\"members\":\"create-project_members__2Uleh\",\"user\":\"create-project_user__6JmZH\",\"email\":\"create-project_email__1NcNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-picture\":\"avatar-user_profile-picture__EodOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button-grey_button__2u67_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"link_link__3NAE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"transparent_transparent__30Vus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clean\":\"button-clean-title_clean__2Spi0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"link-title_link__82RJR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__3Ce-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"confirmation_container__1bAwH\",\"logo\":\"confirmation_logo__r2fwd\",\"title\":\"confirmation_title__25J6O\",\"text\":\"confirmation_text__CrbGr\",\"cheers\":\"confirmation_cheers__2efBO\",\"team\":\"confirmation_team__DFO2_\",\"proceed-button\":\"confirmation_proceed-button__1MxlW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button-grey-title_button__ViFSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__3deuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"inbox_title__3OZg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-card_container__2tYtI\",\"task-name\":\"edit-card_task-name__26wIw\",\"name-input\":\"edit-card_name-input___gxuh\",\"task-body\":\"edit-card_task-body__gBHAf\",\"text\":\"edit-card_text__3mvzJ\",\"left-side\":\"edit-card_left-side__CTqky\",\"right-side\":\"edit-card_right-side__1jdEh\",\"task-component\":\"edit-card_task-component__3DsaE\",\"description-input\":\"edit-card_description-input__3IEGO\",\"small-buttons\":\"edit-card_small-buttons__1ZE0w\",\"pics\":\"edit-card_pics__dtnBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3LYM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"form-add-password_container__2yhI6\",\"alerts\":\"form-add-password_alerts__2d9EU\",\"inner-container\":\"form-add-password_inner-container__3bA3D\",\"logo\":\"form-add-password_logo__1HgWR\",\"right-side\":\"form-add-password_right-side__2SWtl\",\"title\":\"form-add-password_title__1kxgS\",\"input-container\":\"form-add-password_input-container__dyxrk\",\"pass-instructions\":\"form-add-password_pass-instructions__DTpt4\",\"pass-input\":\"form-add-password_pass-input__3vDO5\",\"login-button\":\"form-add-password_login-button__1uuZq\",\"button-div-login\":\"form-add-password_button-div-login__1GyJn\",\"text-login\":\"form-add-password_text-login__1IPbU\",\"new-pass-alert\":\"form-add-password_new-pass-alert__2yvvo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__23Rsq\",\"row\":\"list_row__1A6HD\",\"button\":\"list_button__2gQ2b\",\"dots\":\"list_dots__wwSr4\",\"menu\":\"list_menu__1hArt\",\"edit\":\"list_edit__KXS03\",\"delete\":\"list_delete__1qqcq\",\"relative\":\"list_relative__2X72U\",\"add-task\":\"list_add-task__12pcF\",\"draggable\":\"list_draggable__2_1rW\",\"droppable\":\"list_droppable__cPWKr\",\"flexend\":\"list_flexend__3_V7F\",\"name\":\"list_name__33z_E\",\"container\":\"list_container__HKNpO\",\"input\":\"list_input__3Rjro\",\"task-input\":\"list_task-input__3Qgts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"aside_aside__3wMyb\",\"container\":\"aside_container__Qu0TM\",\"button\":\"aside_button__1Dg_A\",\"logo\":\"aside_logo__1AAc9\",\"top-left\":\"aside_top-left__-_vaI\",\"menu\":\"aside_menu__b_F-d\",\"top-right\":\"aside_top-right__191c3\",\"link\":\"aside_link__2o8o9\",\"bottom-right\":\"aside_bottom-right__1FKYl\",\"bell\":\"aside_bell__25Vva\",\"hamburger\":\"aside_hamburger__3pYLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__fjBCo\",\"pic-container\":\"home_pic-container__19tLe\",\"pic1\":\"home_pic1__2nxZp\",\"welcome-user\":\"home_welcome-user__3-oPo\",\"left-buttons\":\"home_left-buttons__1hKu4\",\"right-buttons\":\"home_right-buttons__3sde6\",\"my-teams-container\":\"home_my-teams-container__2mSLR\",\"teams-home\":\"home_teams-home__3j3qr\",\"select-team-container\":\"home_select-team-container__SZWtV\",\"navigate-buttons\":\"home_navigate-buttons__2Lqc4\",\"navigate-buttons-teams\":\"home_navigate-buttons-teams__2zoCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"edit-project_form__u2u3o\",\"title\":\"edit-project_title__1LrjA\",\"buttons-div\":\"edit-project_buttons-div__EE1f6\",\"navigate-buttons\":\"edit-project_navigate-buttons__2Zfm7\",\"input-container\":\"edit-project_input-container__3FESj\",\"input-pr-name\":\"edit-project_input-pr-name__1gf5E\",\"input-container-descr\":\"edit-project_input-container-descr__1CK_p\",\"text-area-descr\":\"edit-project_text-area-descr__1EcWM\",\"edit-members\":\"edit-project_edit-members__3T8W2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"team_container__6u9Hq\",\"title\":\"team_title__19YZz\",\"left-side\":\"team_left-side__3BmL8\",\"right-side\":\"team_right-side__ZnE1z\",\"right-side-team\":\"team_right-side-team__3Zfil\",\"pic1\":\"team_pic1__2NH3f\",\"button-div\":\"team_button-div__3jIq3\",\"new-project-button\":\"team_new-project-button__1xvQt\",\"picture\":\"team_picture__3lgLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"my-tasks-task_card__3BAWy\",\"task\":\"my-tasks-task_task__1lp6I\",\"progress\":\"my-tasks-task_progress__2gxJ6\",\"days\":\"my-tasks-task_days__fOUDh\",\"deadline\":\"my-tasks-task_deadline__2lfRD\",\"buttons-container\":\"my-tasks-task_buttons-container__3FXO0\",\"button\":\"my-tasks-task_button__QPAX8\",\"input\":\"my-tasks-task_input__2s3ei\",\"bad-input\":\"my-tasks-task_bad-input__3kwUX\",\"no-border\":\"my-tasks-task_no-border__1QKqD\",\"edit\":\"my-tasks-task_edit__1xVtt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"edit-list_container__1PV_g\",\"input-container\":\"edit-list_input-container__1Xk2M\",\"name\":\"edit-list_name__13OFB\",\"name-input\":\"edit-list_name-input__3x8HX\",\"change-color\":\"edit-list_change-color__3HL93\",\"color-title\":\"edit-list_color-title__JW9SN\",\"color-pick\":\"edit-list_color-pick__3MYZG\",\"color-button\":\"edit-list_color-button__1duo6\",\"edit-list-button\":\"edit-list_edit-list-button__3kaw7\",\"text\":\"edit-list_text__281s1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"table-date-navigation_container__1uoG4\",\"navigateButtons\":\"table-date-navigation_navigateButtons__32aiq\",\"picContainer\":\"table-date-navigation_picContainer__3ZRkt\",\"centeredText\":\"table-date-navigation_centeredText__t9WtX\"};","const getCookie = (name) => {\r\n    const cookieValue = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n    return cookieValue ? cookieValue[2] : null;\r\n}\r\n\r\nexport default getCookie;","function userObject(response) {\r\n    return {\r\n        username: response.user.username,\r\n        id: response.user._id,\r\n        teams: response.teams,\r\n        inbox: response.user.inbox,\r\n        confirmed: response.user.confirmed,\r\n        newPasswordConfirmed: response.user.newPasswordConfirmed,\r\n        recentProjects: response.user.recentProjects,\r\n        image: response.user.image,\r\n        lastTeamSelected: response.user.lastTeamSelected\r\n    }\r\n}\r\n\r\nexport default userObject","import React from \"react\"\r\n\r\nconst UserContext = React.createContext({\r\n    user: null,\r\n    logIn: () => {},\r\n    logOut: () => {}\r\n});\r\n\r\nexport default UserContext","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport getCookie from \"../utils/cookie\"\r\nimport userObject from \"../utils/userObject\"\r\nimport UserContext from \"./UserContext\"\r\n\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const history = useHistory()\r\n\r\n    const logIn = (user) => {\r\n        setUser({\r\n            ...user,\r\n            loggedIn: true\r\n        })\r\n    }\r\n\r\n    const logOut = useCallback(() => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        fetch('/api/user/logout', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        }).then(response => {\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            } else {\r\n                document.cookie = \"x-auth-token= ; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/;\"\r\n\r\n                setUser({\r\n                    loggedIn: false\r\n                })\r\n            }\r\n        })\r\n    }, [history])\r\n\r\n    const verifyLogin = useCallback(() => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        if (!token) {\r\n\r\n            setUser({\r\n                loggedIn: false\r\n            })\r\n\r\n            setLoading(false)\r\n            return;\r\n        }\r\n\r\n        fetch(\"/api/user/verify\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        }).then(promise => {\r\n            return promise.json()\r\n        }).then(response => {\r\n            if (response.status) {\r\n                logIn(userObject(response))\r\n            } else {\r\n                logOut()                \r\n            }\r\n\r\n            setLoading(false)\r\n        })\r\n    }, [logOut])\r\n\r\n    useEffect(() => {\r\n        verifyLogin()\r\n    }, [verifyLogin])\r\n\r\n    if (loading) {\r\n        return (\r\n            <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#363338\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            user,\r\n            setUser,\r\n            logIn,\r\n            logOut\r\n        }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider","import React from \"react\"\r\nimport UserProvider from \"./contexts/UserProvider\"\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n        <UserProvider>\r\n            {props.children}\r\n        </UserProvider>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\n\r\nconst TeamContext = React.createContext({\r\n  teams: [] ,\r\n  setTeams: () => {},\r\n  selectedTeam: 'Select' ,\r\n  setSelectedTeam: () => {},\r\n  getCurrentTeam: () => {},\r\n  currentTeam: '',\r\n  setCurrentTeam: () => {},\r\n  getTeams: () => {}\r\n})\r\n\r\nexport default TeamContext","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonClean = ({ title, onClick, type, className, children, style }) => {\r\n    return (\r\n        <button\r\n            type={type || 'button'}\r\n            onClick={onClick}\r\n            className={`${styles.clean} ${className}`} style={style}\r\n        >{title}{children}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonClean","import React, { useContext, useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext)\r\n}\r\n\r\nexport function SocketProvider({ user, children }) {\r\n  const [socket, setSocket] = useState()\r\n  const url = window.location.href.includes('heroku') ? '/' : 'http://localhost:4000'\r\n    \r\n  useEffect(() => {\r\n    if (!user) {\r\n      return\r\n    }\r\n\r\n    if (!user.teams) {\r\n      return\r\n    }\r\n    const username = user.username\r\n    const userId = user.id\r\n    const teams = [...user.teams]\r\n    const teamsId = teams.map( t => t._id)\r\n    const teamsStr = JSON.stringify(teamsId)\r\n    const newSocket = io(\r\n      url, {\r\n        query: { teamsStr, username, userId },\r\n        transports: ['websocket']\r\n      }\r\n    )\r\n    setSocket(newSocket)\r\n\r\n    return () => newSocket.close()\r\n  }, [user, url])\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n}\r\n","import styles from \"./index.module.css\"\r\nimport Image from \"cloudinary-react/lib/components/Image\"\r\nimport Transformation from \"cloudinary-react/lib/components/Transformation\"\r\nimport Avatar from \"react-avatar\"\r\n\r\nexport default function AvatarUser({ user, onClick, className, key, size }) {\r\n\r\n    return (\r\n\r\n        user.image ?\r\n                <Image\r\n                    publicId={user.image.publicId}\r\n                    onClick={onClick}\r\n                    key={key}\r\n                    className={`${styles['profile-picture']} ${className}`}\r\n                    title={user.username}\r\n                >\r\n                    <Transformation width={size} height={size} gravity=\"faces\" crop=\"fill\" />\r\n                </Image>\r\n\r\n            :\r\n\r\n            <Avatar\r\n                key={key}\r\n                className={className}\r\n                onClick={onClick}\r\n                name={user.username}\r\n                size={size}\r\n                round={true}\r\n                maxInitials={2}\r\n            />\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonGrey = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonGrey","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AvatarUser from '../avatar-user'\r\nimport ButtonGrey from '../button-grey'\r\n\r\n\r\nexport default function CreateTeam(props) {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch('/api/user/get-all', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u._id !== input._id)\r\n        setMembers(arr)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch('/api/teams', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                requests: members\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const team = await response.json()\r\n            const arr = [...teamContext.teams]\r\n            arr.push(team)\r\n            // const userTeams = [...userContext.user.teams]\r\n            // userTeams.push(team)\r\n            teamContext.setTeams(arr)\r\n            teamContext.setSelectedTeam(team.name)\r\n            props.hideForm()\r\n            socket.emit('team-update', team._id)\r\n            socket.emit('multiple-messages-sent', members)\r\n            history.push(`/team/${team._id}`)\r\n        }\r\n\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    return (\r\n        // <div className={styles.form}>\r\n\r\n        <div className={styles.container}>\r\n\r\n\r\n            <div className={styles.title} >Create New Team</div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    placeholder='Team Name'\r\n                    autocomplete=\"off\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span className={styles['description-text']}> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label=\"Description\"\r\n                    id=\"description\"\r\n                    placeholder='Team Description'\r\n                    spellcheck=\"false\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-members']}>\r\n                <span className={styles['members-text']}> Invite Members</span>\r\n\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['input-members']}\r\n                        autoComplete=\"off\"\r\n                        value={member}\r\n                        onChange={inputMembers}\r\n                        label=\"Invite members\"\r\n                        id=\"members\"\r\n                        placeholder='username'\r\n                        onBlur={onBlur}\r\n\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            showMembers &&\r\n                            <div className={styles['members-pop-up']}>\r\n                                <div className={styles.members}>\r\n                                    {\r\n                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                            .filter((e) => {\r\n                                                const found = members.find(element => element.username === e.username)\r\n                                                if (found) {\r\n                                                    return false\r\n                                                } else {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                            .map(u => {\r\n                                                return (\r\n                                                    <ButtonClean\r\n                                                        key={u._id}\r\n                                                        className={styles.user}\r\n                                                        onClick={() => addMember(u)}\r\n                                                        title={<div>\r\n                                                            <div>{u.username}</div>\r\n                                                            <div className={styles.email}>{u.email}</div>\r\n                                                        </div>}\r\n                                                    />)\r\n                                            })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map(m => {\r\n                        return (\r\n                            <ButtonClean\r\n                                onClick={() => removeMember(m)}\r\n                                title={\r\n                                <AvatarUser user={m} size={40}/>\r\n                                }\r\n                            />\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n                {/* <button type='submit' className={styles['create-button']}>Create</button> */}\r\n                <ButtonGrey onClick={(e)=>handleSubmit(e)} title=\"Create\" className={styles['create-button']}/>\r\n                \r\n            </div>\r\n\r\n\r\n        </div>\r\n        // </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LinkComponent = ({ title, href, className, onClick }) => {\r\n    return (\r\n            <Link to={href} className={`${styles.link} ${className}`} onClick={onClick} >\r\n                {title}\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponent;","export default __webpack_public_path__ + \"static/media/logo.2beba198.svg\";","export default __webpack_public_path__ + \"static/media/menu.f66dcc80.svg\";","export default __webpack_public_path__ + \"static/media/home.05f82417.svg\";","export default __webpack_public_path__ + \"static/media/tasks.d514e762.svg\";","export default __webpack_public_path__ + \"static/media/inbox.6389f480.svg\";","export default __webpack_public_path__ + \"static/media/inbox-bell.959a963c.svg\";","import React from 'react'\r\n\r\nconst ProjectContext = React.createContext({\r\n  lists: [] ,\r\n  setLists: () => {},\r\n  hiddenLists: [],\r\n  setHiddenLists: () => {},\r\n  project: {},\r\n  setProject: () => {}\r\n})\r\n\r\nexport default ProjectContext\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ListColor({ color, type }) {\r\n    if (type === 'aside') {\r\n        return (\r\n            <svg className={`${styles[type]}`} xmlns=\"http://www.w3.org/2000/svg\" width=\"110\" height=\"26.931\" viewBox=\"0 0 110 26.931\">\r\n                <g id=\"Layer_2\" data-name=\"Layer 2\" transform=\"translate(0.002 0.014)\">\r\n                    <g id=\"Layer_1\" data-name=\"Layer 1\" transform=\"translate(-0.002 -0.014)\">\r\n                        <path\r\n                            id=\"Path_60\"\r\n                            data-name=\"Path 60\"\r\n                            d=\"M4.208,22.578l-.277-.26c-.594-.366-.814-1.074-1.351-1.49-1-.749-1.14-2.214-2.352-2.784a1.237,1.237,0,0,1-.187-.391,1.628,1.628,0,0,1,.554-1.628,5.636,5.636,0,0,1,3.1-.456,6.862,6.862,0,0,0,1.083,0,.733.733,0,0,0,.765-.765c.049-.48-.057-.814-.586-.871a1.628,1.628,0,0,1-.513-.163c-.92-.456-.961-1.083-.106-1.7a3.256,3.256,0,0,0,.545-.448,1.27,1.27,0,0,1,.659-.383c.667-.244,1.538.3,2.027-.545a.651.651,0,0,0-.244-.374,6.894,6.894,0,0,1-.659-.554,1.278,1.278,0,0,1-.415-.814A1.9,1.9,0,0,0,5.022,6.933C4.2,6.509,3.6,5.891,4.411,4.881c2.263-1.628,4.933-1.937,7.57-2.328,1.27-.309,2.589-.187,3.858-.48a4.811,4.811,0,0,1,1.449-.09c.643.073,1.254.317,1.921-.147a2.011,2.011,0,0,1,1.718-.106,2.808,2.808,0,0,0,2.32-.2,3.394,3.394,0,0,1,2.2.122c1.628-.6,3.313-.391,4.957-.667.765-.147,1.563-.114,2.328-.3a8.873,8.873,0,0,1,3.557.13.252.252,0,0,0,.269,0A2.914,2.914,0,0,1,39.885.73h.277A2.182,2.182,0,0,1,42.075.307a22.922,22.922,0,0,0,3.883.057A34.326,34.326,0,0,0,56.165.2,1.75,1.75,0,0,1,57.85.51h.277C59.136-.3,60.276.054,61.383.128a28.856,28.856,0,0,0,4.436.26,8.669,8.669,0,0,1,2.751,0c1.188.317,2.442,0,3.606.244A22.083,22.083,0,0,0,75.7.917l.464.041a16.752,16.752,0,0,0,3.191.228h.464c1.083.057,2.157.285,3.256.269,1.351,0,2.678.3,4.021.309.814.171,1.685.2,2.523.334.545.269,1.254.065,1.709.578a4.746,4.746,0,0,0,1.9.309,26.545,26.545,0,0,1,4.548.392c1.166.211,2.347.235,3.527.333,1.091.3,2.271,0,3.329.5,1.408,0,2.825,0,4.241.081.3,0,.716.1.676.513s-.374.586-.814.383c-1.034-.09-2.059-.155-2.523,1.083-.317.814-.961.562-1.555.488-.537.228-1.14.147-1.677.358a5.576,5.576,0,0,1-.814.106,20.26,20.26,0,0,0-4.591.765c.814.676,1.245,1.555,2.255,1.758a1.934,1.934,0,0,1,1.424.334c-.057,1.026-.936.586-1.449.814a.578.578,0,0,1-.383-.065.057.057,0,0,0,0,.057h3.972a1.042,1.042,0,0,1,.92.448c-.244.814-1.058.521-1.587.814-.407.212-1.156.187-.545.961a4.613,4.613,0,0,0,.391.407,11.928,11.928,0,0,0,3,.155,5.421,5.421,0,0,1,.961,0c.814.147,1.058.44.407,1.156-1.074,1.188-2.442,2.165-3.012,3.769,1.742,0,3.565.041,5.389,0,.863.4.879.92.236,1.547a1.148,1.148,0,0,0-.3.814c.114.35.073.733.212,1.074.562,1.384.5,1.547-.863,2.068a13.569,13.569,0,0,1-2.637.814c-1.571.049-3.118.521-4.7.309-1.628-.554-3.329.212-4.99-.081a9.589,9.589,0,0,0-4.884.147,2.816,2.816,0,0,1-2.076.488H79.771a5.739,5.739,0,0,0-1.9.179,10.631,10.631,0,0,1-1.831.1c-4.485,0-8.954.081-13.455,0a4.933,4.933,0,0,0-1.758.187,9.247,9.247,0,0,1-2.507.106h-.529a28.6,28.6,0,0,1-3.126,0h-.48a6.137,6.137,0,0,1-1.726-.1,11.209,11.209,0,0,0-3.533-.2c-2.222.065-4.461-.106-6.675.163a6.658,6.658,0,0,1-1.929.081,4.168,4.168,0,0,1-.456,0c-1.286,0-2.572.106-3.858.049a12.474,12.474,0,0,0-3.394,0c-1.319.2-2.67-.138-3.98.187a16.768,16.768,0,0,1-2.556.236c-1.368-.366-2.711.342-4.07.106a2.133,2.133,0,0,1-.456-.073,9.475,9.475,0,0,0-2.711-.179c-1.213-.09-2.442-.236-3.63-.342a9.377,9.377,0,0,0-1.058-.228,17.6,17.6,0,0,0-2.068-.114c-1.335-.472-2.768-.22-4.119-.521a.969.969,0,0,1-.684-.814l-.594-.537c-.244-.236-.627-.26-.814-.529l-.529-.342A1.913,1.913,0,0,1,4.208,22.578Z\"\r\n                            transform=\"translate(0.002 0.014)\"\r\n                            fill={color}\r\n                        />\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        )\r\n    }\r\n    if (type === 'list') {\r\n        return (\r\n            <svg className={`${styles[type]}`} xmlns=\"http://www.w3.org/2000/svg\" width=\"267.316\" height=\"26.931\" viewBox=\"0 0 267.316 26.931\">\r\n                <path\r\n                    id=\"Path_60\"\r\n                    data-name=\"Path 60\"\r\n                    d=\"M10.229,22.578l-.673-.26c-1.444-.366-1.978-1.074-3.284-1.49C3.84,20.079,3.5,18.614.556,18.044A1.347,1.347,0,0,1,.1,17.653c-.341-.6.18-1.235,1.345-1.628,2.334-.61,4.985-.431,7.537-.456.876.029,1.755.029,2.631,0a3.5,3.5,0,0,0,1.34-.214c.354-.146.542-.346.52-.551.119-.48-.138-.814-1.424-.871A8.487,8.487,0,0,1,10.8,13.77c-2.235-.456-2.334-1.083-.257-1.7a10.411,10.411,0,0,0,1.325-.448,5.16,5.16,0,0,1,1.6-.383c1.622-.244,3.739.3,4.926-.545a1.011,1.011,0,0,0-.593-.374q-.842-.256-1.6-.554c-.569-.211-.928-.5-1.009-.814.269-.877-.97-1.715-2.987-2.019-2-.423-3.462-1.042-1.484-2.051,5.5-1.628,11.987-1.937,18.4-2.328,3.086-.309,6.29-.187,9.376-.48a28.141,28.141,0,0,1,3.521-.09,13.688,13.688,0,0,0,4.668-.147,11.345,11.345,0,0,1,4.174-.106,15.811,15.811,0,0,0,5.638-.2,19.52,19.52,0,0,1,5.341.122c3.956-.6,8.051-.391,12.047-.667,1.859-.147,3.8-.114,5.657-.3a51.868,51.868,0,0,1,8.644.13,1.4,1.4,0,0,0,.653,0A15.916,15.916,0,0,1,96.93.73H97.6a11.592,11.592,0,0,1,4.649-.423c3.136.129,6.292.148,9.436.057A201.717,201.717,0,0,0,136.493.2a9.383,9.383,0,0,1,4.095.309h.673c2.453-.814,5.222-.456,7.913-.383,3.572.2,7.176.288,10.781.26a50.926,50.926,0,0,1,6.686,0c2.888.317,5.934,0,8.763.244,2.832.189,5.7.284,8.565.285L185.1.958c2.561.178,5.158.254,7.754.228h1.128c2.631.057,5.242.285,7.913.269,3.284,0,6.508.3,9.772.309,1.978.171,4.095.2,6.132.334,1.325.269,3.046.065,4.154.578a26.89,26.89,0,0,0,4.609.309c3.714,0,7.407.131,11.052.392,2.834.211,5.7.235,8.571.333,2.651.3,5.519,0,8.091.5,3.422,0,6.864,0,10.306.081.732,0,1.741.1,1.642.513s-.91.586-1.978.383c-2.512-.09-5-.155-6.132,1.083-.771.814-2.334.562-3.778.488-1.306.228-2.769.147-4.075.358-.652.055-1.313.091-1.978.106-3.778.078-7.522.335-11.157.765,1.978.676,3.027,1.555,5.479,1.758a10.354,10.354,0,0,1,3.462.334c-.138,1.026-2.275.586-3.521.814a3.213,3.213,0,0,1-.93-.065.031.031,0,0,0,0,.057h9.653a4.468,4.468,0,0,1,2.235.448c-.593.814-2.572.521-3.857.814-.989.212-2.809.187-1.325.961q.444.215.949.407a69.98,69.98,0,0,0,7.28.155c.777-.028,1.558-.028,2.334,0,1.978.147,2.572.44.989,1.156-2.611,1.188-5.934,2.165-7.319,3.769,4.233,0,8.664.041,13.1,0,2.1.4,2.136.92.574,1.547-.493.221-.756.514-.732.814.277.35.178.733.514,1.074,1.365,1.384,1.207,1.547-2.1,2.068-2.064.36-4.211.633-6.409.814-3.818.049-7.576.521-11.434.309-3.956-.554-8.091.212-12.126-.081a55.789,55.789,0,0,0-11.869.147,15.064,15.064,0,0,1-5.044.488H193.858a33.325,33.325,0,0,0-4.609.179c-1.474.085-2.963.118-4.451.1-10.9,0-21.759.081-32.7,0a28.531,28.531,0,0,0-4.273.187,54.277,54.277,0,0,1-6.093.106h-1.286q-3.8.085-7.6,0h-1.167a35.951,35.951,0,0,1-4.194-.1,65.578,65.578,0,0,0-8.585-.2c-5.4.065-10.84-.106-16.221.163A39.063,39.063,0,0,1,98,26.289q-.553.012-1.108,0c-3.125,0-6.251.106-9.376.049a73.383,73.383,0,0,0-8.249,0c-3.2.2-6.488-.138-9.673.187-2.053.144-4.129.223-6.211.236-3.323-.366-6.587.342-9.891.106-.375-.008-.746-.032-1.108-.073a55.413,55.413,0,0,0-6.587-.179c-2.947-.09-5.934-.236-8.822-.342q-1.269-.144-2.572-.228c-1.668-.079-3.346-.117-5.024-.114-3.244-.472-6.726-.22-10.009-.521-.9-.111-1.551-.431-1.662-.814l-1.444-.537c-.593-.236-1.523-.26-1.978-.529L13,23.188A8.056,8.056,0,0,1,10.229,22.578Z\"\r\n                    transform=\"translate(0.002 0.014)\"\r\n                    fill={color} />\r\n            </svg>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport ProjectContext from \"../../contexts/ProjectContext\";\r\nimport ListColor from '../list-color'\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonHideList = ( { list, type } ) => {\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    function onClick() {\r\n        const newHiddenLists = [...projectContext.hiddenLists]\r\n        \r\n        if (newHiddenLists.includes(list._id)) {\r\n            const index = newHiddenLists.indexOf(list._id)\r\n            newHiddenLists.splice(index, 1)\r\n        } else {\r\n            newHiddenLists.push(list._id)\r\n        }\r\n        projectContext.setHiddenLists(newHiddenLists)\r\n    }\r\n\r\n    return (\r\n    <button onClick={onClick} className={`${styles.submit} ${projectContext.hiddenLists.includes(list._id) && styles.opacity}`} >\r\n        <ListColor color={list.color || '#A6A48E'} type={type} />\r\n        <div className={styles.name} title={list.name} >{list.name}</div>\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default ButtonHideList","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport LinkComponent from '../link'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport menu from '../../images/aside/menu.svg'\r\nimport home from '../../images/aside/home.svg'\r\nimport tasks from '../../images/aside/tasks.svg'\r\nimport inbox from '../../images/aside/inbox.svg'\r\nimport bell from '../../images/aside/inbox-bell.svg'\r\n// import settings from '../../images/aside/settings.svg'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport ButtonHideList from '../button-hide-list'\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport userObject from '../../utils/userObject'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\n\r\nexport default function Aside({ asideOn, setAsideOn }) {\r\n    const [listVisibility, setListVisibility] = useState(false)\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const logIn = userContext.logIn\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('project')) {\r\n            setListVisibility(true)\r\n        }\r\n    }, [])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        const user = userObject(response)\r\n        logIn(user)\r\n    }, [logIn])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <div className={styles.aside}>\r\n            <aside className={styles.container}>\r\n                <div className={styles['top-left']}>\r\n                    <ButtonClean\r\n                        className={styles.hamburger}\r\n                        onClick={() => setAsideOn(!asideOn)}\r\n                        title={<img className={styles.options} src={menu} alt=\"menu\" width=\"32\" height=\"24\" />}\r\n                    />\r\n                </div>\r\n                <LinkComponent\r\n                    href='/'\r\n                    title={<img src={home} alt=\"home\" width=\"34\" height=\"32\" />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/my-tasks/${userContext.user.id}`}\r\n                    title={<img src={tasks} alt=\"my-tasks\" width=\"30\" height=\"25\" />}\r\n                />\r\n                <LinkComponent\r\n                    href={`/inbox/${userContext.user.id}`}\r\n                    title={<img src={inbox} alt=\"inbox\" width=\"33\" height=\"34\" />}\r\n                />\r\n                {/* <LinkComponent\r\n                    href={`/profile/${userContext.user.id}`}\r\n                    title={<img src={settings} alt=\"settings\" width=\"25\" height=\"25\" />}\r\n                /> */}\r\n                {\r\n                    userContext.user.inbox.length !== 0 &&\r\n                    <LinkComponent\r\n                        href={`/inbox/${userContext.user.id}`}\r\n                        title={<img src={bell} alt=\"inbox\" width=\"33\" height=\"34\" />}\r\n                        className={styles.bell}\r\n                    />\r\n                }\r\n            </aside>\r\n            {\r\n                asideOn &&\r\n                    <div className={styles.menu}>\r\n                        <div className={styles['top-right']}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width=\"87\" height=\"65\" />\r\n                            </div>\r\n                            <LinkComponent\r\n                                href='/'\r\n                                title='Home'\r\n                                className={styles.link}\r\n                            />\r\n                            <LinkComponent\r\n                                href={`/my-tasks/${userContext.user.id}`}\r\n                                title='My Tasks'\r\n                                className={styles.link}\r\n                            />\r\n                            <LinkComponent\r\n                                href={`/inbox/${userContext.user.id}`}\r\n                                title='Inbox'\r\n                                className={styles.link}\r\n                            />\r\n                            {/* <LinkComponent\r\n                                href={`/profile/${userContext.user.id}`}\r\n                                title='Settings'\r\n                                className={styles.link}\r\n                            /> */}\r\n                        </div>\r\n                        {listVisibility && <div className={styles['bottom-right']}>\r\n                            {\r\n                                projectContext.lists.map((element) => {\r\n                                    return (\r\n                                        <ButtonHideList key={element._id} list={element} type={'aside'} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>}\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\n\r\nexport const useDetectOutsideClick = (el) => {\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const onClick = e => {\r\n      // If the active element exists and is clicked outside of\r\n      if (el.current !== null && !el.current.contains(e.target)) {\r\n        setIsActive(!isActive)\r\n      }\r\n    }\r\n\r\n    // If the item is active (ie open) then listen for clicks outside\r\n    if (isActive) {\r\n      window.addEventListener(\"click\", onClick)\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", onClick)\r\n    }\r\n  }, [isActive, el])\r\n\r\n  return [isActive, setIsActive]\r\n}","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst Transparent = (props) => {\r\n    return (\r\n    <>\r\n    <div onClick={props.hideForm} className={styles.transparent}></div>\r\n    {props.children}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Transparent\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AvatarUser from '../avatar-user'\r\nimport ButtonGrey from '../button-grey'\r\n\r\nexport default function CreateProject({ hideForm }) {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const socket = useSocket()\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name === '') {\r\n            return\r\n        }\r\n\r\n        const teamId = params.teamid\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch('/api/projects', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                teamId,\r\n                members\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        } else {\r\n            const project = await response.json()\r\n            hideForm && hideForm()\r\n            socket.emit('team-update', teamId)\r\n            history.push(`/project-board/${teamId}/${project._id}`)\r\n        }\r\n    }\r\n\r\n    const onFocus = async () => {\r\n        setShowMembers(true)\r\n\r\n        const teamId = params.teamid\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch(`/api/teams/get-users/${teamId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users.members)\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...members]\r\n        arr.push(input)\r\n        setMembers(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = (input) => {\r\n        const arr = members.filter(u => u._id !== input._id)\r\n        setMembers(arr)\r\n    }\r\n\r\n    return (\r\n        // <div className={styles.form}>\r\n        <div className={styles.container} >\r\n\r\n\r\n\r\n            <div className={styles.title} >Create New Project</div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span> Name</span>\r\n                <input\r\n                    className={styles['input-name']}\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    placeholder='Project Name'\r\n                    autocomplete=\"off\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container-descr']}>\r\n                <span> Description</span>\r\n                <textarea\r\n                    className={styles['text-area-descr']}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    label=\"Description\"\r\n                    id=\"description\"\r\n                    placeholder='Project Description'\r\n                    spellcheck=\"false\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['input-container']}>\r\n                <span className={styles['text-invite']}> Invite Members</span>\r\n\r\n                <div className={styles['invite-input']}>\r\n                    <input\r\n                        className={styles['members-input']}\r\n                        autoComplete=\"off\"\r\n                        value={member}\r\n                        onFocus={onFocus}\r\n                        onBlur={onBlur}\r\n                        onChange={(e) => setMember(e.target.value)}\r\n                        label=\"Invite members\"\r\n                        id=\"members\"\r\n                        placeholder='Teammate Username'\r\n                    />\r\n\r\n                    <div className={styles['select-for-invite']}>\r\n                        {\r\n                            showMembers &&\r\n                            <div className={styles.members}>\r\n                                {\r\n                                    allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                        .filter((e) => {\r\n                                            const found = members.find(element => element.username === e.username)\r\n                                            if (found) {\r\n                                                return false\r\n                                            } else {\r\n                                                return true\r\n                                            }\r\n                                        })\r\n                                        .sort((a, b) => a.username.localeCompare(b.username))\r\n                                        .map(u => {\r\n                                            return (\r\n                                                <ButtonClean\r\n                                                    key={u._id}\r\n                                                    className={styles.user}\r\n                                                    onClick={() => addMember(u)}\r\n                                                    title={<div>\r\n                                                        <div>{u.username}</div>\r\n                                                        <div className={styles.email}>{u.email}</div>\r\n                                                    </div>}\r\n                                                />)\r\n                                        })\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles['members-avatars']}>\r\n                {\r\n                    members.map((m,index) => {\r\n                        return (\r\n                            <AvatarUser key={index} user={m} onClick={() => removeMember(m)} size={40}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className={styles['button-div']}>\r\n            <ButtonGrey onClick={(e)=>handleSubmit(e)} title=\"Create\" className={styles['create-button']}/>\r\n                {/* <button type='submit' className={styles['create-button']}>Create</button> */}\r\n            </div>\r\n\r\n        </div>\r\n        // </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\n\r\n\r\nexport default function SearchResults(props) {\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const teams = userContext.user.teams\r\n    const searchInput = props.searchInput\r\n\r\n    let resultArr = []\r\n\r\n    for (let index = 0; index < teams.length; index++) {\r\n        const team = teams[index];\r\n        let obj = { 'name': `Team: ${team.name}`, 'id': team._id, 'type': 'team' }\r\n        resultArr.push(obj)\r\n        for (let index = 0; index < team.projects.length; index++) {\r\n            const project = team.projects[index];\r\n            let obj = { 'name': `Project: ${project.name}`, 'id': project._id, 'type': 'project' }\r\n            resultArr.push(obj)\r\n        }\r\n    }\r\n\r\n    const gotToPage = (id) => {\r\n        for (let index = 0; index < teams.length; index++) {\r\n            const team = teams[index];\r\n            if (team._id === id) {\r\n                history.push(`/team/${id}`)\r\n                teamContext.updateSelectedTeam(team._id)\r\n                props.hideForm()\r\n            }\r\n            for (let index = 0; index < team.projects.length; index++) {\r\n                const project = team.projects[index];\r\n                if (project._id === id) {\r\n                    history.push(`/project-board/${team._id}/${project._id}`)\r\n                    teamContext.updateSelectedTeam(team._id)\r\n                    props.hideForm()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles['search-container']}>\r\n            {\r\n                resultArr.filter(u => u.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n                    .map((t, index) => {\r\n                        return (\r\n                            <div key={index} className={styles.result} onClick={() => { gotToPage(t.id) }}>{t.name}</div>\r\n                        )\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/search.a87ce9fc.svg\";","import React, { useRef, useState } from 'react'\r\nimport { useDetectOutsideClick } from \"../../utils/useDetectOutsideClick\"\r\nimport SearchResults from \"../search-results\"\r\nimport styles from './index.module.css'\r\nimport searchImg from '../../images/search.svg'\r\n\r\n\r\nconst SearchField = ({ asideOn }) => {\r\n    const dropdownRefSearch = useRef(null)\r\n    const [searchInput, setSearchInput] = useState('')\r\n    const [showSearchForm, setShowSearchForm] = useDetectOutsideClick(dropdownRefSearch)\r\n    const [showSearchInput, setShowSearchInput] = useState(false)\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => (setShowSearchForm(false)), 120)\r\n        setTimeout(() => (setShowSearchInput(!showSearchInput)),120)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles['search-button']} onClick={() => setShowSearchInput(!showSearchInput)} >\r\n                <img className={styles['search-icon']} src={searchImg} alt=\"search\" />\r\n            </div>\r\n            <div className={showSearchInput ? \r\n                ( asideOn? \r\n                    (`${styles['new-line']} ${styles['search-fields']} ${styles['small']} `)\r\n                    :(`${styles['new-line']} ${styles['search-fields']}`)) \r\n                : styles['search-fields']} >\r\n                <input \r\n                    className={styles.input} \r\n                    type='text'\r\n                    placeholder={!showSearchForm ? 'Search...' : 'Enter Project or Team name'}\r\n                    autoComplete=\"off\"\r\n                    value={searchInput}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                    onClick={() => setShowSearchForm(true)}\r\n                    onBlur={onBlur}\r\n                />\r\n                {\r\n                    (\r\n                        searchInput.length > 0\r\n                        &&\r\n                        showSearchForm) ?\r\n                        <div ref={dropdownRefSearch}>\r\n                            <SearchResults searchInput={searchInput} hideForm={() => { setShowSearchForm(!showSearchForm); setSearchInput('') }} />\r\n                        </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchField","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonCleanTitle = ({ title, onClick, type, className, children, style }) => {\r\n    return (\r\n        <button\r\n            type={type || 'button'}\r\n            onClick={onClick}\r\n            className={`${styles.clean} ${className}`} style={style}\r\n            title={title}\r\n        >{title}{children}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonCleanTitle","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LinkComponentTitle = ({ title, href, className, onClick }) => {\r\n    return (\r\n            <Link to={href} className={`${styles.link} ${className}`} onClick={onClick} title={title} >\r\n                {title}\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default LinkComponentTitle","import React, { useContext, useRef, useState, useEffect, useCallback } from \"react\"\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useDetectOutsideClick } from \"../../utils/useDetectOutsideClick\"\r\nimport ButtonClean from \"../button-clean\"\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport Transparent from \"../transparent\"\r\nimport CreateTeam from \"../create-team\"\r\nimport ProjectContext from \"../../contexts/ProjectContext\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport CreateProject from \"../create-project\"\r\nimport getCookie from \"../../utils/cookie\"\r\n// import SearchResults from \"../search-results\"\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport AvatarUser from \"../avatar-user\"\r\nimport SearchField from \"../searchField\"\r\nimport ButtonCleanTitle from \"../button-clean-title\"\r\nimport LinkComponentTitle from \"../link-title\"\r\n\r\nconst Header = ({ asideOn }) => {\r\n    const dropdownRefProfile = useRef(null)\r\n    const dropdownRefView = useRef(null)\r\n    const dropdownRefProject = useRef(null)\r\n    const dropdownRefTeam = useRef(null)\r\n    // const dropdownRefSearch = useRef(null)\r\n    const [isProjectVisibble, setIsProjectVisibble] = useState(false)\r\n    const [isProjectActive, setIsProjectActive] = useDetectOutsideClick(dropdownRefProject)\r\n    const [isTeamActive, setIsTeamActive] = useDetectOutsideClick(dropdownRefTeam)\r\n    const [isViewVisibble, setIsViewVisibble] = useState(false)\r\n    const [isViewActive, setIsViewActive] = useDetectOutsideClick(dropdownRefView)\r\n    const [viewState, setViewState] = useState(null)\r\n    const [isProfileActive, setIsProfileActive] = useDetectOutsideClick(dropdownRefProfile)\r\n    const [showTeamForm, setShowTeamForm] = useState(false)\r\n    // const [showSearchForm, setShowSearchForm] = useDetectOutsideClick(dropdownRefSearch)\r\n    // const [searchInput, setSearchInput] = useState('')\r\n    const [showProjectForm, setShowProjectForm] = useState(false)\r\n    // const [showSearchInput, setShowSearchInput] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const projectContext = useContext(ProjectContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [showOldProjects, setShowOldProjects] = useState(false)\r\n\r\n\r\n    function selectTeam(teamId, teamName) {\r\n        teamContext.getCurrentProjects(teamId)\r\n        teamContext.setSelectedTeam(teamName)\r\n        setIsTeamActive(false)\r\n    }\r\n\r\n    const getData = useCallback(async () => {\r\n        const id = params.projectid\r\n        const token = getCookie(\"x-auth-token\");\r\n        const response = await fetch(`/api/projects/info/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            projectContext.setProject(data)\r\n        }\r\n    }, [history, params, projectContext])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) {\r\n            teamContext.setSelectedTeam('Select')\r\n        } else if (teamContext.selectedTeam === 'Select') {\r\n            const teamId = params.teamid\r\n            teamContext.updateSelectedTeam(teamId)\r\n        }\r\n\r\n        if (window.location.href.includes('project')) {\r\n            setIsViewVisibble(true)\r\n            setIsProjectVisibble(true)\r\n            teamContext.getCurrentProjects(params.teamid)\r\n\r\n            if (projectContext.project === null || projectContext.project._id !== params.projectid) {\r\n                getData()\r\n            } else if (projectContext.project.isFinished === true) {\r\n                setShowOldProjects(true)\r\n            } else if(projectContext.project.isFinished === false){\r\n                setShowOldProjects(false)\r\n            }\r\n\r\n            if (window.location.href.includes('board')) {\r\n                setViewState('Board')\r\n            }\r\n            if (window.location.href.includes('list')) {\r\n                setViewState('List')\r\n            }\r\n        }\r\n    }, [getData, params, params.teamid, projectContext.project, teamContext,])\r\n\r\n    useEffect(() => {\r\n        if (!(window.location.href.includes('team') || window.location.href.includes('project'))) return\r\n        if (socket == null) return\r\n        socket.on('team-deleted', goToHomePage)\r\n        return () => socket.off('team-deleted')\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!window.location.href.includes('project')) return\r\n        if (socket == null) return\r\n        socket.on('project-deleted', goToTeamPage)\r\n        return () => socket.off('project-deleted')\r\n    })\r\n\r\n    async function goToHomePage(deletedTeamId) {\r\n        if (deletedTeamId !== params.teamid) return\r\n        history.push('/')\r\n    }\r\n\r\n    function goToTeamPage(deletedProjectId) {\r\n        if (deletedProjectId !== params.projectid) return\r\n        history.push(`/team/${params.teamid}`)\r\n    }\r\n\r\n    if (window.location.href.includes('project') && !projectContext.project) {\r\n        return null\r\n    }\r\n\r\n    // const onBlur = () => {\r\n    //     setTimeout(() => (setShowSearchForm(false)), 120)\r\n    // }\r\n\r\n    // const getFullImageUrl = (imagePath) => {\r\n    //     return `https://res.cloudinary.com/${process.env.REACT_APP_CLOUD_NAME}/image/upload/w_400,h_400,c_crop,g_face,r_max/w_200/${imagePath}`\r\n    // }\r\n\r\n    return (\r\n        <header className={`${styles.navigation} ${asideOn ? styles.small : ''}`} >\r\n            <div className={styles.container}>\r\n                <div className={styles.links}>\r\n                    <div className={`${styles['team-container']} ${styles.flex}`}>\r\n                        <div className={styles.margin}>\r\n                            Team:\r\n                        </div>\r\n                        <div className={styles['list-container']}>\r\n                            <ButtonCleanTitle\r\n                                className={styles.teams}\r\n                                onClick={() => setIsTeamActive(!isTeamActive)}\r\n                                title={teamContext.selectedTeam}\r\n                            />\r\n                            {\r\n                                isTeamActive ? <div\r\n                                    ref={dropdownRefTeam}\r\n                                    className={styles.options}\r\n                                >\r\n                                    {\r\n                                        teamContext.teams.map(t => (\r\n                                            <div key={t._id} className={`${styles['team-options']} ${styles.hover}`}>\r\n                                                <LinkComponentTitle\r\n                                                    href={`/team/${t._id}`}\r\n                                                    title={t.name}\r\n                                                    onClick={() => { selectTeam(t._id, t.name) }}\r\n                                                    className={`${styles.overflow} ${styles.hover}`}\r\n                                                />\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                    <div className={`${styles['last-option']} ${styles.hover}`}>\r\n                                        <ButtonClean\r\n                                            onClick={() => setShowTeamForm(true)}\r\n                                            title='Create Team'\r\n                                            className={`${styles.logout} ${styles.hover}`}\r\n                                        />\r\n                                    </div>\r\n                                </div> : null\r\n                            }\r\n                        </div>\r\n                        {\r\n                            showTeamForm ? (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n                                <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n                            </Transparent>) : null\r\n                        }\r\n                    </div>\r\n\r\n\r\n\r\n                    {isProjectVisibble &&\r\n                        <div className={`${styles['project-container']} ${styles.flex}`}>\r\n                            <div className={styles.margin}>\r\n                                Project:\r\n                            </div>\r\n                            <div className={styles['list-container']}>\r\n                                <ButtonCleanTitle\r\n                                    className={styles.teams}\r\n                                    onClick={() => setIsProjectActive(!isProjectActive)}\r\n                                    title={projectContext.project.name}\r\n                                />\r\n                                {\r\n                                    isProjectActive ? <div\r\n                                        ref={dropdownRefProject}\r\n                                        className={styles.options}\r\n                                    >\r\n                                        {\r\n\r\n                                            teamContext.currentProjects.filter(!showOldProjects ? (p => (p.isFinished === false) || (p.isFinished === undefined)) : (p => (p.isFinished === true)))\r\n\r\n                                                .reverse()\r\n                                                .map(p => (\r\n                                                    <div key={p._id} className={`${styles['team-options']} ${styles.hover}`}>\r\n                                                        <LinkComponentTitle\r\n                                                            href={`/project-board/${params.teamid}/${p._id}`}\r\n                                                            title={p.name}\r\n                                                            onClick={() => { setIsProjectActive(false) }}\r\n                                                            className={`${styles.overflow} ${styles.hover}`}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))\r\n                                        }\r\n                                        <div className={`${styles['last-option']} ${styles.hover}`}>\r\n                                            <ButtonClean\r\n                                                onClick={() => setShowProjectForm(true)}\r\n                                                title='Create Project'\r\n                                                className={styles.logout}\r\n                                            />\r\n                                        </div>\r\n                                    </div> : null\r\n                                }\r\n                            </div>\r\n                            {\r\n                                showProjectForm && <Transparent hideForm={() => setShowProjectForm(false)}>\r\n                                    <CreateProject hideForm={() => setShowProjectForm(false)} />\r\n                                </Transparent>\r\n                            }\r\n                        </div>}\r\n\r\n\r\n\r\n                    {isViewVisibble && <div className={styles.flex}>\r\n                        <div className={styles.margin}>\r\n                            View:\r\n                        </div>\r\n                        <div className={styles['list-container']}>\r\n                            <ButtonClean\r\n                                className={styles.teams}\r\n                                onClick={() => setIsViewActive(!isViewActive)}\r\n                                title={viewState}\r\n                            />\r\n                            {\r\n                                isViewActive ? <div\r\n                                    ref={dropdownRefView}\r\n                                    className={styles.options}\r\n                                >\r\n                                    <div className={`${styles['first-option']} ${styles.hover}`}>\r\n                                        <ButtonClean\r\n                                            className={`${styles['profile-button']} ${styles.hover}`}\r\n                                            onClick={() => { history.push(`/project-board/${params.teamid}/${projectContext.project._id}`); setIsViewActive(false) }}\r\n                                            title='Board'\r\n\r\n                                        />\r\n                                    </div>\r\n                                    <div className={`${styles['last-option']} ${styles.hover}`}>\r\n                                        <ButtonClean\r\n                                            // href={`/project-list/${params.teamid}/${projectContext.project._id}`}\r\n                                            title='List'\r\n                                            className={`${styles['list-button']} ${styles.hover}`}\r\n                                            onClick={() => { history.push(`/project-list/${params.teamid}/${projectContext.project._id}`); setIsViewActive(false) }}\r\n                                        />\r\n                                    </div>\r\n                                </div> : null\r\n                            }\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n\r\n                <div className={`${styles.links} ${styles.font}`}>\r\n                    <SearchField asideOn={asideOn}/>\r\n                    {/* <span>\r\n                        <input className={styles.input} type='text'\r\n                            placeholder={!showSearchForm ? 'Search...' : 'Enter Project or Team name'}\r\n                            autoComplete=\"off\"\r\n                            value={searchInput}\r\n                            onChange={(e) => setSearchInput(e.target.value)}\r\n                            onClick={() => setShowSearchForm(true)}\r\n                            onBlur={onBlur}\r\n                        />\r\n                        {\r\n                            (\r\n                                searchInput.length > 0\r\n                                &&\r\n                                showSearchForm) ?\r\n                                <div ref={dropdownRefSearch}>\r\n                                    <SearchResults searchInput={searchInput} hideForm={() => { setShowSearchForm(!showSearchForm); setSearchInput('') }} />\r\n                                </div>\r\n                                : null\r\n                        }\r\n                    </span>\r\n                    <div className={styles['search-button']} >\r\n                            <ButtonClean\r\n                                onClick={() => setShowSearchInput(!showSearchInput)}\r\n                                title={<img className={styles['search-icon']} src={searchImg} alt=\"search\" />} />\r\n                    </div> */}\r\n                    <ButtonClean\r\n                        className={styles.avatar}\r\n                        onClick={() => setIsProfileActive(!isProfileActive)}\r\n                        title={\r\n                            <AvatarUser user={context.user} size={40} />\r\n                        }\r\n                    />\r\n                    {\r\n                        isProfileActive ? <div\r\n                            ref={dropdownRefProfile}\r\n                            className={`${styles.options} ${styles['logout-position']}`}\r\n                        >\r\n                            <div className={`${styles['first-option']} ${styles.hover}`}>\r\n                                <ButtonClean\r\n                                    title='Profile'\r\n                                    className={`${styles['profile-button']} ${styles.hover}`}\r\n                                    onClick={() => history.push(`/profile/${context.user && context.user.id}`)}\r\n                                />\r\n                            </div>\r\n                            <div className={`${styles['last-option']} ${styles.hover}`}>\r\n                                <ButtonClean\r\n                                    onClick={context.logOut}\r\n                                    title='Log Out'\r\n                                    className={styles.logout}\r\n                                />\r\n                            </div>\r\n                        </div> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\nimport Aside from '../aside'\r\nimport Header from \"../header\"\r\nimport styles from \"./index.module.css\"\r\n\r\nconst PageLayout = ({ children, contentClassName }) => {\r\n  const [asideOn, setAsideOn] = useState(false)\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <Aside asideOn={asideOn} setAsideOn={setAsideOn} />\r\n      <Header asideOn={asideOn} />\r\n      <div \r\n        className={contentClassName ? contentClassName : `${styles.content} ${asideOn ? styles.small : ''}`}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageLayout","import React from \"react\"\r\nimport styles from \"./index.module.css\"\r\n\r\nconst Title = ( {title} ) => {\r\n    return (\r\n    <div className={styles.title}>{title}</div>\r\n    )\r\n}\r\n\r\nexport default Title","export default __webpack_public_path__ + \"static/media/home-page-pic.50bdb1b7.svg\";","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ButtonGreyTitle = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`} title={title} >{title}</button>\r\n    )\r\n}\r\n\r\nexport default ButtonGreyTitle","import React, { useContext, useState, useRef } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport CreateTeam from \"../../components/create-team\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Title from \"../../components/title\"\r\nimport Transparent from \"../../components/transparent\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/home-page-pic.svg'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonGrey from \"../../components/button-grey\"\r\nimport ButtonGreyTitle from \"../../components/button-grey-title\"\r\n\r\n\r\nconst Home = () => {\r\n  const dropdownRef = useRef(null)\r\n  const userContext = useContext(UserContext)\r\n  const history = useHistory()\r\n  const [showTeamForm, setShowTeamForm] = useState(false)\r\n  const [showTeamsVisibleForm, setShowTeamsVisibleForm] = useDetectOutsideClick(dropdownRef)\r\n  const userName = userContext.user.username\r\n  const userTeams = userContext.user.teams\r\n  const userId = userContext.user._id\r\n  const recentProjects = userContext.user.recentProjects\r\n\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n  const goToProject = (projectId) => {\r\n\r\n    userTeams.map(t => {\r\n      return (t.projects.forEach(element => {\r\n        if (element._id === projectId) {\r\n          history.push(`/project-board/${t._id}/${projectId}`)\r\n        }\r\n      }))\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <PageLayout>\r\n      <div>\r\n        {\r\n          showTeamForm ? (<Transparent hideForm={() => setShowTeamForm(false)}>\r\n            <CreateTeam hideForm={() => { setShowTeamForm(false) }} ></CreateTeam>\r\n          </Transparent>) : null\r\n        }\r\n      </div>\r\n\r\n      <Title title='Home' />\r\n      <div className={styles.container}>\r\n\r\n        <span className={styles['left-buttons']}>\r\n\r\n          <div>\r\n            <ButtonGreyTitle className={styles['navigate-buttons']} title={'My Tasks'} onClick={() => history.push(`/my-tasks/${userId}`)} />\r\n\r\n          </div>\r\n\r\n          <div>\r\n            {/* <div className={styles['my-teams-container']}> */}\r\n            <ButtonGreyTitle className={styles['navigate-buttons']} title={'My Teams'} onClick={() => setShowTeamsVisibleForm(!showTeamsVisibleForm)} />\r\n\r\n\r\n            {/* </div> */}\r\n            <span>\r\n              <div className={styles['select-team-container']}>\r\n                {\r\n                  showTeamsVisibleForm ?\r\n                    <div className={styles['teams-home']} ref={dropdownRef}>\r\n                      {\r\n                        userTeams.length > 0\r\n                          ? userTeams.map((t, index) => {\r\n                            return (\r\n                              <span key={index}>\r\n                                <div\r\n                                  className={styles['navigate-buttons-teams']}\r\n                                  onClick={() => goToTeamPage(t._id)}\r\n                                  title={t.name}\r\n                                >\r\n                                  {t.name}</div>\r\n\r\n                              </span>\r\n                            )\r\n                          }\r\n                          )\r\n                          : \"You haven't joined any teams yet\"\r\n                      }\r\n                    </div>\r\n                    : null\r\n                }\r\n              </div>\r\n            </span>\r\n          </div>\r\n\r\n          <div>\r\n            <ButtonGreyTitle className={styles['navigate-buttons']} title={'Create New Team'} onClick={() => setShowTeamForm(true)} />\r\n\r\n          </div>\r\n\r\n        </span>\r\n\r\n        <div className={styles['pic-container']}>\r\n          <img className={styles.pic1} src={pic1} alt=\"\" />\r\n          <div className={styles['welcome-user']}>{`Welcome ${userName}!`}</div>\r\n        </div>\r\n\r\n        <span className={styles['right-buttons']}>\r\n          {\r\n            (recentProjects) ?\r\n              <div>\r\n                <div >{`Recent projects:`}</div>\r\n                {\r\n                  recentProjects.slice(0).reverse().map((p, index) => {\r\n                    return (\r\n                      <div key={p._id}>\r\n                        <ButtonGreyTitle className={styles['navigate-buttons']} title={p.name} onClick={() => goToProject(p._id)} />\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n\r\n\r\n              </div>\r\n              : null\r\n          }\r\n        </span>\r\n      </div>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default Home","export default __webpack_public_path__ + \"static/media/welcome-page-1.346d3517.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-2.73d5ef5e.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-3.5a073b3b.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-4.5b854b1a.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-5.a24b3016.svg\";","export default __webpack_public_path__ + \"static/media/welcome-page-6.2c79ee8c.svg\";","export default __webpack_public_path__ + \"static/media/instagram-icon.1043ced2.svg\";","export default __webpack_public_path__ + \"static/media/twitter-icon.0f92d6a5.svg\";","export default __webpack_public_path__ + \"static/media/facebook-icon.529cf39a.svg\";","import userObject from \"./userObject\"\r\n\r\nconst authenticate = async (url, method, body, onSuccess, onFailure) => {\r\n    try {\r\n        \r\n        const promise = await fetch(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        \r\n        const authToken = promise.headers.get(\"Authorization\")\r\n        const response = await promise.json()\r\n        \r\n        if (response.needPassword) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.wrongPassword) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.wrongUser) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n        if (response.exist) {\r\n            onFailure(response)\r\n            return\r\n        }\r\n\r\n        document.cookie = `x-auth-token=${authToken};path=/`\r\n\r\n\r\n        if (response.user.username && authToken) {\r\n            onSuccess(userObject(response));\r\n        } else {\r\n            onFailure(response)\r\n        }\r\n\r\n    } catch (e) {\r\n        onFailure(e)\r\n    }\r\n}\r\n\r\nexport default authenticate","import userObject from \"./userObject\"\r\n\r\nconst responseGoogle = async (googleResponse, onSuccess, onFailure) => {\r\n\r\n    try {\r\n        const tokenId = googleResponse.tokenId\r\n        const promise = await fetch(\"/api/user/google-login\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({tokenId}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        const authToken = promise.headers.get(\"Authorization\")\r\n        document.cookie = `x-auth-token=${authToken};path=/`\r\n\r\n        const response = await promise.json()\r\n\r\n        if (response.user.username && authToken) {\r\n            onSuccess(userObject(response))\r\n        } else {\r\n            onFailure(response)\r\n        }\r\n        \r\n    } catch (error) {\r\n        onFailure(error)\r\n    }\r\n}\r\n\r\nexport default responseGoogle","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div>\r\n            {props.alert ? (<div className={styles.alert}>\r\n                {props.message}\r\n            </div>) : null}\r\n        </div>\r\n    )\r\n}","import getCookie from \"./cookie\"\r\nimport userObject from \"./userObject\"\r\n\r\nconst authenticateUpdate = async (url, method, body, onSuccess, onFailure) => {\r\n\r\n    try {\r\n        \r\n        const cookie = getCookie('x-auth-token')\r\n    \r\n        const promise = await fetch(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": cookie\r\n            }\r\n        })\r\n        \r\n        const response = await promise.json()\r\n        if (response.user.username) {            \r\n            onSuccess(userObject(response))\r\n        } else {\r\n            onFailure()\r\n        }\r\n\r\n    } catch (e) {\r\n        onFailure(e)\r\n    }\r\n}\r\n\r\nexport default authenticateUpdate","import React, { useCallback, useContext, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Alert from '../alert'\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport authenticateUpdate from '../../utils/authenticate-update'\r\n\r\n\r\n\r\nexport default function AddPassword(props) {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rePassword, setRePassword] = useState(\"\")\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n\r\n    const userContext = useContext(UserContext)\r\n\r\n\r\n    const history = useHistory()\r\n    const userId = props.userId\r\n   \r\n\r\n\r\n    const handleSubmit = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n\r\n\r\n        if (!password || !rePassword) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n       \r\n\r\n        await authenticateUpdate(`/api/user/addNewPassword/${userId}`, 'PUT', {        //     \r\n            password        \r\n        }, (response) => {\r\n            userContext.logIn(response.user)\r\n            console.log(userContext.user);\r\n            history.push(\"/\")\r\n        })        \r\n\r\n    }, [history, userContext, password, rePassword, userId])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form className={styles.container} >\r\n\r\n            <div className={styles['inner-container']}>\r\n\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    </div>\r\n\r\n                    <div className={styles.title} >Add password to user</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['pass-input']}\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            label=\"New Password\"\r\n                            id=\"password\"\r\n                        />\r\n\r\n\r\n\r\n                        <div className={styles['pass-instructions']}>\r\n                            <p>Use 8 or more characters with a mix </p>\r\n                            <p>of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Confirm Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['pass-input']}\r\n                            type=\"password\"\r\n                            value={rePassword}\r\n                            onChange={e => setRePassword(e.target.value)}\r\n                            label=\"Confirm Password\"\r\n                            id=\"rePassword\"\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className={styles['new-pass-alert']}>\r\n                        Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n                        </div>\r\n\r\n                    <div className={styles['button-div-login']}>\r\n                        <button type='submit' className={styles['login-button']} onClick={handleSubmit}>Submit</button>\r\n                    </div>\r\n\r\n                    <div className={styles['text-login']}>User was registered with Google. Please add password for this Website</div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google.2cf12fa6.svg\";","import React, { useState, useContext } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from \"./index.module.css\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport Transparent from \"../transparent\"\r\nimport AddPassword from \"../form-add-password\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from \"../alert\"\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [userId, setUserId] = useState('')\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        await authenticate(\"/api/user/login\", 'POST', {\r\n            email,\r\n            password\r\n        }, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            if (response.needPassword) {\r\n                setUserId(response.userId)\r\n                setShowForm(true)\r\n            }\r\n            if (response.wrongPassword) {\r\n                setWrongPassAllert(true)\r\n            }\r\n            if (response.wrongUser) {\r\n                setWrongUserAllert(true)\r\n            }\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    const hideForm = () => {\r\n        setShowForm(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                showForm ?\r\n                    <div>\r\n                        <Transparent hideForm={hideForm}>\r\n                            <AddPassword hideForm={hideForm} userId={userId} email={email} />\r\n                        </Transparent>\r\n                    </div> : null\r\n            }\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n                <div className={styles['inner-container']}>\r\n\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n                        <div className={styles.alerts}>\r\n                            <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                            <Alert alert={wrongPassAllert} message={'Wrong Password'} />\r\n                            <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                        </div>\r\n\r\n                        <div className={styles.title} >Log In with E-mail</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles['email-input']}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label=\"Email\"\r\n                                id=\"email\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Password:</div>\r\n                            <input\r\n                                className={styles['pass-input']}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label=\"Password\"\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['button-div-login']}>\r\n                            <button type='submit' className={styles['login-button']}>Log In</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['text-div']}>\r\n                            <p className={styles['forgot-pass']}\r\n                                onClick={() => { props.goToForgotPassword(); props.hideForm() }}>\r\n                                Forgot Password?\r\n                        </p>\r\n                            <p className={styles['new-to-sm']}>\r\n                                New to Smart Manager?\r\n                        <button className={styles['sign-up-btn']}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                        </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles['button-div-google-login']}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles['google-login-btn']}\r\n                                    >\r\n                                        <img src={google} alt=\"logo\" width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText=\"Login\"\r\n                                onSuccess={handleGoogle}\r\n                                // onFailure={errorGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, { useContext, useState } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport styles from \"./index.module.css\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Alert from \"../alert\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\n\r\n\r\n\r\nconst SignupForm = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const [alert, setAlert] = useState(false)\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [userExist, setUserExist] = useState(false)\r\n    const [validEmailAlert, setValidEmailAlert] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n\r\n    function validateEmail(email) {\r\n        var re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\r\n        return re.test(email);\r\n    }\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n\r\n\r\n        setValidEmailAlert(false)\r\n        setAlert(false)\r\n        setFillAlert(false)\r\n        setUserExist(false)\r\n\r\n        const valid = validateEmail(email)\r\n        \r\n        if (!valid) {\r\n            setValidEmailAlert(true)\r\n            return\r\n        }\r\n\r\n        if (password !== rePassword) {\r\n            setAlert(true)\r\n            return\r\n        }\r\n\r\n\r\n        if (!username || !password || !rePassword || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n\r\n        await authenticate(\"/api/user/register\", 'POST', {\r\n            email,\r\n            username,\r\n            password\r\n        }, (user) => {\r\n            context.logIn(user);\r\n            history.push(\"/\");\r\n        }, (response) => {\r\n            if (response.exist) {\r\n                setUserExist(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <form className={styles.container} onSubmit={handleSubmit}>\r\n\r\n\r\n\r\n            <div className={styles['inner-container']}>\r\n                <div className={styles.logo}>\r\n                    <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n\r\n                    <div className={styles.alerts}>\r\n                        <Alert alert={alert} message={'Passwords do not match'} />\r\n                        <Alert alert={userExist} message={'User with this email already exists'} />\r\n                        <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                        <Alert alert={validEmailAlert} message={'Please enter valid email address'} />\r\n                    </div>\r\n                    <div className={styles.title}  >Sign Up with E-mail</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Username:</div>\r\n                        <input\r\n                            placeholder='John Smith'\r\n                            className={styles['sign-up-input']}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            label=\"Username\"\r\n                            id=\"username\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Email:</div>\r\n                        <input\r\n                            placeholder='John@example.com'\r\n                            className={styles['sign-up-input']}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            label=\"Email\"\r\n                            id=\"email\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            label=\"Password\"\r\n                            id=\"password\"\r\n                        />\r\n                        <div className={styles['pass-instructions']}>\r\n                            <p>Use 8 or more characters with a</p>\r\n                            <p>mix of letters, numbers & symbols. </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <div> Re-type Password:</div>\r\n                        <input\r\n                            placeholder='********'\r\n                            className={styles['sign-up-input']}\r\n                            type=\"password\"\r\n                            value={rePassword}\r\n                            onChange={(e) => setRePassword(e.target.value)}\r\n                            label=\"Re-Password\"\r\n                            id=\"re-password\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['button-div-login']}>\r\n                        <button type='submit' className={styles['sign-up-button']}>Get Started</button>\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <h3>\r\n                            or\r\n                        </h3>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles['button-div-google-login']}>\r\n                        <GoogleLogin\r\n                            render={renderProps => (\r\n                                <button onClick={renderProps.onClick}\r\n                                    className={styles['google-login-btn']}\r\n                                >\r\n                                    <img src={google} alt=\"logo\" width='25' height='25' />Sign Up with Google</button>\r\n                            )}\r\n                            clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                            buttonText=\"Sign up with Google\"\r\n                            onSuccess={handleGoogle}\r\n                            // onFailure={errorGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['text-div']}>\r\n                        <p className={styles['already-sign-up']}>\r\n                            Already Sign Up?\r\n                        <button className={styles['sign-up-btn']} onClick={() => { props.goToLogin(); props.hideForm() }}>Log In</button>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SignupForm;","import React, { useState, useContext } from \"react\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from \"./index.module.css\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport responseGoogle from \"../../utils/responseGoogle\"\r\nimport logo from '../../images/logo.svg'\r\nimport google from '../../images/welcome-page/google.svg'\r\nimport Alert from \"../alert\"\r\nimport authenticateUpdate from \"../../utils/authenticate-update\"\r\n\r\n\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [rePassword, setRePassword] = useState(\"\")\r\n    const context = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [fillAlert, setFillAlert] = useState(false)\r\n    const [wrongPassAllert, setWrongPassAllert] = useState(false)\r\n    const [wrongUserAllert, setWrongUserAllert] = useState(false)\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setFillAlert(false)\r\n        setWrongPassAllert(false)\r\n        setWrongUserAllert(false)\r\n\r\n        if (!password || !email) {\r\n            setFillAlert(true)\r\n            return\r\n        }\r\n        if (password !== rePassword) {\r\n            setWrongPassAllert(true)\r\n            return\r\n        }\r\n\r\n        const promise = await fetch(\"/api/user/login\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        const response = await promise.json()\r\n\r\n        if (response.wrongUser) {\r\n            setWrongUserAllert(true)\r\n            return\r\n        }\r\n        let userId\r\n        console.log(\"Error\", response)\r\n        if (response.user) {\r\n            userId = response.user._id\r\n        } else if (response.userId) {\r\n            userId = response.userId\r\n        }\r\n\r\n        authenticateUpdate(`/api/user/addNewPassword/${userId}`, 'PUT', {        //     \r\n            password\r\n        }, (response) => {\r\n            context.logIn(response.user)\r\n            history.push(\"/\")\r\n        })\r\n    }\r\n\r\n    const handleGoogle = (googleResponse) => {\r\n        responseGoogle(googleResponse, (user) => {\r\n            context.logIn(user)\r\n            history.push(\"/\")\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n                <div className={styles.alerts}>\r\n                    <Alert alert={fillAlert} message={'Please fill all fileds'} />\r\n                    <Alert alert={wrongPassAllert} message={'Passwords do not match'} />\r\n                    <Alert alert={wrongUserAllert} message={'Please fill valid email address'} />\r\n                </div>\r\n\r\n                <div className={styles['inner-container']}>\r\n                    <div className={styles.logo}>\r\n                        <img src={logo} alt=\"logo\" width='110' height='100' />\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n\r\n                        <div className={styles.title} >Forgot Password Form</div>\r\n\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div> Email:</div>\r\n                            <input\r\n                                className={styles.emailInput}\r\n                                placeholder='John@example.com'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                label=\"Email\"\r\n                                id=\"email\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                label=\"Password\"\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles['input-container']}>\r\n                            <div>Re-type New Password:</div>\r\n                            <input\r\n                                className={styles.passInput}\r\n                                placeholder='********'\r\n                                type=\"password\"\r\n                                value={rePassword}\r\n                                onChange={e => setRePassword(e.target.value)}\r\n                                label=\"Confirm Password\"\r\n                                id=\"rePassword\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles.buttonDivLogin}>\r\n                            <button type='submit' className={styles.loginButton}>Submit</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.textDiv}>\r\n\r\n                            <p className={styles.newToSmM}>\r\n                                New to Smart Manager?\r\n                        <button className={styles.signUpBtn}\r\n                                    onClick={() => { props.goToSignUp(); props.hideForm() }}\r\n                                >Sign Up</button>\r\n                            </p>\r\n                            <h3>\r\n                                or\r\n                        </h3>\r\n                        </div>\r\n\r\n\r\n                        <div className={styles.buttonDivGoogleLogin}>\r\n                            <GoogleLogin\r\n                                render={renderProps => (\r\n                                    <button onClick={renderProps.onClick}\r\n                                        className={styles.googleLoginBtn}\r\n                                    >\r\n                                        <img src={google} alt=\"logo\" width='25' height='25' />\r\n                                    Log In with Google</button>\r\n                                )}\r\n                                clientId='737157840044-8cdut4c3o2lrn6q2jn37uh65ate0g7pr.apps.googleusercontent.com'\r\n                                buttonText=\"Login\"\r\n                                onSuccess={handleGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordForm;","import React, { useState } from \"react\"\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport pic1 from '../../images/welcome-page/welcome-page-1.svg'\r\nimport pic2 from '../../images/welcome-page/welcome-page-2.svg'\r\nimport pic3 from '../../images/welcome-page/welcome-page-3.svg'\r\nimport pic4 from '../../images/welcome-page/welcome-page-4.svg'\r\nimport pic5 from '../../images/welcome-page/welcome-page-5.svg'\r\nimport pic6 from '../../images/welcome-page/welcome-page-6.svg'\r\nimport instagram from '../../images/welcome-page/instagram-icon.svg'\r\nimport twitter from '../../images/welcome-page/twitter-icon.svg'\r\nimport facebook from '../../images/welcome-page/facebook-icon.svg'\r\nimport LoginForm from \"../../components/login-form\"\r\nimport Transparent from \"../../components/transparent\"\r\nimport SignupForm from \"../../components/signup-form\"\r\nimport ForgotPasswordForm from \"../../components/form-forgot-password\"\r\n\r\n\r\nconst WelcomePage = () => {\r\n\r\n  const [isVisible, setIsVisible] = useState(false)\r\n  const [isVisibleSignUp, setIsVisibleSignUp] = useState(false)\r\n  const [isVisibleForgot, setIsVisibleForgot] = useState(false)\r\n\r\n\r\n  return (\r\n\r\n    <div className={styles.container}>\r\n        {isVisible ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n              <LoginForm hideForm={() => setIsVisible(!isVisible)} goToSignUp={()=>setIsVisibleSignUp(!isVisibleSignUp)} \r\n              goToForgotPassword={()=>setIsVisibleForgot(!isVisibleForgot)}/>\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n        {isVisibleSignUp ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisibleSignUp(!isVisibleSignUp)} >\r\n              <SignupForm hideForm={() => setIsVisibleSignUp(!isVisibleSignUp)} goToLogin={()=>setIsVisible(!isVisible)} />\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n        {isVisibleForgot ?\r\n          < div >\r\n            <Transparent hideForm={() => setIsVisibleForgot(!isVisibleForgot)} >\r\n              <ForgotPasswordForm hideForm={() => setIsVisibleForgot(!isVisibleForgot)} goToSignUp={()=>setIsVisibleSignUp(!isVisibleSignUp)} />\r\n            </Transparent >\r\n          </div > : null\r\n        }\r\n\r\n      <div className={styles['content-wrap']}>\r\n        <div className={styles['top-container']}>\r\n          <div className={styles['top-div-container']}>\r\n            <div className={styles['header-nav']}>\r\n              <span className={styles.logo}>\r\n                <img src={logo} alt=\"logo\" width='100%' height='100%' />\r\n              </span>\r\n              <span className={styles['first-buttons']}>\r\n                <button className={styles['login-button']} onClick={()=>setIsVisible(!isVisible)}  >Log In</button>\r\n                <button className={styles['sign-up-button']} onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Sign Up</button>\r\n              </span>\r\n            </div>\r\n              <div className={styles.pic1}>\r\n                <img src={pic1} alt=\"\" width='100%' />\r\n              </div>\r\n              <div className={styles.pic2}>\r\n                <img src={pic2} alt=\"\" width='100%' />\r\n              </div>\r\n          </div>\r\n          <div className={styles['lower-div-container']}>\r\n            <div className={styles['first-text']}>\r\n              <p className={styles.headers}>Manage your work in a <span className={styles.lucida}>Smart</span> way! </p>\r\n              <div className={styles.paragraph}>\r\n                <p >The ideas get more clear, organized and focused on.</p>\r\n                <p >Flexible and time saving for the whole team. </p>\r\n                <button className={styles['second-sign-up-button']}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Free Sign Up</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles['second-container']}>\r\n          <div className={styles['first-row']}>\r\n            <div className={styles['second-text']}>\r\n              <p className={styles.headers}>Work and participate in different teams </p>\r\n              <div className={styles.paragraph}>\r\n                <p >Follow who and when is doing tasks. Be always</p>\r\n                <p >informed with the accomplishment of the projects. </p>\r\n                <button className={styles['third-sign-up-button']}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Try It Now</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles['pic3-container']}>\r\n              <img className={styles.picture} src={pic3} alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div className={styles['second-row']}>\r\n            <div className={styles['pic4-container']}>\r\n              <img className={styles.picture} src={pic4} alt=\"\" />\r\n            </div>\r\n            <div className={styles['second-row-colum']}>\r\n              <div className={styles['second-text']}>\r\n                <p className={styles.headers}>Еаsy to manage all the information</p>\r\n                <div className={styles.paragraph}>\r\n                  <p >Add stickers, notes, comments, attachments in your</p>\r\n                  <p >  Smart Manager.</p>\r\n                  <p >Collaborate with others in your Team.</p>\r\n                </div>\r\n              </div>\r\n              <div className={styles['second-row-pic']} >\r\n                <img className={styles.picture} src={pic5} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles['third-row']}>\r\n            <div className={styles['second-text']}>\r\n              <p className={styles.headers}>Start your <span className={styles.lucida}>Smart Manager</span> Now </p>\r\n              <div className={styles.paragraph}>\r\n                <p >Connect with other teams from <span className={styles.lucida}>The Smart Family</span>,</p>\r\n                <p > save time with more work done.</p>\r\n                <button className={styles['second-sign-up-button']}  onClick={() => setIsVisibleSignUp(!isVisibleSignUp)} >Get Started</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles['pic6-container']}>\r\n              <img className={styles.picture} src={pic6} alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <footer className={styles.footer}>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>Contact Us</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>+359 52 317 395</p>\r\n            <p>smartmanager@gmail.com</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>SERVICES</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>Contact Us</p>\r\n            <p>Ordering & Payment FAQ</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['footer-column']}>\r\n          <div className={styles['footer-headers']}>\r\n            <p>INFORMATION</p>\r\n          </div>\r\n          <div className={styles['footer-info']}>\r\n            <p>About SMART MANAGER</p>\r\n            <p>Work With US</p>\r\n            <p>Privacy Policy</p>\r\n            <p>Terms & Conditions</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles['last-column']}>\r\n          <div className={styles['social-media-container']}>\r\n            <span>\r\n              <img className={styles['social-media']} src={instagram} alt=\"\" />\r\n            </span>\r\n            <span>\r\n              <img className={styles['social-media']} src={twitter} alt=\"\" />\r\n            </span>\r\n            <span>\r\n              <img className={styles['social-media']} src={facebook} alt=\"\" />\r\n            </span>\r\n          </div>\r\n          <div className={styles.sd2006}>SD2006</div>\r\n\r\n        </div>\r\n\r\n      </footer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WelcomePage","export default __webpack_public_path__ + \"static/media/profile-page-pic.2c3455c2.svg\";","export default __webpack_public_path__ + \"static/media/pen.4b4021f9.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport logo from '../../images/logo.svg'\r\nimport ButtonGrey from '../button-grey'\r\n\r\n\r\n\r\n\r\nconst ConfirmDialog = (props) => {\r\n  return (\r\n    <>\r\n      <div className={styles['transparent-confirm']}></div>\r\n      <div className={styles.container}>\r\n\r\n        <div className={styles.content}>\r\n\r\n\r\n\r\n          <div className={styles.logo}>\r\n            <img src={logo} alt=\"logo\" width='194' height='142' />\r\n          </div>\r\n\r\n          <div className={styles.title}>{`Are you sure you want to ${props.title}?`}</div>\r\n          <div className={styles.buttons}>\r\n            <ButtonGrey\r\n              className={styles.button}\r\n              title={'Yes'}\r\n              onClick={() => {\r\n                props.hideConfirm();\r\n                props.onConfirm()\r\n              }\r\n              }\r\n            />\r\n            <ButtonGrey\r\n              className={styles.button}\r\n              title={'No'}\r\n              onClick={() => props.hideConfirm()}\r\n            />\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\nexport default ConfirmDialog;","import React, { useState, useEffect, useCallback, useContext, useRef } from \"react\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/profile-page-pic.svg'\r\nimport pen from '../../images/pen.svg'\r\nimport authenticateUpdate from '../../utils/authenticate-update';\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Title from \"../../components/title\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport Alert from \"../../components/alert\"\r\nimport ButtonGrey from '../../components/button-grey'\r\nimport ConfirmDialog from \"../../components/confirmation-dialog\"\r\nimport { Image, Transformation } from 'cloudinary-react';\r\n\r\n\r\nconst ProfilePage = () => {\r\n  const dropdownRef = useRef(null)\r\n  const userContext = useContext(UserContext)\r\n  const [userEmail, setUserEmail] = useState(null)\r\n  const [passwordActive, setPaswordActive] = useState(false)\r\n  const [userNameActive, setUserNameActive] = useState(false)\r\n  const [username, setUsername] = useState(userContext.user.username);\r\n  const [password, setPassword] = useState(null);\r\n  const [rePassword, setRePassword] = useState(null);\r\n  const [alert, setAlert] = useState(false)\r\n  const [showTeamsVisibleForm, setShowTeamsVisibleForm] = useDetectOutsideClick(dropdownRef)\r\n  const [isEditListActive, setIsEditListActive] = useDetectOutsideClick(dropdownRef)\r\n  const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n\r\n  const params = useParams()\r\n  const history = useHistory()\r\n\r\n\r\n  const userName = userContext.user.username\r\n  const userTeams = userContext.user.teams\r\n  const id = params.userid;\r\n\r\n\r\n\r\n  const getData = useCallback(async () => {\r\n\r\n    const response = await fetch(`/api/user/${id}`)\r\n    if (!response.ok) {\r\n      history.push(\"/error\")\r\n    } else {\r\n      const user = await response.json()\r\n      setUserEmail(user.email)\r\n\r\n    }\r\n  }, [history, id])\r\n\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    setAlert(false)\r\n    setPaswordActive(false)\r\n    setUserNameActive(false)\r\n\r\n\r\n\r\n    if (!username && !password) {\r\n      return\r\n    }\r\n\r\n    if (password !== rePassword) {\r\n      setAlert(true)\r\n      return\r\n    }\r\n\r\n    // if(password && rePassword){\r\n    //   setChangePassAlert(true)\r\n    // }\r\n\r\n    await authenticateUpdate(`/api/user/${id}`, 'PUT', {\r\n      username,\r\n      password\r\n    }, (user) => {\r\n      userContext.logIn(user)\r\n    }, (e) => {\r\n      console.log(\"Error\", e);\r\n    })\r\n    getData()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [getData])\r\n\r\n  if (!userName) {\r\n    return (\r\n      <PageLayout>\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#363338\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </PageLayout>\r\n    )\r\n  }\r\n\r\n  const goToTeamPage = (teamId) => {\r\n    history.push(`/team/${teamId}`)\r\n  }\r\n\r\n\r\n  function changeProfilePicture() {\r\n    const widget = window.cloudinary.createUploadWidget({\r\n      cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n      uploadPreset: process.env.REACT_APP_UPLOAD_PRESET\r\n    }, (error, result) => {\r\n      if (result.event === 'success') {\r\n        const path = result.info.path\r\n        const publicId = result.info.public_id\r\n        const newImage = {\r\n          path,\r\n          publicId\r\n        }\r\n        authenticateUpdate(`/api/user/image/${id}`, 'PUT', {\r\n          newImage,\r\n          oldImage: userContext.user.image\r\n        }, (user) => {\r\n          userContext.logIn(user)\r\n        }, (e) => {\r\n          console.log(\"Error\", e);\r\n        })\r\n        getData()\r\n  \r\n      }\r\n  \r\n      if (error) {\r\n        //TODO: Handle errors\r\n  \r\n        return\r\n      }\r\n    })\r\n\r\n    widget.open()\r\n  }\r\n\r\n  const deletePic = async () => {\r\n\r\n    await authenticateUpdate(`/api/user/image/${id}`, 'PUT', {\r\n      oldImage: userContext.user.image\r\n    }, (user) => {\r\n      userContext.logIn(user)\r\n    }, (e) => {\r\n      console.log(\"Error\", e);\r\n    })\r\n    getData()\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <PageLayout>\r\n\r\n      {confirmOpen &&\r\n        <ConfirmDialog\r\n          title={'delete this picture'}\r\n          hideConfirm={() => setConfirmOpen(false)}\r\n          onConfirm={() => deletePic()}\r\n        />\r\n      }\r\n\r\n\r\n      <Title title='Profile' />\r\n\r\n      <div className={styles.container}>\r\n\r\n        <div className={styles['left-container']}>\r\n\r\n\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey title={'Username:'} className={styles['navigate-buttons']}\r\n              onClick={() => { setUserNameActive(!userNameActive) }} />\r\n            < input\r\n              ref={function (input) {\r\n                if (input != null) {\r\n                  input.focus();\r\n                }\r\n              }}\r\n              value={username}\r\n              onChange={e => setUsername(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={userName}\r\n              disabled={!userNameActive}\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey title={'Change Password'} className={styles['navigate-buttons']}\r\n              onClick={() => { setPaswordActive(!passwordActive) }} />\r\n            < input\r\n              onChange={e => setPassword(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={'********'}\r\n              disabled={!passwordActive}\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className={styles.alerts}>\r\n            <Alert alert={alert} message={'Passwords do not match'} />\r\n          </div>\r\n\r\n          {passwordActive ?\r\n            <div className={styles['new-pass-alert']}>\r\n              Important!!! You have to activate your new password by following the link sent to your email. You have to do this in the next hour in order for your new password to be activated\r\n            </div> : null\r\n          }\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <ButtonGrey title={'Confirm Password'} className={styles['navigate-buttons']}\r\n              onClick={() => { setPaswordActive(!passwordActive) }} />\r\n\r\n            < input\r\n              onChange={e => setRePassword(e.target.value)}\r\n              className={styles['input-fields-profile']}\r\n              placeholder={'********'}\r\n              disabled={!passwordActive}\r\n              type=\"password\"\r\n            />\r\n\r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n\r\n            <ButtonGrey title={'Email:'} className={styles['navigate-buttons']}\r\n            />\r\n\r\n            < input\r\n              className={styles['input-fields-profile']}\r\n              value={userEmail}\r\n              disabled={true}\r\n            // type=\"password\"\r\n            />\r\n\r\n          </div>\r\n\r\n          <div className={styles['button-input-div-tasks']}>\r\n            <ButtonGrey title={'My Tasks'} className={styles['navigate-buttons']}\r\n              onClick={() => history.push(`/my-tasks/${id}`)} />\r\n          < input\r\n              className={styles['input-fields-tasks']}\r\n              value={''}\r\n              disabled={true}\r\n            // type=\"password\"\r\n            />\r\n          \r\n          </div>\r\n\r\n          <div className={styles['button-input-div']}>\r\n            <div className={styles.myTeamsContainer}>\r\n              <ButtonGrey title={'My Teams'} className={styles['navigate-buttons']}\r\n                onClick={() => setShowTeamsVisibleForm(!showTeamsVisibleForm)} />\r\n                {/* <span> */}\r\n              <div className={styles['select-team-container']}>\r\n                {\r\n                  showTeamsVisibleForm ?\r\n                    <div className={styles['teams-home']} ref={dropdownRef}>\r\n                      {userTeams.length > 0 ?\r\n                        userTeams.map((t, index) => {\r\n                          return (\r\n                            <span key={index}>\r\n                              <div\r\n                                className={styles['navigate-buttons-teams']}\r\n                                onClick={() => goToTeamPage(t._id)}\r\n                                title={t.name}\r\n                              >{t.name}</div>\r\n                            </span>\r\n                          )\r\n                        }\r\n                        )\r\n                        : \"You haven't joined any teams yet\"\r\n                      }\r\n                    </div>\r\n                    : null\r\n                }\r\n              </div>\r\n              {/* </span> */}\r\n            </div>\r\n            <div className={styles['button-div-save']}>\r\n            <ButtonGrey title={'SAVE'} className={styles['save-button']}\r\n               onClick={(e) => handleSubmit(e)}/>\r\n              {/* <button type='submit' className={styles['save-button']} onClick={(e) => handleSubmit(e)}>SAVE</button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className={styles['pic-container']}>\r\n\r\n\r\n          <div className={styles['profile-pic-container']}>\r\n            <div className={styles['profile-pic']}\r\n              onClick={() => {\r\n                userContext.user.image ?\r\n                  setIsEditListActive(!isEditListActive)\r\n                  : changeProfilePicture()\r\n              }}\r\n            >\r\n              {userContext.user.image ?\r\n\r\n                <div className={styles['profile-picture']}>\r\n                  {/* <img\r\n                    src={getFullImageUrl(userContext.user.image.path)}\r\n                    className={styles['profile-picture']} alt=''\r\n                  /> */}\r\n                  <Image publicId={userContext.user.image.publicId} className={styles['profile-picture']} >\r\n                    <Transformation width=\"250\" height=\"250\"\r\n                    //  gravity=\"faces\" crop=\"fill\"\r\n                    />\r\n                  </Image>\r\n\r\n\r\n                  <div className={styles.relative}>\r\n                    {isEditListActive && <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                      <ButtonGrey\r\n                        onClick={changeProfilePicture}\r\n                        title='Edit'\r\n                        className={styles.edit}\r\n                      />\r\n                      <ButtonGrey\r\n                        onClick={() => {\r\n                          setConfirmOpen(true)\r\n                        }}\r\n                        title='Delete'\r\n                        className={styles.delete}\r\n                      />\r\n                    </div>}\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                  <p className={styles['load-pic-text']}>Load a profile picture</p>\r\n                  <img className={styles.pen}\r\n                    src={pen} alt=\"\" />\r\n                </div>\r\n              }\r\n\r\n            </div>\r\n\r\n            <p>{userName}</p>\r\n          </div>\r\n\r\n\r\n\r\n          <img className={styles.pic1} src={pic1} alt=\"\"\r\n          // width=\"80%\" height=\"80%\"\r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport ButtonClean from \"../../components/button-clean\"\r\nimport AvatarUser from '../avatar-user'\r\n\r\n\r\nexport default function TeamMembers(props) {\r\n\r\n    const members = props.members\r\n    const invited = props.invited\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['members-avatars']}>\r\n                <div>\r\n                    Team Members:\r\n                </div>\r\n                {\r\n                    members.map((m, index) => {\r\n                        return (\r\n                            <ButtonClean\r\n                                key={index}\r\n                                title={\r\n                                <AvatarUser user={m}\r\n                                    key={m._id}\r\n                                    size={40}\r\n                                />}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                invited.length !== 0 &&\r\n                <div className={styles['members-avatars']}>\r\n                    <div>\r\n                        Invited Members:\r\n                        </div>\r\n                    {\r\n                        invited.map((m, index) => {\r\n                            return (\r\n                                <AvatarUser user={m}\r\n                                    key={index}\r\n                                    size={40}\r\n                                // onClick={() => { if (window.confirm('Are you sure you wish to delete this member?')) removeMember(m) }}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport TeamContext from '../../contexts/TeamContext'\r\nimport ButtonClean from '../button-clean'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamMembers from '../team-members'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport AvatarUser from '../avatar-user'\r\n\r\n\r\nexport default function EditTeam(props) {\r\n    const [currTeam, setCurrTeam] = useState(props.currTeam)\r\n    const [name, setName] = useState(currTeam.name)\r\n    const [description, setDescription] = useState(currTeam.description)\r\n    const [member, setMember] = useState('')\r\n    const [members, setMembers] = useState(currTeam.members)\r\n    const [invited, setInvited] = useState(currTeam.requests)\r\n    const [forInvite, setForInvite] = useState([])\r\n    const [showMembers, setShowMembers] = useState(false)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    const history = useHistory()\r\n    const teamContext = useContext(TeamContext)\r\n    const userContext = useContext(UserContext)\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n\r\n    const teamId = params.teamid\r\n\r\n    const getData = useCallback(() => {\r\n\r\n        userContext.user.teams.forEach(t => {\r\n            if (t._id === teamId) {\r\n                setCurrTeam(t)\r\n            }\r\n        })\r\n        let teamAuthor = currTeam.author\r\n        setMembers(currTeam.members)\r\n        setInvited(currTeam.requests)\r\n        setDescription(currTeam.description)\r\n        setName(currTeam.name)\r\n        if (userContext.user.id === teamAuthor) {\r\n            setIsAdmin(true)\r\n        }\r\n    }, [userContext.user.id, currTeam.author, currTeam.description, currTeam.members, currTeam.name, currTeam.requests, userContext.user.teams, teamId])\r\n\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [getData])\r\n\r\n\r\n    const inputMembers = async (event) => {\r\n        setMember(event.target.value)\r\n        setShowMembers(false)\r\n\r\n        if (allUsers.length === 0) {\r\n            const token = getCookie(\"x-auth-token\")\r\n            const response = await fetch('/api/user/get-all', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n            const users = await response.json()\r\n            setAllUsers(users)\r\n        }\r\n\r\n\r\n        if (member.length >= 2) {\r\n            setShowMembers(true)\r\n        }\r\n    }\r\n\r\n    const addMember = (input) => {\r\n        const arr = [...forInvite]\r\n        arr.push(input)\r\n        setForInvite(arr)\r\n        setShowMembers(false)\r\n        setMember('')\r\n    }\r\n\r\n    const removeMember = async (input) => {\r\n\r\n        const arr = await members.filter(u => u._id !== input._id)\r\n            .filter(u => u._id !== input.id)\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            socket.emit('team-update', teamId)\r\n            if (input.id === userContext.user.id) {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeInvited = async (input) => {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                removeInvitation: input\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            getData()\r\n            socket.emit('team-update', teamId)\r\n            socket.emit('message-sent', input._id)\r\n        }\r\n    }\r\n\r\n    const removeForInvite = (input) => {\r\n        const arr = forInvite.filter(u => u._id !== input._id)\r\n        setForInvite(arr)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        // event.preventDefault()\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                members,\r\n                requests: forInvite\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            teamContext.setSelectedTeam(name)\r\n            getData()\r\n            socket.emit('team-update', teamId)\r\n            socket.emit('multiple-messages-sent', forInvite)\r\n            props.hideForm()\r\n        }\r\n\r\n    }\r\n\r\n    async function deleteTeam() {\r\n\r\n        if (!window.confirm('You will lost all team information - projects, lists and tasks')) {\r\n            return\r\n        }\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/${teamId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const deletedTeam = await response.json()\r\n            const recievers = [...deletedTeam.members, ...deletedTeam.requests]\r\n            socket.emit('team-deleted', { id: teamId, recievers })\r\n            history.push(\"/\")\r\n            props.hideForm()\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setTimeout(() => setShowMembers(false), 120)\r\n    }\r\n\r\n    let confirmationObjectFunctions = {\r\n        'remove this member': removeForInvite,\r\n        'leave this team': removeMember,\r\n        'delete this member from team': removeMember,\r\n        'delete this member from invited': removeInvited,\r\n        'delete this team': deleteTeam\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n\r\n\r\n            <div className={styles.form}>\r\n                <div className={styles.container}>\r\n\r\n                    <div className={styles.title} >Team</div>\r\n\r\n                    <div className={styles['input-container']}>\r\n                        <span> Name</span>\r\n                        <input\r\n                            className={styles['input-name']}\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                            label=\"Name\"\r\n                            id=\"name\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles['input-container-descr']}>\r\n                        <span> Description</span>\r\n                        <textarea\r\n                            className={styles['text-area-descr']}\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            label=\"Description\"\r\n                            id=\"description\"\r\n                            spellcheck=\"false\"\r\n\r\n                        />\r\n                    </div>\r\n                    {\r\n                        isAdmin ?\r\n                            <div className={styles['input-container-invite']}>\r\n                                <span className={styles['text-invite']}> Invite Members</span>\r\n\r\n                                <div className={styles['invite-input']}>\r\n                                    <input\r\n                                        className={styles['input-invite']}\r\n                                        autoComplete=\"off\"\r\n                                        value={member}\r\n                                        onChange={inputMembers}\r\n                                        label=\"Invite members\"\r\n                                        id=\"members\"\r\n                                        placeholder='username'\r\n                                        onBlur={onBlur}\r\n\r\n                                    />\r\n\r\n                                    <div className={styles['select-for-invite']}>\r\n                                        {\r\n                                            showMembers ?\r\n                                                <div className={styles.members}>\r\n                                                    {\r\n                                                        allUsers.filter(u => u.username.toLowerCase().includes(member.toLowerCase()) && !u.username.includes(userContext.user.username))\r\n                                                            .filter((e) => {\r\n                                                                const found = members.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .filter((e) => {\r\n                                                                const found = invited.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .filter((e) => {\r\n                                                                const found = forInvite.find(element => element.username === e.username)\r\n                                                                if (found) {\r\n                                                                    return false\r\n                                                                } else {\r\n                                                                    return true\r\n                                                                }\r\n                                                            })\r\n                                                            .sort((a, b) => a.username.localeCompare(b.username))\r\n                                                            .map((u, index) => {\r\n                                                                return (\r\n                                                                    <ButtonClean\r\n                                                                        key={index}\r\n                                                                        className={styles.user}\r\n                                                                        onClick={() => addMember(u)}\r\n                                                                        title={<div>\r\n                                                                            <div>{u.username}</div>\r\n                                                                            <div className={styles.email}>{u.email}</div>\r\n                                                                        </div>}\r\n                                                                    />)\r\n                                                            })\r\n                                                    }\r\n                                                </div> : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        isAdmin ?\r\n                            <div className={styles['members-div']}>\r\n\r\n\r\n\r\n                                <div className={styles['members-avatars']}>\r\n                                    <span>\r\n                                        <div>\r\n                                            Send Invitation:\r\n                                </div>\r\n                                        {\r\n                                            forInvite.map((m, index) => {\r\n                                                return (\r\n                                                    <AvatarUser user={m}\r\n                                                    size={40}\r\n                                                        key={index}\r\n                                                        onClick={() => {\r\n                                                            setConfirmOpen(true)\r\n                                                            setConfirmTitle('remove this member')\r\n                                                            setCurrElement(m)\r\n                                                        }} />\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div className={styles.membersAvatars}>\r\n                                        <div>\r\n                                            Team Members:\r\n                                    </div>\r\n                                        {\r\n                                            members.map((m, index) => {\r\n                                                return (\r\n                                                    <AvatarUser user={m} key={index} size={40}\r\n                                                        onClick={() => {\r\n                                                            setConfirmOpen(true)\r\n                                                            setConfirmTitle('delete this member from team')\r\n                                                            setCurrElement(m)\r\n                                                        }}\r\n                                                    />\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        (invited.length !== 0) ?\r\n\r\n                                            <div className={styles.membersAvatars}>\r\n                                                <div>\r\n                                                    Invited Members:\r\n                                            </div>\r\n                                                {\r\n                                                    invited.map((m, index) => {\r\n                                                        return (\r\n                                                            <AvatarUser user={m}\r\n                                                                key={index}\r\n                                                                size={40}\r\n                                                                onClick={() => {\r\n                                                                    setConfirmOpen(true)\r\n                                                                    setConfirmTitle('delete this member from invited')\r\n                                                                    setCurrElement(m)\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className={styles['button-div']}>\r\n                                    <ButtonGrey className={styles['create-button']} onClick={() => handleSubmit()} title={'Submit Changes'} />\r\n                                    <ButtonGrey className={styles['create-button']} title={'Delete Team'}\r\n                                        onClick={() => {\r\n                                            setConfirmOpen(true)\r\n                                            setConfirmTitle('delete this team')\r\n                                            setCurrElement('')\r\n                                        }}\r\n                                    />\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <TeamMembers\r\n                                    members={members} invited={invited}\r\n                                />\r\n\r\n                                { !props.isMessage && <div className={styles['leave-team-btn-div']}>\r\n                                    <ButtonGrey title={'Leave Team'} className={styles['leave-team-btn']}\r\n                                        onClick={() => {\r\n                                            setConfirmOpen(true)\r\n                                            setConfirmTitle('leave this team')\r\n                                            setCurrElement(userContext.user)\r\n                                        }}\r\n\r\n                                    />\r\n\r\n                                </div>}\r\n                            </div>\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport getCookie from \"../../utils/cookie\"\r\n\r\nexport default function useInboxUtils() {\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const params = useParams()\r\n    const userId = params.userid\r\n    const [isMoveActive, setIsMoveActive] = useState(false)  //If move message is invoked this state is set to true and doesn`t allow to move it again\r\n\r\n    return {\r\n\r\n        moveToHistory: async function (message) {\r\n            if (isMoveActive) return\r\n            setIsMoveActive(true)\r\n    \r\n            const response = await fetch('/api/user/inbox', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    message\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n                return\r\n            } else {\r\n                await response.json()\r\n                socket.emit('message-sent', userId)\r\n            }\r\n        },\r\n\r\n        deleteMessage: async function (message, setInboxHistory) {\r\n            const response = await fetch(`/api/user/message/${message._id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n                return\r\n            } else {\r\n                const user = await response.json()\r\n                setInboxHistory(user.inboxHistory)\r\n            }\r\n        },\r\n\r\n        viewTeam: async function viewTeam(message, setCurrTeam, setShowEditTeamForm) {\r\n            const response = await fetch(`/api/teams/${message.team.id}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n                return\r\n            } else {\r\n                const team = await response.json()\r\n                setCurrTeam(team)\r\n                setShowEditTeamForm(true)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport ButtonGrey from '../button-grey'\r\nimport EditTeam from '../edit-team'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationInbox({ message, setInbox, setInboxHistory, options }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const userId = params.userid\r\n    const utils = useInboxUtils()\r\n\r\n    async function acceptInvitation(message, accepted) {\r\n        const response = await fetch(`/api/teams/invitations/${message.team.id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                message,\r\n                accepted\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            socket.emit('team-update', message.team.id)\r\n            setInbox(user.inbox)\r\n            setInboxHistory(user.inboxHistory)\r\n            socket.emit('message-sent', userId)\r\n            socket.emit('message-sent', message.sendFrom._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                message.team.isDeleted ?\r\n                    <div>\r\n                        <div className={styles.bold}>Team deleted</div>\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    </div> :\r\n                    <div>\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => acceptInvitation(message, true)}\r\n                            title='Accept'\r\n                        />\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => acceptInvitation(message, false)}\r\n                            title='Decline'\r\n                        />\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.viewTeam(message, setCurrTeam, setShowEditTeamForm)}\r\n                            title='View Team'\r\n                        />\r\n                    </div>\r\n            }\r\n\r\n            {\r\n                showEditTeamForm &&\r\n                <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                    <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                </Transparent>\r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport EditTeam from '../edit-team'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationHistory({ message, options, setInboxHistory }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    {message.accepted === undefined ?\r\n                        <div className={styles.container}>\r\n                            <div className={styles.bold}>{message.subject}</div>\r\n                        </div> :\r\n                        <div className={styles.container}>\r\n                            <div className={styles.bold}>{message.subject}:</div>\r\n                            {message.accepted ? <div>Accepted</div> : <div>Declined</div>}\r\n                        </div>\r\n                    }\r\n                    <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                    <div className={styles.inline}>{message.team.name}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                {\r\n                    message.team.isDeleted &&\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Team deleted</div>\r\n                }\r\n                <div>\r\n                    {\r\n                        !message.team.isDeleted &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.viewTeam(message, setCurrTeam, setShowEditTeamForm)}\r\n                            title='View Team'\r\n                        />\r\n                    }\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => setConfirmOpen(true)}\r\n                        title='Delete Message'\r\n                    />\r\n                    {\r\n                        showEditTeamForm &&\r\n                        <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                            <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                        </Transparent>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationResponse({ message, setInboxHistory, options, isInbox }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>{message.subject}:</div>\r\n                    <span>{message.sendFrom.username}{message.accepted ? <span> accepted</span> : <span> declined</span>}</span>\r\n                </div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                <div className={styles.inline}>{message.team.name}</div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    isInbox &&\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.moveToHistory(message)}\r\n                        title='Move to History'\r\n                    />\r\n                }\r\n                {\r\n                    !isInbox &&\r\n                    <ButtonGrey\r\n                    className={styles.button}\r\n                    onClick={() => setConfirmOpen(true)} \r\n                    title='Delete Message'\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TaskAssignment({ message, setInboxHistory, options, isInbox }) {\r\n    const history = useHistory()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='delete this message'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n            />\r\n        }\r\n        <div className={styles.message}>\r\n            <div className={styles.container}>\r\n                <div className={styles.bold}>{message.subject}</div>\r\n                <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.inline} ${styles.margin}`}><span className={styles.bold}>Project:</span>{message.project.name}</div>\r\n                <div className={`${styles.inline} ${styles.margin}`}><span className={styles.bold}>List:</span>{message.list.name}</div>\r\n                <div className={`${styles.inline} ${styles.margin}`}><span className={styles.bold}>Task:</span>{message.card.name}</div>\r\n            </div>\r\n            <div>\r\n                <div className={`${styles.bold} ${styles.inline}`}>Assigned by:</div>\r\n                <div className={styles.inline}>{message.sendFrom.username}</div>\r\n            </div>\r\n            {\r\n                (message.team.isDeleted || message.project.isDeleted) &&\r\n                <div className={styles.bold}>Project deleted</div>\r\n            }\r\n            <div>\r\n                {\r\n                    !message.team.isDeleted && !message.project.isDeleted &&\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => history.push(`/project-board/${message.team.id}/${message.project.id}`)}\r\n                        title='Go to Project'\r\n                    />\r\n                }\r\n                {\r\n                    isInbox ?\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.moveToHistory(message)}\r\n                        title='Move to History'\r\n                    /> :\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => setConfirmOpen(true)} \r\n                        title='Delete Message'\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamDeleted({ message, setInboxHistory, options, isInbox }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.container}>\r\n                        <div className={styles.bold}>Team {message.team.name} deleted</div>\r\n                    </div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Deleted by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                <div>\r\n                    {isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    }\r\n                    {!isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => setConfirmOpen(true)}\r\n                            title='Delete Message'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function ProjectDeleted({ message, setInboxHistory, options, isInbox }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            { confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.container}>\r\n                        <div className={styles.bold}>Project {message.project.name} deleted</div>\r\n                    </div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Deleted by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                <div>\r\n                    { isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => utils.moveToHistory(message)}\r\n                            title='Move to History'\r\n                        />\r\n                    }\r\n                    { !isInbox &&\r\n                        <ButtonGrey\r\n                            className={styles.button}\r\n                            onClick={() => setConfirmOpen(true)}\r\n                            title='Delete Message'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport EditTeam from '../edit-team'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\nimport useInboxUtils from './useInboxUtils'\r\n\r\nexport default function TeamInvitationCanceled({ message, setInboxHistory, options, isInbox }) {\r\n    const [showEditTeamForm, setShowEditTeamForm] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const utils = useInboxUtils()\r\n\r\n    return (\r\n        <>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title='delete this message'\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => utils.deleteMessage(message, setInboxHistory)}\r\n                />\r\n            }\r\n            <div className={styles.message}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.bold}>{message.subject}</div>\r\n                    <div>{new Date(message.createdAt).toLocaleDateString(\"en-US\", options)}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Team name:</div>\r\n                    <div className={styles.inline}>{message.team.name}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={`${styles.bold} ${styles.inline}`}>Invited by:</div>\r\n                    <div className={styles.inline}>{message.sendFrom.username}</div>\r\n                </div>\r\n                {\r\n                    message.team.isDeleted &&\r\n                    <div className={styles.bold}>Team deleted</div>\r\n                }\r\n                {!message.team.isDeleted &&\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.viewTeam(message, setCurrTeam, setShowEditTeamForm)}\r\n                        title='View Team'\r\n                    />\r\n                }\r\n                {isInbox ?\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => utils.moveToHistory(message)}\r\n                        title='Move to History'\r\n                    /> :\r\n                    <ButtonGrey\r\n                        className={styles.button}\r\n                        onClick={() => setConfirmOpen(true)}\r\n                        title='Delete Message'\r\n                    />\r\n                }\r\n                {showEditTeamForm &&\r\n                    <Transparent hideForm={() => setShowEditTeamForm(false)}>\r\n                        <EditTeam currTeam={currTeam} isMessage={true} hideForm={() => { setShowEditTeamForm(false) }} />\r\n                    </Transparent>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport TeamInvitationInbox from \"../../components/inbox/team-invitation-inbox\"\r\nimport TeamInvitationHistory from \"../../components/inbox/team-invitation-history\"\r\nimport TeamInvitationResponse from \"../../components/inbox/team-invitation-response\"\r\nimport TaskAssignment from \"../../components/inbox/task-assignment\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Title from \"../../components/title\"\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport styles from './index.module.css'\r\nimport TeamDeleted from \"../../components/inbox/team-deleted\"\r\nimport ProjectDeleted from \"../../components/inbox/project-deleted\"\r\nimport TeamInvitationCanceled from \"../../components/inbox/team-invitation-canceled\"\r\n\r\nconst InboxPage = () => {\r\n    const [inbox, setInbox] = useState([])\r\n    const [inboxHistory, setInboxHistory] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }\r\n\r\n    const getInbox = useCallback(async () => {\r\n        const response = await fetch('/api/user/inbox', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        } else {\r\n            const user = await response.json()\r\n            setInbox(user.inbox)\r\n            setInboxHistory(user.inboxHistory)\r\n        }\r\n    }, [history, token])\r\n\r\n    useEffect(() => {\r\n        getInbox()\r\n    }, [getInbox])\r\n\r\n    const updateUser = useCallback(async (response) => {\r\n        setInbox(response.inboxUser.inbox)\r\n        setInboxHistory(response.inboxUser.inboxHistory)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('message-sent', updateUser)\r\n            return () => socket.off('message-sent')\r\n        }\r\n    }, [socket, updateUser])\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div>\r\n                <Title title='Inbox' />\r\n                {\r\n                    inbox.length === 0 && <div className={styles.title}>Inbox is empty</div>\r\n                }\r\n                {\r\n                    [...inbox].reverse().map(m => {\r\n                        switch (m.subject) {\r\n                            case 'Team invitation':\r\n                                return <TeamInvitationInbox\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                />\r\n\r\n                            case 'Team invitation response':\r\n                                return <TeamInvitationResponse\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Team invitation canceled':\r\n                                return <TeamInvitationCanceled\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Task assignment':\r\n                                return <TaskAssignment\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Team deleted':\r\n                                return <TeamDeleted\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            case 'Project deleted':\r\n                                return <ProjectDeleted\r\n                                    key={m._id}\r\n                                    message={m}\r\n                                    setInbox={setInbox}\r\n                                    setInboxHistory={setInboxHistory}\r\n                                    options={options}\r\n                                    isInbox={true}\r\n                                />\r\n\r\n                            default:\r\n                                break\r\n                        }\r\n                        return ''\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {\r\n                inboxHistory.length !== 0 &&\r\n                <div>\r\n                    <Title title='History' />\r\n                    {\r\n                        [...inboxHistory].reverse().map(m => {\r\n                            switch (m.subject) {\r\n                                case 'Team invitation':\r\n                                    return <TeamInvitationHistory\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                    />\r\n\r\n                                case 'Team invitation response':\r\n                                    return <TeamInvitationResponse\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team invitation canceled':\r\n                                    return <TeamInvitationCanceled\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Task assignment':\r\n                                    return <TaskAssignment\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Team deleted':\r\n                                    return <TeamDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                case 'Project deleted':\r\n                                    return <ProjectDeleted\r\n                                        key={m._id}\r\n                                        message={m}\r\n                                        setInbox={setInbox}\r\n                                        setInboxHistory={setInboxHistory}\r\n                                        options={options}\r\n                                        isInbox={false}\r\n                                    />\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            return ''\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default InboxPage;","export default __webpack_public_path__ + \"static/media/my-tasks.a0bdac2a.svg\";","export default __webpack_public_path__ + \"static/media/pic1.06557b43.svg\";","export default __webpack_public_path__ + \"static/media/pic12.cb5bf992.svg\";","export default __webpack_public_path__ + \"static/media/pic10.b95e708c.svg\";","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport styles from './index.module.css'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport AvatarUser from '../avatar-user'\r\n\r\n\r\nexport default function ShowAllTaskMembers({ members, deleteMemberOption, deleteMemberObj }) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    function onClick(m) {\r\n        if (deleteMemberOption) {\r\n            setConfirmOpen(true)\r\n            setCurrElement(m)\r\n        }\r\n    }\r\n\r\n\r\n    const updateSocket = () => {\r\n        const project = deleteMemberObj.project\r\n        const teamId = deleteMemberObj.teamId\r\n\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        const cardMembers = deleteMemberObj.cardMembers\r\n        const setCardMembers = deleteMemberObj.setCardMembers\r\n        const cardId = deleteMemberObj.cardId\r\n        const listId = deleteMemberObj.listId\r\n\r\n        var index = cardMembers.indexOf(member)\r\n        let arr = [...cardMembers]\r\n\r\n        if (index !== -1) {\r\n            arr.splice(index, 1)\r\n        }\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                members: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            deleteMemberObj.setCurrCard(updatedCard)\r\n            updateSocket()\r\n            setCardMembers(arr)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this member'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteMember(currElement)}\r\n                />\r\n            }\r\n            <div className={styles['all-card-members']}>\r\n                {members.map((m, index) => {\r\n                    return (\r\n                        <div key={index} className={styles['each-member']} onClick={() => onClick(m)} >\r\n                            <span className={styles.avatar} key={m._id}>\r\n                                <AvatarUser user={m}\r\n                                    size={30}\r\n                                    className={styles.avatar}\r\n                                />\r\n                            </span>\r\n                            <span>{m.username}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useRef } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport AvatarUser from '../avatar-user'\r\nimport ShowAllTaskMembers from '../show-all-task-members'\r\nimport styles from './index.module.css'\r\n\r\nconst MembersList = ({ members, maxLength, deleteMemberOption, deleteMemberObj }) => {\r\n    const ref = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(ref)\r\n\r\n    maxLength = Math.min(maxLength, members.length)\r\n\r\n    return (\r\n        <div\r\n            className={styles.members}\r\n            onClick={() => setIsActive(true)}\r\n            ref={ref}\r\n        >\r\n            { isActive &&\r\n                <ShowAllTaskMembers\r\n                    members={members}\r\n                    deleteMemberOption={deleteMemberOption}\r\n                    deleteMemberObj={deleteMemberObj}\r\n                    setCurrCard\r\n                />\r\n            }\r\n            {(members.length > maxLength) ?\r\n                <>\r\n                    {members.slice(0, maxLength - 1).map(member => {\r\n                        return (\r\n                            <span \r\n                            className={styles.avatar} \r\n                            key={member._id}>\r\n                                <AvatarUser user={member}\r\n                                    size={30}\r\n                                    className={styles.avatar}\r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                    <span className={styles.avatar}>\r\n                        <Avatar\r\n                            color={'grey'}\r\n                            // split number of remaining members (and + sign) with spaces in b/n\r\n                            // so that they are correctly displayed by the Avatar component\r\n                            name={['+', ...(`${members.length - maxLength + 1}`.split(''))].join(' ')}\r\n                            size={30}\r\n                            round={true}\r\n                            maxInitials={3}\r\n                            className={styles.avatar}\r\n                        />\r\n                    </span>\r\n                </>\r\n                :\r\n                <>\r\n                    {members.map(element => {\r\n                        return (\r\n                            <span className={styles.avatar} key={element._id}>\r\n                                <AvatarUser\r\n                                user={element}\r\n                                    key={element._id}\r\n                                    size={30}                                  \r\n                                />\r\n                            </span>\r\n                        )\r\n                    })}\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MembersList","import React, { useEffect, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic10 from '../../images/edit-card/pic10.svg'\r\nimport MembersList from '../members-list'\r\n\r\n\r\nexport default function TaskMembers({ card, listId, project, teamId, setCurrCard }) {\r\n    const ref = useRef(null);\r\n    const [cardMembers, setCardMembers] = useState(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(ref)\r\n    const [users, setUsers] = useState([])\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const token = getCookie(\"x-auth-token\")\r\n\r\n    useEffect(() => {\r\n        setCardMembers(card.members)\r\n    }, [card.members])\r\n\r\n    const getTeamUsers = async () => {\r\n\r\n        const response = await fetch(`/api/teams/get-users/${teamId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        }\r\n        const data = await response.json()\r\n\r\n        let filtered = data.members\r\n\r\n        for (let member in cardMembers) {\r\n            filtered = filtered.filter((obj) => obj._id !== cardMembers[member]._id)\r\n        }\r\n        setUsers(filtered)\r\n\r\n    }\r\n\r\n    const handleSelect = async (id) => {\r\n\r\n        if (id === 'select') return\r\n\r\n        const selectedUser = users.filter(obj => obj._id === id)[0]\r\n\r\n        const result = project.membersRoles.filter(obj => obj.memberId._id === selectedUser._id)[0]\r\n\r\n        if (!result) {\r\n            if (!window.confirm(`Do you want to add ${selectedUser.username} to project?`)) return\r\n\r\n            const responseAdd = await fetch(`/api/projects/${project._id}/user`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    member: selectedUser,\r\n                    admin: false\r\n                })\r\n            })\r\n            if (!responseAdd.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n        }\r\n\r\n        let arr = [...cardMembers]\r\n\r\n        arr.push(selectedUser)\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                members: arr,\r\n                newMember: selectedUser,\r\n                teamId,\r\n                projectId: project._id,\r\n                cardId: card._id,\r\n                listId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            setIsActive(!isActive)\r\n            setCardMembers(arr)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n            socket.emit('message-sent', selectedUser._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['small-buttons']} onClick={() => { getTeamUsers(); setIsActive(!isActive) }} >\r\n                <img className={styles.pics} src={pic10} alt=\"pic10\" />\r\n                Add Teammate\r\n            </div>\r\n            { isActive && <form ref={ref} >\r\n                <select className={styles.select} onChange={e => { handleSelect(e.target.value) }}>\r\n                    <option value={'select'}>Select</option>\r\n                    {users.map(m => (\r\n                        <option key={m._id} value={m._id}>{m.username}</option>\r\n                    ))}\r\n                </select>\r\n            </form>}\r\n            { !isActive && card.members.length > 0 && <div className={styles.members}>\r\n                <MembersList\r\n                    members={card.members}\r\n                    maxLength={4}\r\n                    deleteMemberOption={true}\r\n                    deleteMemberObj={{\r\n                        cardMembers,\r\n                        setCardMembers,\r\n                        cardId: card._id,\r\n                        listId,\r\n                        project,\r\n                        teamId,\r\n                        setCurrCard\r\n                    }}\r\n                />\r\n            </div>}\r\n        </div >\r\n    )\r\n}\r\n\r\n","const FORMAT_REGEX = /%[aAbBdmwyY]/g\r\n\r\nconst MONTHS = [ \r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', \r\n    'August', 'September', 'October', 'November', 'December'\r\n]\r\n\r\nconst WEEKDAYS = [ \r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', \r\n    'Thursday', 'Friday', 'Saturday', 'Sunday'\r\n]\r\n\r\nconst MILLISECONDS_IN_DAY = 86400000\r\n\r\nconst FORMAT_OPTIONS = {\r\n    'y': (date) => date.getUTCFullYear().toString().slice(-2),      // short year (2018 => 18)\r\n    'Y': (date) => date.getUTCFullYear(),                           // full year (2018 => 2018)\r\n    'm': (date) => `0${date.getMonth() + 1}`.slice(-2),             // month as a number (01 - 12)\r\n    'b': (date) => MONTHS[date.getMonth()].slice(0, 3),             // month, short (Dec, Apr etc.)\r\n    'B': (date) => MONTHS[date.getMonth()],                         // month, long (December)\r\n    'd': (date) => `0${date.getDate()}`.slice(-2),                  // day of month (01 - 31)\r\n    'a': (date) => WEEKDAYS[date.getDay()].slice(0, 3),             // weekday, short (Mon, Wed)\r\n    'A': (date) => WEEKDAYS[date.getDay()],                         // weekday, long (Monday)\r\n    'w': (date) => getWeekNumber(date),                             // week number of the year (1-53)\r\n}\r\n\r\nconst getDateWithOffset = (initialDate, daysOffset) => {\r\n    return new Date(initialDate.getTime() + daysOffset * MILLISECONDS_IN_DAY)\r\n}\r\n\r\nconst getMonday = (date) => {\r\n    date = date || new Date()\r\n\r\n    // need to change to 7 in case date is Sunday (which in JS is 0, while Monday is 1)\r\n    const dateDay = date.getDay() || 7\r\n    const monday = new Date(date)\r\n    monday.setDate(date.getDate() - (dateDay - 1))\r\n\r\n    return monday\r\n}\r\n\r\nconst getWeekNumber = (date) => {\r\n    // Thursday in current week decides the year\r\n    // (each week's year is the Gregorian year in which the Thursday falls)\r\n    const currWeekThursday = getDateWithOffset(getMonday(date), 3)\r\n\r\n    // January 4th is always in week 1\r\n    const week1 = new Date(date.getFullYear(), 0, 4)\r\n    const week1Thursday = getDateWithOffset(getMonday(week1), 3)\r\n\r\n    return 1 + Math.round((currWeekThursday.getTime() - week1Thursday.getTime()) / ( 7 * MILLISECONDS_IN_DAY))\r\n}\r\n\r\n/*  Receives a Javascript date as a first parameter and a format string \r\nas a second parameter and returns a string representing the date in \r\nthe desired format. The format string has several options which can be\r\nseen in the \"FORMAT_OPTIONS\" constant above. \r\n!!! Every format option must be preceded by a percentage sign (%)\r\nExamples: \r\n    In: (date: new Date('2021-01-28'), formatString: '%y_%B_%d')\r\n   Out: '21_January_28'\r\n\r\n   In: (date: new Date('2020-05-12), formatString: '%a, %d %b, %Y')\r\n  Out: 'Tue, 12 May, 2020'\r\n */\r\nconst formatDate = (date, formatString) => {\r\n    return formatString.replace(FORMAT_REGEX, (substr) => {\r\n        const formatType = substr[1]\r\n        const result = FORMAT_OPTIONS[formatType](date)\r\n        return result\r\n    })\r\n}\r\n\r\n/* Returns true if the year, month and day of two dates are the same,\r\nand false otherwise (i.e. ignores time)\r\n*/\r\nconst checkDateEquality = (firstDate, secondDate) => {\r\n    return firstDate.getYear() === secondDate.getYear() \r\n        && firstDate.getMonth() === secondDate.getMonth() \r\n        && firstDate.getDate() === secondDate.getDate()\r\n}\r\n\r\n/* Returns 1 if firstDate is larger, -1 if secondDate is larger\r\nand 0 if the year, month and day of both dates are equal (ignores time)\r\n*/\r\nconst compareDates = (firstDate, secondDate) => {\r\n    const firstDateYear = firstDate.getYear()\r\n    const secondDateYear = secondDate.getYear()\r\n\r\n    if (firstDateYear !== secondDateYear) {\r\n        return 1 - 2 * (secondDateYear > firstDateYear)\r\n    }\r\n\r\n    const firstDateMonth = firstDate.getMonth()\r\n    const secondDateMonth = secondDate.getMonth() \r\n    \r\n    if (firstDateMonth !== secondDateMonth) {\r\n        return 1 - 2 * (secondDateMonth > firstDateMonth)\r\n    }\r\n\r\n    const firstDateDay = firstDate.getDate()\r\n    const secondDateDay = secondDate.getDate()\r\n\r\n    if (firstDateDay !== secondDateDay) {\r\n        return 1 - 2 * (secondDateDay > firstDateDay)\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nexport {\r\n    formatDate,\r\n    checkDateEquality,\r\n    compareDates,\r\n    getDateWithOffset,\r\n    getMonday\r\n}","export default __webpack_public_path__ + \"static/media/pic5.e6817eda.svg\";","import React, { useCallback, useState, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport DatePicker from \"react-datepicker\"\r\nimport { formatDate } from '../../utils/date'\r\nimport pic5 from '../../images/edit-card/pic5.svg'\r\n\r\n\r\n\r\nexport default function TaskDueDate({ dueDate, card, listId, project, teamId, setCurrCard }) {\r\n\r\n    const [cardDueDate, setCardDueDate] = useState(null)\r\n    const [taskDueDate, setTaskDueDate] = useState(null)\r\n    const [width, setWindowWidth] = useState(0)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n\r\n\r\n    useEffect( () => {\r\n      updateDimensions()\r\n      window.addEventListener(\"resize\", updateDimensions)\r\n      return () => window.removeEventListener(\"resize\", updateDimensions)\r\n    }, [])\r\n  \r\n    const updateDimensions = () => {\r\n      const innerWidth = window.innerWidth\r\n      setWindowWidth(innerWidth)\r\n    }\r\n\r\n    function datePickerPosition(w) {\r\n        if (w > 750) {\r\n            return 'bottom-end'\r\n        } else {\r\n            return 'bottom-start'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCardDueDate(dueDate)\r\n        if (cardDueDate) {\r\n            const date = cardDueDate.getTime() ? formatDate(cardDueDate, '%d-%m-%Y') : ''\r\n            setTaskDueDate(date)\r\n        }\r\n    }, [dueDate, cardDueDate])\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', project)\r\n        socket.emit('task-team-update', teamId)\r\n    }, [socket, project, teamId])\r\n\r\n    const editCardDueDate = async (date) => {\r\n\r\n        if (cardDueDate === \"\" && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                dueDate: date,\r\n                teamId: teamId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            updateProjectSocket()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DatePicker\r\n                customInput={\r\n                    <div className={styles['small-buttons']} >\r\n                        <img className={styles.pics} src={pic5} alt=\"pic5\" />\r\n                        Due Date\r\n                    </div>\r\n                }\r\n                selected={taskDueDate ? cardDueDate : today}\r\n                onChange={(date) => { setCardDueDate(date); editCardDueDate(date) }}\r\n                label=\"Go to date\"\r\n                popperPlacement={datePickerPosition(width)}\r\n            />\r\n            {\r\n                taskDueDate && <div className={styles.date}>{taskDueDate}</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function TaskHistory({ taskHistory }) {\r\n\r\n    let arr = []\r\n\r\n    if (taskHistory) {\r\n        for (let i = 0; i < taskHistory.length; i++) {\r\n            let currElement = taskHistory[i]\r\n\r\n            if (i === taskHistory.length - 1) {\r\n                arr.push(currElement)\r\n                break;\r\n            }\r\n\r\n            if (currElement.event.slice(0, 8) === taskHistory[i + 1].event.slice(0, 8) && currElement.date === taskHistory[i + 1].date) {\r\n\r\n            } else {\r\n                arr.push(currElement)\r\n            }\r\n        }\r\n    }\r\n\r\n    function showDate(currDate) {\r\n        let currDay = new Date(currDate)      \r\n        let date = (('0' + currDay.getDate())).slice(-2) + '.' + ('0' + (currDay.getMonth() + 1)).slice(-2) + '.' + currDay.getFullYear()\r\n        return (date)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.history}>\r\n            { taskHistory ?\r\n                arr.reverse().map((m, index) => (\r\n                    <div key={index} >\r\n                        {`${showDate(m['date'])} - ${m['event']}`}\r\n                    </div>\r\n                ))\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/pic2.da7b02c6.svg\";","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nexport default function ProgressBar({ progress }) {\r\n\r\n    const progressColor = (input) => {\r\n        if (Number(input) <= 20) {\r\n            return 'red'\r\n        }\r\n        if (Number(input) <= 40) {\r\n            return 'orange'\r\n        }\r\n        if (Number(input) <= 80) {\r\n            return 'blue'\r\n        }\r\n        if (Number(input) > 80) {\r\n            return 'green'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.bar}>\r\n            <div\r\n                style={{\r\n                    width: `${progress}%`,\r\n                    backgroundColor: progressColor(progress)\r\n                }}\r\n                className={styles.progress}\r\n            /></div>\r\n    )\r\n}\r\n","import React, { useRef, useState, useMemo, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic2 from '../../images/edit-card/pic2.svg'\r\nimport ProgressBar from '../progress-bar'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nexport default function TaskProgress({ card, listId, project, teamId, taskHistory, setTaskHistory, setCurrCard }) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const ref = useRef(null)\r\n    const [progress, setProgress] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const [isInputActive, setIsInputActive] = useDetectOutsideClick(ref)\r\n    const [isInputVisible, setIsInputVisible] = useState(false)\r\n    const today = useMemo(() => new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()), [])\r\n\r\n    useEffect(() => {\r\n        setIsInputVisible(card.progress !== null)\r\n        setProgress(card.progress)\r\n    }, [card.progress])\r\n\r\n    const changeProgress = async () => {\r\n        if (progress === null) {\r\n            setIsInputVisible(false)\r\n            setIsInputActive(false)\r\n            return\r\n        }\r\n\r\n        if (currInput === progress || !isInputOk) {\r\n            setProgress(currInput)\r\n            setIsInputOk(true)\r\n            return\r\n        }\r\n\r\n        let arr = [...taskHistory]\r\n        arr.push({\r\n            'event': `Progress ${progress}%`,\r\n            'date': today\r\n        })\r\n        setTaskHistory(arr)\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n\r\n    }\r\n\r\n    function onEscPressed(event) {\r\n        if (event.keyCode === 27) {\r\n            setProgress(currInput)\r\n            setIsInputActive(false)\r\n            setIsInputOk(true)\r\n            if (progress === null) setIsInputVisible(false)\r\n        }\r\n    }\r\n\r\n    function onKeyUp() {\r\n        if (!progress || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n        } else {\r\n            setIsInputOk(true)\r\n        }\r\n    }\r\n\r\n    function onClick() {\r\n        setIsInputVisible(true)\r\n        setIsInputActive(true)\r\n        setCurrInput(progress)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles['small-buttons']} onClick={onClick} >\r\n                <img className={styles.pics} src={pic2} alt=\"\" />\r\n                Progress\r\n            </div>\r\n            {card.progress !== null &&\r\n                <div className={styles['progress-bar']} >\r\n                    <ProgressBar progress={card.progress} />\r\n                </div>\r\n            }\r\n            {isInputVisible && <div className={styles['progress-input-container']}>\r\n                {isInputActive ? <span ref={ref}>\r\n                    <input\r\n                        ref={function (input) {\r\n                            if (input != null) {\r\n                                input.focus();\r\n                            }\r\n                        }}\r\n                        id='progress'\r\n                        type='number'\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        className={`${styles['progress-input']} ${!isInputOk && styles['bad-input']}`}\r\n                        value={progress}\r\n                        onKeyDown={e => onEscPressed(e)}\r\n                        onKeyUp={onKeyUp}\r\n                        onChange={e => setProgress(e.target.value)}\r\n                        onBlur={changeProgress}\r\n                    /><span>%</span>\r\n                </span> : <div className={styles.progress} onClick={onClick}>{progress}%</div>}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic6.68bb366f.svg\";","export default __webpack_public_path__ + \"static/media/download.1cad53f3.svg\";","export default __webpack_public_path__ + \"static/media/remove.3a2c6cb2.svg\";","import React, { useState, useEffect } from 'react'\r\nimport ButtonClean from '../button-clean'\r\nimport styles from './index.module.css'\r\nimport download from '../../images/edit-card/download.svg'\r\nimport remove from '../../images/edit-card/remove.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\n\r\nexport default function AttachmentList({ attachments, listRef, card, project, teamId, setCurrCard }) {\r\n    const socket = useSocket()\r\n    const history = useHistory()\r\n    const token = getCookie(\"x-auth-token\")\r\n    const [attachmentsArr, setAttachmentsArr] = useState([])\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n    useEffect(() => {\r\n        setAttachmentsArr(attachments)\r\n    }, [attachments])\r\n\r\n    const getFullDocumentUrl = (att) => {\r\n        return `https://res.cloudinary.com/${process.env.REACT_APP_CLOUD_NAME}/raw/upload/fl_attachment/${att.path}`\r\n    }\r\n\r\n    async function deteleAttachment(att) {\r\n        const response = await fetch(`/api/projects/lists/cards/attachments/${card._id}/${att._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            const updatedCard = await response.json()\r\n            if (setCurrCard) setCurrCard(updatedCard)\r\n            setAttachmentsArr(updatedCard.attachments)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        {confirmOpen &&\r\n            <ConfirmDialog\r\n                title='remove this attachment'\r\n                hideConfirm={() => setConfirmOpen(false)}\r\n                onConfirm={() => deteleAttachment(currElement)}\r\n            />\r\n        }\r\n        <div ref={listRef} className={styles.container}>\r\n            <div className={styles.title}>Task Attachments</div>\r\n            {attachmentsArr.map((att, index) => (\r\n                <div key={index} className={styles.attachment}>\r\n                    <div className={styles.name}>{att.name}.{att.format}</div>\r\n                    <div>\r\n                        <ButtonClean title={<img className={styles.button} src={download} alt=\"Download\" />} onClick={() => window.open(getFullDocumentUrl(att), \"_blank\")} />\r\n                        <ButtonClean title={<img className={styles.button} src={remove} alt=\"Remove\" />}\r\n                         onClick={() => {\r\n                            setConfirmOpen(true)                            \r\n                            setCurrElement(att)\r\n                        }} \r\n                        //  onClick={() => deteleAttachment(att)} \r\n                         />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\nimport AttachmentList from '../attachmentList'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Transparent from '../transparent'\r\n\r\nexport default function Attachment({ att, attachments, card, project, teamId, setCurrCard }) {\r\n    const listRef = useRef(null)\r\n    const [isListVisible, setIsListVisible] = useDetectOutsideClick(listRef)\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className={styles.attachment}\r\n                onClick={() => setIsListVisible(true)}\r\n                title={att.name}\r\n            >\r\n                <img src={pic1} alt=\"\" className={styles['att-picture']} />\r\n                <div className={styles.format}>{att.format}</div>\r\n            </div>\r\n            {isListVisible && <Transparent hideForm={() => setIsListVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                    setCurrCard={setCurrCard}\r\n                />\r\n            </Transparent >}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport styles from './index.module.css'\r\nimport pic6 from '../../images/edit-card/pic6.svg'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport Attachment from '../attachment'\r\n\r\nexport default function TaskAttach({ card, project, teamId, setCurrCard }) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [attachments, setAttachments] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setAttachments(card.attachments)\r\n    }, [card.attachments])\r\n\r\n    function addAttachment() {\r\n        const widget = window.cloudinary.createUploadWidget({\r\n            cloudName: process.env.REACT_APP_CLOUD_NAME,\r\n            uploadPreset: process.env.REACT_APP_UPLOAD_PRESET,\r\n            resourceType: 'raw'\r\n\r\n        }, async (error, result) => {\r\n            if (result.event === 'success') {\r\n                const path = result.info.path\r\n                const name = result.info.original_filename\r\n                let format = result.info.format\r\n                if (!format) {\r\n                    format = path.split('.')[1]\r\n                }\r\n                const publicId = result.info.public_id\r\n                const attachment = { path, name, format, publicId }\r\n\r\n\r\n                const response = await fetch(`/api/projects/lists/cards/attachments/${card._id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token\r\n                    },\r\n                    body: JSON.stringify({\r\n                        attachment\r\n                    })\r\n                })\r\n                if (!response.ok) {\r\n                    history.push(\"/error\")\r\n                } else {\r\n                    const updatedCard = await response.json()\r\n                    setAttachments(updatedCard.attachments)\r\n                    socket.emit('project-update', project)\r\n                    socket.emit('task-team-update', teamId)\r\n                }\r\n            }\r\n\r\n            if (error) {\r\n                //TODO: Handle errors\r\n\r\n                return\r\n            }\r\n        })\r\n\r\n        widget.open()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles['small-buttons']} onClick={addAttachment}>\r\n                <img className={styles.pics} src={pic6} alt=\"pic6\" />\r\n                Attach File\r\n            </div>\r\n            { attachments && <div className={styles['att-container']}>\r\n                {attachments.length <= 4 ? attachments.map(att => (\r\n                    <Attachment key={att._id} att={att} attachments={attachments} card={card} project={project} teamId={teamId} setCurrCard={setCurrCard} />\r\n                )) :\r\n                <>\r\n                {attachments.slice(0, 3).map(att => (\r\n                    <Attachment key={att._id} att={att} attachments={attachments} card={card} project={project} teamId={teamId} setCurrCard={setCurrCard} />\r\n                ))}\r\n                <div className={`${styles.remaining} ${styles.attachment}`}>\r\n                    +{attachments.length - 3}\r\n                </div>\r\n                </>\r\n                }\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState, useMemo, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pic1 from '../../images/edit-card/pic1.svg'\r\n// import pic2 from '../../images/edit-card/pic2.svg'\r\n// import pic3 from '../../images/edit-card/pic3.svg'\r\n// import pic4 from '../../images/edit-card/pic4.svg'\r\n// import pic5 from '../../images/edit-card/pic5.svg'\r\n// import pic6 from '../../images/edit-card/pic6.svg'\r\n// import pic7 from '../../images/edit-card/pic7.svg'\r\n// import pic8 from '../../images/edit-card/pic8.svg'\r\n// import pic9 from '../../images/edit-card/pic9.svg'\r\n// import pic10 from '../../images/edit-card/pic10.svg'\r\n// import pic11 from '../../images/edit-card/pic11.svg'\r\nimport pic12 from '../../images/edit-card/pic12.svg'\r\n// import pic13 from '../../images/edit-card/pic13.svg'\r\n// import pic14 from '../../images/edit-card/pic14.svg'\r\nimport TaskMembers from '../edit-card-options/taskMembers'\r\nimport TaskDueDate from \"../edit-card-options/taskDueDate\"\r\nimport TaskHistory from '../edit-card-options/taskHistory'\r\nimport TaskProgress from '../edit-card-options/taskProgress'\r\nimport TaskAttach from '../edit-card-options/taskAttach'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\n\r\n\r\nexport default function EditCard({ listId, initialCard, project, teamId, hideForm, setCurrCard }) {\r\n    const nameRef = useRef(null)\r\n    const descriptionRef = useRef(null)\r\n    const [card, setCard] = useState(null)\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [taskHistory, setTaskHistory] = useState(null)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const dueDate = useMemo(() => new Date(initialCard.dueDate), [initialCard.dueDate])\r\n    const token = getCookie(\"x-auth-token\")\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCard(initialCard)\r\n        setName(initialCard.name)\r\n        setDescription(initialCard.description)\r\n        setTaskHistory(initialCard.history)\r\n    }, [initialCard])\r\n\r\n\r\n    const deleteCard = async () => {\r\n\r\n        // if (!window.confirm('Are you sure you wish to delete this item?')) return\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n            hideForm()\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            // const updatedCard = await response.json()\r\n            // setCard(updatedCard)\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n            // setProgressChanged(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setNameHeight(nameRef.current.scrollHeight + 2)\r\n        }, 1);\r\n    }, [])\r\n\r\n    function onEscPressed(event, setElement, ref) {\r\n        if (event.keyCode === 27) {\r\n            setElement(currInput)\r\n            setTimeout(() => {\r\n                ref.current.blur()\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.menu}>\r\n\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this task'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteCard()}\r\n                />\r\n            }\r\n\r\n            <div className={styles.container}>\r\n\r\n                <div className={styles['task-name']}>\r\n                    <span>\r\n                        <img src={pic1} alt=\"pic1\" />\r\n                    </span>\r\n                    <textarea\r\n                        ref={nameRef}\r\n                        className={`${styles['name-input']} ${styles.text}`}\r\n                        style={{ 'height': nameHeight }}\r\n                        value={name}\r\n                        onFocus={() => setCurrInput(name)}\r\n                        onKeyDown={e => onEscPressed(e, setName, nameRef)}\r\n                        onChange={e => {\r\n                            setName(e.target.value)\r\n                            setNameHeight(nameRef.current.scrollHeight + 2)\r\n                        }}\r\n                        onBlur={() => {\r\n                            if (currInput === name) return\r\n                            handleSubmit()\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles['task-body']} >\r\n\r\n                    <div className={styles['left-side']}>\r\n                        <div>\r\n                            <div className={styles.text}>Description</div>\r\n                            <textarea className={styles['description-input']}\r\n                                ref={descriptionRef}\r\n                                value={description}\r\n                                onFocus={() => setCurrInput(description)}\r\n                                onKeyDown={e => onEscPressed(e, setDescription, descriptionRef)}\r\n                                onChange={e => setDescription(e.target.value)}\r\n                                onBlur={() => {\r\n                                    if (currInput === description) return\r\n                                    handleSubmit()\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className={styles['task-component']}>\r\n                            <div className={styles.text}>History</div>\r\n                            <TaskHistory taskHistory={taskHistory} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['right-side']}>\r\n\r\n                        <div className={styles['task-component']}>\r\n                            <div className={styles.text}>Manage</div>\r\n                            <TaskDueDate\r\n                                dueDate={dueDate}\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <TaskMembers\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <TaskProgress\r\n                                card={initialCard}\r\n                                listId={listId}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                taskHistory={taskHistory}\r\n                                setTaskHistory={setTaskHistory}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <TaskAttach\r\n                                card={initialCard}\r\n                                project={project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                            <button className={styles['small-buttons']} \r\n                            // onClick={deleteCard} \r\n                            onClick={() => {\r\n                                setConfirmOpen(true)                            \r\n                            }}\r\n                            title=\"Delete Task\" >\r\n                                <img className={styles.pics} src={pic12} alt=\"pic12\" />\r\n                            Delete Task\r\n                        </button>\r\n\r\n\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic3} alt=\"pic3\" />\r\n                            Join\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic4} alt=\"pic4\" />\r\n                            Stickers\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic5} alt=\"pic5\" />\r\n                            Due Date\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic7} alt=\"pic7\" />\r\n                            Reports\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic10} alt=\"pic10\" />\r\n                            Add Teammate\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic11} alt=\"pic11\" />\r\n                            Make Template\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic13} alt=\"pic13\" />\r\n                            Remove List\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic8} alt=\"pic8\" />\r\n                            Settings\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic9} alt=\"pic9\" />\r\n                            View\r\n                        </div> */}\r\n                            {/* <div className={styles['small-buttons']} >\r\n                            <img className={styles.pics} src={pic14} alt=\"pic14\" />\r\n                            Archive\r\n                        </div> */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport ButtonClean from '../button-clean'\r\nimport styles from './index.module.css'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\n\r\nimport attPic from '../../images/edit-card/pic6.svg'\r\nimport Transparent from '../transparent'\r\nimport AttachmentList from '../attachmentList'\r\n\r\nconst AttachmentsLink = ({ card, project, teamId }) => {\r\n    const listRef = useRef(null)\r\n    const [isVisible, setIsVisible] = useDetectOutsideClick(listRef)\r\n\r\n    return (\r\n        <>\r\n        <ButtonClean\r\n            className={`${styles.attachments} ${styles.button}`}\r\n            onClick={() => setIsVisible(true)}\r\n            title={<img src={attPic} alt=\"\" width='14px' />}\r\n        />\r\n        { isVisible &&\r\n            <Transparent hideForm={() => setIsVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={card.attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                />\r\n            </Transparent >\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttachmentsLink","import React, { useState, useRef, useEffect } from 'react'\r\nimport ButtonClean from '../button-clean'\r\nimport pen from '../../images/pen.svg'\r\nimport styles from \"./index.module.css\"\r\nimport Transparent from '../transparent'\r\nimport EditCard from '../edit-card'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AttachmentsLink from '../attachmentsLink'\r\n\r\nexport default function MyTasksTask({ teamId, project, list, card }) {\r\n    const inputRef = useRef(null)\r\n    const [isInputActive, setIsInputActive] = useState(false)\r\n    const [showEditCard, setShowEditCard] = useState(false)\r\n    const [progress, setProgress] = useState('')\r\n    const [isInputOk, setIsInputOk] = useState(true)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const days = Math.ceil((Date.parse(card.dueDate) - Date.now()) / 1000 / 3600 / 24)\r\n\r\n    useEffect(() => {\r\n        if (card.progress === null) {\r\n            setProgress('Add')\r\n            return\r\n        }\r\n        setProgress(card.progress + '%')\r\n    }, [setProgress, card.progress])\r\n\r\n    async function onBlur() {\r\n        setIsInputActive(false)\r\n        if (!isInputOk || Number(progress) === card.progress) {\r\n            setProgress(card.progress + '%')\r\n            setIsInputOk(true)\r\n            return\r\n        }\r\n\r\n        if (progress === '') {\r\n            if (card.progress === null) {\r\n                setProgress('Add')\r\n                return\r\n            }\r\n            setProgress(card.progress + '%')\r\n        }\r\n\r\n        const today = new Date(Date.now())\r\n        let arr = [...card.history]\r\n\r\n        arr.push({\r\n            'event': `Progress ${progress}%`,\r\n            'date': today\r\n        })\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${list._id}/${card._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress: progress,\r\n                history: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            socket.emit('project-update', project)\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n    }\r\n\r\n    function onKeyUp() {\r\n        if (Number.isNaN(Number(progress)) || Number(progress) < 0 || Number(progress) > 100) {\r\n            setIsInputOk(false)\r\n        } else {\r\n            setIsInputOk(true)\r\n        }\r\n    }\r\n\r\n    function onFocus() {\r\n        setIsInputActive(true)\r\n        if (progress === 'Add') {\r\n            setProgress('')\r\n            return\r\n        }\r\n        setProgress(Number(progress.slice(0, -1)))\r\n    }\r\n\r\n    return (\r\n        <div key={card._id} className={styles.card}>\r\n            <div className={styles.task}>{card.name}</div>\r\n            <div className={styles.progress}>\r\n                <input\r\n                    ref={inputRef}\r\n                    type={'text'}\r\n                    className={`${styles.input} ${!isInputOk && styles['bad-input']} ${!isInputActive && styles['no-border']}`}\r\n                    autoComplete=\"off\"\r\n                    value={progress}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onKeyUp={onKeyUp}\r\n                    onChange={e => setProgress(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={styles.days}>\r\n                { card.progress === 100 ? (<div>Done</div>) :\r\n                        Date.parse(card.dueDate) === 0 || card.dueDate === null ? (<div>No Deadline</div>) :\r\n                            days < 0 ? (<div className={styles.deadline}>Deadline Passed</div>) :\r\n                                <div>{days}</div>\r\n                }\r\n            </div>\r\n            <div className={styles['buttons-container']}>\r\n                { card.attachments.length > 0 && <AttachmentsLink card={card} project={project} teamId={teamId} /> }\r\n                <ButtonClean\r\n                    className={styles.button}\r\n                    onClick={() => setShowEditCard(true)}\r\n                    title={<img src={pen} alt=\"\" width=\"14\" />}\r\n                />\r\n            </div>\r\n            { showEditCard && <div className={styles.edit}>\r\n                <Transparent hideForm={() => setShowEditCard(!showEditCard)} >\r\n                    <EditCard\r\n                        hideForm={() => setShowEditCard(!showEditCard)}\r\n                        initialCard={card}\r\n                        listId={list._id}\r\n                        project={project}\r\n                        teamId={teamId}\r\n                    />\r\n                </Transparent>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect, useCallback } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Title from \"../../components/title\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport getCookie from \"../../utils/cookie\"\r\nimport styles from './index.module.css'\r\nimport myTasks from '../../images/my-tasks/my-tasks.svg'\r\nimport { useSocket } from \"../../contexts/SocketProvider\"\r\nimport MyTasksTask from \"../../components/my-tasks-task\"\r\nimport ButtonCleanTitle from \"../../components/button-clean-title\"\r\nimport ButtonClean from \"../../components/button-clean\"\r\n\r\nconst MyTasksPage = () => {\r\n    const userContext = useContext(UserContext)\r\n    const [projects, setProjects] = useState([])\r\n    const [showOldProjects, setShowOldProjects] = useState(false)\r\n\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n\r\n    const selectTeam = useCallback(async (teamId) => {\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/user/tasks/${teamId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            if (data === 'Team not found') return\r\n            setProjects(data)\r\n            if (teamId !== userContext.user.lastTeamSelected) {\r\n                const user = { ...userContext.user }\r\n                user.lastTeamSelected = teamId\r\n                userContext.setUser({\r\n                    ...user,\r\n                    loggedIn: true\r\n                })\r\n            }\r\n        }\r\n    }, [history, userContext])\r\n\r\n    useEffect(() => {\r\n        if (!userContext.user.lastTeamSelected || socket == null) return\r\n\r\n        const id = userContext.user.lastTeamSelected\r\n\r\n        socket.on('task-team-updated', taskTeamUpdate)\r\n        socket.on('task-update-team', (teamId) => {\r\n            if (teamId === id) {\r\n                selectTeam(teamId)\r\n            }\r\n        })\r\n\r\n        socket.emit('task-team-join', id)\r\n        return () => {\r\n            socket.off('task-team-updated')\r\n            socket.off('task-update-team')\r\n        }\r\n    }, [socket, selectTeam, userContext.user.lastTeamSelected])\r\n\r\n    useEffect(() => {\r\n        if (userContext.user.lastTeamSelected) {\r\n            selectTeam(userContext.user.lastTeamSelected)\r\n        }\r\n    }, [selectTeam, userContext.user.lastTeamSelected])\r\n\r\n    function taskTeamUpdate(projects) {\r\n        setProjects(projects)\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Title title='My Tasks' />\r\n            <div className={styles['button-container']}>\r\n                <div className={styles['team-buttons']}>\r\n                    <span className={styles.title}>Teams:</span>\r\n                    {userContext.user.teams.map(team => {\r\n                        return <ButtonCleanTitle\r\n                            key={team._id}\r\n                            title={team.name}\r\n                            onClick={() => selectTeam(team._id)}\r\n                            className={`${styles.teams} ${userContext.user.lastTeamSelected === team._id && styles.selected}`}\r\n                        />\r\n                    })}\r\n                </div>\r\n                <ButtonClean className={`${styles.teams} ${styles['projects-button']}`} title={showOldProjects ? 'Current Projects' : \"Old Projects\"} onClick={() => setShowOldProjects(!showOldProjects)} />\r\n            </div>\r\n            {!userContext.user.lastTeamSelected ? <div className={styles.title}>Select a team</div> :\r\n                <div className={styles.box}>\r\n                    {projects.length === 0 ? <div className={styles.title}>There is no current tasks</div> :\r\n                        projects.filter(!showOldProjects ? (p => (p.isFinished === false) || (p.isFinished === undefined)) : (p => (p.isFinished === true)))\r\n                            .reverse()\r\n                            .map(project => {\r\n                                return (\r\n                                    <div key={project._id} className={styles.project}>\r\n                                        <div className={styles['project-name']}>\r\n                                            <Link to={`/project-board/${userContext.user.lastTeamSelected}/${project._id}`} className={styles.link}>\r\n                                                <span className={styles.bold}>Project:</span> {project.name}\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className={`${styles.header} ${styles.raw}`}>\r\n                                            <div className={styles.list}>List:</div>\r\n                                            <div className={styles.container}>\r\n                                                <div className={styles.task}>Task:</div>\r\n                                                <div className={styles.progress}>Progress (%):</div>\r\n                                                <div className={styles.days}>Days Till End:</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        { project.lists.map(list => {\r\n                                            return (\r\n                                                <div key={list._id} className={styles.raw}>\r\n                                                    <div className={styles.list}>{list.name}</div>\r\n                                                    <div className={styles['task-container']}>\r\n                                                        {list.cards.map(card => {\r\n                                                            return (\r\n                                                                <MyTasksTask\r\n                                                                    key={card._id}\r\n                                                                    teamId={userContext.user.lastTeamSelected}\r\n                                                                    project={project}\r\n                                                                    list={list}\r\n                                                                    card={card}\r\n                                                                />\r\n                                                            )\r\n                                                        })}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    }\r\n                </div>\r\n            }\r\n            {(!userContext.user.lastTeamSelected || projects.length === 0) &&\r\n                <div className={styles.pic}>\r\n                    <img src={myTasks} alt='' />\r\n                </div>\r\n            }\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default MyTasksPage","export default __webpack_public_path__ + \"static/media/error-page.cdc8a8bc.svg\";","import React from \"react\";\r\nimport PageLayout from \"../../components/page-layout\";\r\nimport styles from './index.module.css'\r\nimport pic1 from '../../images/error-page.svg'\r\n\r\n\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <PageLayout>\r\n            <div className={styles.title}>Error Page</div>\r\n        <div>\r\n          <img className={styles.pic1} src={pic1} alt=\"\" />\r\n        </div>\r\n            <div className={styles.text}>\r\n                Something went wrong.\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React, { useCallback, useContext, useRef, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport TeamContext from \"../../contexts/TeamContext\"\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\nimport AvatarUser from '../avatar-user'\r\n\r\n\r\nexport default function AddMember(props) {\r\n\r\n    const socket = useSocket()\r\n    const members = props.members\r\n    const [users, setUsers] = useState([])\r\n    const [selectedUser, setSelectedUser] = useState('')\r\n    const context = useContext(UserContext)\r\n    const teamContext = useContext(TeamContext)\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const isAdmin = props.admin\r\n    const history = useHistory()\r\n    const projectId = props.project._id\r\n    const params = useParams()\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [confirmTitle, setConfirmTitle] = useState('')\r\n    const [currElement, setCurrElement] = useState('')\r\n\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('team-update', params.teamid)\r\n    }, [socket, props.project, params.teamid])\r\n\r\n\r\n    const getTeamUsers = async () => {\r\n        let currentTeamId = ''\r\n\r\n        teamContext.teams.map(t => {\r\n            return (\r\n                t.projects.map(p => {\r\n                    if (p._id === projectId) {\r\n                        currentTeamId = t._id\r\n                    }\r\n                    return currentTeamId\r\n                })\r\n            )\r\n        })\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/teams/get-users/${currentTeamId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        }\r\n        const data = await response.json()\r\n\r\n        let teamUsers = data.members\r\n\r\n        const filtered = teamUsers.filter((e) => {\r\n            const found = members.find(element => element.memberId.username === e.username)\r\n            if (found) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        })\r\n\r\n        setUsers(filtered)\r\n\r\n    }\r\n\r\n    async function handleOnDragEnd(result) {\r\n\r\n        if (!result.destination) {\r\n            console.log('no destination');\r\n            return\r\n        }\r\n\r\n        const memberRoleId = result.draggableId\r\n\r\n        const member = members.filter(a => a._id === memberRoleId)[0]['memberId']\r\n\r\n        if (member._id === context.user.id) {\r\n            console.log('can`t move self');\r\n            return\r\n        }\r\n\r\n        const memberAdmin = members.filter(a => a._id === memberRoleId)[0]['admin']\r\n\r\n\r\n        if (result.destination.droppableId === 'admins' && memberAdmin) {\r\n            return\r\n        }\r\n        if (result.destination.droppableId === 'members' && !memberAdmin) {\r\n            return\r\n        }\r\n\r\n        // if (!memberAdmin) {\r\n        //     if (!window.confirm(`Are you sure you wish to make ${member.username} admin ?`))\r\n        //         return\r\n        // }\r\n\r\n        // if (memberAdmin) {\r\n        //     if (!window.confirm(`Are you sure you wish to remove ${member.username} from  admins ?`))\r\n        //         return\r\n        // }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const response = await fetch(`/api/projects/${projectId}/user-roles`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                userRole: memberRoleId,\r\n                isAdmin: !memberAdmin\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n        }\r\n    }\r\n\r\n    const handleSelect = (id) => {\r\n        const result = users.filter(obj => {\r\n            return obj._id === id\r\n        })[0]\r\n        setSelectedUser(result)\r\n    }\r\n\r\n    const deleteMember = async (member) => {\r\n        const projectId = props.project._id\r\n\r\n        if (member._id === context.user.id) {\r\n            return\r\n        }\r\n        const memberId = member._id\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${projectId}/user-remove`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                memberId\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleAdd = async (event) => {\r\n        event.preventDefault()\r\n\r\n\r\n        if (!selectedUser) {\r\n            setIsActive(!isActive)\r\n\r\n            return\r\n        }\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n\r\n        const member = selectedUser\r\n\r\n        const response = await fetch(`/api/projects/${projectId}/user`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                member,\r\n                admin: false\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n            setIsActive(!isActive)\r\n            setSelectedUser('')\r\n        }\r\n    }\r\n\r\n    let confirmationObjectFunctions = {        \r\n        'delete this member': deleteMember   \r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={confirmTitle}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => confirmationObjectFunctions[confirmTitle](currElement)}\r\n                />\r\n            }\r\n\r\n            <div className={styles['big-container']}>\r\n                {isAdmin ?\r\n                <span>\r\n                    {isActive ?\r\n                        <div className={styles.members} ref={dropdownRef}>\r\n                            {\r\n                                (users.length > 0) ?\r\n                                \r\n                                    <div>\r\n                                            Add Member to Project\r\n                            \r\n                                        <div>\r\n                                            <select className={styles['member-select']}\r\n                                                onChange={(e) => { handleSelect(e.target.value) }}>\r\n                                                <option >Select user</option>\r\n                                                {\r\n                                                    users.map((element) => (\r\n                                                        <option key={element._id} value={element._id}>{element.username}</option>\r\n                                                    ))\r\n\r\n                                                }\r\n                                            </select>\r\n                                        <span className={styles['add-button']} onClick={handleAdd} >Add</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    <div>There are no more members in your team</div>                                      \r\n                                \r\n                            }\r\n                        </div>\r\n                        :\r\n                        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n\r\n\r\n                        <div className={styles['admins-container']}>\r\n                            <span className={styles.title}>Admins:</span>\r\n                            <Droppable droppableId={\"admins\"}>\r\n                                {(provided) => (\r\n                                    <div className={styles.droppable} ref={provided.innerRef}  {...provided.droppableProps} >\r\n                                        {\r\n                                            members.filter(a => a.admin === true).map((element, index) => {\r\n                                                return (\r\n                                                    <Draggable key={element.memberId._id} draggableId={element._id} index={index}>\r\n                                                        {(provided) => (\r\n                                                            <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >                                                                   \r\n                                                                <AvatarUser user={element.memberId} \r\n                                                                    size={40}  />\r\n                                                                {provided.placeholder}\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </Draggable>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                )}\r\n                            </Droppable>\r\n                        </div>\r\n\r\n                        <div className={styles['members-container']}>\r\n                            <span className={styles.title}>Members:</span>\r\n                            <Droppable droppableId={\"members\"}>\r\n                                {(provided) => (\r\n                                    <div className={styles['droppable-members']} ref={provided.innerRef} {...provided.droppableProps}>\r\n                                        {\r\n                                            members.filter(a => a.admin !== true).map((element, index) => {\r\n                                                return (\r\n                                                    <Draggable key={element.memberId._id} draggableId={element._id} index={index} >\r\n                                                        {(provided) => (\r\n\r\n                                                            <span {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                                <AvatarUser user={element.memberId}  key={index}  size={40} round={true}                                                                       \r\n                                                                    onClick={() => {\r\n                                                                        setConfirmOpen(true)\r\n                                                                        setConfirmTitle('delete this member')\r\n                                                                        setCurrElement(element.memberId)\r\n                                                                    }}\r\n                                                                    />\r\n                                                                {provided.placeholder}\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </Draggable>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                )}\r\n                            </Droppable>\r\n                            <span className={styles['add-button']} onClick={() => { setIsActive(!isActive); getTeamUsers() }} >Add</span>\r\n                        </div>\r\n\r\n\r\n                        </DragDropContext>\r\n                    \r\n                    }\r\n                </span >\r\n                :\r\n                <div>\r\n                    <div className={styles['admins-container']}>\r\n                        <span className={styles.title}>Admins:</span>\r\n                        <div className={styles.droppable}>\r\n                            {\r\n                                members.filter(a => a.admin === true).map((element, index) => {\r\n                                    return (\r\n                                        <span key={index} >\r\n                                            <AvatarUser user={element.memberId}  size={40}  />\r\n                                        </span>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles['admins-container']}>\r\n                        <span className={styles.title}>Members:</span>\r\n                        <div className={styles.droppable}>\r\n                        { \r\n                            members.filter(a => a.admin !== true).map((element, index) => {\r\n                                return (\r\n                                    <span key={index}>                                                                                                <AvatarUser user={element.memberId}  size={40}  />\r\n                                    </span>\r\n                                )\r\n                            })\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","function isUserAdmin(id, members) {\r\n    \r\n    const member = members.find( m => m.memberId._id === id )\r\n    if (!member) {\r\n        return false\r\n    }\r\n\r\n    return member.admin\r\n}\r\n\r\nexport default isUserAdmin\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport AddProjectMember from '../add-project-member'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\n\r\n\r\nexport default function EditProject(props) {\r\n    const [name, setName] = useState(props.project.name)\r\n    const [description, setDescription] = useState(props.project.description)\r\n    const [isFinished, setIsFinished] = useState(props.project.isFinished)\r\n    const members = props.project.membersRoles\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n    const userContext = useContext(UserContext)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n\r\n    const projectId = props.project._id\r\n\r\n    const updateProjectSocket = useCallback(() => {\r\n        socket.emit('project-update', props.project)\r\n    }, [socket, props.project])\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id, props])\r\n\r\n    console.log(props.project);\r\n    console.log('isFinished', isFinished);\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n       \r\n        console.log('handle', isFinished);\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${projectId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                description,\r\n                isFinished\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateProjectSocket()\r\n            props.hideForm()\r\n            socket.emit('team-update', params.teamid)\r\n        }\r\n    }\r\n\r\n    async function deleteProject() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/${props.project._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            props.hideForm()\r\n            const obj = {\r\n                projectId: props.project._id,\r\n                teamId: params.teamid\r\n            }\r\n            socket.emit('project-deleted', obj)\r\n            history.push(`/team/${params.teamid}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'delete this project'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteProject()}\r\n                />\r\n            }\r\n\r\n            <div className={styles.container} >\r\n                <div className={styles.title} >Project</div>\r\n\r\n                <div className={styles['input-container']}>\r\n                    <span> Name</span>\r\n                    <input\r\n                        className={styles['input-pr-name']}\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        label=\"Name\"\r\n                        id=\"name\"\r\n                    />\r\n                </div>\r\n                <div className={styles['input-container-descr']}>\r\n                    <span> Description</span>\r\n                    <textarea\r\n                        className={styles['text-area-descr']}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        label=\"Description\"\r\n                        id=\"description\"\r\n                        placeholder='Project Description'\r\n                        spellcheck=\"false\"\r\n                    />\r\n                </div>\r\n                <div className={styles['edit-members']}>\r\n                    <AddProjectMember admin={isAdmin} project={props.project} members={props.project.membersRoles} />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {isAdmin ?\r\n                    <div className={styles['buttons-div']}>\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Edit'} onClick={(e)=>handleSubmit(e)} />\r\n                        <ButtonGrey className={styles['navigate-buttons']}\r\n                            title={isFinished ?\r\n                                'Set Current' : 'Set Finished'}\r\n                            onClick={()=>setIsFinished(!isFinished)} />\r\n                        <ButtonGrey className={styles['navigate-buttons']} title={'Delete Project'}\r\n                            onClick={() => {\r\n                                setConfirmOpen(true)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useRef } from 'react'\r\nimport styles from './index.module.css'\r\nimport pen from '../../images/pen.svg'\r\nimport ButtonClean from '../button-clean'\r\nimport MembersList from '../members-list'\r\nimport ProgressBar from '../progress-bar'\r\nimport Transparent from '../transparent'\r\nimport AttachmentList from '../attachmentList'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useParams } from 'react-router-dom'\r\nimport AttachmentsLink from '../attachmentsLink'\r\n\r\nexport default function Card({ card, project, showCurrentCard, setCurrCard }) {\r\n    const listRef = useRef(null)\r\n    const [isListVisible, setIsListVisible] = useDetectOutsideClick(listRef)\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <div>\r\n                {((card.progress && card.progress !== 0) || card.members.length > 0 || card.attachments.length > 0) ?\r\n                    <div className={styles.container}>\r\n                        {card.progress ? <div className={styles.progress}><ProgressBar progress={card.progress} /></div> : <div></div>}\r\n                        <div className={styles.container}>\r\n                            {card.attachments.length > 0 && \r\n                                <AttachmentsLink card={card} project={project} teamId={teamId} />\r\n                            }\r\n                            <MembersList\r\n                                members={card.members}\r\n                                maxLength={2}\r\n                            />\r\n                        </div>\r\n                    </div> : null\r\n                }\r\n                <div className={styles['card-name']}>\r\n                    {card.name}\r\n                </div>\r\n            </div>\r\n            <ButtonClean\r\n                className={styles.button}\r\n                onClick={() => {\r\n                    showCurrentCard()\r\n                    setCurrCard(card)\r\n                }}\r\n                title={<img src={pen} alt=\"\" width=\"11.5\" height=\"11.5\" />}\r\n            />\r\n            {isListVisible && <Transparent hideForm={() => setIsListVisible(false)} >\r\n                <AttachmentList\r\n                    listRef={listRef}\r\n                    attachments={card.attachments}\r\n                    card={card}\r\n                    project={project}\r\n                    teamId={teamId}\r\n                />\r\n            </Transparent >}\r\n        </div >\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/dots.d2d443b8.svg\";","import React, { useCallback, useRef, useState } from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Card from '../card'\r\nimport styles from './index.module.css'\r\nimport dots from '../../images/dots.svg'\r\nimport ButtonClean from '../button-clean'\r\nimport ListColor from '../list-color'\r\nimport ButtonGrey from '../button-grey'\r\nimport ConfirmDialog from '../confirmation-dialog'\r\n\r\n\r\nexport default function List( { isAdmin, project, list, showEditList, showCurrentCard, setCurrCard }) {\r\n    const dropdownRef = useRef(null);\r\n    const cardRef = useRef(null);\r\n    const [isVisible, setIsVisible] = useDetectOutsideClick(cardRef)\r\n    const [isEditListActive, setIsEditListActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardName, setCardName] = useState('')\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n\r\n    const updateSocket = useCallback(() => {\r\n        socket.emit('project-update', project)\r\n    }, [socket, project])\r\n\r\n    async function deleteList() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/${project._id}/${list._id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            updateSocket()\r\n            socket.emit('task-team-update', teamId)\r\n        }\r\n    }\r\n\r\n    const addCard = useCallback(async (event) => {\r\n        event.preventDefault()\r\n        if (cardName === '') {\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${list._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                name: cardName,\r\n                description: '',\r\n                dueDate: '',\r\n                progress: '',\r\n                members: []\r\n\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsVisible(!isVisible)\r\n            setCardName('')\r\n            updateSocket()\r\n        }\r\n\r\n    }, [history, cardName, list._id, updateSocket, isVisible, setIsVisible])\r\n\r\n    function editList() {\r\n        showEditList()\r\n        setIsEditListActive(!isEditListActive)\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={styles.list}>\r\n            {confirmOpen &&\r\n                <ConfirmDialog\r\n                    title={'you wish to delete this list'}\r\n                    hideConfirm={() => setConfirmOpen(false)}\r\n                    onConfirm={() => deleteList()}\r\n                />\r\n            }\r\n            <div className={styles.row}>\r\n                <div>\r\n                    <div className={styles.name} title={list.name} >{list.name}</div>\r\n                    <ListColor color={list.color || '#A6A48E'} type={'list'} />\r\n                </div>\r\n                {\r\n                    isAdmin &&\r\n                    <ButtonClean\r\n                        className={styles.button}\r\n                        onClick={() => setIsEditListActive(!isEditListActive)}\r\n                        title={<img className={styles.dots} src={dots} alt=\"...\" width=\"20\" height=\"6\" />}\r\n                    />\r\n                }\r\n            </div>\r\n            <div className={styles.relative}>\r\n                {isEditListActive && <div ref={dropdownRef} className={`${styles.menu}`} >\r\n                        <ButtonGrey\r\n                            onClick={editList}\r\n                            title='Edit'\r\n                            className={styles.edit}\r\n                        />\r\n                        <ButtonGrey\r\n                        \r\n                            onClick={() => setConfirmOpen(true)}\r\n                            title='Delete'\r\n                            className={styles.delete}\r\n                        />\r\n                </div>}\r\n            </div>\r\n            <Droppable droppableId={list._id} type='droppableSubItem'>\r\n                {(provided) => (\r\n                    <div className={styles.droppable} ref={provided.innerRef}>\r\n                        {\r\n                            list.cards.map((element, index) => {\r\n                                return (\r\n                                    <Draggable key={element._id} draggableId={element._id}\r\n                                        index={index}\r\n                                    >\r\n                                        {(provided) => (\r\n                                            <div>\r\n                                                <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                    <Card\r\n                                                        card={element}\r\n                                                        project={project}\r\n                                                        showCurrentCard={showCurrentCard}\r\n                                                        setCurrCard={setCurrCard}\r\n                                                    />\r\n                                                </div>\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                )\r\n                            })\r\n                        }\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n            <div className={styles.flexend} >\r\n                {\r\n                    isVisible ?\r\n                        <form ref={cardRef} className={styles.container} >\r\n                            <input\r\n                                autoFocus\r\n                                className={styles['task-input']}\r\n                                type={'text'}\r\n                                value={cardName}\r\n                                onChange={e => setCardName(e.target.value)}\r\n                            />\r\n                            <ButtonClean type='submit' className={styles.addlist} onClick={addCard} title='+ Add Task' project={project} />\r\n                        </form> : <ButtonClean className={styles['add-task']} onClick={() => setIsVisible(!isVisible)} title='+ Add Task' />\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic.260e1407.svg\";","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport Title from '../title'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport ButtonClean from '../button-clean'\r\nimport { SketchPicker } from 'react-color'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport isUserAdmin from '../../utils/isUserAdmin'\r\nimport ButtonGrey from '../button-grey'\r\n\r\n\r\nexport default function EditList(props) {\r\n    const nameRef = useRef(null)\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n    const [currInput, setCurrInput] = useState(null)\r\n    const [name, setName] = useState(props.list.name)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const dropdownRef = useRef(null)\r\n    const [isColorActive, setIsColorActive] = useDetectOutsideClick(dropdownRef)\r\n    const [color, setColor] = useState(props.list.color || '#A6A48E')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const members = props.project.membersRoles\r\n    const userContext = useContext(UserContext)\r\n    const projectId = props.project._id\r\n    const listId = props.list._id\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(isUserAdmin(userContext.user.id, members))\r\n    }, [members, userContext.user.id])\r\n\r\n    async function handleSubmit() {\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/${projectId}/${listId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({ name, color })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', teamId)\r\n            props.hideForm()\r\n        }\r\n    }\r\n\r\n    const onColorChange = (color) => {\r\n        setColor(color.hex)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setNameHeight(nameRef.current.scrollHeight + 2)\r\n        }, 1);\r\n    }, [])\r\n\r\n    function onEscPressed(event, setElement, ref) {\r\n        if (event.keyCode === 27) {\r\n            setElement(currInput)\r\n            setTimeout(() => {\r\n                ref.current.blur()\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            <Title title=\"Edit List\" />\r\n            <div className={styles['input-container']}>\r\n                <span className={styles.name}> Name</span>\r\n                <textarea\r\n                    ref={nameRef}\r\n                    className={`${styles['name-input']} ${styles.text}`}\r\n                    style={{ 'height': nameHeight }}\r\n                    value={name}\r\n                    onFocus={() => setCurrInput(name)}\r\n                    onKeyDown={e => onEscPressed(e, setName, nameRef)}\r\n                    onChange={e => {\r\n                        setName(e.target.value)\r\n                        setNameHeight(nameRef.current.scrollHeight + 2)\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={styles['change-color']}>\r\n                <span className={styles['color-title']}>Color</span>\r\n                <ButtonClean\r\n                    className={styles['color-button']}\r\n                    style={{ background: `${color}` }}\r\n                    onClick={() => setIsColorActive(!isColorActive)}\r\n                />\r\n            </div>\r\n            {isColorActive && <div ref={dropdownRef} >\r\n                <SketchPicker className={styles['color-pick']} color={color} onChangeComplete={onColorChange} />\r\n            </div>}\r\n            <div className={styles['edit-list-button']}>\r\n                {isAdmin &&\r\n                    <ButtonGrey onClick={handleSubmit} title=\"Edit List\" />\r\n\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useContext } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport UserContext from \"../contexts/UserContext\"\r\nimport getCookie from \"./cookie\"\r\n\r\nasync function useUpdateUserLastTeam(teamId) {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const history = useHistory()\r\n    const userContext = useContext(UserContext)\r\n\r\n    if (teamId === userContext.user.lastTeamSelected) return\r\n\r\n    const response = await fetch(`/api/user/${userContext.user.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": token\r\n        },\r\n        body: JSON.stringify({\r\n            lastTeamSelected: teamId\r\n        })\r\n    })\r\n\r\n    if (!response.ok) {\r\n        history.push(\"/error\")\r\n      }\r\n\r\n    const user = {...userContext.user}\r\n    user.lastTeamSelected = teamId\r\n    userContext.setUser({\r\n        ...user\r\n    })\r\n\r\n}\r\n\r\nexport default useUpdateUserLastTeam\r\n","import React, { useCallback, useContext, useEffect, useState, useRef } from 'react'\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport EditProject from '../../components/edit-project'\r\nimport List from '../../components/list'\r\nimport PageLayout from '../../components/page-layout'\r\nimport Transparent from '../../components/transparent'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport styles from './index.module.css'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport pic from '../../images/pic.svg'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport Loader from 'react-loader-spinner'\r\nimport ButtonClean from '../../components/button-clean'\r\nimport EditCard from '../../components/edit-card'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport EditList from '../../components/edit-list'\r\nimport userObject from '../../utils/userObject'\r\nimport ButtonGrey from '../../components/button-grey'\r\nimport useUpdateUserLastTeam from '../../utils/useUpdateUserLastTeam'\r\n\r\n\r\nexport default function ProjectBoard() {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [members, setMembers] = useState([])\r\n    const [IsVisibleEdit, setIsVisibleEdit] = useState(false)\r\n    const [isVisibleEditList, setIsVisibleEditList] = useState(false)\r\n    const [listName, setListName] = useState('')\r\n    const listRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(listRef)\r\n    const socket = useSocket()\r\n    const projectContext = useContext(ProjectContext)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [currCard, setCurrCard] = useState('')\r\n    const [currList, setCurrList] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [dndActive, setDndActive] = useState(false)\r\n    const context = useContext(UserContext)\r\n    const teamId = params.teamid\r\n    const token = getCookie(\"x-auth-token\")\r\n\r\n    useUpdateUserLastTeam(params.teamid)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n\r\n        projectContext.setProject(project)\r\n\r\n        const memberArr = []\r\n        project.membersRoles.map(element => {\r\n            return memberArr.push({ admin: element.admin, username: element.memberId.username })\r\n\r\n        })\r\n        setMembers(memberArr)\r\n        projectContext.setLists(project.lists)\r\n    }, [projectContext])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const id = params.projectid\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, params.projectid])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n            return\r\n        }\r\n\r\n        if (dndActive) return\r\n\r\n        const memberArr = []\r\n        projectContext.project.membersRoles.map(element => {\r\n            return memberArr.push({ admin: element.admin, username: element.memberId.username, id: element.memberId._id })\r\n\r\n        })\r\n        setMembers(memberArr)\r\n        projectContext.setLists(projectContext.project.lists)\r\n        const member = memberArr.find(m => m.id === context.user.id)\r\n\r\n        if (member) {\r\n            setIsAdmin(member.admin)\r\n        }\r\n\r\n    }, [projectContext.project, params.projectid, projectContext, context.user.id, dndActive])\r\n\r\n\r\n    const updateUserRecentProjects = useCallback(async () => {\r\n        const userId = context.user.id\r\n        let updatedUser = { ...context.user }\r\n        let oldArr = [...updatedUser.recentProjects]\r\n\r\n        if (oldArr.length > 2 && oldArr[2]._id === params.projectid) return\r\n\r\n        const arr = oldArr.filter(p => p._id !== params.projectid)\r\n        arr.push({ _id: params.projectid, name: projectContext.project.name })\r\n\r\n        if (arr.length > 3) {\r\n            arr.shift()\r\n        }\r\n\r\n        const response = await fetch(`/api/user/recentProjects/${userId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }, body: JSON.stringify({\r\n                recentProjects: arr\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n        } else {\r\n            const data = await response.json()\r\n            const user = userObject(data)\r\n            context.logIn(user)\r\n        }\r\n    }, [context, history, params.projectid, projectContext.project, token])\r\n\r\n    useEffect(() => {\r\n        if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n            return\r\n        } else {\r\n            updateUserRecentProjects()\r\n        }\r\n    }, [params.projectid, projectContext.project, updateUserRecentProjects])\r\n\r\n\r\n    if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n        return (\r\n            <PageLayout>\r\n                <Loader\r\n                    type=\"TailSpin\"\r\n                    color=\"#363338\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n\r\n    async function handleOnDragEnd(result) {\r\n        if (!result.destination) return\r\n\r\n        setDndActive(true)\r\n\r\n        if (result.type === 'droppableItem') {\r\n            let position = result.destination.index\r\n\r\n            const filteredList = projectContext.lists.filter(element => !(projectContext.hiddenLists.includes(element._id)))\r\n            const previousId = filteredList[position - 1]\r\n            position = projectContext.lists.indexOf(previousId) + 1\r\n\r\n            const newListsArr = [...projectContext.lists]\r\n            const [reorderedList] = newListsArr.splice(result.source.index, 1)\r\n            newListsArr.splice(result.destination.index, 0, reorderedList)\r\n            projectContext.setLists(newListsArr)\r\n\r\n            const response = await fetch(`/api/projects/lists/${projectContext.project._id}/${result.draggableId}/dnd-update`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    position,\r\n                    element: 'list',\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            } else {\r\n                const updatedProject = await response.json()\r\n                projectContext.setProject(updatedProject)\r\n            }\r\n        }\r\n\r\n        if (result.type === 'droppableSubItem') {\r\n            const position = result.destination.index\r\n            const oldPosition = result.source.index\r\n            const source = result.source.droppableId\r\n            const destination = result.destination.droppableId\r\n\r\n            const newListsArr = [...projectContext.lists]\r\n            let sourcePosition = ''\r\n            let destinationPosition = ''\r\n\r\n            for (let list of newListsArr) {\r\n                if (list._id === source) sourcePosition = newListsArr.indexOf(list)\r\n                if (list._id === destination) destinationPosition = newListsArr.indexOf(list)\r\n            }\r\n\r\n            const [task] = newListsArr[sourcePosition].cards.splice(oldPosition, 1)\r\n            newListsArr[destinationPosition].cards.splice(position, 0, task)\r\n            projectContext.setLists(newListsArr)\r\n\r\n            const response = await fetch(`/api/projects/lists/${projectContext.project._id}/${result.draggableId}/dnd-update`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": token\r\n                },\r\n                body: JSON.stringify({\r\n                    position,\r\n                    element: 'card',\r\n                    source,\r\n                    destination\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                history.push(\"/error\")\r\n            }\r\n        }\r\n\r\n        socket.emit('project-update', projectContext.project)\r\n        socket.emit('task-team-update', teamId)\r\n        setDndActive(false)\r\n    }\r\n\r\n    const addList = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (listName === \"\") {\r\n            return\r\n        }\r\n        const response = await fetch(`/api/projects/lists/${projectContext.project._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            setListName('')\r\n            socket.emit('project-update', projectContext.project)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div style={{ position: 'absolute' }}>\r\n                {isVisible &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                            <EditCard\r\n                                hideForm={() => setIsVisible(!isVisible)}\r\n                                initialCard={currCard}\r\n                                listId={currList}\r\n                                project={projectContext.project}\r\n                                teamId={teamId}\r\n                                setCurrCard={setCurrCard}\r\n                            />\r\n                        </Transparent >\r\n                    </div >\r\n                }\r\n                {isVisibleEditList &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setIsVisibleEditList(!isVisibleEditList)} >\r\n                            <EditList hideForm={() => setIsVisibleEditList(!isVisibleEditList)} list={currList} project={projectContext.project} />\r\n                        </Transparent >\r\n                    </div >\r\n                }\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId='droppable' direction='horizontal' type='droppableItem'>\r\n                        {(provided) => (\r\n                            <div className={styles['container-droppable']} ref={provided.innerRef} >\r\n                                {projectContext.lists\r\n                                    .filter(element => !(projectContext.hiddenLists.includes(element._id)))\r\n                                    .map((element, index) => {\r\n                                        return (\r\n                                            <Draggable key={element._id} draggableId={element._id} index={index}>\r\n                                                {(provided) => (\r\n                                                    <div className={styles.droppable} {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef} >\r\n                                                        <List\r\n                                                            list={element}\r\n                                                            project={projectContext.project}\r\n                                                            isAdmin={isAdmin}\r\n                                                            showEditList={() => {\r\n                                                                setCurrList(element)\r\n                                                                setIsVisibleEditList(!isVisibleEditList)\r\n                                                            }}\r\n                                                            showCurrentCard={() => {\r\n                                                                setCurrList(element._id)\r\n                                                                setIsVisible(!isVisible)\r\n                                                            }}\r\n                                                            setCurrCard={setCurrCard}\r\n                                                        />\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {provided.placeholder}\r\n                                {isAdmin &&\r\n                                    <div className={styles.list} >\r\n                                        {isActive ?\r\n                                            <form ref={listRef} className={styles.container} >\r\n                                                <input\r\n                                                    autoFocus\r\n                                                    className={styles.input}\r\n                                                    type={'text'}\r\n                                                    value={listName}\r\n                                                    onChange={e => setListName(e.target.value)}\r\n                                                />\r\n                                                <ButtonClean type='submit' className={styles.addlist} onClick={addList} title='+ Add List' />\r\n                                            </form> : <ButtonClean className={styles.addlist} onClick={() => setIsActive(!isActive)} title='+ Add List' />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                <ButtonGrey className={styles.button} title={'View Project'} onClick={() => setIsVisibleEdit(!IsVisibleEdit)} />\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n\r\n                {IsVisibleEdit &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setIsVisibleEdit(!IsVisibleEdit)} >\r\n                            <EditProject hideForm={() => setIsVisibleEdit(!IsVisibleEdit)} project={projectContext.project} members={members} />\r\n                        </Transparent >\r\n                    </div >\r\n                }\r\n\r\n                <img className={styles.pic} src={pic} alt=\"\" width=\"373\" height=\"312\" />\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\n\r\nconst ESCAPE_KEY_CODE = 27\r\nconst ENTER_KEY_CODE = 13\r\n\r\nconst ResponsiveTextArea = ({ value, setValue, onBlur, onKeyDown, onSubmit, className, toggleActive }) => {\r\n    const inputRef = useRef(null)\r\n    const [areaHeight, setAreaHeight] = useState(null)\r\n\r\n    const initValue = useMemo(() => value, [])\r\n\r\n    useEffect(() => {\r\n        if (inputRef.current) {\r\n            setAreaHeight(inputRef.current.scrollHeight + 2)\r\n\r\n        }\r\n    }, [inputRef.current && inputRef.current.scrollHeight])\r\n\r\n    const handleBlur = (event) => {\r\n        if (onBlur) {\r\n            return onBlur(event)\r\n        }\r\n\r\n        if (value === initValue) {\r\n            return\r\n        }\r\n\r\n        onSubmit(event)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (onKeyDown) {\r\n            return onKeyDown(event)\r\n        }\r\n\r\n        if (event.keyCode === ESCAPE_KEY_CODE && toggleActive) {\r\n            return toggleActive()\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            onSubmit(event)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            ref={inputRef}\r\n            className={className}\r\n            style={{ 'height': areaHeight }}\r\n            value={value}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={e => setValue(e.target.value)}\r\n            onBlur={handleBlur}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ResponsiveTextArea","import React, { useCallback, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketProvider';\r\n\r\nimport AttachmentsLink from '../attachmentsLink';\r\nimport ResponsiveTextArea from '../responsive-textarea';\r\n\r\nexport default function TaskName({ card, listId, project }) {\r\n\r\n\tconst dropdownRef = useRef(null)\r\n\tconst [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n\tconst [cardName, setCardName] = useState(card.name)\r\n\tconst history = useHistory()\r\n\tconst socket = useSocket()\r\n\tconst params = useParams()\r\n\tconst teamId = params.teamid\r\n\r\n\tconst editCardName = useCallback(async (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst cardId = card._id\r\n\r\n\t\tif (cardName === \"\") {\r\n\t\t\tconsole.log('return');\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst token = getCookie(\"x-auth-token\")\r\n\t\tconst response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Authorization\": token\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: cardName\r\n\t\t\t})\r\n\t\t})\r\n\t\tif (!response.ok) {\r\n\t\t\thistory.push(\"/error\")\r\n\t\t\treturn\r\n\t\t} else {\r\n\t\t\tsetIsActive(!isActive)\r\n\t\t\tsocket.emit('project-update', project)\r\n\t\t\tsocket.emit('task-team-update', teamId)\r\n\t\t}\r\n\r\n\t}, [history, cardName, isActive, setIsActive, card._id, listId, project, socket, teamId])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ isActive ?\r\n\t\t\t\t< div ref={dropdownRef} className={styles.nameContainer} onBlur={editCardName} >\r\n\t\t\t\t\t{/* <input className={styles.inputElementName} type={'text'} value={cardName} onChange={e => setCardName(e.target.value)} /> */}\r\n\t\t\t\t\t{/* <textarea\r\n\t\t\t\t\t\tclassName={styles.inputElementName}\r\n\t\t\t\t\t\tvalue={cardName}\r\n\t\t\t\t\t\tonChange={e => setCardName(e.target.value)}\r\n\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<ResponsiveTextArea\r\n\t\t\t\t\t\tvalue={cardName}\r\n\t\t\t\t\t\tsetValue={setCardName}\r\n\t\t\t\t\t\tclassName={styles.inputElementName}\r\n\t\t\t\t\t\tonSubmit={editCardName}\r\n\t\t\t\t\t\ttoggleActive={() => setIsActive(!isActive)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<span className={styles['attachments-container']}>\r\n\t\t\t\t\t\t{(card.attachments && card.attachments.length > 0 && !isActive) &&\r\n\t\t\t\t\t\t\t<AttachmentsLink\r\n\t\t\t\t\t\t\t\tcard={card}\r\n\t\t\t\t\t\t\t\tproject={project}\r\n\t\t\t\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className={styles.tableText} onClick={() => setIsActive(!isActive)}>\r\n\t\t\t\t\t\t{cardName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n\r\n\r\n}\r\n\r\n","import React, { useCallback, useMemo, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketProvider';\r\n\r\nexport default function TaskProgress(props) {\r\n\r\n    const today = useMemo(() => new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())), [])\r\n    const card = props.card\r\n    const [taskHistory, setTaskHistory] = useState(card.history)\r\n    const value = props.value\r\n    let taskprogress = ''\r\n    let token = value.split('/')\r\n\r\n    if (token.length > 1) {\r\n        taskprogress = token[0]\r\n    }\r\n\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardProgress, setCardProgress] = useState(taskprogress)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n    const editCardProgress = useCallback(async (event) => {\r\n        event.preventDefault()\r\n\r\n        // let data = props.value.split('/')\r\n        // let cardId = data[1]\r\n        // let listId = data[2]\r\n\r\n        const cardId = card._id\r\n        const listId = props.listId\r\n\r\n\r\n        if (!cardProgress || (cardProgress > 100) || (cardProgress < 0)) {\r\n            return\r\n        }\r\n\r\n        const cardProgressNum = Number(cardProgress)\r\n        const newCardProgress = Math.max(Math.min(cardProgressNum, 100), 0)\r\n        if (isNaN(cardProgressNum) || newCardProgress === Number(card.progress)) {\r\n            return\r\n        }\r\n\r\n        setCardProgress(newCardProgress)\r\n\r\n        const newTaskHistory = [...taskHistory, { event: `Progress ${cardProgress}%`, date: today }]\r\n        setTaskHistory(newTaskHistory)\r\n\r\n\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                progress: cardProgress,\r\n                history: newTaskHistory\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        }\r\n\r\n        setIsActive(!isActive)\r\n        socket.emit('project-update', props.project)\r\n        socket.emit('task-team-update', teamId)\r\n\r\n    }, [history, cardProgress, isActive, setIsActive, taskHistory, today, card._id, props.listId, props.project, socket, teamId])\r\n\r\n\r\n    function showTaskProgress(value) {\r\n\r\n        if (value && value !== 'null') {\r\n            return (\r\n                <div style={{\r\n                    backgroundColor: getBackGroundColor(value),\r\n                    padding: '5px',\r\n                    border: 'solid black 1px',\r\n                    borderRadius: '5px',\r\n                    minHeight: '2rem',\r\n                    width: '100%',\r\n                    textAlign: 'center',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }} > {value} %</div>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\r\n                + Add\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    function getBackGroundColor(value) {\r\n        let currColor = ''\r\n        switch (true) {\r\n            case (value === 100 || value === '100'):\r\n                currColor = '#0E8D27';\r\n                break;\r\n            case (value < 20):\r\n                currColor = '#EF2D2D'\r\n                break;\r\n            case (value < 100):\r\n                currColor = '#5E9DDC'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return currColor\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n                isActive ?\r\n                    <div ref={dropdownRef} className={styles.taskProgress} onBlur={editCardProgress}>\r\n                        <input\r\n                            className={styles.taskProgressButtonInput}\r\n                            style={{ backgroundColor: getBackGroundColor(cardProgress) }}\r\n                            type={'number'}\r\n                            value={cardProgress}\r\n                            // placeholder={'%'}\r\n                            onChange={e => setCardProgress(e.target.value)}\r\n                            min=\"0\" max=\"100\"\r\n                            autoFocus\r\n                        />\r\n                    </div >\r\n                    :\r\n                    // <div>\r\n                    // { \r\n                    //     (taskprogress!== null)?\r\n\r\n                    <div className={styles.taskProgress} onClick={() => setIsActive(!isActive)}>\r\n                        {/* <button className={styles.taskProgressButton}  */}\r\n                        {/* > */}\r\n                        {showTaskProgress(taskprogress)}\r\n                        {/* </button> */}\r\n                    </div >\r\n                // : <span>Add Progress</span>\r\n                // }\r\n                // </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport pen from '../../images/pen.svg'\r\nimport DatePicker from \"react-datepicker\"\r\nimport Transparent from \"../transparent\"\r\nimport EditCard from '../edit-card'\r\n\r\n\r\nexport default function TaskDueDate(props) {\r\n\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const [cardDueDate, setCardDueDate] = useState(props.cardDueDate)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const history = useHistory()\r\n    const socket = useSocket()\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n    const params = useParams()\r\n    const teamId = params.teamid\r\n\r\n\r\n    const editCardDueDate = useCallback(async (date) => {\r\n\r\n        let cardId = props.cardId\r\n        let listId = props.listId\r\n\r\n        if (cardDueDate === \"\" && date === '') {\r\n            console.log('return');\r\n            return\r\n        }\r\n        const token = getCookie(\"x-auth-token\")\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify({\r\n                dueDate: date\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            history.push(\"/error\")\r\n            return\r\n        } else {\r\n            setIsActive(!isActive)\r\n            socket.emit('project-update', props.project)\r\n            socket.emit('task-team-update', props.teamId)\r\n        }\r\n\r\n    }, [history, cardDueDate, setIsActive, isActive, props.cardId, props.listId, props.project, socket, props.teamId])\r\n\r\n    const changeCardDueDate = (date) => {\r\n        setCardDueDate(date)\r\n        editCardDueDate(date)\r\n    } \r\n\r\n    const value = props.value\r\n\r\n    return (\r\n        <span className={styles.dueDateField}>\r\n            <DatePicker\r\n                selected={value ? cardDueDate : today}\r\n                customInput={\r\n                    value\r\n                    ?   <div className={styles.dueDateFieldInput}>\r\n                            <span>{value}</span>\r\n                        </div>\r\n                    :   <span>Select date</span>\r\n                }\r\n                onChange={changeCardDueDate}\r\n                label=\"Go to date\"\r\n                onBlur={value ? () => setIsActive(!isActive) : null}\r\n                popperPlacement='bottom-end'\r\n                closeOnScroll={e => e.target === document.getElementsByClassName('rt-tbody')[0]}\r\n            />\r\n\r\n            { isVisible ?\r\n                < span >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditCard\r\n                            hideForm={() => setIsVisible(!isVisible)}\r\n                            initialCard={props.card}\r\n                            listId={props.listId}\r\n                            project={props.project}\r\n                            teamId={teamId}\r\n                        />\r\n                    </Transparent >\r\n                </span >\r\n                :\r\n                <span>\r\n                    <img \r\n                        className={styles.pen} \r\n                        src={pen} \r\n                        alt=\"...\" \r\n                        width=\"13\" \r\n                        height=\"13\" \r\n                        onClick={() => setIsVisible(true)} \r\n                    />\r\n                </span>\r\n            }\r\n        </span>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ENTER_KEY_CODE = 13\r\nconst ESCAPE_KEY_CODE = 27\r\n\r\nconst AddProjectElement = ({ handleSubmit, handleInputRemove, elementName, setElementName, placeholder }) => {\r\n    const inputRef = useRef(null)\r\n    const [nameHeight, setNameHeight] = useState(null)\r\n\r\n    const handleChange = (event) => {\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return\r\n        }\r\n\r\n        setElementName(event.target.value)\r\n        setNameHeight(inputRef.current.scrollHeight + 2)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.keyCode === ESCAPE_KEY_CODE) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        if (event.keyCode === ENTER_KEY_CODE) {\r\n            return handleSubmit()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            value={elementName}\r\n            ref={inputRef}\r\n            placeholder={placeholder}\r\n            className={styles.inputElementName}\r\n            style={{ 'height': nameHeight, width: '100%' }}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={handleChange}\r\n            onBlur={handleSubmit}\r\n            autoFocus\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddProjectElement","import React, { useState } from 'react'\r\nimport getCookie from '../../utils/cookie'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddProjectElement from './add-project-element'\r\n\r\nexport default function AddTask({ listId, project, handleInputRemove }) {\r\n    const [taskName, setTaskName] = useState('')\r\n    const socket = useSocket()\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async () => {\r\n        if (!taskName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        const token = getCookie('x-auth-token')\r\n        const response = await fetch(`/api/projects/lists/cards/${listId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({\r\n                name: taskName,\r\n                progress: ''\r\n            })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n            \r\n        // const updatedCard = await response.json()\r\n        socket.emit('project-update', project)\r\n\r\n        handleInputRemove()\r\n    }\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={taskName}\r\n            setElementName={setTaskName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new task name:'\r\n        />\r\n    )\r\n}","import React, { useCallback, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport getCookie from '../../utils/cookie'\r\nimport AddProjectElement from './add-project-element'\r\n\r\nexport default function AddList({ project, handleInputRemove }) {\r\n    const [listName, setListName] = useState('')\r\n    const socket = useSocket()\r\n    const history = useHistory()     \r\n\r\n\r\n    const handleSubmit = useCallback(async () => {\r\n        const projectId = project._id\r\n        if (!listName) {\r\n            return handleInputRemove()\r\n        }\r\n\r\n        const token = getCookie('x-auth-token')\r\n        const response = await fetch(`/api/projects/lists/${projectId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({ name: listName })\r\n        })\r\n\r\n        if (!response.ok) {\r\n            history.push('/error')\r\n            return\r\n        }\r\n\r\n        socket.emit('project-update', project)\r\n        handleInputRemove()\r\n            \r\n    }, [history, listName, project._id])\r\n\r\n    return (\r\n        <AddProjectElement\r\n            elementName={listName}\r\n            setElementName={setListName}\r\n            handleSubmit={handleSubmit}\r\n            handleInputRemove={handleInputRemove}\r\n            placeholder='Enter new list name:'\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport { checkDateEquality, compareDates, getDateWithOffset, formatDate } from '../../utils/date'\r\n\r\nconst CELL_COLORS = {\r\n    CREATED: '#0E8D27',\r\n    DUE_DATE: '#EF2D2D',\r\n    DELAYED: '#EF2D2D',\r\n    FINISHED: '#0E8D27',\r\n    PROGRESS: '#5E9DDC',\r\n    PROGRESS_OLD: '#A2A7B0',\r\n}\r\n\r\nconst assembleColumnData = (startDate) => {\r\n    const currentDate = new Date()\r\n    let cardData = null\r\n\r\n    const getWeekdayCellHtml = (message, color, messageColor = 'black') => {\r\n        const progressStyle = { \r\n            background: color, \r\n            color: messageColor,\r\n            width: '100%',\r\n            padding: '5px', \r\n            // fontSize: '14px',\r\n            border: '1px solid #363338',\r\n            borderRadius: '5px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        }\r\n\r\n        return (\r\n            <div className={styles.daylyProgress}>\r\n                <div style={progressStyle}>\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getWeekdayCellData = (dataString, numDaysOffset) => {\r\n        if (!dataString) {\r\n            return ''\r\n        }\r\n\r\n        // if cell is first to be displayed for this card, parse the incoming data\r\n        // else, it should already have been parsed so we can use it directly\r\n        if (numDaysOffset === 0) {\r\n            cardData = JSON.parse(dataString)\r\n        }\r\n\r\n        const { date, history, progress } = cardData\r\n        const cellDate = getDateWithOffset(startDate, numDaysOffset)\r\n        \r\n        const eventInCell = history && history.events[formatDate(cellDate, '%d/%m/%y')]\r\n\r\n        const dueDate = date ? new Date(date) : null\r\n        const isAfterDueDate = dueDate && compareDates(cellDate, dueDate) > 0\r\n        const isBeforeToday = compareDates(cellDate, currentDate) < 0\r\n        if (eventInCell) {\r\n            const [eventType, eventValue] = eventInCell.event.split(' ')\r\n\r\n            if (eventType === 'Created') {\r\n                return getWeekdayCellHtml(eventType, CELL_COLORS.CREATED)\r\n            }\r\n\r\n            if (eventType === 'Progress' && eventValue && eventValue === '100%') {\r\n                return getWeekdayCellHtml('Finished', CELL_COLORS.FINISHED)\r\n            }\r\n\r\n            if (isBeforeToday) {\r\n                return getWeekdayCellHtml(eventInCell.event, CELL_COLORS.PROGRESS_OLD)\r\n            }\r\n\r\n            const cellBackgroundColor = isAfterDueDate ? CELL_COLORS.DELAYED : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(eventInCell.event, cellBackgroundColor)\r\n        }\r\n\r\n        // if we get to here, we know that there are no new events on the day of the cell\r\n        const isMonday = numDaysOffset === 0\r\n        const eventsInWeek = history && history.hasEventsInWeek[formatDate(cellDate, '%w/%y')]\r\n        if (isMonday && progress && progress === 100 && eventsInWeek) {\r\n            // progress for task is 100% and no new events happen during the week\r\n            return getWeekdayCellHtml('Finished', CELL_COLORS.FINISHED)\r\n        }\r\n\r\n        if (dueDate) {\r\n            if (checkDateEquality(cellDate, dueDate)) {\r\n                if (compareDates(currentDate, dueDate) > 0) {\r\n                    // cell date is the task due date and current date is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return getWeekdayCellHtml('Due Date', CELL_COLORS.DUE_DATE)\r\n            }\r\n\r\n            if (compareDates(cellDate, dueDate) > 0) {\r\n                // cell date is after due date\r\n                if (isMonday && compareDates(currentDate, cellDate) > 0) {\r\n                    // cell is first shown column (usually Monday) and today is later than that\r\n                    return getWeekdayCellHtml('Delayed', CELL_COLORS.DELAYED)\r\n                }\r\n\r\n                return ''\r\n            }\r\n\r\n            let { finishedDate, startDate: taskStartDate } = history\r\n            finishedDate = finishedDate && new Date(finishedDate)\r\n            taskStartDate = taskStartDate && new Date(taskStartDate)\r\n\r\n            if (finishedDate && compareDates(cellDate, finishedDate) > 0) {\r\n                // task has finished in the past and cell date is later than date of finish\r\n                return ''\r\n            }\r\n\r\n            if (isMonday && taskStartDate && compareDates(taskStartDate, startDate) > 0) {\r\n                // task has started, but first displayed date is earlier than task start date\r\n                return ''\r\n            }\r\n\r\n            \r\n            // task is neither Finished, nor Delayed, but has a Due Date\r\n            // therefore, it's In Progress\r\n            const cellText = isMonday ? 'In Progress' : ''\r\n            const cellColor = isBeforeToday ? CELL_COLORS.PROGRESS_OLD : CELL_COLORS.PROGRESS\r\n            return getWeekdayCellHtml(cellText, cellColor)\r\n        }\r\n\r\n        return ''\r\n    }\r\n        \r\n    const getHeaderDateHtml = (numDaysOffset) => {\r\n        const headerDate = getDateWithOffset(startDate, numDaysOffset)\r\n        const color = checkDateEquality(currentDate, headerDate) ? \"#CFE2EC\" : ''\r\n\r\n        const displayedDate = formatDate(headerDate, '%d.%m')\r\n        const displayedDayOfWeek = formatDate(headerDate, '%A')\r\n\r\n        return (\r\n            <div style={{ backgroundColor: color, color: 'black' }}>\r\n                <div style={{ fontWeight: '600' }}>{displayedDayOfWeek}</div>\r\n                <div style={{ fontSize: '80%' }}>{displayedDate}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const wrapCellData = (cellData) => {\r\n        return (\r\n            <div style={{ \r\n                whiteSpace: 'normal', \r\n                overflowWrap: 'anywhere', \r\n                textAlign: 'left',\r\n                height: '100%'}}\r\n            >\r\n                {cellData}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        [\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Task</div>\r\n                },\r\n                accessor: \"task\",\r\n                minWidth: 350,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Progress</div>\r\n                },\r\n                accessor: \"progress\",\r\n                minWidth: 65,\r\n                maxWidth: 75,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {}  // needed to override default sorting\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Team</div>\r\n                },\r\n                accessor: \"assigned\",\r\n                minWidth: 75,\r\n                maxWidth: 80,\r\n                Cell: ({ value }) => wrapCellData(value),\r\n                getProps: (state, rowInfo, column) => ({ style: { overflow: 'visible' } }),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(0),\r\n                accessor: \"monday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 0),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(1),\r\n                accessor: \"tuesday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 1),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(2),\r\n                accessor: \"wednesday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 2),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(3),\r\n                accessor: \"thursday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 3),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(4),\r\n                accessor: \"friday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 4),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(5),\r\n                accessor: \"saturday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 5),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: getHeaderDateHtml(6),\r\n                accessor: \"sunday\",\r\n                minWidth: 95,\r\n                maxWidth: 125,\r\n                Cell: ({ value }) => getWeekdayCellData(value, 6),\r\n                sortable: false,\r\n                resizable: false\r\n            },\r\n            {\r\n                Header: () => {\r\n                    return <div className={styles.header}>Due Date</div>\r\n                },\r\n                accessor: \"dueDate\",\r\n                minWidth: 100,\r\n                maxWidth: 130,\r\n                sortable: true,\r\n                resizable: false,\r\n                sortMethod: () => {} // needed to override default sorting\r\n            }\r\n        ]\r\n    )\r\n}\r\n\r\n\r\nexport default assembleColumnData\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst FilterWrapper = ({ children, isVisible, legendContent }) => {\r\n    return (\r\n        <fieldset className={styles.container}>\r\n            <legend className={styles['legend-wrapper']}>\r\n                {isVisible && \r\n                    <blockquote className={styles.legend}>\r\n                        {legendContent}\r\n                    </blockquote>\r\n                }\r\n            </legend>\r\n            {children}\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default FilterWrapper","import React, { useContext, useMemo, useRef } from 'react'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonClean from '../button-clean'\r\nimport FilterWrapper from '../filter-wrapper'\r\nimport styles from './index.module.css'\r\n\r\nconst MembersFilter = ({ membersFilter, setMembersFilter, handleFilterClear, buttonStyle }) => {\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n    const { project } = useContext(ProjectContext)\r\n\r\n    const options = useMemo(() => {\r\n        return project.membersRoles.map(mr => ({\r\n            value: mr.memberId._id,\r\n            displayValue: mr.memberId.username\r\n        }))\r\n    }, [project.memberRoles])\r\n\r\n    const handleOptionClick = (optionValue, optionDisplay) => {\r\n        setMembersFilter(optionValue, optionDisplay)\r\n\r\n        setIsActive(false)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        handleFilterClear()\r\n        setIsActive(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks assigned to:'\r\n            isVisible={!!(membersFilter)}\r\n        >\r\n            <div className={styles.container}>\r\n                <div className={styles['btn-container']}>\r\n                    <ButtonClean\r\n                        className={isActive\r\n                            ? `${buttonStyle} ${membersFilter && styles['btn-partial']} ${styles['btn-clicked']}`\r\n                            : `${buttonStyle} ${membersFilter && styles['btn-partial']}`}\r\n                        onClick={() => setIsActive(!isActive)}\r\n                        title={(membersFilter && membersFilter.name) || 'Tasks Assigned To:'}\r\n                    />\r\n                    { membersFilter &&\r\n                        <ButtonClean\r\n                            className={`${buttonStyle} ${styles['btn-clear']}`}\r\n                            title='X'\r\n                            onClick={handleClear}\r\n                        />\r\n                    }\r\n                </div>\r\n                {isActive &&\r\n                    <div className={styles.options} ref={dropdownRef}>\r\n                        {/* <div\r\n                            key='clear options'\r\n                            className={`${styles.option} ${styles['option-blank']}`}\r\n                            onClick={handleOptionClear}\r\n                        >\r\n                            Leave blank\r\n                        </div> */}\r\n                        {options.map(option => {\r\n                            return (\r\n                                <div\r\n                                    key={option.value}\r\n                                    className={styles.option}\r\n                                    onClick={() => handleOptionClick(option.value, option.displayValue)}\r\n                                >\r\n                                    {option.displayValue}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </FilterWrapper>\r\n    )\r\n}\r\n\r\nexport default MembersFilter","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport DatePicker from 'react-datepicker'\r\nimport { formatDate } from '../../utils/date'\r\nimport FilterWrapper from '../filter-wrapper'\r\n\r\nconst DueDateFilter = ({ dueBefore, buttonStyle, onChange, handleFilterClear }) => {\r\n    return (\r\n        <FilterWrapper\r\n            legendContent='Tasks due before:'\r\n            isVisible={!!(dueBefore)}\r\n        >\r\n            <DatePicker\r\n                selected={dueBefore}\r\n                customInput={\r\n                    <button className={dueBefore \r\n                            ? `${buttonStyle} ${styles['filter-used']}`\r\n                            : `${buttonStyle} ${styles['filter-blank']}`}\r\n                    >\r\n                        {dueBefore ? formatDate(dueBefore, '%d-%m-%Y') : 'Due Before:'}\r\n                    </button>\r\n                }\r\n                showWeekNumbers={true}\r\n                onChange={onChange}\r\n            />\r\n            { dueBefore &&\r\n                <button \r\n                    className={`${buttonStyle} ${styles['filter-clear']}`}\r\n                    onClick={handleFilterClear}\r\n                >\r\n                    X\r\n                </button>\r\n            }\r\n        </FilterWrapper>\r\n    )\r\n}\r\n\r\nexport default DueDateFilter","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ToggleSwitch = ({ isActive, toggleStatus, label, containerStyle }) => {\r\n    return (\r\n        <div className={`${styles.container} ${containerStyle}`}>\r\n            <label>{label}</label>\r\n            <span \r\n                className={`${styles['switch-container']} ${isActive && styles['container-active']}`}\r\n                onClick={toggleStatus}\r\n            >\r\n                <span className={styles['state-circle']}></span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleSwitch","import React, { useRef } from 'react'\r\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick'\r\nimport ButtonClean from '../button-clean'\r\nimport ToggleSwitch from '../toggle-switch'\r\nimport styles from './index.module.css'\r\n\r\nconst ProgressFilters = ({ buttonStyle, filters, toggleFilter }) => {\r\n    const dropdownRef = useRef(null)\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef)\r\n\r\n    return (\r\n        <div class={styles.container}>\r\n            <ButtonClean \r\n                title='Filter By Progress:' \r\n                className={`${buttonStyle} ${styles['btn-progress']}`}\r\n                onClick={() => setIsActive(!isActive)}\r\n            />\r\n            { isActive &&\r\n            <div className={styles.dropdown} ref={dropdownRef}>\r\n                <ToggleSwitch \r\n                    isActive={filters.notStarted} \r\n                    label='Not Started' \r\n                    toggleStatus={() => toggleFilter('notStarted')}\r\n                    containerStyle={`${styles['progress-switch']} ${styles['progress-switch-top']}`} \r\n                />\r\n                <ToggleSwitch \r\n                    isActive={filters.inProgress} \r\n                    label='In Progress' \r\n                    toggleStatus={() => toggleFilter('inProgress')}\r\n                    containerStyle={styles['progress-switch']} \r\n                />\r\n                <ToggleSwitch \r\n                    isActive={filters.done} \r\n                    label='Done' \r\n                    toggleStatus={() => toggleFilter('done')}\r\n                    containerStyle={`${styles['progress-switch']} ${styles['progress-switch-bottom']}`} \r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressFilters","import React from 'react'\r\nimport styles from './index.module.css'\r\nimport MembersFilter from '../filter-members'\r\nimport DueDateFilter from '../filter-due-date'\r\nimport ProgressFilters from '../filter-progress'\r\n\r\nconst TaskFilters = ({ filter, setFilter }) => {\r\n    const toggleProgressFilter = (filterName) => {\r\n        const currentFilterValue = filter.progress[[filterName]]\r\n\r\n        setFilter({ ...filter, progress: { ...filter.progress, [filterName]: !currentFilterValue } })\r\n    }\r\n\r\n    return (\r\n        <div className={styles['filters-container']}>\r\n            <ProgressFilters \r\n                buttonStyle={styles.filter} \r\n                filters={filter.progress} \r\n                toggleFilter={toggleProgressFilter} \r\n            />\r\n            <MembersFilter\r\n                membersFilter={filter.member}\r\n                setMembersFilter={(id, name) => setFilter({ ...filter, member: { id, name } })}\r\n                handleFilterClear={() => setFilter({ ...filter, member: null })}\r\n                buttonStyle={styles.filter}\r\n            />\r\n            <DueDateFilter\r\n                dueBefore={filter.dueBefore}\r\n                buttonStyle={styles.filter}\r\n                onChange={date => setFilter({ ...filter, dueBefore: date })}\r\n                handleFilterClear={() => setFilter({ ...filter, dueBefore: null })}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskFilters","export default __webpack_public_path__ + \"static/media/previous-day.e04a7658.svg\";","export default __webpack_public_path__ + \"static/media/next-day.2584bb08.svg\";","import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport styles from './index.module.css'\r\nimport { getMonday } from '../../utils/date'\r\nimport previous from '../../images/project-list/previous-day.svg'\r\nimport next from '../../images/project-list/next-day.svg'\r\n\r\nconst TableDateNavigation = ({ startDate, changeStartDate, setStartDate }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <DatePicker\r\n                selected={startDate}\r\n                customInput={\r\n                    <button className={styles.navigateButtons}>\r\n                        Choose Week\r\n                    </button>\r\n                }\r\n                // className={styles.reactDatepicker}\r\n                showWeekNumbers\r\n                onChange={date => setStartDate(getMonday(date))}\r\n            />\r\n            <button className={styles.navigateButtons} onClick={() => changeStartDate(-7)}>\r\n                Previous week\r\n            </button>\r\n\r\n            <div className={styles.picContainer} onClick={() => changeStartDate(-1)}>\r\n                <img\r\n                    className={styles.buttonPreviousDay}\r\n                    src={previous} alt=\"...\"\r\n                />\r\n                <div className={styles.centeredText}>Previous day</div>\r\n            </div>\r\n\r\n            <div className={styles.picContainer} onClick={() => changeStartDate(1)}>\r\n                <img\r\n                    className={styles.buttonPreviousDay}\r\n                    src={next} alt=\"...\"\r\n                />\r\n                <div className={styles.centeredText}>Next day</div>\r\n            </div>\r\n\r\n            <button\r\n                className={styles.navigateButtons}\r\n                onClick={() => changeStartDate(7)}\r\n            >\r\n                Next week\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDateNavigation","import { compareDates, formatDate } from \"../../utils/date\"\r\n\r\nconst sortByTask = (cardOne, cardTwo) => cardOne.name.localeCompare(cardTwo.name)\r\n\r\nconst sortByProgress = (cardOne, cardTwo) => {\r\n    const firstValue = cardOne.progress || 0\r\n    const secondValue = cardTwo.progress || 0\r\n\r\n    if (firstValue > secondValue) {\r\n        return 1\r\n    } else if (firstValue < secondValue) {\r\n        return -1\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nconst sortByDueDate = (cardOne, cardTwo) => {\r\n    const parsedDateOne = cardOne.dueDate ? new Date(cardOne.dueDate) : new Date('1970-01-01')\r\n    const parsedDateTwo = cardTwo.dueDate ? new Date(cardTwo.dueDate) : new Date('1970-01-01')\r\n\r\n    return compareDates(parsedDateOne, parsedDateTwo)\r\n}\r\n\r\nconst getCardsSortMethod = (columnName, isDescending) => {\r\n    let sortingFunc = null\r\n    switch(columnName) {\r\n        case 'task':\r\n            sortingFunc = sortByTask\r\n            break\r\n        case 'progress':\r\n            sortingFunc = sortByProgress\r\n            break\r\n        case 'dueDate':\r\n            sortingFunc = sortByDueDate\r\n            break\r\n        default:\r\n            return null\r\n    }\r\n\r\n    return (firstValue, secondValue) => {\r\n        const sortingEvaluation = sortingFunc(firstValue, secondValue)\r\n        return isDescending ? -sortingEvaluation : sortingEvaluation\r\n    }\r\n}\r\n\r\nconst createTableEntry = (entryData) => {\r\n    return {\r\n        task: entryData.task || '',\r\n        progress: entryData.progress || '',\r\n        assigned: entryData.assigned || '',\r\n        monday: entryData.monday || '',\r\n        tuesday: entryData.tuesday || '',\r\n        wednesday: entryData.wednesday || '',\r\n        thursday: entryData.thursday || '',\r\n        friday: entryData.friday || '',\r\n        saturday: entryData.saturday || '',\r\n        sunday: entryData.sunday || '',\r\n        dueDate: entryData.dueDate || ''\r\n    }\r\n}\r\n\r\nconst parseCardHistory = (taskHistory) => {\r\n    if (!taskHistory) {\r\n        return null\r\n    }\r\n\r\n    const historyByDate = { events: {}, hasEventsInWeek: {} }\r\n    for (let element of taskHistory) {\r\n        const elementDate = new Date(element.date)\r\n\r\n        if (element.event === 'Created') {\r\n            historyByDate.startDate = elementDate\r\n        }\r\n\r\n        historyByDate.events[formatDate(elementDate, '%d/%m/%y')] = element\r\n        historyByDate.hasEventsInWeek[formatDate(elementDate, '%w/%y')] = true\r\n    }\r\n\r\n    const lastHistoryEvent = taskHistory[taskHistory.length - 1]\r\n    if (lastHistoryEvent && lastHistoryEvent.event === 'Progress 100%') {\r\n        historyByDate.finishedDate = new Date(lastHistoryEvent.date)\r\n    }\r\n    \r\n    return historyByDate\r\n\r\n    // const historyArr = []\r\n    // for (let histIndex = 0; histIndex < taskHistory.length; histIndex++) {\r\n    //     const currElement = taskHistory[histIndex]\r\n    //     const nextElement = taskHistory[histIndex + 1]\r\n        \r\n    //     const currEventType = currElement.event.split(' ')[0]\r\n        \r\n    //     let shouldIncludeEvent = true\r\n    //     if (nextElement) {\r\n    //         const nextEventType = nextElement.event.split(' ')[0]\r\n\r\n    //         if (nextEventType === currEventType && \r\n    //             currElement.date === nextElement.date) {\r\n    //             shouldIncludeEvent = false\r\n    //         }\r\n    //     }\r\n\r\n    //     if (shouldIncludeEvent) {\r\n    //         historyArr.push({\r\n    //             event: currElement.event,\r\n    //             date: currElement.date\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // return historyArr\r\n}\r\n\r\nconst applyCardFilters = (card, filters) => {\r\n    let isCardFilterPassed = false\r\n    if (filters.progress.notStarted && \r\n        (card.progress === 0 || !card.progress)) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    if (filters.progress.inProgress && card.progress > 0 && card.progress < 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n    \r\n    if (filters.progress.done && card.progress === 100) {\r\n        isCardFilterPassed = true\r\n    }\r\n\r\n    const isUserFilterPassed = filters.member \r\n                    ? card.members.some(m => m._id === filters.member.id) \r\n                    : true\r\n\r\n    const isDueDateFilterPassed = filters.dueBefore\r\n                    ? card.dueDate && compareDates(new Date(card.dueDate), filters.dueBefore) <= 0\r\n                    : true\r\n\r\n    return isCardFilterPassed && isUserFilterPassed && isDueDateFilterPassed\r\n}\r\n\r\nexport {\r\n    createTableEntry,\r\n    parseCardHistory,\r\n    applyCardFilters,\r\n    getCardsSortMethod\r\n}","import React, { useCallback, useEffect, useState, useContext } from \"react\"\r\nimport styles from './index.module.css'\r\nimport ReactTable from \"react-table\"\r\nimport \"react-table/react-table.css\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport TaskName from '../calendar-data/task-name'\r\nimport TaskProgress from \"../calendar-data/task-progress\"\r\nimport TaskDueDate from \"../calendar-data/task-dueDate\"\r\nimport AddTask from \"../calendar-data/add-task\"\r\nimport AddList from \"../calendar-data/add-list\"\r\nimport ProjectContext from \"../../contexts/ProjectContext\"\r\nimport assembleColumnData from \"../calendar-data/column-data\"\r\nimport Transparent from \"../transparent\"\r\nimport EditList from \"../edit-list\"\r\nimport UserContext from '../../contexts/UserContext'\r\nimport TaskFilters from '../calendar-data/task-filters'\r\nimport MembersList from '../members-list'\r\nimport TableDateNavigation from '../table-date-navigation'\r\nimport ButtonClean from '../button-clean'\r\nimport { formatDate, getDateWithOffset, getMonday } from '../../utils/date'\r\nimport { createTableEntry, parseCardHistory, applyCardFilters, getCardsSortMethod } from './utils'\r\n\r\nconst TableDndApp = ({ project }) => {\r\n    const projectContext = useContext(ProjectContext)\r\n    const userContext = useContext(UserContext)\r\n    const params = useParams()\r\n    const [startDate, setStartDate] = useState(getMonday())\r\n    const [tableData, setTableData] = useState([])\r\n    const [currList, setCurrList] = useState('')\r\n    const [newEntries, setNewEntries] = useState(null)\r\n    const [sortCriteria, setSortCriteria] = useState({ columnName: null, isDescending: false })\r\n    const [filter, setFilter] = useState({\r\n        progress: { notStarted: true, inProgress: true, done: true },\r\n        member: null,\r\n        dueBefore: null,\r\n        isUsed: false\r\n    })\r\n\r\n    const onListClick = useCallback((list) => {\r\n        const member = projectContext.project.membersRoles.find(m => \r\n                            m.memberId._id === userContext.user.id)                    \r\n\r\n        if (member && member.admin) {\r\n            setCurrList(list)\r\n        }\r\n\r\n        projectContext.setLists(projectContext.project.lists)\r\n    }, [projectContext, userContext.user.id])\r\n\r\n    const updateTableData = useCallback(() => {\r\n        const data = []\r\n        const lists = project.lists\r\n        projectContext.setLists(lists)\r\n        const cardsSortMethod = getCardsSortMethod(sortCriteria.columnName, sortCriteria.isDescending)\r\n\r\n        lists.forEach((list, histIndex) => {\r\n            if (projectContext.hiddenLists.includes(list._id)) {\r\n                return\r\n            }\r\n\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <div \r\n                        key={histIndex} \r\n                        className={styles.listNameContainer} \r\n                        style={{ background: list.color || '#A6A48E' }}\r\n                        onClick={() => onListClick(list)}\r\n                    >\r\n                        <span className={styles.listNameText} >\r\n                            {list.name}\r\n                        </span>\r\n                    </div>\r\n                ),\r\n                dueDate: (\r\n                    <div onClick={() => setNewEntries({ newTask: list._id })} className={styles.addTask}>\r\n                        {/* <AddTask listId={list._id} project={project} /> */}\r\n                        + Add Task\r\n                    </div>\r\n                )\r\n            }))\r\n\r\n            let listCards = list.cards.filter(card => applyCardFilters(card, filter))\r\n            if (sortCriteria.columnName) {\r\n                listCards = listCards.sort(cardsSortMethod)\r\n            }\r\n\r\n            listCards.forEach(card => {\r\n                const cardDueDate = card.dueDate ? new Date(card.dueDate) : ''\r\n                // const historyArr2 = parseCardHistory(card.history)\r\n                const historyByDate = parseCardHistory(card.history)\r\n\r\n                const cellData = {\r\n                    date: cardDueDate,\r\n                    // history: historyArr2,\r\n                    history: historyByDate,\r\n                    progress: card.progress\r\n                }\r\n\r\n                const weekdayData = JSON.stringify(cellData)\r\n\r\n                data.push(createTableEntry({\r\n                    task:\r\n                        (\r\n                            <TaskName\r\n                                // value={card.name + '/' + card._id + '/' + list._id}\r\n                                card={card} listId={list._id}\r\n                                project={project} />\r\n                        ),\r\n                    progress:\r\n                        (\r\n                            <TaskProgress\r\n                                value={card.progress + '/' + card._id + '/' + list._id}\r\n                                listId={list._id}\r\n                                project={project} card={card} />\r\n                        ),\r\n                    assigned:\r\n                        (\r\n                            <MembersList\r\n                                members={card.members}\r\n                                maxLength={2}\r\n                            />\r\n                        ),\r\n                    monday: weekdayData,\r\n                    tuesday: weekdayData,\r\n                    wednesday: weekdayData,\r\n                    thursday: weekdayData,\r\n                    friday: weekdayData,\r\n                    saturday: weekdayData,\r\n                    sunday: weekdayData,\r\n                    dueDate: (\r\n                        <TaskDueDate\r\n                            value={cardDueDate ? formatDate(cardDueDate, '%d-%m-%Y') : ''}\r\n                            cardDueDate={cardDueDate}\r\n                            cardId={card._id}\r\n                            listId={list._id}\r\n                            project={project}\r\n                            card={card}\r\n                            teamId={params.teamid}\r\n                        />\r\n                    )\r\n                }))\r\n            })\r\n\r\n            if (newEntries && newEntries.newTask && newEntries.newTask === list._id) {\r\n                data.push(createTableEntry({\r\n                    task: (\r\n                        <AddTask\r\n                            listId={list._id}\r\n                            project={project}\r\n                            handleInputRemove={() => setNewEntries(null)}\r\n                        />\r\n                    )\r\n                }))\r\n            }\r\n        })\r\n\r\n        if (newEntries && newEntries.newList) {\r\n            data.push(createTableEntry({\r\n                task: (\r\n                    <AddList project={project} handleInputRemove={() => setNewEntries(null)} />\r\n                )\r\n            }))\r\n        }\r\n\r\n        /* \r\n        Rows need to be reversed if descending sort as by default ReactTable simply reverses \r\n        the data if descending sort is selected, expecting the data to already be sorted in \r\n        ascending order. However, this puts the list names below their respective tasks, \r\n        so we need to do this terrible hack of pre-reversing the data in that case.\r\n        Possible solution to avoid this \"hack\" is to switch to subcomponents in ReactTable\r\n        and make each list a subtable. Then the sort should act per-subcomponent \r\n        */\r\n        setTableData(sortCriteria.isDescending ? data.reverse() : data)\r\n    }, [filter, onListClick, params.teamid, projectContext, project, newEntries, sortCriteria.columnName, sortCriteria.isDescending])\r\n\r\n    useEffect(() => {\r\n        updateTableData()\r\n    }, [filter, project, projectContext.hiddenLists, sortCriteria, updateTableData])\r\n\r\n    const changeStartDate = (dayDiff) => {\r\n        const newStartDate = getDateWithOffset(startDate, dayDiff)\r\n        setStartDate(newStartDate)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageContainer}>\r\n            { currList &&\r\n                    < div >\r\n                        <Transparent hideForm={() => setCurrList('')} >\r\n                            <EditList \r\n                                hideForm={() => setCurrList('')} \r\n                                list={currList}\r\n                                 project={project} \r\n                            />\r\n                        </Transparent >\r\n                    </div >\r\n            }\r\n            <div className={styles.buttoDiv}>\r\n                <TaskFilters filter={filter} setFilter={setFilter} />\r\n                <TableDateNavigation \r\n                    startDate={startDate}\r\n                    setStartDate={setStartDate}\r\n                    changeStartDate={changeStartDate}\r\n                />\r\n                {/* <AddList project={project} /> */}\r\n                <ButtonClean   \r\n                    className={styles.addListButton} \r\n                    onClick={() => setNewEntries({ newList: true })} \r\n                    title='+ Add List'\r\n                />\r\n            </div>\r\n            <div>\r\n                {/* <DragDropContext onDragEnd={handleDragEnd} > */}\r\n                <ReactTable\r\n                    // TrComponent={DragTrComponent}\r\n                    // TbodyComponent={DropTbodyComponent}\r\n                    // getTrProps={getTrProps}\r\n                    data={tableData}\r\n                    columns={\r\n                        assembleColumnData(startDate)\r\n                    }\r\n                    defaultPageSize={10}\r\n                    pageSize={tableData.length}\r\n                    showPagination={false}\r\n                    background={\r\n                        'white'\r\n                    }\r\n                    className={`${styles.reactTable} -highlight`}\r\n                    getTbodyProps={() => ({ className: styles.reactTableBody })}\r\n                    getTrGroupProps={() => ({ className: styles.reactTableTrGroup })}\r\n                    onSortedChange={(sortInfo) => {\r\n                        const { id: columnName, desc: isDescending } = sortInfo[0]\r\n                        setSortCriteria({ columnName, isDescending })\r\n                    }}\r\n                />\r\n\r\n                {/* </DragDropContext> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDndApp\r\n\r\n\r\n","import React, { useCallback, useEffect, useContext } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport PageLayout from '../../components/page-layout'\r\nimport { useSocket } from '../../contexts/SocketProvider'\r\nimport styles from './index.module.css'\r\nimport TableDndApp from '../../components/calendar-table'\r\nimport Loader from 'react-loader-spinner'\r\nimport ProjectContext from '../../contexts/ProjectContext'\r\n\r\n\r\nexport default function ProjectList() {\r\n    const params = useParams()\r\n\r\n    const socket = useSocket()\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    const projectUpdate = useCallback((project) => {\r\n        projectContext.setProject(project)\r\n    }, [projectContext])\r\n\r\n    useEffect(() => {\r\n        const id = params.projectid\r\n\r\n        if (socket == null) return\r\n\r\n        socket.on('project-updated', projectUpdate)\r\n\r\n        socket.emit('project-join', id)\r\n        return () => socket.off('project-updated')\r\n    }, [socket, projectUpdate, params.projectid])\r\n\r\n    if (!projectContext.project || projectContext.project._id !== params.projectid) {\r\n        return (\r\n            <PageLayout>\r\n                <Loader\r\n                    type=\"TailSpin\"\r\n                    color=\"#363338\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </PageLayout>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PageLayout contentClassName={styles['layout-container']}>\r\n            <div className={styles.calendarPageContainer}>\r\n                <div>\r\n                    <div className={styles['calendar-container']}>\r\n                        <TableDndApp project={projectContext.project} />\r\n                        {/* <TableDndApp2 filter={filter} /> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport ProjectContext from './ProjectContext'\r\n\r\nfunction ProjectProvider({ children }) {\r\n  const [lists, setLists] = useState([])\r\n  const [hiddenLists, setHiddenLists] = useState([])\r\n  const [project, setProject] = useState(null)\r\n  const [projectName, setProjectName] = useState('Select')\r\n  \r\n  return (\r\n    <ProjectContext.Provider value={ { lists, setLists, hiddenLists, setHiddenLists, project, setProject, projectName, setProjectName } }>\r\n      {children}\r\n    </ProjectContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ProjectProvider\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport getCookie from '../utils/cookie'\r\nimport userObject from '../utils/userObject'\r\nimport { useSocket } from './SocketProvider'\r\nimport TeamContext from './TeamContext'\r\nimport UserContext from './UserContext'\r\n\r\nfunction TeamProvider({ children }) {\r\n  const [teams, setTeams] = useState([])\r\n  const [selectedTeam, setSelectedTeam] = useState('Select')\r\n  const [currentProjects, setCurrentProjects] = useState([])\r\n  const userContext = useContext(UserContext)\r\n  const socket = useSocket()\r\n\r\n  function getCurrentProjects(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setCurrentProjects(current.projects)\r\n    }\r\n  }\r\n\r\n\r\n  function updateSelectedTeam(teamId) {\r\n    const current = teams.find(t => t._id === teamId)\r\n    if (current) {\r\n      setSelectedTeam(current.name)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTeams(userContext.user.teams)\r\n  }, [userContext.user.teams])\r\n\r\n  const teamUpdate = useCallback(async () => {\r\n    const token = getCookie(\"x-auth-token\")\r\n    const promise = await fetch(\"/api/teams\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token\r\n      }\r\n    })\r\n\r\n    const response = await promise.json()\r\n\r\n    setTeams(response.teams)\r\n\r\n    const user =  userObject(response)\r\n    userContext.logIn(user)\r\n\r\n  }, [userContext])\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return\r\n    socket.on('team-updated', teamUpdate)\r\n    return () => socket.off('team-updated')\r\n  }, [socket, teamUpdate])\r\n\r\n  return (\r\n    <TeamContext.Provider value={{ teams, setTeams, selectedTeam, setSelectedTeam, currentProjects, setCurrentProjects, getCurrentProjects, updateSelectedTeam }}>\r\n      {children}\r\n    </TeamContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TeamProvider\r\n","import React, { useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport ButtonGrey from '../button-grey'\r\nimport EditProject from '../edit-project'\r\nimport Transparent from '../transparent'\r\nimport styles from './index.module.css'\r\n\r\nexport default function Project(props) {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const params = useParams()\r\n\r\n    return (\r\n        <div>\r\n            {isVisible ?\r\n                < div >\r\n                    <Transparent hideForm={() => setIsVisible(!isVisible)} >\r\n                        <EditProject hideForm={() => setIsVisible(!isVisible)} project={props.project} />\r\n                    </Transparent >\r\n                </div > : null\r\n            }\r\n            <div className={styles.container}>\r\n                <div className={styles['top-side']}>\r\n                    <Link to={`/project-board/${params.teamid}/${props.project._id}`} className={styles.key}>Name: <span className={styles.value}>{props.project.name}</span></Link>\r\n\r\n                </div >\r\n                <div className={styles['lower-side']}>\r\n                    <div className={styles['key-lower']}>\r\n                        Creator: <span className={styles.value}>{props.project.author.username}</span>\r\n                    </div>\r\n                    <div className={styles.info} >\r\n                        <ButtonGrey className={styles['info-btn']} title={'Info'} onClick={() => setIsVisible(!isVisible)} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pic1.5bdefb31.svg\";","import React, { useState, useContext, useEffect } from \"react\"\r\nimport styles from './index.module.css'\r\nimport PageLayout from \"../../components/page-layout\"\r\nimport Project from '../../components/project'\r\nimport Transparent from \"../../components/transparent\"\r\nimport CreateProject from '../../components/create-project'\r\nimport { useParams } from \"react-router-dom\"\r\nimport EditTeam from \"../../components/edit-team\"\r\nimport TeamMembers from \"../../components/team-members\"\r\nimport pic1 from '../../images/team-page/pic1.svg'\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport ButtonGrey from \"../../components/button-grey\"\r\nimport useUpdateUserLastTeam from \"../../utils/useUpdateUserLastTeam\"\r\n\r\nconst TeamPage = () => {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [showOldProjects, setShowOldProjects] = useState(false)\r\n    const [currTeam, setCurrTeam] = useState({})\r\n    const [projects, setProjects] = useState([])\r\n    const [members, setMembers] = useState([])\r\n    const [invited, setInvited] = useState([])\r\n    const params = useParams()\r\n    const userContext = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        userContext.user.teams.forEach(t => {\r\n            if (t._id === params.teamid) {\r\n                setCurrTeam(t)\r\n                setProjects(t.projects)\r\n                setMembers(t.members)\r\n                setInvited(t.requests)\r\n            }\r\n        })\r\n        console.log('useefect');\r\n    }, [userContext, params])\r\n    \r\n    useUpdateUserLastTeam(params.teamid)\r\n\r\n    return (\r\n        <PageLayout>\r\n            <div className={styles.container}>\r\n                {\r\n                    isVisible &&\r\n                    <Transparent hideForm={() => setIsVisible(false)}>\r\n                        <CreateProject />\r\n                    </Transparent>\r\n                }\r\n                {\r\n                    showForm &&\r\n                    <Transparent hideForm={() => setShowForm(false)}>\r\n                        <EditTeam currTeam={currTeam} hideForm={() => { setShowForm(false) }} />\r\n                    </Transparent>\r\n                }\r\n                <div className={styles.pic1}>\r\n                    <img className={styles.picture} src={pic1} alt=\"\" />\r\n                </div>\r\n\r\n\r\n                <div className={styles['left-side']}>\r\n                    { !showOldProjects?\r\n                    <div>\r\n                        <div className={styles.title}>\r\n                        Current Projects:\r\n                        </div>\r\n                        {projects.filter(p => (p.isFinished === false)||(p.isFinished === undefined))\r\n                        .reverse().map((project, index) => {\r\n                            return (\r\n                                <Project key={project._id} index={index} project={project} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className={styles.title}>\r\n                        Old Projects:\r\n                        </div>\r\n                        {projects.filter(p => p.isFinished === true)\r\n                        .reverse().map((project, index) => {\r\n                            return (\r\n                                <Project key={project._id} index={index} project={project} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    }\r\n\r\n                </div>\r\n\r\n                <div className={styles['right-side']}>\r\n                    <div className={styles['right-side-team']}>\r\n                        <TeamMembers\r\n                            members={members} invited={invited}\r\n                        />\r\n                        <div className={styles['button-div']}>\r\n                        <ButtonGrey className={styles['new-project-button']} title={'View Team'} onClick={() => setShowForm(true)} />\r\n                        <ButtonGrey className={styles['new-project-button']} title={'New Project'} onClick={() => setIsVisible(true)} />\r\n                        <ButtonGrey className={styles['new-project-button']}\r\n                        title={!showOldProjects? \r\n                            'Old Projects': 'Current Projects'} \r\n                        onClick={() => setShowOldProjects(!showOldProjects)} />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default TeamPage;","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Button = ( { title, onClick, className } ) => {\r\n    return (\r\n    <button onClick={onClick} className={`${styles.button} ${className}`}>{title}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport styles from './index.module.css'\r\nimport Button from \"../../components/button\"\r\nimport UserContext from \"../../contexts/UserContext\"\r\nimport authenticate from \"../../utils/authenticate\"\r\nimport logo from '../../images/logo.svg'\r\n\r\n\r\nconst ConfirmationPage = () => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [loading, setLoading] = useState(true)\r\n    const [success, setSuccess] = useState(false)\r\n    const userContext = useContext(UserContext)\r\n    const firstRegistration = userContext.user.newPasswordConfirmed\r\n\r\n\r\n\r\n    const confirmToken = useCallback(async () => {\r\n        const token = params.token\r\n        if (params.token === 'not-confirmed') {\r\n            return\r\n        }\r\n\r\n        if (userContext.user.confirmed && userContext.user.newPasswordConfirmed) {\r\n            return\r\n        }\r\n\r\n        await authenticate('/api/user/confirmation', 'POST', {\r\n            token\r\n        }, (user) => {\r\n            userContext.logIn(user)\r\n            setLoading(false)\r\n            setSuccess(true)\r\n        }, (response) => {\r\n            console.log(\"Error\", response)\r\n        })\r\n\r\n    }, [params.token, userContext])\r\n\r\n    useEffect(() => {\r\n        confirmToken()\r\n    }, [confirmToken])\r\n\r\n\r\n    if (params.token === 'not-confirmed') {\r\n        return (\r\n            <div>\r\n                {\r\n                    firstRegistration ?\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}> Confirm your email address</div >\r\n                            <div className={styles.text}>Please check your email to confirm your account</div>\r\n                            <div className={styles.text}>Once confirmed, this email address will be uniquely associated with your Smart Manager  account.</div>\r\n                            \r\n                        </div>\r\n                        :\r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}> Confirm your new password</div >\r\n                            <div className={styles.text}>Please check your email to confirm your new password</div>\r\n                            <div className={styles.text}>Once confirmed, your new password will be active for your Smart Manager  account.</div>\r\n                            \r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && <div>Validating your email.</div>}\r\n            {!loading && success && <div>\r\n                \r\n                        <div className={styles.container}>\r\n                            <div className={styles.logo}>\r\n                                <img src={logo} alt=\"logo\" width='194' height='142' />\r\n                            </div>\r\n                            <div className={styles.title}> Thank you</div >\r\n                            <div className={styles.text}>You can continue to Smart Manager now</div>\r\n                            <Button title='Proceed' className={styles['proceed-button']} onClick={() => history.push('/')} />\r\n                            <div className={styles.cheers}> Cheers,</div >\r\n                            <div className={styles.team}>The Smart Manager Team</div>\r\n                        </div>\r\n                       \r\n\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage;","import React, { useContext } from \"react\"\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\"\r\n\r\nimport Home from \"./pages/home\"\r\nimport WelcomePage from \"./pages/welcome\"\r\nimport ProfilePage from \"./pages/profile\"\r\nimport InboxPage from \"./pages/inbox\"\r\nimport MyTasksPage from \"./pages/my-tasks\"\r\nimport ErrorPage from \"./pages/error\"\r\nimport UserContext from \"./contexts/UserContext\"\r\nimport ProjectBoard from \"./pages/project-board\"\r\nimport ProjectList from \"./pages/project-list\"\r\nimport { SocketProvider } from \"./contexts/SocketProvider\"\r\nimport ProjectProvider from \"./contexts/ProjectProvider\"\r\nimport TeamProvider from \"./contexts/TeamProvider\"\r\nimport TeamPage from \"./pages/team\"\r\nimport ConfirmationPage from \"./pages/confirmation\"\r\nimport {CloudinaryContext} from 'cloudinary-react'\r\n\r\nconst Navigation = () => {\r\n\r\n    const context = useContext(UserContext)\r\n    const loggedIn = context.user.loggedIn\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <SocketProvider user={context.user}>\r\n                <ProjectProvider>\r\n                    <TeamProvider>\r\n                        <CloudinaryContext cloudName={process.env.REACT_APP_CLOUD_NAME}>\r\n                            <Switch>\r\n                                <Route path=\"/confirmation/:token\"><ConfirmationPage /></Route>\r\n                                {((loggedIn && !context.user.confirmed)\r\n                                    || (loggedIn && !context.user.newPasswordConfirmed)\r\n                                ) && <Redirect to=\"/confirmation/not-confirmed\" />}\r\n                                <Route exact path=\"/\" >\r\n                                    {loggedIn ? (<Home />) : (<WelcomePage />)}\r\n                                </Route>\r\n                                <Route path=\"/profile/:userid\">\r\n                                    {loggedIn ? (<ProfilePage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/inbox/:userid\">\r\n                                    {loggedIn ? (<InboxPage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/my-tasks/:userid\">\r\n                                    {loggedIn ? (<MyTasksPage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/project-board/:teamid/:projectid\">\r\n                                    {loggedIn ? (<ProjectBoard />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/project-list/:teamid/:projectid\">\r\n                                    {loggedIn ? (<ProjectList />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route path=\"/team/:teamid\">\r\n                                    {loggedIn ? (<TeamPage />) : (<Redirect to=\"/\" />)}\r\n                                </Route>\r\n                                <Route component={ErrorPage} />\r\n                            </Switch>\r\n                        </CloudinaryContext>\r\n                    </TeamProvider>\r\n                </ProjectProvider>\r\n            </SocketProvider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css';\r\nimport Navigation from \"./navigation\"\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App>\r\n      <Navigation />\r\n    </App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"searchField_input__rY1O8\",\"search-fields\":\"searchField_search-fields__2HSb9\",\"search-button\":\"searchField_search-button__2ijS0\",\"search-icon\":\"searchField_search-icon__3xqep\",\"new-line\":\"searchField_new-line__QJzuA\",\"small\":\"searchField_small__10HLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pic\":\"project-board_pic__3YRcb\",\"container-droppable\":\"project-board_container-droppable__20aMa\",\"droppable\":\"project-board_droppable__2QSoZ\",\"list\":\"project-board_list__jeXIy\",\"addlist\":\"project-board_addlist__-i_Vu\",\"input\":\"project-board_input__ljKcM\",\"container\":\"project-board_container__1yKm3\",\"navigateButtons\":\"project-board_navigateButtons__2-7tX\",\"button\":\"project-board_button__2h5y-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"calendar-table_pageContainer__2rJk8\",\"columns\":\"calendar-table_columns__2r7c1\",\"task\":\"calendar-table_task__1tz91\",\"buttoDiv\":\"calendar-table_buttoDiv__AB2Qr\",\"addTaskField\":\"calendar-table_addTaskField__3Yb0t\",\"input\":\"calendar-table_input__214q3\",\"addlist\":\"calendar-table_addlist__3I9s5\",\"addTask\":\"calendar-table_addTask__T6HLg\",\"daylyProgress\":\"calendar-table_daylyProgress__3j-CE\",\"header\":\"calendar-table_header__1AROC\",\"listNameContainer\":\"calendar-table_listNameContainer__1-WSQ\",\"listNameColor\":\"calendar-table_listNameColor__2hEFD\",\"listNameText\":\"calendar-table_listNameText__YPqg0\",\"reactTable\":\"calendar-table_reactTable__3vx2L\",\"reactTableBody\":\"calendar-table_reactTableBody__5ycqq\",\"reactTableTrGroup\":\"calendar-table_reactTableTrGroup__196RR\",\"addListButton\":\"calendar-table_addListButton__2wO7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"project_container__2Nl29\",\"top-side\":\"project_top-side__1-5Y1\",\"key\":\"project_key__2DKXD\",\"key-lower\":\"project_key-lower__xbqnz\",\"value\":\"project_value__1hM7g\",\"info\":\"project_info__16VKJ\",\"info-btn\":\"project_info-btn__27yl6\",\"lower-side\":\"project_lower-side__3P40Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"inbox_message__2rJZ5\",\"bold\":\"inbox_bold__dWoq7\",\"container\":\"inbox_container__2TzHF\",\"button\":\"inbox_button__1lhQJ\",\"inline\":\"inbox_inline__2bJwy\",\"margin\":\"inbox_margin__28-x8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent-confirm\":\"confirmation-dialog_transparent-confirm__OWWYi\",\"container\":\"confirmation-dialog_container__1zecx\",\"content\":\"confirmation-dialog_content__2cu-I\",\"logo\":\"confirmation-dialog_logo__28wb0\",\"title\":\"confirmation-dialog_title__ePYJq\",\"buttons\":\"confirmation-dialog_buttons__H0JMo\",\"button\":\"confirmation-dialog_button__3-63i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"filter-members_container__XNrP9\",\"filter\":\"filter-members_filter__2z-EO\",\"options\":\"filter-members_options__35nPG\",\"option\":\"filter-members_option___b8vh\",\"option-blank\":\"filter-members_option-blank__3ZSz_\",\"btn-clicked\":\"filter-members_btn-clicked__1R62N\",\"btn-partial\":\"filter-members_btn-partial__18SZI\",\"btn-clear\":\"filter-members_btn-clear__1Z90F\",\"btn-container\":\"filter-members_btn-container__1X7Mx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"filter-progress_container__2p9DD\",\"dropdown\":\"filter-progress_dropdown__1nz79\",\"progress-switch\":\"filter-progress_progress-switch__3yAu6\",\"progress-switch-top\":\"filter-progress_progress-switch-top__1jez0\",\"progress-switch-bottom\":\"filter-progress_progress-switch-bottom__3Lb7w\",\"btn-progress\":\"filter-progress_btn-progress__3i-qX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members\":\"members-list_members__3UTNX\",\"avatar\":\"members-list_avatar__ZxnGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"attachmentList_container__3I7fF\",\"attachment\":\"attachmentList_attachment__QQusp\",\"title\":\"attachmentList_title__3E_EC\",\"name\":\"attachmentList_name__3FRuS\",\"button\":\"attachmentList_button__1j5ui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__35DiC\",\"container\":\"card_container__11kTq\",\"card-name\":\"card_card-name__2TOpL\",\"button\":\"card_button__Is0Nh\",\"attachments\":\"card_attachments__3gUvc\",\"progress\":\"card_progress__S2h6J\"};"],"sourceRoot":""}